C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#recordLast(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#handleSnapshots(NodeCommand,String,String[],String,NodeProbe).mjava,0,0,12,5,1,0.0,60,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#BatchCommitLogExecutorService().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#countAllBatches().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getSeverity(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(int).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#move(String).mjava,0,0,8,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdownNow().mjava,0,0,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#run().mjava,0,1,14,0,4,0.06451612710952759,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getKey(Tree).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#compareTo(DeletionTime).mjava,0,0,0,1,0,0.0,16,4,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#DropIndexStatement(String,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UTF8Serializer#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#serializedSize(EchoMessage,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily.Factory#create(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revokeAll(String).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#run().mjava,0,0,5,0,0,0.0476190485060215,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber#main(String[]).mjava,0,0,58,1,14,0.07692307978868484,448,10,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#search(AbstractBounds[RowPosition],List[IndexExpression],IDiskAtomFilter,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(SSTableReader,RandomAccessReader,DecoratedKey,long,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#bool(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getTimeToLive(List[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File,PoolingSegmentedFile).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#getFilePointer().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyAliasesParameters(Map[Byte,AbstractType[#]]).mjava,0,0,20,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#resetDataDirectoriesAfterTest().mjava,0,0,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#fromSchemaNoColumnsNoTriggers(UntypedResultSet.Row).mjava,0,0,81,1,1,0.1785714328289032,512,10,43,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#intersects(Bounds[T]).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheCapacityInBytes().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doVerb(MessageIn[GossipDigestSyn],int).mjava,0,0,26,2,7,3.6363637447357178,96,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Tracker#writeOpenedMarker(OnDiskAtom,DataOutput,OnDiskAtom.Serializer).mjava,0,0,13,3,5,0.22580644488334656,40,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#MultiPartitionPager(List[ReadCommand],ConsistencyLevel,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isIdentifierChar(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#getStage(Stage).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#SystemOutput(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#joinRing().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#reset(FileMark).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamEvent#StreamEvent(Type,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#newKeyspace(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],boolean,Iterable[CFMetaData]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#bytesToCB(byte[]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getKeyType(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#replace(K,V,V).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#getVersion().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#reload().mjava,0,2,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Config#setClientMode(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#indexes(ByteBuffer).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat#createAuthenticatedClient(String,int,Configuration).mjava,0,0,12,3,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#deserialize(DataInput,int).mjava,0,0,14,2,13,0.021276595070958138,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#getTimeout().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#enable().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#chunkStart(long).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes#encodedUTF8Length(String).mjava,0,0,2,1,3,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#deserializeColumnFamilies(Row).mjava,0,0,9,1,4,0.10526315867900848,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#rebuild(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#snapshotLeveledManifest(String).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#live().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getLocationForDisk(DataDirectory).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,ConsistencyLevel,QueryState).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHintsForEndpoint(String).mjava,0,0,3,1,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#mean().mjava,0,5,5,0,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#register(Event.Type,Channel).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#describe_partitioner().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#setBootstrapState(BootstrapState).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#trivialReduceIsTrivial().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#isColumnRange().mjava,0,3,1,0,0,0.4000000059604645,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#main(String[]).mjava,0,0,27,1,9,0.0,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionIterable#ValidationCompactionIterable(ColumnFamilyStore,Collection[SSTableReader],Range[Token],int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getNextId().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#setBound(ColumnIdentifier,Relation.Type,Term).mjava,0,0,2,3,2,0.0,76,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#newSince(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#stopThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#reloadConfiguration().mjava,0,1,27,0,9,0.016949152573943138,24,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#cassandraTriggerDir().mjava,0,1,7,0,2,0.0,4,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#IntervalTree(Collection[I],Comparator[C]).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#getTotalLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#serializedSchema().mjava,0,1,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#sendInitMessage(boolean).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getColumnFamily().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#fromJsonList(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#serializeMinMaxColumnNames(List[ByteBuffer],List[ByteBuffer],DataOutput).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#maxKeyBound(IPartitioner).mjava,0,0,2,1,0,1.399999976158142,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toSchemaUpdate(CFMetaData,long,boolean).mjava,0,0,22,3,4,0.2916666567325592,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#isSetTimestamp().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage#RepairMessage(Type,RepairJobDesc).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#delete(String,long).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#serializeBounds(DataOutput).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#changeType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#cloneShallow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#moveElements(int).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#badUse(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#exceptionCaught(ChannelHandlerContext,ExceptionEvent).mjava,0,0,10,2,1,0.0714285746216774,3,2,8,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#CreateKeyspaceStatement(String,KSPropDefs,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#printCQL3TablesWarning(String).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#fromFilename(File,String).mjava,0,0,3,2,3,0.09090909361839294,36,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_slice(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,18,4,4,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#getCompactedRow(List[RowContainer]).mjava,0,0,7,1,3,0.04545454680919647,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#bytesForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.23076923191547394,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#hasKeySpace(boolean).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#size().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#computeOldShardMerger(ByteBuffer,List[CounterId.CounterIdRecord],long).mjava,0,0,59,3,17,0.10000000149011612,4440,18,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionController#shouldPurge(DecoratedKey,long).mjava,0,0,0,2,0,3.6666667461395264,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(String,String,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#isEnabled().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#writeMeta(PrintStream,DeletionInfo).mjava,0,0,5,2,0,0.125,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#endOf(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#handleMajorStateChange(InetAddress,EndpointState).mjava,0,0,13,2,0,0.043478261679410934,12,4,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper.GossipTask#run().mjava,0,0,25,0,4,2.5625,10,4,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#SSTableSimpleUnsortedWriter(File,IPartitioner,String,String,AbstractType[#],AbstractType[#],int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#encode(Map[T,Object]).mjava,0,0,13,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#getPathInfo().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getBadnessThreshold().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#shouldInclude(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\ICompressor.WrappedArray#WrappedArray(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement.Parsed#Parsed(CFName,Attributes.Raw,List[Operation.RawDeletion],List[Relation],List[Pair[ColumnIdentifier,Operation.RawUpdate]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#preparedStatement(Cassandra.Client).mjava,0,0,5,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#mean().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addColumn(ColumnFamily,ByteBuffer,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#open(String,Schema,boolean).mjava,0,0,5,3,1,0.2222222238779068,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo.Direction#fromByte(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#authorize(AuthenticatedUser,IResource).mjava,0,0,16,2,3,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component.Type#Type(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil.BufferBuilder#BufferBuilder(int,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#hasAllKeyspacesAccess(Permission).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#resolveSuperset(Iterable[ColumnFamily],long).mjava,0,0,9,2,3,0.11999999731779099,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#bigForString(String,int).mjava,0,0,6,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#createTime(long).mjava,0,0,0,1,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\TokenSerializer#serialize(IPartitioner,Collection[Token],DataOutput).mjava,0,0,6,3,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.InOrderTester#isDeleted(ByteBuffer,long).mjava,0,0,3,2,0,0.5555555820465088,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#pauseHintsDelivery().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DiskAwareRunnable#runMayThrow().mjava,0,0,11,0,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#setKeyAlias(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RequestTimeoutException#RequestTimeoutException(ExceptionCode,ConsistencyLevel,int,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#syncInternal().mjava,0,4,3,0,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory#getIterator(Iterable[Memtable],Collection[SSTableReader],DataRange,ColumnFamilyStore,long).mjava,0,0,19,5,5,0.10638298094272614,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#snapshots(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#getReadChannel().mjava,0,1,3,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#parsedValue(AbstractType[#]).mjava,0,0,5,1,0,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#clearSnapshot(String,String...).mjava,0,0,6,2,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#call().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponse#isDigestQuery().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#MultiPartitionPager(List[ReadCommand],ConsistencyLevel,boolean,PagingState).mjava,0,0,4,4,3,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\HeapAllocator#HeapAllocator().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ReadyMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(Iterable[Future[#]]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#includeStartKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#BloomFilter(int,IBitSet).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#DeleteStatement(List[Term],String,String,String,List[Term],Attributes).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#run().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getFullyExpiredSSTables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLiveDiskSpaceUsed().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removedNonlocal(UUID,long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ResourceWatcher#watch(String,Runnable,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#iterator(ColumnSlice[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler.ANTLRNoCaseStringStream#ANTLRNoCaseStringStream(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\EmptySerializer#toString(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#describeOwnership(List[Token]).mjava,0,0,20,1,10,0.5652173757553101,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLocations().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#Serializer(ISerializer[C],ISerializer[D],Constructor[I]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#stringValue(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#add(ByteBuffer,ColumnParent,CounterColumn,ConsistencyLevel).mjava,0,0,27,4,5,0.021276595070958138,8,3,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getLiveNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#prepare(CFDefinition.Name).mjava,0,0,5,1,1,0.0,21,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readBoolean().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#countCQL3Rows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#checkOutputSpecs(JobContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#clear().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#prepareQuery(int).mjava,0,0,6,1,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getRecentBloomFilterFalsePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ClientRequestMetrics#ClientRequestMetrics(String).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRpcaddress(InetAddress).mjava,0,0,9,1,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#key().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#CassandraServer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#drop(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#get().mjava,0,6,6,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#IncludingExcludingBounds(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#compactValueDef(ByteBuffer,AbstractType[#]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#sync().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#maxScore(List[InetAddress]).mjava,0,0,1,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTotalCommitlogSpaceInMB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientTransportFactory(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateBootstrap(InetAddress,String[]).mjava,0,0,12,2,1,0.7058823704719543,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\PerColumnSecondaryIndex#getNameForSystemKeyspace(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RetriedSliceFromReadCommand#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#flushAndSignal(CountDownLatch,Future[ReplayPosition]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#remove(Object).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\GCInspector#start().mjava,0,1,3,0,1,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#prepareRowMutations(String,ThriftClientState,Long,List[ByteBuffer]).mjava,0,0,8,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeWithCondition(QueryState,QueryOptions).mjava,0,0,17,2,9,0.13636364042758942,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#timestamp().mjava,0,49,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeTransfer[ScheduledRangeTransferExecutorService]#isReady().mjava,0,1,5,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceRepairPrimaryRange(String,boolean,boolean,String...).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compile(String,String).mjava,0,14,6,2,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubController#shouldPurge(DecoratedKey,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#purge(int).mjava,0,0,1,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator#computeNext().mjava,0,0,9,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsByteArray(String,CfDef).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(int,int).mjava,0,0,2,2,5,0.14814814925193787,32,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexName().mjava,0,29,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#fromStringCQL2(String).mjava,0,0,10,1,2,0.0833333358168602,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#DelayedValue(Comparator[ByteBuffer],Map[Term,Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#createMessage().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#CredentialsMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validateCompatility(CFMetaData).mjava,0,0,8,1,0,0.06666667014360428,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsBytes(String,CfDef).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getOrCreate(File,String...).mjava,0,0,5,2,1,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop(long).mjava,0,0,0,1,0,1.4444444179534912,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\ReceivedMessage#ReceivedMessage(UUID,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#ringIterator(ArrayList[Token],Token,boolean).mjava,0,0,13,3,2,0.10000000149011612,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedStage(Stage,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#state().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readInt().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Value#get().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspaceNotSystem(String).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#isStreamCompatible().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#Holder(SnapTreeMap[ByteBuffer,Column],DeletionInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToLiveMember(MessageOut[GossipDigestSyn]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\sink\SinkManager#processInboundMessage(MessageIn,int).mjava,0,0,2,2,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#SSTableNamesIterator(SSTableReader,FileDataInput,DecoratedKey,SortedSet[ByteBuffer],RowIndexEntry).mjava,0,0,3,5,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#execute(Function,List[Term]).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf,String,org.apache.hadoop.util.Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getSize(ByteBuffer).mjava,0,0,5,1,1,7.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentRangeLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputColumnFamily(Configuration,String,String,boolean).mjava,0,0,4,4,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#prepare().mjava,0,0,83,0,13,0.12949639558792114,12096,28,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#recognizedOptions().mjava,0,1,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#UpdateParameters(CFMetaData,List[ByteBuffer],long,int,Map[ByteBuffer,ColumnGroupMap]).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#getEntity().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getKeyBounds(List[ByteBuffer]).mjava,0,0,21,1,12,0.2702702581882477,3,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Header.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isWildcard().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#login(AuthenticationRequest).mjava,0,0,6,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(DataInputStream,Descriptor,boolean).mjava,0,0,24,3,16,0.0,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#isMarkedForDelete(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\ResponseVerbHandler#doVerb(MessageIn,int).mjava,0,0,12,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#CustomTThreadPoolServer(TThreadPoolServer.Args,ExecutorService).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#mbPerSec(long,long).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#minTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#SizeTieredCompactionStrategyOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#View(Memtable,Set[Memtable],Set[SSTableReader],Set[SSTableReader],SSTableIntervalTree).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#ResultSet(Metadata,List[List[ByteBuffer]]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getPath().mjava,0,27,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#bind(List[ByteBuffer]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setStreamThroughputMbPerSec(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getKeySpace(Tree,List[KsDef]).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#extractResultMetadata(CQLStatement).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#updateDigest(MessageDigest).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markAllCompacting().mjava,0,2,9,0,3,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#stringifyFileSize(double).mjava,0,0,5,1,6,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#skip(long).mjava,0,0,0,1,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getSortedColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTimeout(MessagingService.Verb).mjava,0,0,5,1,0,0.0,12,1,12,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#applyPropertiesToCFMetadata(CFMetaData,CFPropDefs).mjava,0,0,60,2,2,0.0,128,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(Map[InetAddress,EndpointState]).mjava,0,0,4,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#assureSufficientLiveNodes().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliSessionState#getNodeProbe().mjava,0,2,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#chunkLength().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeWithoutCondition(QueryState,QueryOptions).mjava,0,0,9,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#decodeEntry(DecoratedKey,Column).mjava,0,0,12,2,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#tempCacheFile(Pair[String,String]).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRangeSlice(AbstractBounds[RowPosition],List[IndexExpression],IDiskAtomFilter,int,long).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#addColumn(Column,Allocator).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#enableAutoCompaction().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.Name#Name(String,String,ColumnIdentifier,Kind,AbstractType[#]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#isDeleted(ByteBuffer,long).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\PagingState#PagingState(ByteBuffer,ByteBuffer,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcRecvBufferSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#Prepend(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeChar(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#rebuildCQL3Metadata().mjava,0,1,15,0,6,0.02857142873108387,16,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#loadConfig().mjava,0,0,7,0,5,0.03333333507180214,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexFor(ByteBuffer,Collection[SecondaryIndex]).mjava,0,0,3,2,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidToString(byte[]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#printNode(String,Float,Map[InetAddress,Float],boolean,boolean).mjava,0,0,19,5,2,0.0,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getAllLevelSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#memorySize().mjava,0,0,4,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#serializer().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#decompress(Frame).mjava,0,0,5,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addAncestor(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedThrottledReader#open(String,CompressionMetadata,RateLimiter).mjava,0,0,0,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#gossiperStarting().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#orderResults(ResultSet).mjava,0,0,16,1,5,0.4285714328289032,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#doNotifications(InetAddress,ApplicationState,VersionedValue).mjava,0,0,1,3,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#serialize(Map[K,V]).mjava,0,0,12,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex.IndexedEntry#indexedEntryEnd().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#getCompactionController(Set[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#Substraction(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getReleaseVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#getLong(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#pendingRangeChanges(InetAddress).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isExpiring().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getFilePointer().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#AbstractPaxosCallback(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getIndexName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getKeyspaceName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator#getMaximumSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#cacheKey(DecoratedKey,RowIndexEntry).mjava,0,0,4,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliOptions#validateAndSetTransportFactory(String).mjava,0,0,5,1,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeToolHelp.NodeToolCommand#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#unregister(IEndpointLifecycleSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#makeMutationMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#trySync(int).mjava,0,0,4,1,0,0.05882352963089943,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablesForKey(String).mjava,0,0,10,1,3,0.0555555559694767,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#defaultTombstoneDropTimeHistogram().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openDataReader(RateLimiter).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#trySkipCache(int,long,int).mjava,0,0,4,3,0,0.1428571492433548,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#decompose(Object...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetAndTruncate(FileMark).mjava,0,0,5,1,1,0.2380952388048172,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader#main(String[]).mjava,0,0,12,1,4,0.04545454680919647,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLiveNaturalEndpoints(Keyspace,RingPosition).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#removeFromActiveSessions(RepairSession).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getActiveCompactions().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#unregister(Channel).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setIncrementalBackupsEnabled(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getPosition(RowPosition,Operator).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#subscribe(INotificationConsumer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#decode(ChannelBuffer,int).mjava,0,0,19,2,9,0.0,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#state().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionThroughput().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#dataSize().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#prepareToRead(RecordReader,PigSplit).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validatePredicate(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#iterator().mjava,0,13,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#truncate(long).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#validateOptions().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferFiles(InetAddress,Collection[StreamSession.SSTableStreamingSections]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#toThrift().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getAllEndpoints().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#ExecuteOnlyExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory,RejectedExecutionHandler).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#received(SSTableReader).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#toThrift(Map[ByteBuffer,ColumnDefinition]).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CallbackInfo#shouldHint().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#truncationRecordFromBlob(ByteBuffer).mjava,0,0,5,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setKeyCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#reset().mjava,0,0,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(InetAddress,EndpointState).mjava,0,0,15,2,6,0.23333333432674408,10,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#deserialize(DataInput,int).mjava,0,0,8,2,7,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printColumnFamilyStats(PrintStream).mjava,0,0,78,1,21,0.049504950642585754,240,10,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#highestSelectivityPredicate(List[IndexExpression]).mjava,0,0,4,1,4,0.05263157933950424,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#getCmdLineOptions().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#AbstractReplicationStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,2,4,0,0.10000000149011612,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRangeToAddressMap(String).mjava,0,0,5,1,1,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#discardSSTables(long).mjava,0,0,9,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#initCf(UUID,String,boolean).mjava,0,0,6,3,2,0.4000000059604645,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#getKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getMetrics().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#ChecksumValidator(Descriptor).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#nameComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#split(String).mjava,0,0,10,1,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTask#getSummary().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getEndpointSnitch().mjava,0,40,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\BytesConversionFcts#makeToBlobFunction(AbstractType[#]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllInternodeAuthenticator#authenticate(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#split(ByteBuffer).mjava,0,0,8,1,3,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,String,String,List[IndexExpression]).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#getRelation(Bound,Bound).mjava,0,0,0,2,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\PureJavaCrc32#reset().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#create(String,Map[Option,Object]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getNext().mjava,0,0,35,0,7,0.1702127605676651,32,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getAndAppendComparator(int,ByteBuffer,StringBuilder).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isColumnsReversed().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#acquireReference().mjava,0,2,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamilyName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\TokenSerializer#deserialize(IPartitioner,DataInput).mjava,0,0,7,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#createSSLContext(EncryptionOptions,boolean).mjava,0,0,17,2,8,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#metadata().mjava,0,50,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getAllRanges(List[Token]).mjava,0,0,12,1,4,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#wildcard(CFDefinition).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBuckets(boolean).mjava,0,0,5,1,1,0.0,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#seek(long).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceMajorCompaction().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#getSeeds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerError#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#root().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#createInstance(ColumnFamilyStore,ColumnDefinition).mjava,0,0,11,2,2,0.0,15,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#newSession(UUID).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#dropColumnFamily(String,String).mjava,0,0,17,2,3,0.05882352963089943,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Marker#bind(List[ByteBuffer]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#appendToStringBuilder(StringBuilder).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#UntypedResultSet(ResultSet).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#setKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil.BufferBuilder#build().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#run().mjava,0,0,9,0,1,0.03448275849223137,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#printSliceList(CfDef,List[KeySlice]).mjava,0,0,38,2,10,0.0,17,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#getMaxLiveCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getTimestampedSnapshotName(String).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#trimTrailingZeros().mjava,0,0,0,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#RowCacheKey(UUID,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#getConsistencyLevel().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#prepare(ColumnSpecification).mjava,0,0,7,1,3,0.0,20,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getScanner(Range[Token],RateLimiter).mjava,0,0,4,2,0,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#runMayThrow().mjava,0,0,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K-extends-Comparable[K],V-extends-Comparable[V]]_create().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#setMemory(long,long,byte).mjava,0,0,2,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedPoolingSegmentedFile.Builder#complete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#write(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(long).mjava,0,0,0,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil.BufferBuilder#addString(String).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceRepairRange(String,String,String,boolean,boolean,String...).mjava,0,0,9,6,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#list(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySuper(SuperColumn).mjava,0,0,6,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#QueryState(ClientState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#aliasesFromStrings(List[String]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#compareTo(Token[byte[]]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#recognizedOptions().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizes(Collection[StreamSummary]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#isTerminated().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revokeAll(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serialize(Truncation,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicUpdateInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serialize(Token,DataOutput).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#JsonColumn(T,CFMetaData,boolean,boolean).mjava,0,0,26,4,2,0.021739130839705467,5,7,32,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getLocationCapableOfSize(long).mjava,0,0,11,1,2,0.20000000298023224,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#shutdown().mjava,0,0,4,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#handshakeVersion(DataInputStream).mjava,0,0,13,1,3,0.027027027681469917,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PermissionDetails#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AsciiType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcKeepAlive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#getOriginalRequestedCount().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_count(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,29,4,10,0.01666666753590107,8,3,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onCreateKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#skipShortLength(DataInput).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#isEmptyPredicate(SlicePredicate).mjava,0,0,7,1,2,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.LocalCounterIdHistory#renewCurrent(long).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#SizeTieredCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#resume().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#forceNewerGenerationUnsafe().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Encoder#encode(ChannelHandlerContext,Channel,Object).mjava,0,0,10,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#PrepareCallback(ByteBuffer,CFMetaData,int).mjava,0,0,2,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addSSTables(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputCompressionClass(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#execute(QueryState,QueryOptions).mjava,0,0,3,2,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\RelationType[Relation]#forString(String).mjava,0,0,5,1,0,0.0,32,5,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#EndpointState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#getCurrentPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromAddressList(Configuration,String[],int).mjava,0,0,6,3,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#CompactionIterable(OperationType,List[ICompactionScanner],CompactionController).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.IndexSummarySerializer#deserialize(DataInputStream,IPartitioner).mjava,0,0,5,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetBuffer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#TraceSessionWrapper(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#forSubRange(AbstractBounds[RowPosition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#disableAutoCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getColumnName(String,Tree).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#defaultValidator(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithShortLength(ByteBuffer,DataOutput).mjava,0,0,3,2,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat.SplitCallable#SplitCallable(TokenRange,Configuration).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#getTimeToLive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Truncation#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markCFDirty(UUID,Integer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#parseType(String).mjava,0,0,3,1,0,0.0833333358168602,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onRemove(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#set_cql_version(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#getNext().mjava,0,0,23,0,9,0.05882352963089943,6,3,26,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#Connection(Channel,int,Tracker).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceFlush(String,String...).mjava,0,0,3,2,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#equals(Object).mjava,0,0,30,1,1,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addSSTable(SSTableReader).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#endPoint().mjava,0,15,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#RangeTombstone(ByteBuffer,ByteBuffer,long,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRangeCommand(List[ByteBuffer],int,long).mjava,0,0,5,3,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#DatacenterSyncWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,7,6,1,0.2142857164144516,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(Collection[org.apache.cassandra.db.Column],boolean,long).mjava,0,0,15,3,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getTotalBytes(Iterable[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#init().mjava,0,0,13,0,5,0.27272728085517883,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#setLocation(String,Job).mjava,0,0,27,2,2,0.0,1024,10,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTruncateRpcTimeout().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.PrecisionTime#getNext(long).mjava,0,0,3,1,2,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler.ANTLRNoCaseStringStream#LA(int).mjava,0,0,1,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#recognizedOptions().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getHintsInProgress().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#disableHintedHandoff().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getRandomToken().mjava,0,0,5,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#inOrderTester().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator.WideColumnIterator#computeNext().mjava,0,0,15,0,3,0.0,7,4,19,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_keyspace(KsDef).mjava,0,0,13,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#AbstractQueryPager(ConsistencyLevel,int,boolean,String,String,IDiskAtomFilter,long).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#bound(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#signal().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readUuid(ChannelBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile#cleanup().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#LoaderOptions(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#processStatementInteractive(String).mjava,0,0,10,1,3,0.0,4,2,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#getProgress().mjava,0,0,1,0,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairRepairedBlocking().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSyn#GossipDigestSyn(String,String,List[GossipDigest]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BooleanType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithConfirm(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#openTransport(String,int,Configuration).mjava,0,0,2,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markCurrentSSTablesReferenced().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#submitArtificialRepairSession(RepairJobDesc).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markDirty(RowMutation,ReplayPosition).mjava,0,0,6,2,1,0.1428571492433548,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#toThrift(Map[String,TriggerDefinition]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary#toString().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#drain().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,58,2,14,0.1803278625011444,5,6,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#makeIndexColumnName(ByteBuffer,Column).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#add(RowMutation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read(byte[],int,int).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getCollectionsParameters().mjava,0,1,18,0,5,0.02222222276031971,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Putter#doPut(Term,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,9,4,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTempSSTablePath(File,Descriptor.Version).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#flush().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#parseArgs(String[]).mjava,0,0,50,1,9,0.0,2048,11,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertySet(String,Set[String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#CustomClassLoader(ClassLoader,File).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#scName(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#SetElement(Term.Raw,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getKeys(List[ByteBuffer]).mjava,0,0,14,1,5,0.0,3,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#Paging(AbstractBounds[RowPosition],SliceQueryFilter,ByteBuffer,ByteBuffer,AbstractType[#]).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStoragePort().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Mx4jTool#maybeLoad().mjava,0,1,22,0,7,0.0,1,0,22,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#fromString(String).mjava,0,0,21,1,3,0.08888889104127884,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#encodeBody(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamilies().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#setLocationFromUri(String).mjava,0,0,26,1,5,0.15217390656471252,516,10,35,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#cleanupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUnsafe(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readFully(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Keyspace,String,IPartitioner,CFMetaData).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#setCompactionType(OperationType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#copyWithNewSSTableLevel(SSTableMetadata,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#requestAll(GossipDigest,List[GossipDigest],int).mjava,0,0,5,3,0,6.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#complete(String).mjava,0,0,5,1,1,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\LongSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#setDeletionInfo(DeletionInfo).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getSimple(String).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#hasSameReplication(List[String]).mjava,0,0,12,1,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(String,String,boolean,String,boolean).mjava,0,0,2,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openForBatch(Descriptor,Set[Component],CFMetaData,IPartitioner).mjava,0,0,3,4,2,0.0833333358168602,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BooleanType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getBootstrapTokens().mjava,0,2,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset().mjava,0,1,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#DropKeyspaceStatement(String,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#validate(ClientState).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType.CompositeComponent#CompositeComponent(AbstractType[#],ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#isLocalId().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#[T]_fromArrayOfCompositeData(CompositeData[],Function[CompositeData,T]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.IntervalNode#IntervalNode(Collection[I]).mjava,0,0,40,1,6,0.072727270424366,2,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\FloatType#FloatType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#ExternalClient(Set[InetAddress],int,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#importUnsorted(String,ColumnFamily,String,IPartitioner[#]).mjava,0,0,26,4,9,0.05000000074505806,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#resetLocalSchema().mjava,0,1,20,0,1,0.09090909361839294,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#close().mjava,0,2,11,0,1,0.0,7,4,19,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceDrop(String).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openNoValidation(Descriptor,Set[Component],CFMetaData).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#loadHelp().mjava,0,1,4,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isKeyRange().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.CacheType#toString().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#register(AbstractReplicationStrategy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#resolve(ColumnFamily).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getSSTableColumnIterator(SSTableReader,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#gossiperStarting().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\EmptySerializer#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#validate(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#clearKeyspaceDefinition(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#printHelp(String,String).mjava,0,0,9,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#rename(Descriptor,Set[Component]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getVerbHandler(Verb).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#firstEndOfComponent(ByteBuffer).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Compressor#encode(ChannelHandlerContext,Channel,Object).mjava,0,0,4,3,3,0.0833333358168602,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#partitioner().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#decompressChunk(CompressionMetadata.Chunk).mjava,0,0,21,1,0,0.1428571492433548,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#initiateStreaming().mjava,0,1,8,0,1,0.2222222238779068,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getColumnCount().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#showColumnMeta(PrintStream,CfDef,ColumnDef).mjava,0,0,36,3,5,0.0,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getMaximumCompactorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Literal#isAssignableTo(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#SchemaAlteringStatement().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Adder#Adder(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#Relation(ColumnIdentifier,Type,Term.Raw,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#SelectStatement(CFDefinition,int,Parameters,Selection,Term).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#KeyIterator(Descriptor).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap(Map[K,V],Multimap[V,K]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#PrecompactedRow(DecoratedKey,ColumnFamily).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addKeyValue(ColumnIdentifier,Term).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamThroughput().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#getRecentLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#regularColumns().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#hex(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessage#FileMessage(SSTableReader,FileMessageHeader).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#readChunkOffsets(DataInput).mjava,0,0,5,1,3,0.0,2,1,15,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#updateAllTimestamp(long).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListUsersStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#isUnused().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RefCountedMemory#reference().mjava,0,2,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSReadError#FSReadError(Throwable,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#addColumn(Term,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage.WrappedException#WrappedException(Throwable,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#computeOldShardMerger(int).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove(ByteBuffer,ColumnPath,long,ConsistencyLevel).mjava,0,0,10,4,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#json(Object).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationExecutor#ValidationExecutor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IdentityQueryFilter#IdentityQueryFilter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#makeReplicationMutation().mjava,0,0,12,0,6,0.0476190485060215,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#compare(ByteBuffer,ByteBuffer).mjava,0,0,12,2,10,0.05128205195069313,52,9,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Upgrader#Upgrader(ColumnFamilyStore,SSTableReader,OutputHandler).mjava,0,0,11,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#beforeInvoke(Message).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#instance().mjava,0,110,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRawCachedRow(DecoratedKey).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializedSize(ColumnFamily,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringMap(ChannelBuffer,Map[String,String]).mjava,0,0,9,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\KeyspaceNotDefinedException#KeyspaceNotDefinedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#ThriftServerThread(InetAddress,int).mjava,0,0,9,2,2,0.0625,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#deleteRange(String,ByteBuffer,ByteBuffer,long).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T-extends-Comparable]_singleton(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPermissionsValidity().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#lastName(ColumnFamily).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelection#handleRow(ResultSetBuilder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getUncompactingSSTables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serialize(VersionedValue,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportAddress().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\PermissionAlteringStatement#PermissionAlteringStatement(Set[Permission],IResource,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#drain().mjava,0,1,39,0,2,0.1599999964237213,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#addOrGet(CFMetaData).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedConfigurableStage(Stage,int,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#readInt().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#parseComparator(int,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#encodeBody(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamEvent.SessionCompleteEvent#SessionCompleteEvent(StreamSession).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#getTimestamp(ThriftClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Appender#doAppend(Term,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,11,4,5,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(int,long,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#floor(long).mjava,0,0,2,1,2,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthResponse#execute(QueryState).mjava,0,0,7,1,3,0.0476190485060215,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#executeInternal(QueryState).mjava,0,0,11,1,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateRange(CFMetaData,ColumnParent,SliceRange).mjava,0,0,8,3,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#load(Set[ByteBuffer],ColumnFamilyStore).mjava,0,0,4,2,2,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeBootstrapTokens(Collection[Token]).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#getRecentTimeout().mjava,0,1,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getMaxDataAge(Collection[SSTableReader]).mjava,0,0,0,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#[T]_toArrayOfCompositeData(Collection[T],Function[T,CompositeData]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportMaxThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeRow(DeletionInfo,Iterator[OnDiskAtom],CFMetaData,DecoratedKey,PrintStream).mjava,0,0,11,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DiskAwareRunnable#reduceScopeForLimitedSpace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#repairedNodes().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#ColumnFamilyRecordReader().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspacePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#changeType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#encloses(Interval[C,D],Interval[C,D]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Keyspace,String,IPartitioner,CFMetaData,boolean).mjava,0,0,14,5,5,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\Progressable#progress().mjava,0,4,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int,double).mjava,0,0,1,2,3,0.1818181872367859,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\NativeAllocator#free(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getReplicationStrategy().mjava,0,26,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#timestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#put(K,V).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#create(String,Map[Option,Object]).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serialize(EstimatedHistogram,DataOutput).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#droppedColumns(Map[ByteBuffer,Long]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getReverseSortedColumns().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#startCompaction(ColumnFamilyStore,Iterable[SSTableReader]).mjava,0,0,10,2,3,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getTokenBound(Bound,List[ByteBuffer],IPartitioner[#]).mjava,0,0,7,3,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#executeLocally().mjava,0,1,6,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#SSTableImport(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getOutputFormat().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#checkPosition(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#list(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#AlterTableStatement(String,OperationType,String,String,Map[String,String]).mjava,0,0,5,5,0,0.07692307978868484,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#withUpdatedName(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#isColumnBeforeSliceStart(OnDiskAtom).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#[K-extends-IMeasurableMemory,V-extends-IMeasurableMemory]_create(long).mjava,0,0,3,1,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice.Serializer#serializedSize(ColumnSlice,int).mjava,0,0,4,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#tryOpenDirectory(String).mjava,0,0,4,1,1,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#executeInternal(QueryState).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#rescheduleFailedDeletions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspace(String).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#deserialize(DataInput,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getUsername().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceFlush().mjava,0,8,4,0,0,0.3076923191547394,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#deserialize(DataInput,int).mjava,0,0,4,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#load(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#length().mjava,0,0,4,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getUncompactingSSTables(Iterable[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLoadString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#totalSize().mjava,0,2,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isRowCacheEnabled().mjava,0,5,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#schemaCFS(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#filterFromSelect(SelectStatement,CFMetaData,List[ByteBuffer]).mjava,0,0,10,3,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getDroppedColumns().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#cleanupAndExit().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#acceptImpl().mjava,0,0,11,0,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#updateCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#withUpdatedFilter(SliceQueryFilter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#toType(Pair[DataType,Object]).mjava,0,0,7,1,1,0.0,12,1,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getBytesRead().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader#main(String[]).mjava,0,0,39,1,10,0.02985074557363987,128,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeTraceNextQuery().mjava,0,1,5,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#computeStopAt().mjava,0,1,6,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addOrReplaceColumnDefinition(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(ByteBuffer,ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#maybeGenerateRetryCommand(RowDataResolver,Row).mjava,0,0,5,2,5,0.5,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#add(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#compareTo(RowCacheKey).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#getRow(Keyspace).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#pagingFinished(ColumnFamily,ByteBuffer).mjava,0,0,3,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\UnauthorizedException#UnauthorizedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateLeft(InetAddress,String[]).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#list().mjava,0,13,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#Deserializer(ICompactionScanner,int).mjava,0,0,14,2,3,0.0,9,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#setTailNull(List[BoundColumn]).mjava,0,0,8,1,6,0.0,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getBoolean(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#skipBytesFully(DataInput,int).mjava,0,0,1,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#newThread(Runnable).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#checkAccess(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,boolean,boolean,Collection[Range[Token]],String...).mjava,0,0,7,5,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#weakInsertFrom(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,3,5,0,0.6666666865348816,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event#serialize().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#addInitialSSTables(Collection[SSTableReader]).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\Int32Serializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables(String,String).mjava,0,0,3,2,1,5.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#fromName(String).mjava,0,0,6,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_schema_versions().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#markAlive(InetAddress,EndpointState).mjava,0,0,15,2,2,0.0357142873108387,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#getTimeToLive().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#setKeyspace(String).mjava,0,0,1,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getIndexComparator(CFMetaData,ColumnDefinition).mjava,0,0,2,2,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#dateStringToTimestamp(String).mjava,0,0,9,1,1,0.06666667014360428,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#readCredentials(Iterator[String]).mjava,0,0,5,1,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#getToken().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#authenticate(Map[String,String]).mjava,0,0,13,1,4,0.03703703731298447,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#systemKeyspace().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#ReadCommand(String,ByteBuffer,String,long,Type).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#describeOwnership(List[Token]).mjava,0,0,26,1,10,0.4399999976158142,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#partitionKeyMarkers().mjava,0,1,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#seekInternal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#ActiveRepairService().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\DroppedMessageMetrics#DroppedMessageMetrics(MessagingService.Verb).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#counterWriteTask(IMutation,Iterable[InetAddress],AbstractWriteResponseHandler,String,ConsistencyLevel).mjava,0,0,12,5,2,0.21739129722118378,2,1,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#calculatePendingRanges(AbstractReplicationStrategy,String).mjava,0,0,53,2,13,0.29629629850387573,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getExpectedWriteSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#getColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getSchema(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getResultMetadata().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#isDeleted(ByteBuffer,long).mjava,0,0,2,2,0,0.2857142984867096,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#addExpireTimeIfFound(InetAddress,long).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#getGeneration().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#getCurrentPosition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter.AbstractRangeClient#put(K).mjava,0,0,1,1,0,0.0,5,3,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#MemoryOutputStream(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#listen(InetAddress).mjava,0,0,5,1,1,0.10000000149011612,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(CFMetaData,OperationType,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#FastByteArrayOutputStream().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#ackCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performSSTableRewrite(ColumnFamilyStore,boolean).mjava,0,0,6,2,1,0.11764705926179886,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#updateAllTimestamp(long).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairFuture#RepairFuture(RepairSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.TooDeep#TooDeep().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#errno(RuntimeException).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#setInternal(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Term.Terminal#containsBindMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getSnapshotDirectory(Descriptor,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSubsnitchClassName().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#next(Map[String,ByteBuffer],Map[String,ByteBuffer]).mjava,0,0,7,2,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#serializedColumnFamilies(DecoratedKey).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#buildSummary(boolean,SegmentedFile.Builder,SegmentedFile.Builder,boolean).mjava,0,0,21,4,9,0.0714285746216774,72,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#SSTableMetadata(EstimatedHistogram,EstimatedHistogram,ReplayPosition,long,long,int,double,double,String,StreamingHistogram,int,List[ByteBuffer],List[ByteBuffer]).mjava,0,0,0,13,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeToReceive().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#serializeRowMutations(Collection[RowMutation]).mjava,0,0,5,1,2,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LongToken#compareTo(Token[Long]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MarshalException#MarshalException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_intersectionOneWrapping(Range[T],Range[T]).mjava,0,0,6,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#appendToStringBuilder(StringBuilder).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AsciiSerializer#validate(ByteBuffer).mjava,0,0,4,1,1,0.125,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#addEventListener(StreamEventHandler).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getCfDef().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#SliceQueryFilter(ByteBuffer,ByteBuffer,boolean,int,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter#main(String[]).mjava,0,0,53,1,16,0.03999999910593033,12288,14,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#getLoadInfo().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FilterFactory#deserialize(DataInput,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#[T-extends-Enum[T]]_enumValueToCB(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#switchMemtable().mjava,0,1,3,0,3,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#maybeResolveForRepair().mjava,0,0,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_xor(long[],long[],int,int).mjava,0,0,7,4,27,0.12903225421905518,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#newPartitioner(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#getCompletedTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#load(boolean,boolean).mjava,0,0,12,2,3,0.07692307978868484,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#deserializeIndex(FileDataInput).mjava,0,0,7,1,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,long,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#schema(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncPeriod().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultDouble#set(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#ElementDeletion(ColumnIdentifier,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#builder().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableMetadataViewer#printHistograms(SSTableMetadata,PrintStream).mjava,0,0,7,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#serializedSize(PrepareResponse,int).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#mutateWithTriggers(Collection[#-extends-IMutation],ConsistencyLevel,boolean).mjava,0,0,4,3,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#seek(long).mjava,0,0,2,1,1,0.75,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceTerminateAllRepairSessions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#getOrCreateSession(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#hasFirstSet().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#ColumnIdentifier(ByteBuffer,AbstractType).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#toInt(String,String,Integer).mjava,0,0,2,3,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\GrantStatement#GrantStatement(Set[Permission],IResource,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#announceMigration().mjava,0,0,1,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamily(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#execute(QueryState).mjava,0,0,20,1,4,0.02631578966975212,96,7,29,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheSizeInMB().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#fromString(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter.AbstractRangeClient#closeInternal().mjava,0,0,4,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSlicePredicate(Configuration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getCounterId().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#filter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getSortedColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#replicateOnWrite(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#CFDefinition(CFMetaData).mjava,0,0,27,1,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#currentFinish().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#next().mjava,0,0,3,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#buildBound(Bound,Collection[CFDefinition.Name],Restriction[],boolean,ColumnNameBuilder,List[ByteBuffer]).mjava,0,0,35,6,9,0.4444444477558136,14,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\BytesConversionFcts#makeFromBlobFunction(AbstractType[#]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DoubleType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addDefaultKeyAliases(List[ColumnDefinition]).mjava,0,0,7,1,4,0.10000000149011612,4,3,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getToken(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnOrSuperColumn(CFMetaData,ColumnOrSuperColumn).mjava,0,0,17,2,2,0.0,2592,13,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#getRawText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateRelocating(InetAddress,String[]).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#factory(Function).mjava,0,0,0,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#TimeUUIDType().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#caching(Caching).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\EmptyType#compare(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#serialize(MerkleTree,DataOutput,int).mjava,0,0,9,3,0,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#key().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#sessionFailed().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#hasProperty(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.IntervalNode#searchInternal(Interval[C,D],List[D]).mjava,0,0,14,2,0,0.15789473056793213,20,9,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#fromJsonMap(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#pageCountQuery(QueryPager,List[ByteBuffer],int,long).mjava,0,0,8,4,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#setDataIntegrityWriter(DataIntegrityMetadata.ChecksumWriter).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#serializedSize(List[GossipDigest],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionStrategyClass().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#getIndexComparator().mjava,0,7,1,0,0,0.25,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#execute(ClientState,List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#isAssignableTo(ColumnSpecification).mjava,0,0,4,1,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat#checkOutputSpecs(Configuration).mjava,0,0,3,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serialize(InetAddress,DataOutput).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#StreamTransferTask(StreamSession,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLoad().mjava,0,2,4,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareUnsigned(ByteBuffer,ByteBuffer).mjava,0,0,21,2,4,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#calculateHintTTL(RowMutation,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#hasOnlyTombstones(long).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#isReadyForBootstrap().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata#checksumValidator(Descriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceRepairAsync(PrintStream,String,boolean,boolean,boolean,String...).mjava,0,0,3,6,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumn(Tree,int).mjava,0,0,3,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getClass(String).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#getFormat(boolean,boolean).mjava,0,0,11,2,2,0.5,9,4,17,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Config#getOutboundBindAny().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#has(String).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#toSchema(RowMutation,String,AbstractType[#],long).mjava,0,0,36,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearSnapshot(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSWriteError#FSWriteError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,Set[Component],CFMetaData,IPartitioner).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSeeds().mjava,0,5,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getPigType(AbstractType).mjava,0,0,0,1,0,0.11764705926179886,128,7,14,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Serializer#deserializeFromSSTable(DataInput,Descriptor.Version).mjava,0,0,5,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#maxMarkedAt().mjava,0,1,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#resetAndTruncate().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairAttempted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.BadRange#BadRange().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#stop().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printRing(PrintStream,String).mjava,0,0,33,2,9,0.043478261679410934,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#addStatementMutations(ModificationStatement,List[ByteBuffer],boolean,ConsistencyLevel,long,Map[Pair[String,ByteBuffer],IMutation]).mjava,0,0,8,6,2,0.06666667014360428,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#writeHintForMutation(RowMutation,int,InetAddress).mjava,0,0,6,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#CqlPagingRecordReader().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#sendAll(GossipDigest,Map[InetAddress,EndpointState],int).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#max().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateTtl(Column).mjava,0,0,2,1,0,0.07692307978868484,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getFormatType(String).mjava,0,0,8,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#sendToHintedEndpoints(RowMutation,Iterable[InetAddress],AbstractWriteResponseHandler,String,ConsistencyLevel).mjava,0,0,25,5,4,0.24074074625968933,18,10,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#addNano(long).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#chunkOffsetBy(int).mjava,0,0,4,1,1,0.1666666716337204,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#shutdown().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Serializer#serializeForSSTable(RangeTombstone,DataOutput).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getConsistencyLevel().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#addColumn(Column,Allocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#deserialize(DataInput,int,Comparator[C]).mjava,0,0,6,3,5,0.0,2,1,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#serializationFlags().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFiles(Collection[StreamSummary]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#longStringToCB(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCompactionCandidates().mjava,0,1,29,0,10,0.8421052694320679,108,9,24,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#serialize(Column,DataOutput).mjava,0,0,16,2,0,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#describeOwnership(List[Token]).mjava,0,0,18,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadDcRackInfo().mjava,0,4,9,0,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#getOpCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#execute(Collection[#-extends-IMutation],ConsistencyLevel).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#writeSortedContents(Future[ReplayPosition],File).mjava,0,0,27,2,3,0.31578946113586426,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,8,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeTombstone(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#unloadCf(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\AuthenticationException#AuthenticationException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ByteBufferOutputStream#ByteBufferOutputStream(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputIsWide(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#deserialize(ByteBuffer).mjava,0,0,13,1,9,0.0,2,1,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#resourceToFile(String).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#withUpdatedName(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#keyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#minKeyBound(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsert#ParsedInsert(CFName,Attributes.Raw,List[ColumnIdentifier],List[Term.Raw],boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#sendMessagesToNonlocalDC(MessageOut,Collection[InetAddress],AbstractWriteResponseHandler).mjava,0,0,17,3,6,0.125,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#RangeClient(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#list(ClientState,IResource).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Substracter#Substracter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#serializedSize(MerkleTree,int).mjava,0,0,8,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#reachEndRange().mjava,0,1,11,0,4,0.0555555559694767,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TServerCustomFactory#TServerCustomFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#CqlStorage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#set(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#toString().mjava,0,0,16,0,2,0.0,3,3,22,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getIndexFilename().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceRepairPrimaryRange(String,boolean,boolean,String...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactions().mjava,0,0,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\PureJavaCrc32#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter.DiskWriter#run().mjava,0,0,8,0,2,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#close().mjava,0,1,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#awaitTermination().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#get(long).mjava,0,0,1,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateReplicationStrategy(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelSorted(int,Comparator[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#LocalReadRunnable(ReadCommand,ReadCallback[ReadResponse,Row]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RefCountedMemory#unreference().mjava,0,7,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#getLiveSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\CassandraException#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revokeAll(IResource).mjava,0,0,12,1,1,0.03333333507180214,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#printUsage(Options).mjava,0,0,11,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#isTimestampSet().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onJoin(InetAddress,EndpointState).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getCount().mjava,0,18,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#equals(Object).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isStreamCompatible().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#createFileDataInput(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#setLocationFromUri(String).mjava,0,0,36,1,6,0.03703703731298447,4100,13,42,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#get(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2Snitch#awsApiCall(String).mjava,0,0,8,1,4,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#loadCql3Defs(Cassandra.Client,KsDef).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#logDistribution().mjava,0,2,5,0,0,0.0,4,3,7,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.NullOutputHandler#warn(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getReleaseVersionString().mjava,0,6,6,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#binarySearch(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtablesPendingFlush().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#getInValues().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#initServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#effectiveOwnership(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#state().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#printStatusLegend().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,26,3,3,0.0,153,8,39,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getKeyspaces().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBloomFilterFalseRatio().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#serialize(GossipDigestAck2,DataOutput,int).mjava,0,0,7,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex#nothing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#isCompatibleWith(AbstractType[#]).mjava,0,0,5,1,1,0.09090909361839294,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#setConnectionInformation().mjava,0,2,3,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#addHash(byte[]).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(Socket).mjava,0,0,7,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#retrieveKeys().mjava,0,1,28,0,9,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#allocate(long).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon.NativeAccess#isAvailable().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#update(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,4,5,0,0.2222222238779068,5,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#response(MessageIn[ReadResponse]).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#OffHeapBitSet(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getDefaultGcBefore(ColumnFamilyStore).mjava,0,0,4,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#ColumnSlice(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#addKeyspace(KSMetaData).mjava,0,0,5,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compressionParameters().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#isDeleted(Column).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#advance().mjava,0,0,3,0,1,0.0,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#executeQuery().mjava,0,3,12,0,6,0.040816325694322586,18,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#validateColumnNames(Iterable[ByteBuffer]).mjava,0,0,4,1,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getTokens(InetAddress).mjava,0,0,7,1,0,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition#isMinimum().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#enableScheduledRangeXfers().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexRow(ByteBuffer,ColumnFamily).mjava,0,0,7,2,1,0.0476190485060215,5,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getJoiningNodes().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#resultMessage(List[PermissionDetails]).mjava,0,0,9,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#isMarkedForDelete(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#get(String,List[#-extends-AssignementTestable],ColumnSpecification).mjava,0,0,15,3,4,0.03999999910593033,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionGenerator#getNextVersion().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#close().mjava,0,1,3,0,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#nameComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#setSkipMetadata().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#DeflateCompressor().mjava,0,0,0,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#columnCounter().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#serializedSize(GossipDigestSyn,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#hasNext().mjava,0,2,3,0,0,0.07692307978868484,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#updateDigest(MessageDigest).mjava,0,0,10,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#partitionKeyColumns().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelSize(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#notifyAdded(SSTableReader).mjava,0,0,1,1,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#[T]_newTaskFor(Callable[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Discarder#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,8,4,4,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CacheMetrics#CacheMetrics(String,ICache).mjava,0,0,11,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons#compareTo(byte[],int,int,byte[],int,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#Restriction(Term,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#describe_token_map().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#validate(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#validate(ClientState).mjava,0,0,13,1,0,0.2666666805744171,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#splitHelper(Hashable,Token,Token,byte,Token).mjava,0,0,10,5,2,0.3888888955116272,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Setter#Setter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#toString().mjava,0,0,4,0,1,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readFully(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumnFamily(String,Iterable[CfDef]).mjava,0,0,4,2,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.SingleColumnComparator#compare(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DoubleType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\OverloadedException#OverloadedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#NonCompositeBuilder(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#mark().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadTokens().mjava,0,1,7,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalRangeLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#fmix(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#executeInternal(CompactionExecutorStatsCollector).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updatePeerInfo(InetAddress,String,String).mjava,0,0,5,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply#RangeSliceReply(List[Row]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMinRpcTimeout().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintWindow().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPageSize().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#grant(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#serialize(GossipDigestAck,DataOutput,int).mjava,0,0,8,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getVersion(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultDouble#value().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#main(String[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#serialize(Leaf,DataOutput,int).mjava,0,0,3,3,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#shutdown().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#close().mjava,0,1,7,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#mergeAndRemoveOldShards(DecoratedKey,ColumnFamily,int,int,boolean).mjava,0,0,8,5,5,0.0,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getComparator().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#snapshotCreationTime(String).mjava,0,0,3,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\PreparedQueryNotFoundException#makeMsg(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#cloneWith(KSMetaData,Iterable[CFMetaData]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\CorruptSSTableException#CorruptSSTableException(Exception,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#getCanonicalPath(File).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#SocketThread(ServerSocket,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Appender#Appender(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#getKeyspaceName().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Discarder#Discarder(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(ByteBuffer,ByteBuffer,long,int,CFMetaData).mjava,0,0,1,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#getSstablesIterated().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#differenceHelper(MerkleTree,MerkleTree,List[TreeRange],TreeRange).mjava,0,0,14,4,9,0.07500000298023224,256,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getCompleted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#hasIrrelevantData(int).mjava,0,0,5,1,1,0.2222222238779068,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#alter(String,Map[Option,Object]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\EventMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\TokenSerializer#serializedSize(Collection[Token],TypeSizes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#stream().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#LeveledCompactionTask(ColumnFamilyStore,Collection[SSTableReader],int,int,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerConnection#applyStateTransition(Message.Type,Message.Type).mjava,0,0,0,2,0,0.07692307978868484,17,5,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#ProposeCallback(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#doSlice(String,ByteBuffer,String,byte[],int).mjava,0,0,43,5,14,0.032786883413791656,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#syncComplete(RepairJobDesc,NodePair,boolean).mjava,0,0,21,3,3,0.0357142873108387,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Deleter#Deleter(ColumnIdentifier,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#resultSetBuilder(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#validateFields(CFMetaData).mjava,0,0,6,1,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getWriteOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readByte().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#deserializeBounds(DataInput).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#total().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#containsPreviousLast(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#releaseReferences(Iterable[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#alterableOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFully(byte[],int,int).mjava,0,0,1,3,1,0.05882352963089943,12,4,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,36,3,14,0.0,16,4,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Value#bindAndGet(List[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#printPendingRanges().mjava,0,2,11,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesCompleted(Collection[ProgressInfo]).mjava,0,0,3,1,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FilterFactory#createFilter(int,long,int,boolean).mjava,0,0,0,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getMaxCompactionThreshold().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setTraceProbability(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#defaultColumnCountHistogram().mjava,0,2,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#addStreamRequest(String,Collection[Range[Token]],Collection[String]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#filterSuspectSSTables(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#isPresent(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#getBaseComparator().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#disableAutoCompaction(String,String...).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame#with(ChannelBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getKeyBound(Bound,List[ByteBuffer]).mjava,0,0,4,2,0,0.5,3,2,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#calculateRelocations(Multimap[String,String]).mjava,0,0,25,1,9,0.03846153989434242,17,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCreationTimeFor(Component).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,CFMetaData).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(CFMetaData,OperationType,long,long,String).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(double,long,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#getPageLiveCount(List[Row]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateRowCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#replayAllFailedBatches().mjava,0,0,10,0,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#revokeAll(IResource).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#AbstractReadExecutor(ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress],List[InetAddress]).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#run().mjava,0,0,8,0,1,0.1666666716337204,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#computeNext().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#truncateBlocking(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#CompactionController(ColumnFamilyStore,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\LongSerializer#toString(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#[T]_submit(Callable[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\OperationType#OperationType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#maybeTrim(Row).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#withoutKeyColumns(String).mjava,0,0,6,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#SSTableImport(Integer,boolean,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#setTrackedBy(DataTracker).mjava,0,0,1,1,0,0.75,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#close().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUp(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#getCollectionType().mjava,0,1,2,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#deserialize(DataInput,int).mjava,0,0,4,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getRawEndpointInfo(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Flag#deserialize(int).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#gossipSnitchInfo().mjava,0,4,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput.MappedFileDataInputMark#MappedFileDataInputMark(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_version().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#connect(boolean).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readStringList(ChannelBuffer).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#compute(byte[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeUTF(String).mjava,0,0,4,1,5,0.029411764815449715,50,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isSuper().mjava,0,27,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#serialize(RowMutation,DataOutput,int).mjava,0,0,9,3,1,2.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(OperationType,long,long,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#addAll(ColumnFamily,Allocator,Function[Column,Column]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#iterator().mjava,0,1,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#executeAsync().mjava,0,1,24,0,4,0.11764705926179886,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,12,3,3,0.6428571343421936,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#resetVersion(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#ResultSetBuilder(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#isAlive().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#getEndpointState(String).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getExceptionCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getCommandArguments().mjava,0,1,7,0,3,0.1428571492433548,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#Server(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokenToEndpointMap().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#next().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#removeEndpoint(InetAddress).mjava,0,0,5,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getLimit(List[ByteBuffer]).mjava,0,0,4,1,2,0.08695652335882187,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#updateColumnFamily(CFMetaData).mjava,0,0,7,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeConnected(QueuedMessage).mjava,0,0,21,1,4,0.07999999821186066,30,7,34,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#waitUntilListening().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LongToken#LongToken(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#fetchSegment().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#serializedSize(int).mjava,0,0,13,1,2,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.exceptions.InvalidRequestException).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultInteger#set(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#formatSubcolumnName(String,String,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#calculatePageSize().mjava,0,1,6,0,1,0.1818181872367859,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#getColumnFamilyName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#supersedes(RangeTombstone,Comparator[ByteBuffer]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addOperation(Operation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintsThread().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#cloneMe().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#SelectExpression(Term,int,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\PermissionAlteringStatement#validate(ClientState).mjava,0,0,6,1,0,0.25,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#disableRelocations(Collection[String]).mjava,0,0,5,1,1,0.0,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSyn#getGossipDigests().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicUpdateInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#getWhereClauseForPartitionFilter().mjava,0,1,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serializedSize(EndpointState,int).mjava,0,0,10,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long,long).mjava,0,0,2,2,5,0.14814814925193787,32,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#SetterByKey(ColumnIdentifier,Term,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#initializeFromMessage(MessageIn[#]).mjava,0,0,5,1,3,0.05000000074505806,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#skipBytes(int).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#getText().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommand#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#readColumnFamily(List[ReadCommand],org.apache.cassandra.db.ConsistencyLevel).mjava,0,0,6,2,2,0.03999999910593033,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#isMinimum(IPartitioner).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#SequentialWriter(File,int,boolean).mjava,0,0,7,3,0,0.03999999910593033,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ReplicationFinishedVerbHandler#doVerb(MessageIn,int).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumnFamily(Tree,Iterable[CfDef]).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#newRow().mjava,0,3,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#close().mjava,0,0,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#compareTo(DataDirectory).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#delete(IndexedEntry).mjava,0,0,6,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#AutoSavingCache(ICache[K,V],CacheService.CacheType,CacheSerializer[K,V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#SSTableImport(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat#checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\RetryMessage#RetryMessage(UUID,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LegacyLeveledManifest#LegacyLeveledManifest(File).mjava,0,0,8,1,5,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#totalSize().mjava,0,1,0,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(long).mjava,0,0,0,1,3,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BytesSerializer#toString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterUserStatement#validate(ClientState).mjava,0,0,5,1,0,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getBackingFiles().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#elapsedTime(long).mjava,0,0,7,1,1,15.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter#AbstractColumnFamilyRecordWriter(Configuration).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#getColumnNames(SelectStatement,CFMetaData,List[ByteBuffer]).mjava,0,0,6,3,3,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Allocator#clone(ByteBuffer).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#IndexedEntry(long,DeletionTime,List[IndexHelper.IndexInfo]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#getParent().mjava,0,0,2,0,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#AbstractCassandraStorage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#FileMessageHeader(UUID,int,String,long,List[Pair[Long,Long]],CompressionInfo).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#ListPermissionsStatement(Set[Permission],IResource,String,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexSearchersForQuery(List[IndexExpression]).mjava,0,0,15,1,4,0.10000000149011612,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#hasBallot(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#resolve().mjava,0,0,23,0,7,0.0882352963089943,36,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#addTransferFiles(Collection[SSTableStreamingSections]).mjava,0,0,5,1,2,0.0555555559694767,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#get(K).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#CompactionTask(ColumnFamilyStore,Iterable[SSTableReader],int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesSearcher#makePrefix(CompositesIndex,ByteBuffer,ExtendedFilter,boolean).mjava,0,0,10,4,3,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition.Kind#fromOrdinal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspace(String).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#sendMessage(StreamMessage).mjava,0,0,4,1,0,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#updateBatchlog(RowMutation,Collection[InetAddress],AbstractWriteResponseHandler).mjava,0,0,7,3,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getColumnMetadata(Cassandra.Client,boolean).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#KSMetaData(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],boolean,Iterable[CFMetaData]).mjava,0,0,2,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractNetworkTopologySnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,18,3,6,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#stopCompaction(String).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#update(MessageDigest).mjava,0,0,11,1,2,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ShuffleError[Shuffle]#ShuffleError(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#bytes().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#withUpdatedTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#system().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#RangeRelocator(Collection[Token],List[String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addDefaultIndexNames().mjava,0,5,23,0,8,0.03125,27,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getString(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Tracker#writtenAtom().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#submitDifferencers().mjava,0,1,8,0,3,0.125,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#SchemaChange(Change,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#allocate(int,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRangeRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getPendingAddressRanges(TokenMetadata,Token,InetAddress).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#getCompactions().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#serializedSize(CompressionInfo,int).mjava,0,0,4,2,2,0.20000000298023224,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnParent(CFMetaData,ColumnParent).mjava,0,0,2,2,0,0.0,6,3,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#executePrepared(byte[],List[ByteBuffer],ConsistencyLevel).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getUncompactingSSTables().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#operator().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamilyIds().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#[T]_getInstance(AbstractType[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#deserializeOneCf(DataInput,int,ColumnSerializer.Flag).mjava,0,0,1,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getPropertyString(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getEstimatedTasks().mjava,0,1,7,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentFalsePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintsInProgress().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#getNeighbors(String,Range[Token],boolean).mjava,0,0,17,3,6,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#[C,D]_create(C,C).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Literal#Literal(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTables().mjava,0,13,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#createTracingSession().mjava,0,5,2,0,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexes(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#CompressedInputStream(InputStream,CompressionInfo).mjava,0,0,3,2,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#computeNext().mjava,0,0,34,0,7,0.10000000149011612,80,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUUIDBytes(long).mjava,0,0,0,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#Writer(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringList(ChannelBuffer,List[String]).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#CompressedStreamWriter(SSTableReader,Collection[Pair[Long,Long]],CompressionInfo,StreamSession).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalTokens(Collection[Token],InetAddress).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setWriteConsistencyLevel(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#UseStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#getComparator(AbstractType[#],boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#affectedColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithLength(DataInput).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#isLive().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#getIndexComparator(CFMetaData,ColumnDefinition).mjava,0,0,3,2,0,0.1666666716337204,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#length().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#Collection(CollectionType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#validateCollectionMember(ByteBuffer,ByteBuffer).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#initClient(int).mjava,0,0,12,1,0,0.0555555559694767,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointToHostIdMapForReading().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyBoolean(String,Boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintWindow(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#beforeClose(Message).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#addProperty(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#resetLocalSchema().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#Shuffle(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#moving(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#start().mjava,0,2,10,0,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#getRack(InetAddress).mjava,0,0,10,1,1,0.0,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#writeHeader(CompressionParameters).mjava,0,0,15,1,0,0.10000000149011612,1,0,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterUserStatement#checkAccess(ClientState).mjava,0,0,13,1,2,0.0,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#normal(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#isReversed().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#filterToIndexExpressions(Expression).mjava,0,0,22,1,4,0.0,22,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#response(MessageIn).mjava,0,0,5,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanColumns().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSWriteError#FSWriteError(Throwable,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.ParallelOrder#ParallelOrder(RequestCoordinator[R]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#StreamingHistogram(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LegacyLeveledManifest#manifestNeedsMigration(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#compress(byte[],int,int,WrappedArray,int).mjava,0,0,2,5,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#getOnDiskFilePointer().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue#compareTo(VersionedValue).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#addTransferRanges(String,Collection[Range[Token]],Collection[String],boolean).mjava,0,0,15,4,4,0.0416666679084301,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#warn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#getStatements().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#announceMigration().mjava,0,0,54,0,16,0.0,78,18,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateIndexClauses(CFMetaData,IndexClause).mjava,0,0,2,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString(StringBuilder,int).mjava,0,0,18,2,0,0.0,2,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compactionStrategyClass(Class[#-extends-AbstractCompactionStrategy]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit(String,String,long,String[]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#getConsistencyLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#makeIndexColumnNameBuilder(ByteBuffer,ByteBuffer).mjava,0,0,7,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#deserialize(DataInput,int).mjava,0,0,24,2,17,0.0,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#shutdownClientServers().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#removeTrigger(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubColumn(org.apache.cassandra.db.Column).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildPartitionKeyNames(List[ByteBuffer]).mjava,0,0,18,1,6,0.0,6,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue.Entry#Entry(Thread).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz3(long).mjava,0,0,0,1,2,0.4000000059604645,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Decompressor#decode(ChannelHandlerContext,Channel,Object).mjava,0,0,4,3,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#makeArgSpec(ColumnSpecification,Function,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#isNativeTransportRunning().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String,boolean).mjava,0,0,5,3,1,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#ReducingKeyIterator(Collection[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSnapshotCreationTime(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilterFalsePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#add(RangeTombstone,Comparator[ByteBuffer]).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#skipPromotedIndex(DataInput).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#MappedFileDataInput(FileInputStream,String,long,int).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#applyConfig(Config).mjava,0,0,76,1,5,9.382352828979492,0,49,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serializedSize(TruncateResponse,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\AsyncOneResponse#get(long,TimeUnit).mjava,0,0,5,2,2,0.0,6,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#hasNext().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDelKeySpace(Tree).mjava,0,0,6,1,2,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCurrentlyBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#BulkRecordWriter(Configuration).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#open(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap#getCollection(ByteBuffer).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#compareUnsigned(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\TypeCast#castedSpecOf(ColumnSpecification).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#printProgramUsage().mjava,0,2,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readBytes(DataInput,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#CreateIndexStatement(CFName,String,ColumnIdentifier,boolean,boolean,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Relation#Relation(Term,String,Term).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#Bounds(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#announceMigration().mjava,0,0,8,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics#release().mjava,0,1,15,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#computeNext().mjava,0,0,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getCommandPendingTasks().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#RowHash(Token,byte[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.EmptyClauseFilter#isSatisfiedBy(DecoratedKey,ColumnFamily,ColumnNameBuilder).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap#getSimple(ByteBuffer).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeSent().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons#lexicographicalComparerJavaImpl().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexes().mjava,0,3,3,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#Metadata(EnumSet[Flag],List[ColumnSpecification]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serialize(EndpointState,DataOutput,int).mjava,0,0,10,3,3,16.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_rangeSet(Range[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#RawStatement(CFName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#isFatClient(InetAddress).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#describeOwnership(List[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#takeSnapshot(String,String,String...).mjava,0,0,2,3,0,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#recover(File).mjava,0,0,69,1,17,5.42307710647583,786440,21,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#maybeInitializeLocalState(int).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRequestedColumns(List[ByteBuffer]).mjava,0,0,25,1,9,0.07692307978868484,11,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#shutdown().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#MerkleTree(IPartitioner,Range[Token],byte,long).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PermissionDetails#PermissionDetails(String,IResource,Permission).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getId().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDigestResolver#isDataPresent().mjava,0,1,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#columnStats().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_token_map().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#setup().mjava,0,0,10,0,1,0.14814814925193787,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bufferCursor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#Term(String,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#stop().mjava,0,3,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumnNames(Iterable[ByteBuffer]).mjava,0,0,4,1,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.Serializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#toBytes().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serialize(BloomFilter,DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DoubleType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosProposal(Commit).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDigestResolver#RowDigestResolver(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setHintedHandoffEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#release().mjava,0,2,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#fromException(Throwable).mjava,0,0,2,1,1,0.0833333358168602,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateUserStatement#validate(ClientState).mjava,0,0,5,1,0,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getDatacenter(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getScanner().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getVersion(InetAddress).mjava,0,0,2,1,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serialize(ReadCommand,ByteBuffer,DataOutput,int).mjava,0,0,8,4,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#merge(List[SSTableIdentityIterator],CompactionController).mjava,0,0,12,2,3,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#equals(Object).mjava,0,0,4,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#ProgressIndicator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#ListType(AbstractType[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#seekToChunkStart().mjava,0,1,3,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheHits().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#parseStatement(String,QueryState).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#[T]_nullInitializedList(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.WritetimeOrTTLSelector#isAssignableTo(ColumnSpecification).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPage(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#Holder(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#keyspace().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#isExhausted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#inverse().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#beforeExecute(Thread,Runnable).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isFullWildcard().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice.Serializer#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeAddColumnFamily(Tree).mjava,0,0,10,1,2,0.05263157933950424,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getSortedColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#revoke(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\KSPropDefs#getReplicationStrategyClass().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#shuffle(boolean,String).mjava,0,0,28,2,8,0.01923076994717121,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#ClientState(boolean).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#deserialize(DataInput,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata#checksumWriter(Descriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#moveToNext().mjava,0,23,1,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getRack(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionStrategy(String).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#addBootstrapTokens(Collection[Token],InetAddress).mjava,0,0,11,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(PrintStream,boolean,String,Boolean).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getIndexType(String).mjava,0,0,4,1,0,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#indexColumnFamilyName(ColumnDefinition).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#clear().mjava,0,1,7,0,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#process(List[Row]).mjava,0,0,5,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#reloadAttributes().mjava,0,1,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#Discarder(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#getCompactionOptions().mjava,0,4,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#resumeHintsDelivery().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#validateComparator(int,ByteBuffer).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#EncodedDataOutputStream(OutputStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBucketOffsets().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#TreeIterator(IntervalNode).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#isCompatibleWith(AbstractType[#]).mjava,0,0,6,1,3,0.05882352963089943,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#startOf(ByteBuffer).mjava,0,0,8,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.FunctionSelector#FunctionSelector(Function,List[Selector]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getFirstEmptyKey().mjava,0,1,4,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#set_keyspace(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#equals(Object).mjava,0,0,0,1,4,0.10000000149011612,72,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#loadSaved(ColumnFamilyStore).mjava,0,0,34,1,9,0.04545454680919647,24,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getMinCompactionThreshold().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds#getString(AbstractType[#]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#markObsolete().mjava,0,7,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#delete(ColumnFamily).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#dumpInterArrivalTimes().mjava,0,0,5,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#setColumnFamily(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.StaticRowIterator#computeNext().mjava,0,0,7,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceRepairRangeAsync(String,String,String,boolean,boolean,String...).mjava,0,0,9,6,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#searchComposite(String,boolean).mjava,0,0,4,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Literal#toString().mjava,0,0,10,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.Type#fromByte(byte).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeShowVersion().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaxRowSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#setIndexRemoved().mjava,0,1,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAllDataFileLocations().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#replaySerializedMutations(ByteBuffer,long).mjava,0,0,4,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#compareLongs(ByteBuffer,ByteBuffer).mjava,0,0,10,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#executeInternal(QueryState).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#clear(String,Schema).mjava,0,0,3,2,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#validate().mjava,0,2,1,0,2,0.0476190485060215,9,5,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#getSplits(JobContext).mjava,0,0,36,1,8,0.06578947603702545,6,7,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#buildIntervalTree(Iterable[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getValueValidator(String,String,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#validateFields(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCompactionThroughputMbPerSec().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,CFMetaData,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#maybeWriteRowHeader().mjava,0,2,3,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getColumnFamilyName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#replicasMissingMostRecentCommit().mjava,0,1,4,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairMessageVerbHandler#doVerb(MessageIn[RepairMessage],int).mjava,0,0,5,2,6,0.15000000596046448,15,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.ExternalClient#getCFMetaData(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getTotalCompactionsCompleted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#beginAndRepairPaxos(long,ByteBuffer,CFMetaData,List[InetAddress],int,ConsistencyLevel).mjava,0,0,24,6,8,0.31578946113586426,13,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getLeavingNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#SchemaChange(Change,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentReplicators().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getLocalHostId().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#execute(QueryState).mjava,0,0,12,1,2,0.0,8,3,19,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#maybeAddLatency(IAsyncCallback,InetAddress,long).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#getType().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getDatacenter(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announce(Collection[RowMutation]).mjava,0,0,9,1,1,0.1111111119389534,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#applyPropertiesTo(CFMetaData).mjava,0,0,9,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#columnCounter(AbstractType[#],long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceRepairRange(String,Collection[Range[Token]],boolean,boolean,String...).mjava,0,0,4,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#getActiveSegments().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getCfDef(Cassandra.Client).mjava,0,0,23,1,9,0.04651162773370743,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#updateCFMetadata(CFMetaData).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons.LexicographicalComparerHolder.UnsafeComparer#lessThanUnsigned(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getPropertyDouble(String,Double).mjava,0,0,3,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getCQL2KeyName().mjava,0,5,6,0,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedThrottledReader#reBuffer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#isSuccess().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#CassandraClient(String,int,boolean).mjava,0,0,2,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#AbstractCompactionTask(ColumnFamilyStore,Iterable[SSTableReader]).mjava,0,0,4,2,1,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcServerType().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.Prepared#Prepared(CQLStatement,List[ColumnSpecification]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getGossipInfo().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getNamesFilter(DecoratedKey,String,ByteBuffer,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#mutateCounter(CounterMutation,String).mjava,0,0,23,2,7,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncBatchWindow().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#makeIndexColumnNameBuilder(ByteBuffer,ByteBuffer).mjava,0,0,11,2,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#serializeEvent().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setWriteRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\RawSelector#RawSelector(Selectable,ColumnIdentifier).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLoadMap().mjava,0,0,11,0,1,0.1111111119389534,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#schedule(long).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\StreamingMetrics#StreamingMetrics(InetAddress).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#speculate().mjava,0,1,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#queryNextPage(int,ConsistencyLevel,boolean).mjava,0,0,5,3,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#tokensFromString(String).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hintedHandoffEnabled().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getPath().mjava,0,0,1,0,1,0.09090909361839294,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#paxosTtl(CFMetaData).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#[K-extends-IMeasurableMemory,V-extends-IMeasurableMemory]_create(long,EntryWeigher[K,V]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#getKeySpace(String,List[KsDef]).mjava,0,0,4,2,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\IDiskAtomFilter.Serializer#serializedSize(IDiskAtomFilter,int).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_column_family(CfDef).mjava,0,0,12,1,3,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#QueryOptions(ConsistencyLevel,List[ByteBuffer],boolean,SpecificOptions).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#bootstrapComplete().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#writeColumnsFromTuple(ByteBuffer,Tuple,int).mjava,0,0,11,3,2,0.05000000074505806,20,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.NullOutputHandler#warn(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliSessionState#CliSessionState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\OnDiskAtom.Serializer#serializeForSSTable(OnDiskAtom,DataOutput).mjava,0,0,2,2,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\SupportedMessage#SupportedMessage(Map[String,List[String]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#hibernate(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#toThriftResult().mjava,0,1,17,0,8,0.06896551698446274,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#DataTracker(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#addReadCommandFromColumnFamily(String,ByteBuffer,ColumnFamily,long,List[ReadCommand]).mjava,0,0,5,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#compareIdTo(ContextState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#makeNewKeyspaceDefinition(KSMetaData,CFMetaData).mjava,0,0,7,2,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\PoolingSegmentedFile#PoolingSegmentedFile(String,long,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,5,2,0,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getInternal(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#serialize(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#getReplayPosition(Iterable[#-extends-SSTableReader]).mjava,0,0,5,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#SSTableSimpleWriter(File,CFMetaData,IPartitioner).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer.FailureDetectorSourceFilter#FailureDetectorSourceFilter(IFailureDetector).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,ColumnFamilyType,AbstractType[#]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#addInValue(Term.Raw).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString(int).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#buildAsEndOfRange().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getStreamThroughputMbPerSec().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaximalTask(int).mjava,0,0,8,1,6,0.03030303120613098,7,4,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#validateFields(CFMetaData).mjava,0,0,4,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#getColumnsList().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice.NavigableMapIterator#NavigableMapIterator(NavigableMap[ByteBuffer,Column],ColumnSlice[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#SecondaryIndexSearcher(SecondaryIndexManager,Set[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#dumpTimings(String).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#hash3_x64_128(ByteBuffer,int,int,long).mjava,0,0,25,4,9,0.1702127605676651,78,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#pause().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#failedNode(InetAddress).mjava,0,0,2,1,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setCasContentionTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#debug(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata(BiMultiValMap[Token,InetAddress],BiMap[InetAddress,UUID],Topology).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getRecentTimeoutsPerHost().mjava,0,0,6,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceTokens().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#hasCounterId(ByteBuffer,CounterId).mjava,0,0,5,2,0,0.10000000149011612,3,2,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMinTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addColumnDefinitionsFromSchema(CFMetaData,Row).mjava,0,0,3,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeUseKeySpace(Tree).mjava,0,0,28,1,4,1.75,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#getRangeMap(Configuration).mjava,0,0,3,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#copyOptions(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,8,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow.Reducer#getReduced().mjava,0,0,22,0,4,0.05000000074505806,3,5,30,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#dropCf(UUID).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#countPaged(String,String,ByteBuffer,SliceQueryFilter,ConsistencyLevel,int,long).mjava,0,0,8,7,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcTimeout().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SelectionWithFunctions#handleRow(ResultSetBuilder).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#serializedSize(StreamRequest,int).mjava,0,0,8,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#invalidSchemaRow(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\SessionFailedMessage#SessionFailedMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#midpoint(BigInteger,BigInteger,int).mjava,0,0,12,3,5,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#isMarkedForDelete(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#getPhiConvictThreshold().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#getSlice(CFMetaData,SelectStatement,List[ByteBuffer],long).mjava,0,0,26,4,7,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#validate(ByteBuffer).mjava,0,0,5,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#TCustomNonblockingServerSocket(InetSocketAddress,boolean,Integer,Integer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#response(TMessage).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getCurrentPosition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllInternodeAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLocalRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.CounterIdRecord#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#containsValue(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#selectsFullRowFor(ByteBuffer).mjava,0,0,6,1,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getJoiningNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#skipBytes(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#GossipDigest(InetAddress,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#EncodedDataInputStream(DataInput).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand.Type#fromSerializedValue(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#release().mjava,0,2,12,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySuperCounter(CounterSuperColumn).mjava,0,0,6,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#serializedSize(TypeSizes).mjava,0,0,5,1,2,1.600000023841858,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.Name#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#gossiperStarting().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#dcLocalReadRepairChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serializedSize(ReadCommand,ByteBuffer,int).mjava,0,0,9,3,4,0.0625,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#CreateColumnFamilyStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getTimestamp(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#CommitLog().mjava,0,0,5,0,1,0.0555555559694767,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#asCQL3Type().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#unsubscribe(INotificationConsumer).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#run().mjava,0,0,9,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsByteArray(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#renewMemtable(Memtable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#BatchCommitLogExecutorService(int).mjava,0,0,2,1,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Request#isTracingRequested().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#FunctionCall(Function,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flush().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#getComparator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Pair#[X,Y]_create(X,Y).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#writeAtMost(byte[],int,int).mjava,0,0,11,3,1,0.07692307978868484,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortTokens().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#aliasesToJson(List[ColumnDefinition]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#selectsFullRowFor(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#respondError(Truncation,MessageIn).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printGossipInfo(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#init(StreamResultFuture).mjava,0,0,2,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#withUpdatedTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#Term().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliOptions#processArgs(CliSessionState,String[]).mjava,0,0,54,2,2,0.036363635212183,2097152,21,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#taskCompleted(StreamTransferTask).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#withUpdatedLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#replaySerializedMutation(RowMutation,long).mjava,0,0,17,2,4,0.10000000149011612,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getFieldSize(long).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputcolumns(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#getNextBlock().mjava,0,1,16,0,6,6.666666507720947,132,14,5,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#WithClauses(ColumnFamilyStore,DataRange,List[IndexExpression],int,boolean,long).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#getFilter().mjava,0,3,9,0,3,0.11999999731779099,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#duplicate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getBytes(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.KsDefNamesComparator#compare(KsDef,KsDef).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#EventNotifier(Server).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#isReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#parseCrcCheckChance(String).mjava,0,0,2,1,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseTokenRemoved(InetAddress,UUID).mjava,0,0,11,2,2,0.1818181872367859,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSliceFilter(DecoratedKey,String,ByteBuffer,ByteBuffer,boolean,int,long).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#AbstractModification(String,String,String,Attributes).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Literal#Literal(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#setupUsersTable().mjava,0,1,2,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#validateKey(ByteBuffer).mjava,0,0,3,1,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#startRpc().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addColumn(ColumnFamily,ByteBuffer,InetAddress).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#closeAndOpenReader(long).mjava,0,0,18,1,5,0.25925925374031067,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#and(Term).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeof(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#getFilePointer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Value#get().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexes(ByteBuffer,Collection[SecondaryIndex]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessage#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#deserialize(ReadableByteChannel,int,StreamSession).mjava,0,0,6,3,2,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#get(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#getLiveSize().mjava,0,3,5,0,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#Row(Map[String,ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#disableAutoCompaction().mjava,0,3,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#getCurrentValue().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#all().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#stopGossiping().mjava,0,1,2,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#validate().mjava,0,2,21,0,7,0.0,15,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#updateEstimatedCompactionsByTasks(List[List[SSTableReader]]).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#IndexSummary(IPartitioner,Memory,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#collectReducedColumns(ColumnFamily,Iterator[Column],int,long).mjava,0,0,4,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#equals(Object).mjava,0,0,6,1,1,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceCleanup(CounterId.OneShotRenewer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthChallenge#AuthChallenge(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#rangeCovering(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#deletionInfo().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#iterator().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank(String,int).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toByteArray().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#RoundRobinScheduler(RequestSchedulerOptions).mjava,0,0,3,1,2,0.05263157933950424,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper#getBootstrapTokens(TokenMetadata,Map[InetAddress,Double]).mjava,0,0,12,2,4,0.04545454680919647,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#remove(K).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#shutdownNow().mjava,0,1,3,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#decode(ChannelBuffer).mjava,0,0,8,1,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getCfDef(String).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#columnFamily(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\EventMessage#EventMessage(Event).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#getFullColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#writeShort(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#isCleanerAvailable().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_rangeSet(Range[T]...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getColumn(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Addition#Addition(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getCurrentGenerationNumber().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#blockForWrites().mjava,0,1,13,0,0,0.1818181872367859,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#toThrift().mjava,0,1,9,0,2,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\JEMallocAllocator#allocate(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#close().mjava,0,5,3,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#clearUnsafe().mjava,0,0,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#remainingHeaderLength().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#KeyCacheKey(Descriptor,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#makeFilter(List[ByteBuffer],int).mjava,0,0,21,2,8,0.1538461595773697,4,7,30,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#getColumnsLimit().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getEstimatedColumnCountHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#disconnect().mjava,0,4,4,0,0,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#truncate(String).mjava,0,0,17,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#receiveTiming(InetAddress,long).mjava,0,0,5,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#tryGetLeveledManifest().mjava,0,5,3,0,1,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#clear().mjava,0,1,12,0,3,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readLong().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeBytes(String).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#ErrorMessage(TransportException,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isIndexNameValid(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#getBoundsTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.WritetimeOrTTLSelector#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator#close().mjava,0,0,2,0,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#getAllEndpointStates().mjava,0,0,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getUnreadableDirectories().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#decodeEntry(DecoratedKey,Column).mjava,0,0,10,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexOptions().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#convertValueByFunction(Tree,CfDef,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#[T]_submit(Runnable,T).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serialize(TruncateResponse,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\NoScheduler#release().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitNanos(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#list(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,14,4,2,0.0,6,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#isKeyRange().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#mark(int).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#WatchedResource(String,Runnable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCachedPosition(DecoratedKey,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#shutdownBlocking().mjava,0,0,2,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getCompactionController(Set[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#register(IEndpointLifecycleSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#SnappyCompressor().mjava,0,0,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthenticateMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDSerializer#serialize(UUID,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isInitialized().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompressionParameters(Map[String,String]).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compile(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serializedSize(ReplayPosition,TypeSizes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#getName(ColumnOrSuperColumn).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSequentialIterator(DataRange,long).mjava,0,0,31,2,4,0.1111111119389534,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromSchema(Row,CFMetaData).mjava,0,0,23,2,9,0.02777777798473835,32,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#Builder(ColumnFamily,ByteBuffer,DataOutput).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#deserialize(DataInput,int).mjava,0,0,3,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getTimestamp(long,List[ByteBuffer]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#authorize(IResource).mjava,0,0,4,1,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#addComponents(Collection[Component]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#Ec2MultiRegionSnitch().mjava,0,0,5,0,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheSavePeriodInSeconds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getTotalBytes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#CompactionMetrics(ThreadPoolExecutor...).mjava,0,0,12,1,2,0.0,1,0,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#ArrivalWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#putIfAbsent(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#SSTableSliceIterator(SSTableReader,DecoratedKey,ColumnSlice[],boolean).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#value().mjava,0,43,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculativeReadExecutor#speculate().mjava,0,0,13,0,2,0.11764705926179886,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthChallenge#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#EmptyCompactionScanner(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#sampleKeyRange().mjava,0,0,11,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#replayPosition(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\notifications\SSTableAddedNotification#SSTableAddedNotification(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#switchMemtable(Memtable).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#addColumn(Column,Allocator).mjava,0,0,4,2,2,0.7142857313156128,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#intersects(AbstractBounds[T]).mjava,0,0,3,1,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspaceNotYetExisting(String).mjava,0,0,3,1,0,0.3333333432674408,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#sendMessages(Collection[#-extends-StreamMessage]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromThrift(ColumnDef,boolean).mjava,0,0,2,2,0,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#submitHint(RowMutation,InetAddress,AbstractWriteResponseHandler,ConsistencyLevel).mjava,0,0,8,4,2,0.09090909361839294,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#expressionString(IndexExpression).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#build(ByteBuffer...).mjava,0,0,8,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_normalize(Collection[Range[T]]).mjava,0,0,6,1,1,0.23076923191547394,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#upgradeSSTables(String,boolean,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeDouble(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumns().mjava,0,2,7,0,0,0.25,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ByteBufferOutputStream#write(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getKeySpace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UserOptions#put(String,Object).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#await(long,TimeUnit).mjava,0,0,4,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#setRowCacheSavePeriodInSeconds(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#toString().mjava,0,0,15,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getStatistics(String,Job).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row.RowSerializer#serializedSize(Row,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#DataResource().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#initServer(int).mjava,0,0,53,1,6,0.08045977354049683,288,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilter().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getArraySize(int,long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#finishCompaction(UUID).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#[R-extends-RingPosition]_upperBound(Class[R]).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspacePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#write(ByteBuffer,List[Mutation]).mjava,0,0,8,2,2,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#inc(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#extractLastComponent(ByteBuffer).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#runWith(File).mjava,0,0,82,1,30,0.15328466892242432,9600,15,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#prepare_cql3_query(ByteBuffer,Compression).mjava,0,0,8,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#UpdateStatement(String,String,String,Map[Term,Operation],List[Term],Attributes).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getLocationWithMaximumAvailableSpace(long).mjava,0,0,4,1,3,0.05263157933950424,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpoint(Token).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#setColumnsLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getKeyspaces().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#getColumnRelations().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#serializedSize(RepairJobDesc,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getDatacenter(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getDouble(String,Double).mjava,0,0,3,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#purge(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.GreaterThanOrEqualTo#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#[T]_create(InetAddress,T,Map[String,byte[]],MessagingService.Verb,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.NativeDBTypeSizes#sizeof(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputCompressionClass(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#delete(RangeTombstone).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringToStringListMap(ChannelBuffer,Map[String,List[String]]).mjava,0,0,8,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getComparatorSerializedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds#format(T,AbstractType[#]).mjava,0,0,2,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getMovingNodes().mjava,0,0,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#remainingBodyLength().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#SSTableReader(Descriptor,Set[Component],CFMetaData,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,IFilter,long,SSTableMetadata).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object).mjava,0,0,2,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#saveSummary(SSTableReader,SegmentedFile.Builder,SegmentedFile.Builder).mjava,0,0,12,3,2,0.03999999910593033,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\TermType[Term]#forInt(int).mjava,0,0,0,1,0,0.07692307978868484,32,5,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#closeQuietly(Closeable).mjava,0,0,2,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#readNextChar().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber#checkManifest(LeveledManifest).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#emptyPartitionKeyValues().mjava,0,3,0,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,5,5,1,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#makeRowRange(Token,Token,IPartitioner).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#UpdateStatement(int,CFMetaData,Attributes).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#getTimestamp(long,List[ByteBuffer]).mjava,0,0,3,2,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.CompressedFileWriterMark#CompressedFileWriterMark(long,long,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedPoolingSegmentedFile#createReader(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#getPartitioner().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#CounterId(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions.SpecificOptions#SpecificOptions(int,PagingState,ConsistencyLevel).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow.Reducer#reduce(OnDiskAtom).mjava,0,0,7,1,1,0.0,2,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.ExternalClient#createThriftClient(String,int).mjava,0,0,1,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#isAssignableTo(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairRepairedBlocking().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#BufferedSegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#deserialize(DataInput,int).mjava,0,0,3,2,3,0.20000000298023224,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#trim(int).mjava,0,0,3,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateKey(ByteBuffer).mjava,0,0,3,1,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#getColumnFamily().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftify(ColumnOrSuperColumn).mjava,0,0,6,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SkipNullRepresenter#representJavaBeanProperty(Object,Property,Object,Tag).mjava,0,0,0,4,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#toThriftResult().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#isINRestriction().mjava,0,5,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getRecentTotalTimouts().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#ReconnectableSnitchHelper(IEndpointSnitch,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTaskType().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.SimpleBlockFetcher#setNextSlice().mjava,0,1,0,0,0,0.0,3,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#connect(String,int).mjava,0,0,30,2,7,0.02247191034257412,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(DataInputStream,Descriptor).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#handleLegacyVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#ColumnFamily(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#SSTableNamesIterator(SSTableReader,DecoratedKey,SortedSet[ByteBuffer]).mjava,0,0,5,3,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#verifyNoHintsInProgress().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#putNext(Tuple).mjava,0,0,10,1,1,0.3888888955116272,10,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateUserStatement#execute(ClientState).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#getAge(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#getString(AbstractType[#]).mjava,0,0,13,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#sync().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLong().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#GossipingPropertyFileSnitch().mjava,0,0,8,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#getKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#BoundedStatsDeque(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#getIndexName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo#equals(Object).mjava,0,0,4,1,1,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#mostInterestingBucket(List[List[SSTableReader]],int,int).mjava,0,0,14,3,3,0.06060606241226196,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#startThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#hasCapacityFor(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeTransferThreadFactory[ScheduledRangeTransferExecutorService]#newThread(Runnable).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#includeBackups(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#serialize(RangeTombstoneList,DataOutput,int).mjava,0,0,6,3,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#RangeNamesQueryPager(RangeSliceCommand,ConsistencyLevel,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#getPriority().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#max(ByteBuffer,ByteBuffer,AbstractType[#]).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#prepare(ColumnSpecification).mjava,0,0,10,1,4,0.13333334028720856,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#newSocket(InetAddress).mjava,0,0,16,1,1,0.0625,3,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.InvalidHash#InvalidHash().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#incrementAndGetGeneration().mjava,0,1,13,0,5,0.1428571492433548,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read(byte[]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#getArray(ByteBuffer).mjava,0,0,10,1,3,0.0714285746216774,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\RetryMessage#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#export(Descriptor,String[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#startNativeTransport().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#hasSufficientReplicas(Map[String,Set[InetAddress]],Multimap[String,InetAddress]).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Operation#isUnary().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\PreparedQueryNotFoundException#PreparedQueryNotFoundException(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#serialize(Boolean).mjava,0,0,0,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getToolsOutputDirectory().mjava,0,3,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#ArrayBackedSortedColumns(Collection[Column],CFMetaData,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#ParallelCompactionIterable(OperationType,List[ICompactionScanner],CompactionController,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Adder#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#bindedVariablesFromTuple(Tuple).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#ColumnFamilyRecordWriter(Configuration).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#DroppableRunnable(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#Inner(Token,Hashable,Hashable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\GuidGenerator#guid().mjava,0,0,9,0,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\ExpiredTraceState#elapsed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#Writer(int).mjava,0,0,6,1,1,0.0,8,3,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage#createMessage(boolean,int).mjava,0,0,8,2,5,0.11538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Hex#getProtectedConstructor(Class,Class...).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#updateCFMetadata(CFMetaData).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#protectedResources().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserializeFromSSTable(DataInput,Descriptor.Version).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#shouldPreheatPageCache().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#run().mjava,0,0,16,0,6,0.04444444552063942,4,3,29,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getBytesAccordingToType(String,AbstractType[#]).mjava,0,0,1,2,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#deserialize(DataInput,int).mjava,0,0,6,2,3,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\client\RingCache#RingCache(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#serializedSizeForSSTable().mjava,0,1,7,0,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#toString(Boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#getReadExecutor(ReadCommand,ConsistencyLevel).mjava,0,0,11,2,6,0.0,32,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#skip(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\PagingState#deserialize(ByteBuffer).mjava,0,0,4,1,4,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#oldestUnflushedMemtable().mjava,0,1,4,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(ByteBuffer,byte[]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#equals(Object).mjava,0,0,2,1,1,0.0,68,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#login(Map[String,String]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#pager(Pageable,ConsistencyLevel,boolean,PagingState).mjava,0,0,4,4,2,0.0,5,4,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#assureSufficientLiveNodes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBroadcastAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Murmur3BloomFilter#hash(ByteBuffer,int,int,long).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#Void().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setThriftFramedTransportSizeInMb(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#delete(DeletionInfo).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getTotalLiveSize().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#enableReserveSegmentCreation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#[K,V]_create(long,ISerializer[V]).mjava,0,0,2,2,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#iterator().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isCounter().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#updateCounterFor(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#startGossiping().mjava,0,0,3,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#getToken().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#deserialize(ByteBuffer).mjava,0,0,8,1,6,0.0,2,1,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthResponse#AuthResponse(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#Options(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#markDeltaToBeCleared().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#serializedSize(TypeSizes).mjava,0,0,8,1,3,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#write(int).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BytesSerializer#deserialize(ByteBuffer).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStreamingSocketTimeout().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.ExternalClient#init(String).mjava,0,0,27,1,12,0.017241379246115685,5,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addCompressionRatio(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setMaxHintWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#LeveledCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,10,2,2,0.0476190485060215,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#apply(RowMutation,boolean,boolean).mjava,0,0,19,3,2,0.0357142873108387,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#maySelectPrefix(Comparator[ByteBuffer],ByteBuffer).mjava,0,0,1,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getHintedHandoffThrottleInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#createColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getDroppableTombstonesBefore(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.BufferedRandomAccessFileMark#BufferedRandomAccessFileMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#deserialize(DataInput,int).mjava,0,0,5,2,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#allIndexesNames().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\PoolingSegmentedFile#cleanup().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#serialize(DataOutput).mjava,0,0,12,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#maybeGenerateRetryCommand(RowDataResolver,Row).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#parseChunkLength(String).mjava,0,0,1,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokens().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#incrCompactionSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doCleanupCompaction(ColumnFamilyStore,Collection[SSTableReader],CounterId.OneShotRenewer).mjava,0,0,71,3,24,0.025641025975346565,448,17,1,7,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#setLong(long,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspaceUserNameAndPassword(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#getSuccessful().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#decompose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getNamesFilter(DecoratedKey,String,SortedSet[ByteBuffer],long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#limit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeof(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getArchivingSegmentNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_cql_query(ByteBuffer,Compression).mjava,0,0,12,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#prepareRowMutations(String,ThriftClientState,List[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#getLocalDeletionTime().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Setter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(byte[],int,int).mjava,0,0,1,3,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#getCFMetaData(String).mjava,0,0,23,1,6,0.017241379246115685,23,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#getColumnNameBuilder().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#isFailed().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#listEndpointsPendingHints().mjava,0,1,5,0,2,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#process(String,Object...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintsInProgress(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.WriteResponseHandlerWrapper#WriteResponseHandlerWrapper(AbstractWriteResponseHandler,RowMutation).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#updateCompletor(Set[String]).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#append(DecoratedKey,ColumnFamily).mjava,0,0,7,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getReverseSortedColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Relation#getValue().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#validate(ByteBuffer).mjava,0,0,11,1,7,0.0,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#validate().mjava,0,2,7,0,2,0.10000000149011612,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#shouldPullSchemaFrom(InetAddress).mjava,0,0,3,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.CounterIdRecord#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#computeNext().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeTruncate(String).mjava,0,0,8,1,1,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Relation#operator().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#preparedQueryBindValues(List[BoundColumn],int,List[ByteBuffer]).mjava,0,0,7,3,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubInfo#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#copy().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#spaceReclaimed(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#stringToCB(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#diff(ColumnFamily).mjava,0,0,12,1,4,0.11999999731779099,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getColumnComparator(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#writeMutations(ByteBuffer,List[Mutation]).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getUnreachableMembers().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#write(ByteBuffer,List[Mutation]).mjava,0,0,31,2,0,0.0,3,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#isTracing().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getDatacenter(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractPartitioner#[R-extends-RingPosition]_minValue(Class[R]).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#close().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubController#ScrubController(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#serializedValueSize(Object).mjava,0,0,9,1,2,0.0,14,1,14,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getLength().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\RepairRunner[NodeProbe]#RepairRunner(PrintStream,String,String...).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\client\RingCache#refreshEndpointMap().mjava,0,1,13,0,5,0.02777777798473835,1,0,23,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexesNotBackedByCfs().mjava,0,0,4,0,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#getRack(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getKey(int).mjava,0,0,3,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#OffHeapBitSet(long).mjava,0,0,3,1,2,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\Int32Type#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#sizeEstimator().mjava,0,1,0,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRowCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferRanges(InetAddress,String,Collection[Range[Token]],String...).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#cloneMe().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#unregisterMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#reload().mjava,0,1,12,0,3,0.2222222238779068,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#compareEndpointStartup(InetAddress,InetAddress).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#CBUtil().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#cfIdSerializedSize(UUID,TypeSizes,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#effectiveOwnership(String).mjava,0,0,21,1,6,0.10000000149011612,16,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#addIndexedColumn(ColumnDefinition).mjava,0,0,15,1,2,0.25641027092933655,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(Collection[org.apache.cassandra.db.Column],boolean,long,boolean,boolean).mjava,0,0,9,5,1,0.0,5,4,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#processArguments(String[]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#getHintsSlice(int).mjava,0,0,6,1,5,0.07999999821186066,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#SSTableLoader(File,Client,OutputHandler).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand.Serializer#serializedSize(PagedRangeCommand,int).mjava,0,0,12,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#assureSufficientLiveNodes(Keyspace,Iterable[InetAddress]).mjava,0,0,22,2,6,0.023255813866853714,19,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#stopNonLocal(TraceState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#resetLocalSchema().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#filterForQuery(Keyspace,List[InetAddress],ReadRepairDecision).mjava,0,0,16,3,3,0.25925925374031067,32,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isCQL3OnlyPKComparator(AbstractType[#]).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_snitch().mjava,0,0,7,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRangeToEndpointMap(String).mjava,0,0,7,1,1,9.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getValidColumnFamilies(boolean,boolean,String,String...).mjava,0,0,22,4,7,0.10204081982374191,36,7,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionManagerProxy().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#CompressedRandomAccessReader(String,CompressionMetadata,PoolingSegmentedFile).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serializedSize(AbstractBounds[#],int).mjava,0,0,6,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2VerbHandler#doVerb(MessageIn[GossipDigestAck2],int).mjava,0,0,8,2,2,0.38461539149284363,6,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.Order#Order(RequestCoordinator[R]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#escape(String).mjava,0,0,4,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#findSuitableEndpoint(String,ByteBuffer,String,ConsistencyLevel).mjava,0,0,16,4,4,0.09090909361839294,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Resources#chain(IResource).mjava,0,0,3,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#enableAutoCompaction(boolean).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#getOperations().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\SupportedMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Hex#hexToBytes(String).mjava,0,0,4,1,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingStreamingConnection#run().mjava,0,0,7,0,2,0.22727273404598236,2,1,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onJoinCluster(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#names(Collection[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#intersects(Interval[C,D],Interval[C,D]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#DelayedValue(List[Term]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSerializedCachePath(String,String,CacheService.CacheType,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#doInsert(ConsistencyLevel,List[#-extends-IMutation],boolean).mjava,0,0,10,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserialize(DataInput,ColumnFamily.Factory,ColumnSerializer.Flag,int).mjava,0,0,14,4,3,0.0,4,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#estimateKeys().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getPartitionKeys(String,Job).mjava,0,0,5,2,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#live().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#close().mjava,0,0,4,0,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#copy().mjava,0,1,0,0,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#resolveAgainst(int,Column,Allocator).mjava,0,0,3,3,2,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isAutoSnapshot().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#testMetadataNotDurable(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],CFMetaData...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#DeletionInfo(DeletionTime,RangeTombstoneList).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RetriedSliceFromReadCommand#getOriginalRequestedCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#tombstoneTracker().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#StatusChange(Status,InetSocketAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getAncestors().mjava,0,3,3,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\IDiskAtomFilter.Serializer#deserialize(DataInput,int,AbstractType[#]).mjava,0,0,3,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#toString().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat#checkOutputSpecs(JobContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announce(RowMutation).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#newProposal(ByteBuffer,UUID,ColumnFamily).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DoubleType#DoubleType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#fromCode(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#calculateStreamAndFetchRanges(Collection[Range[Token]],Collection[Range[Token]]).mjava,0,0,9,2,4,0.10810811072587967,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#equals(Object).mjava,0,0,7,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Value#Value(Map[ByteBuffer,ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#exec(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.BoundColumn#BoundColumn(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#isCompatible().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getColumnFamilyType(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#LongType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#ageSortedSSTables(Collection[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#DeletedColumn(ByteBuffer,int,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onRemove(InetAddress).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplitController#shouldPurge(DecoratedKey,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#unwrap().mjava,0,0,7,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#memorySize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#getTotalCompressedBytesRead().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PermissionDetails#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#get().mjava,0,0,9,0,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#getData().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#unmarkCompacting(Iterable[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#NamesQueryPager(SliceByNamesReadCommand,ConsistencyLevel,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\AsyncOneResponse#response(MessageIn[T]).mjava,0,0,1,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheSizeInMB().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculateAlwaysExecutor#SpeculateAlwaysExecutor(ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress],List[InetAddress]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getMovingEndpoints().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onInitializationComplete().mjava,0,0,8,0,1,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesRemaining().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.OneShotRenewer#maybeRenew(CounterColumn).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#hasMoreSlice().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(List[AbstractType[#]]).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamRequest#StreamRequest(String,Collection[Range[Token]],Collection[String]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnFamily(ColumnFamily,boolean,boolean,long).mjava,0,0,10,4,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addColumn(ColumnFamily,ByteBuffer,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#TreeRangeIterator(MerkleTree).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BytesSerializer#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getCF(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#truncationAsMapEntry(ColumnFamilyStore,long,ReplayPosition).mjava,0,0,7,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BooleanSerializer#serializedSize(Boolean,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#maybeIncrementallyBackup(SSTableReader).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#execute_cql_query(ByteBuffer,Compression).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\FloatSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getTotalBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#serializedSize(ValidationRequest,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#unsafeAssassinateEndpoint(String).mjava,0,0,26,1,4,0.11764705926179886,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#componentsFor(Descriptor).mjava,0,0,6,1,1,0.043478261679410934,4,2,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#serializedSize(Column,TypeSizes).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#total(ByteBuffer).mjava,0,0,4,1,2,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getRandomToken().mjava,0,0,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Murmur3BloomFilter#serializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#TypeParser(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutationVerbHandler#doVerb(MessageIn[CounterMutation],int).mjava,0,0,10,2,3,0.4000000059604645,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#writeRow(SSTableWriter,DataInput,ColumnFamilyStore).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#stopSession().mjava,0,24,13,0,6,0.03999999910593033,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeAtom(OnDiskAtom,CFMetaData).mjava,0,0,8,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTrickleFsync().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getView().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onRestart(InetAddress,EndpointState).mjava,0,0,2,2,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isSetKeyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#execute(QueryState,QueryOptions).mjava,0,0,19,2,10,0.054054055362939835,16,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#stop().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#CreateIndexStatement(String,String,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#appendTOC(Descriptor,Collection[Component]).mjava,0,0,3,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,Row).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#getClientState().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#intersecting(Collection[SSTableReader],Range[Token]).mjava,0,0,4,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#registerVerbHandlers(Verb,IVerbHandler).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getPropertyBoolean(String,Boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.Serializer#deserialize(DataInput,int,Comparator[ByteBuffer]).mjava,0,0,2,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#diffrence().mjava,0,1,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractRangeCommand#getKeyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#getData().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#isEmpty().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getValueValidator(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#write(byte[],int,int).mjava,0,0,0,3,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#position().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#deserialize(DataInput).mjava,0,0,11,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#fromSelectors(CFDefinition,List[RawSelector]).mjava,0,0,12,2,10,0.0,3,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getExpectedCompactedFileSize(Iterable[SSTableReader],OperationType).mjava,0,0,5,2,3,0.06666667014360428,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#isSetConsistencyLevel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addColumnAlias(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUnsignedShort().mjava,0,0,2,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#shouldRetry().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#serializedSchema(String).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getDirectoryForNewSSTables(long).mjava,0,0,9,1,1,0.2142857164144516,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeList(Tree).mjava,0,0,53,1,18,0.06741572916507721,224,14,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\TreeResponse#TreeResponse(InetAddress,MerkleTree).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#getPageSize().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#getPath().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc#RepairJobDesc(UUID,String,String,Range[Token]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb,T,IVersionedSerializer[T],Map[String,byte[]]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Setter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#sstableLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation#requiresRead().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#partitionKeyDef(ByteBuffer,AbstractType[#],Integer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#checkForWriterException().mjava,0,2,1,0,0,0.1111111119389534,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addTriggerDefinition(TriggerDefinition).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(Map[Byte,AbstractType[#]]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.StaticRowIterator#maybeInit().mjava,0,2,22,0,4,0.145454540848732,40,7,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#PropertyFileSnitch().mjava,0,0,5,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Marker#bind(List[ByteBuffer]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#ArrayBackedSortedColumns(CFMetaData,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#localIds().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#compareTo(CounterId).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile#CompressedPoolingSegmentedFile(String,CompressionMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#add(ByteBuffer).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\KSPropDefs#getReplicationOptions().mjava,0,6,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheEntries().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#isLive(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DigestMismatchException#DigestMismatchException(DecoratedKey,ByteBuffer,ByteBuffer).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedConfigurableStage(Stage,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readString(ChannelBuffer,int).mjava,0,0,5,2,1,0.06666667014360428,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#DataType(int,AbstractType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#releaseVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#defaultTimeToLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rack(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#getStage().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#complete().mjava,0,1,9,0,2,0.0625,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addParameterColumns(ColumnFamily,Map[String,String]).mjava,0,0,10,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamException#StreamException(StreamState,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#validateOptions().mjava,0,0,6,0,2,0.2857142984867096,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#updateSnitch(String,Boolean,Integer,Integer,Double).mjava,0,0,11,5,2,0.07692307978868484,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#setCQLVersion(String).mjava,0,0,8,1,4,0.07692307978868484,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeShowSchema(Tree).mjava,0,0,14,1,3,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#maybeCompleted().mjava,0,3,5,0,1,0.0625,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#decodeCredentials(byte[]).mjava,0,0,5,1,4,0.0,24,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#localPager(Pageable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getSplits(String,String,Range[Token],int,CFMetaData).mjava,0,0,11,5,8,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeInProgress(Collection[ProgressInfo]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeAuthenticator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#removeTruncationRecord(UUID).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheEntries().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#queryNextPage(int,ConsistencyLevel,boolean).mjava,0,0,5,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#close().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLocalTokens().mjava,0,6,2,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#createMessage().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#requireNetworkTopologyStrategy(String).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator#[In,Out]_get(List[#-extends-Iterator[In]],Comparator[In],Reducer[In,Out]).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#setToRowStart(RowIndexEntry,FileDataInput).mjava,0,0,5,2,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#loadBloomFilter().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#timestampReceiver(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onCreateColumnFamily(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexType().mjava,0,19,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Literal#validateAssignableTo(ColumnSpecification).mjava,0,0,6,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns.SCFilter#SCFilter(ByteBuffer,IDiskAtomFilter).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getMaximumThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#connect().mjava,0,1,4,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readBoolean().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getKSMetaData(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validate(ClientState).mjava,0,0,10,1,2,0.043478261679410934,192,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.Serializer#serializedSize(NamesQueryFilter,int).mjava,0,0,5,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#getCurrentStreams().mjava,0,0,7,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serialize(Hashable,DataOutput,int).mjava,0,0,6,3,0,0.0,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#setTimestamp(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#convict(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DecimalType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#prepare(String,ThriftClientState).mjava,0,0,8,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#iterator(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#renewMemtable().mjava,0,1,3,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getPrepared(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#outValue(VersionedValue,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#AlterKeyspaceStatement(String,KSPropDefs).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#isSuper().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#needsExtraQuery(ByteBuffer,ColumnFamily).mjava,0,0,4,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#dropFromSchema(long).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#open(String,CompressionMetadata).mjava,0,0,0,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#intersection(List[InetAddress],List[InetAddress]).mjava,0,0,1,2,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#toString().mjava,0,0,8,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#deserialize(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getNextBackgroundSSTables(int).mjava,0,0,19,1,6,0.1304347813129425,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceRepairRange(String,String,String,boolean,boolean,String...).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,10,2,5,0.06666667014360428,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#register().mjava,0,1,2,0,1,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyCounterSuperColumns(Collection[org.apache.cassandra.db.Column],boolean,long).mjava,0,0,15,3,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,ConsistencyLevel).mjava,0,0,2,2,2,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Truncation#Truncation(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(Column).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons.LexicographicalComparerHolder#getBestComparer().mjava,0,1,3,0,2,0.1818181872367859,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#populateIoCacheOnFlush(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#received(UUID,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#compress(byte[],int,int,ICompressor.WrappedArray,int).mjava,0,0,8,5,3,0.043478261679410934,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#baseFilename().mjava,0,3,12,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#load(Collection[KSMetaData]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#ThreadPoolProxyMBeanIterator(MBeanServerConnection).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getMemtableFlushPeriod().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#clear(long).mjava,0,0,2,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#inOrderTester().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#getConsistencyLevel().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableThreadSafe().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#loadSummary(SSTableReader,SegmentedFile.Builder,SegmentedFile.Builder,CFMetaData).mjava,0,0,20,4,2,0.029411764815449715,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#compare(ByteBuffer,ByteBuffer).mjava,0,0,12,2,8,0.38235294818878174,120,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#fromType(AbstractType).mjava,0,0,9,1,2,0.09375,24,6,4,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getExpireTimeForEndpoint(InetAddress).mjava,0,0,2,1,1,5.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#prepareRowMutations(String,ThriftClientState,Long,List[ByteBuffer]).mjava,0,0,15,4,3,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#setRowCacheCapacityInMB(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#IndexSummaryBuilder(long,int).mjava,0,0,2,2,2,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#indexExpressionsToString(List[IndexExpression]).mjava,0,0,5,1,2,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#asMap().mjava,0,1,15,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#getKeySpaceDef(String,List[KsDef]).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#isIndexBuilt(String,String).mjava,0,0,9,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_serialize(T,IVersionedSerializer[T],int).mjava,0,0,8,3,2,0.0625,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#showColumnFamily(PrintStream,CfDef).mjava,0,0,71,2,6,0.0,864,11,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\PoolingSegmentedFile#PoolingSegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#blockFor(Keyspace).mjava,0,0,10,1,2,0.0,22,1,23,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#toSchema(RowMutation,String,long).mjava,0,0,21,3,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#forThrift(int,List[ColumnSpecification]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#serialize(DataOutputStream,int).mjava,0,0,15,2,1,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#updateScores().mjava,0,0,30,0,6,0.2432432472705841,48,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object,Object).mjava,0,0,2,3,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DiscarderByKey#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex.IndexedEntry#IndexedEntry(DecoratedKey,ByteBuffer,long,ByteBuffer,ColumnNameBuilder).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#deserialize(DataInputStream,ColumnFamilyStore).mjava,0,0,9,2,4,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.PrecisionTime#PrecisionTime(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSWriteError#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getOnDiskIterator(DataInput,int,Descriptor.Version).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#forceConviction(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.ResponseHandler#messageReceived(ChannelHandlerContext,MessageEvent).mjava,0,0,3,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#CreateKeyspaceStatement(String,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Mx4jTool#getAddress().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#forceBlockingFlush(String).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#QueuedMessage(MessageOut[#],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#networkVersion().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat#getOutputCommitter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#fromString(String).mjava,0,0,8,1,2,0.0833333358168602,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#clearCallbacksUnsafe().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#maxKeyBound().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ChecksummedOutputStream#write(byte[],int,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CallbackInfo#CallbackInfo(InetAddress,IAsyncCallback,MessageOut[#],IVersionedSerializer[#]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getName().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters.Serializer#serialize(CompressionParameters,DataOutput,int).mjava,0,0,12,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#equals(Object).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#MemoryInputStream(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.WritetimeOrTTLSelector#WritetimeOrTTLSelector(String,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#toTokenBounds().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#describe_ring(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#getBytes(long,byte[],int,int).mjava,0,0,3,4,1,0.0,16,4,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#getUnsignedShort(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputCompressionChunkLength(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer.SingleDatacenterFilter#shouldInclude(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#toString(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#convict(InetAddress,double).mjava,0,0,3,2,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getString(ByteBuffer).mjava,0,0,13,1,6,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter.BufferedFileWriterMark#BufferedFileWriterMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#serializedSize(StreamSummary,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#gossiperStarting().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#replaceFlushed(Memtable,SSTableReader).mjava,0,0,14,2,2,0.06896551698446274,12,4,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#onDiskIterator(DataInput,int,ColumnSerializer.Flag,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serializedSize(Truncation,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#serializedSize(TypeSizes).mjava,0,0,6,1,5,0.1666666716337204,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#manages(String).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#forColumns(List[CFDefinition.Name]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#AlterTableStatement(String,OperationType,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getToken(ByteBuffer).mjava,0,0,5,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactionSummary().mjava,0,0,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#diff(Column).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Request#setTracingRequested().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createWithMaximumPoolSize(String,int,int,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#cqlQueryFromTuple(Map[String,ByteBuffer],Tuple,int).mjava,0,0,7,3,2,0.0,5,4,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#deserialize(DataInput,int).mjava,0,0,10,2,7,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#TraceSessionWrapper(Callable[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isBootstrapMode().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#[T]_submit(Callable[T]).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#validateFields(CFMetaData).mjava,0,0,0,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#serialize(ValidationRequest,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#isAvailable().mjava,0,1,2,0,0,0.0,1,0,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flushData().mjava,0,0,9,0,1,0.27586206793785095,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#jnaMemoryLockable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#isKnownEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#newNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#getValues().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#state().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSError#findNested(Throwable).mjava,0,0,1,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#setPartitionFilter(Expression).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropUserStatement#execute(ClientState).mjava,0,0,5,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isClean().mjava,0,1,3,0,0,0.3333333432674408,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#convertValueByFunction(Tree,CfDef,ByteBuffer,boolean).mjava,0,0,17,4,5,0.02380952425301075,18,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeRecvBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\EmptySerializer#serialize(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#clearSnapshot(String).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#serialize(IRowCacheEntry,DataOutput).mjava,0,0,3,2,1,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#deserializeTokens(Collection[String]).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthorizer().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper#getRandomTokens(TokenMetadata,int).mjava,0,0,5,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#FlushRunnable(CountDownLatch,Future[ReplayPosition]).mjava,0,0,3,2,1,0.3571428656578064,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#makeOffsets(int).mjava,0,0,1,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidateHelper(Hashable,Token,Token).mjava,0,0,4,3,1,0.30000001192092896,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getLiveMembers().mjava,0,9,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#maxCompactionThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#parseLine(String).mjava,0,0,54,1,17,0.00909090880304575,590,14,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#MapSerializer(TypeSerializer[K],TypeSerializer[V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#hashCode().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#open(String,CompressionMetadata,CompressedPoolingSegmentedFile).mjava,0,0,0,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#memtableFlushPeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnRange().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#SimpleSliceReader(SSTableReader,RowIndexEntry,FileDataInput,ByteBuffer).mjava,0,0,13,4,2,0.03125,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#keyspace().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCasContentionTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#merge(ByteBuffer,ByteBuffer,Allocator).mjava,0,0,61,3,14,0.08771929889917374,196,17,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexInterval().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#setTupleValue(Tuple,int,Object).mjava,0,0,10,3,0,0.0,16,4,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#newSystemMetadata(String,String,String,AbstractType[#],AbstractType[#]).mjava,0,0,4,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#evaluateFileStatements(BufferedReader).mjava,0,0,9,1,3,0.25925925374031067,33,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile#createReader(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#selectUser(String).mjava,0,0,4,1,1,0.0625,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#fromInt(int).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSliceFilter(CFMetaData,SliceQueryFilter).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isSufficientLiveNodes(Keyspace,Iterable[InetAddress]).mjava,0,0,9,2,0,0.0555555559694767,11,2,13,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCoreCompactorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#createMessageForRetry(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#prepare().mjava,0,0,85,0,26,0.18473894894123077,-1944674304,53,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#hasAccess(String,Permission,DataResource).mjava,0,0,11,3,0,0.0,12,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#serialize(Inner,DataOutput,int).mjava,0,0,6,3,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getRecentlyDroppedMessages().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\StreamingMetrics#get(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#create(String,ByteBuffer,String,long,IDiskAtomFilter).mjava,0,0,0,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#Term(String,TermType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#setByte(long,byte).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#setUDFContextSignature(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#setKeyspaceDefinition(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#removeNotificationListener(NotificationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addDefinition(ColumnIdentifier,CQL3Type).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#sameDCPredicateFor(String).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(int,String,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator#maybeIncreaseRowCounter(Pair[ByteBuffer,SortedMap[ByteBuffer,Column]]).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#isEmpty().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#WorkerProcess(TTransport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceRepairRangeAsync(PrintStream,String,boolean,boolean,String,String,String...).mjava,0,0,3,7,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#iterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupInfo#CleanupInfo(SSTableReader,SSTableScanner).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#writeRow(DecoratedKey,ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#seekToStart().mjava,0,2,17,0,4,0.05882352963089943,12,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#setCompressor(FrameCompressor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#getEndpointToRangesMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRangeToRpcaddressMap(String).mjava,0,0,10,1,2,14.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#resetBuffer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#totalSize().mjava,0,1,0,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performAllSSTableOperation(ColumnFamilyStore,AllSSTablesOperation).mjava,0,0,6,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeFromRelocating(Token,InetAddress).mjava,0,0,8,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeleted(ColumnFamily,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setCoreValidationThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#serializedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#getEntryIterator(RowPosition,RowPosition).mjava,0,0,11,2,1,0.09090909361839294,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#makeTokenString(Collection[Token]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#addColumnOrSuperColumn(RowMutation,String,ColumnOrSuperColumn).mjava,0,0,6,3,0,0.0416666679084301,8,3,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#create(long,Allocator).mjava,0,0,8,2,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#close().mjava,0,3,6,0,0,0.0555555559694767,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputColumnFamily(Configuration).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#nonCompactingSStables().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#gossiperStarting().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#isStale(IndexedEntry,ColumnFamily,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#afterAppend(DecoratedKey,long,RowIndexEntry).mjava,0,0,4,3,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#escapeSQLString(String).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyStart().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#containsPreviousLast(Row).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#BlacklistedDirectories().mjava,0,0,3,0,1,0.1818181872367859,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#StreamResultFuture(UUID,String,Collection[StreamSession]).mjava,0,0,5,3,0,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#maybeScheduleSchemaPull(UUID,InetAddress).mjava,0,0,14,2,3,0.17391304671764374,4,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager.StandardUpdater#insert(Column).mjava,0,0,5,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#headerLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepare().mjava,0,0,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#createReader(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K,V]_create(BiMultiValMap[K,V],Comparator[K],Comparator[V]).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#await().mjava,0,0,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#setIndexRemoved(Set[String]).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInitialTokens().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getDroppedMessages().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#discardFirst(ColumnFamily).mjava,0,0,12,1,5,0.0555555559694767,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#mean().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#addColumnFamily(CFMetaData).mjava,0,0,15,1,1,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#close().mjava,0,2,2,0,0,0.5,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse().mjava,0,3,7,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#iterator(ColumnSlice[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#countCQL3Rows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#Builder().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#AbstractSSTableSimpleWriter(File,CFMetaData,IPartitioner).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#AbstractThreadUnsafeSortedColumns(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\Progressable#Progressable(org.apache.hadoop.util.Progressable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#hasUnreclaimedSpace().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\PagingState#serializedSize().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Prepender#Prepender(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#SizeTieredCompactionStrategyOptions(Map[String,String]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.LocalRangeSliceRunnable#LocalRangeSliceRunnable(AbstractRangeCommand,ReadCallback[RangeSliceReply,Iterable[Row]]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#available().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentRangeLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Addition#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#addCmdHelp(StringBuilder,NodeToolHelp.NodeToolCommand).mjava,0,0,7,2,0,0.1666666716337204,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#readFully(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\LongSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#getExtraFilter(DecoratedKey,ColumnFamily).mjava,0,0,6,2,1,0.692307710647583,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#seekInternal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getPreferredIP(InetAddress).mjava,0,0,8,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message#setStreamId(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#markDeltaToBeCleared(ByteBuffer).mjava,0,0,6,1,3,0.10000000149011612,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BooleanType#fromString(String).mjava,0,0,8,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#memorySize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#getReturnType(String,String,String).mjava,0,0,6,3,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#replace(Column,Column).mjava,0,0,6,2,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#validateComparator(int,ByteBuffer).mjava,0,0,7,2,3,0.03703703731298447,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Relation#getEntity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#getParser(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.Reducer#getReduced().mjava,0,0,12,0,1,0.095238097012043,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#err(Exception,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#isEmpty().mjava,0,6,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#initialCompressedBufferLength(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selectable.WritetimeOrTTL#WritetimeOrTTL(ColumnIdentifier,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#incrPastWindow(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#contains(T).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#updateLiveRatio().mjava,0,1,21,0,5,0.09259258955717087,32,5,5,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#serialize(Object,DataOutput,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRangesForEndpoint(String,InetAddress).mjava,0,0,10,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#writeLong(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\TruncateException#TruncateException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#toString().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#onDiskIterator(DataInput,int,ColumnSerializer.Flag,int,Descriptor.Version).mjava,0,0,4,5,1,0.0,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#comparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printProxyHistograms(PrintStream).mjava,0,0,10,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#openSSTables(Map[InetAddress,Collection[Range[Token]]]).mjava,0,0,36,1,10,0.1071428582072258,128,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#findDesc(int,Collection[SSTableReader]).mjava,0,0,0,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markObsolete(Collection[SSTableReader],OperationType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#scrub(boolean,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#createAndRegister(UUID,String,Collection[StreamSession]).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getPaxosParticipants(String,ByteBuffer,ConsistencyLevel).mjava,0,0,21,3,7,0.11764705926179886,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#getHelper(Hashable,Token,Token,byte,Token).mjava,0,0,5,5,1,0.4000000059604645,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#getCmdLineOptions().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#readRequiredRows(List[ByteBuffer],ColumnNameBuilder,boolean,ConsistencyLevel).mjava,0,0,3,4,1,0.07692307978868484,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\Int32Serializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#evictFromMembership(InetAddress).mjava,0,0,6,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#[T]_newTaskFor(Runnable,T).mjava,0,0,2,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#rescheduleFailedTasks().mjava,0,3,2,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getDroppedMessages().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputWhereClauses(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#deliverHints(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.SequentialOrder#SequentialOrder(RequestCoordinator[R]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#getWriteChannel().mjava,0,2,3,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\Ec2Snitch#Ec2Snitch().mjava,0,0,10,0,3,0.1818181872367859,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#addRow(List[ByteBuffer]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#bytesCompare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#submitRepairSession(Range[Token],String,boolean,boolean,String...).mjava,0,0,2,5,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#discardLast(ColumnFamily).mjava,0,0,9,1,4,0.3076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setReadRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#allocate(int,int,Allocator).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getColumnsString(Iterable[Column]).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#SliceQueryFilter(ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getTopology().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitMaximal(ColumnFamilyStore,int).mjava,0,0,4,2,2,0.23076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#optsWithRF(Integer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getStrategyClass().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#getByteBuffer().mjava,0,1,4,0,0,0.2142857164144516,9,1,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#putIfAbsent(K,V).mjava,0,0,3,2,2,0.2222222238779068,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#serialize(List[Pair[ByteBuffer,Column]]).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#SliceByNamesReadCommand(String,ByteBuffer,String,long,NamesQueryFilter).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#markDead(InetAddress,EndpointState).mjava,0,0,10,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#prepare().mjava,0,0,11,0,4,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamState#hasFailedSession().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateSchemaVersion(UUID).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#SSTableImport().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#finalizeMetadata(String,double).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#getIndexCfs().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#skipMetadata().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#getKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#length().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateColumns(ColumnFamily,List[#-extends-Iterator[Column]],int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Deleter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,8,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#invalidate().mjava,0,1,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#addEndpoint(InetAddress).mjava,0,0,17,1,4,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.Name#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#toThrift().mjava,0,1,10,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPreheatKeyCache().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\GetVersion#main(String[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#isReadyToDieAt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#getColumns().mjava,0,1,10,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#deleteOldCacheFiles().mjava,0,0,17,0,1,0.0,10,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropUserStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForCas().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#await().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#parseType(String).mjava,0,0,2,1,0,0.0625,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#move(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#intersectionWith(Range[T]).mjava,0,0,18,1,2,0.37037035822868347,48,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#uncompressedLength().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#Relation(ColumnIdentifier,Type,Term.Raw,List[Term.Raw],boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getPendingTasks().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#applyUnsafe().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K-extends-Comparable[K],V-extends-Comparable[V]]_create(BiMultiValMap[K,V]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#saveTruncationRecord(ColumnFamilyStore,long,ReplayPosition).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#AbstractTextSerializer(Charset).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#handleNotification(INotification,Object).mjava,0,0,2,2,2,0.0,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#internodeCompression().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Direction#extractFromVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compose(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compareTimestampBytes(ByteBuffer,ByteBuffer).mjava,0,0,18,2,3,0.0,128,7,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#size().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(byte[],ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#midpoint(Token,Token).mjava,0,0,15,2,4,0.2631579041481018,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#gcBefore(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaximalTask(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#SetterByIndex(ColumnIdentifier,Term,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#columnValueAsBytes(ByteBuffer,String,String).mjava,0,0,9,3,4,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap.Builder#groups().mjava,0,2,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_range_slices(ColumnParent,SlicePredicate,KeyRange,ConsistencyLevel).mjava,0,0,38,4,14,0.0,4,2,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#clearSnapshot(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#handleGroup(Selection,Selection.ResultSetBuilder,ByteBuffer[],ColumnGroupMap).mjava,0,0,11,4,2,0.06451612710952759,13,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#toString().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#reset().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#replace(K,V,V).mjava,0,0,9,3,4,0.23999999463558197,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getMinimumToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#columnToTuple(Column,CfDef,AbstractType).mjava,0,0,21,3,3,0.125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#deserialize(DataInput,int,Comparator[ByteBuffer]).mjava,0,0,7,3,6,0.2083333283662796,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ColumnFamilyMetrics.ColumnFamilyMetricNameFactory#ColumnFamilyMetricNameFactory(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#passiveAnnounce(UUID).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#serializedSize(SnapshotCommand,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#isMarkedSuspect().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Value#fromSerialized(ByteBuffer,SetType).mjava,0,0,5,2,2,0.1428571492433548,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ReadyMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#makeIndexColumnNameBuilder(ByteBuffer,ByteBuffer).mjava,0,0,8,2,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadRepairVerbHandler#doVerb(MessageIn[RowMutation],int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#movedNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\EmptyType#getString(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#maxRemaining().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#deleteFromSchema(RowMutation,String,long).mjava,0,0,10,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeys().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadHostIds().mjava,0,1,5,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#resolve().mjava,0,0,9,0,5,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#contains(Range[T]).mjava,0,0,7,1,2,0.25,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#reBuffer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#setCurrentSocket(SocketAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotWithoutFlush(String).mjava,0,0,10,1,2,0.043478261679410934,4,2,15,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#IndexedBlockFetcher(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#contents().mjava,0,0,10,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#OutboundTcpConnectionPool(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#setIfNotExistCondition().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.ConnectionTracker#closeAll().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#getUpdateTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#filterEmpty(List[Row]).mjava,0,0,4,1,1,0.0,3,2,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#IncludingExcludingBounds(T,T,IPartitioner).mjava,0,0,2,3,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#validateCollectionMember(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(AbstractType[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\Int32Serializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#getCQLSupportedVersion().mjava,0,2,0,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#read().mjava,0,0,2,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serializedSize(Hashable,int).mjava,0,0,3,2,0,0.0,4,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Value#Value(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#stringForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.1818181872367859,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#isAlwaysEmpty(AbstractType[#],boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getBoundsTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#nextId().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getCommand().mjava,0,1,4,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(Token,Token,Iterable[SSTableReader]).mjava,0,0,3,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createWithFixedPoolSize(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serialize(ColumnFamily,DataOutput,int).mjava,0,0,13,3,3,0.0,4,2,24,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#getEpSnitchProxy(MBeanServerConnection).mjava,0,0,1,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getMaximumValidatorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getVersion().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#getDirectories().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#runMayThrow().mjava,0,0,29,0,2,0.1041666641831398,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#getByteBuffer(AbstractType[#],List[ByteBuffer]).mjava,0,0,4,2,0,0.07692307978868484,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getCommandDroppedTasks().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets#Sets().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onError(Throwable).mjava,0,0,5,1,0,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#BytesToken(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserializeCfId(DataInput,int).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#stopNativeTransport().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#isPrefix(ByteBuffer,ByteBuffer).mjava,0,0,8,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#componentCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#snapshot(String,String).mjava,0,0,3,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#makeIndexColumnName(ByteBuffer,Column).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getFilePointer().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getCurrentValue().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#stop(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getNextBackgroundTask(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#LazilyCompactedRow(CompactionController,List[#-extends-OnDiskAtomIterator]).mjava,0,0,9,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#prepare(CFDefinition.Name).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\transport\FramedTransportFactory#getTransport(TTransport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#concatWithIndexes().mjava,0,11,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processBatch(BatchStatement,ConsistencyLevel,QueryState,List[List[ByteBuffer]]).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#rename(Descriptor,Descriptor,Set[Component]).mjava,0,1,11,3,0,0.25,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#mayNeedPaging(Pageable,int).mjava,0,0,2,2,2,0.05263157933950424,4,2,13,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#instance().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#compact().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#toSchema(long).mjava,0,0,12,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.ParallelOrder#completed(R).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#execute(QueryState).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#maxTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getUnreachableNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getTypeParameters().mjava,0,5,9,0,2,0.03703703731298447,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#growToFree(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#processStatement(CQLStatement,ThriftClientState,List[ByteBuffer]).mjava,0,0,187,3,46,0.0535714291036129,612,26,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#UUIDGen().mjava,0,0,0,0,0,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\FloatSerializer#serialize(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#encodeBody(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOptions(Configuration,Set[String]).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addColumn(ColumnFamily,ByteBuffer,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#setupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ThrottledReader#reBuffer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#tryMlockall().mjava,0,1,12,0,0,0.07692307978868484,8,3,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliSessionState#inFileMode().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLocalPrimaryRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#StreamReceiveTask(StreamSession,UUID,int,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#inputStream(ByteBuffer).mjava,0,0,8,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#create(String,String).mjava,0,0,2,2,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogLocation().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#serialize(SSTableMetadata,Set[Integer],DataOutput).mjava,0,0,15,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#await(long,TimeUnit).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSliceFilter(CFMetaData,ByteBuffer,ByteBuffer,boolean).mjava,0,0,3,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheKeysToSave().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#isConnected().mjava,0,26,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#createReplicationStrategy(KSMetaData).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#put(Thread,long).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#testMetadata(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],CFMetaData...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#serializedSize(WriteResponse,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition.RowPositionSerializer#deserialize(DataInput).mjava,0,0,8,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readDouble().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getEndToken().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#unregister(AbstractReplicationStrategy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#createConnection(Configuration,String,Integer).mjava,0,0,2,3,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#CompressedSegmentedFile(String,CompressionMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#QueryOptions(ConsistencyLevel,List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentSSTablesPerReadHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#execute(QueryState).mjava,0,0,21,1,3,0.0,96,7,29,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#getMutations(String,ThriftClientState,List[ByteBuffer]).mjava,0,0,2,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#CounterUpdateColumn(ByteBuffer,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLifetimeReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isNameValid(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInterruptedException#CompactionInterruptedException(CompactionInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#validateLogin().mjava,0,6,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifyCounter(CounterColumn).mjava,0,0,1,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputPartitioner(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#setStoreLocation(String,Job).mjava,0,0,15,2,0,0.09090909361839294,128,7,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getToken(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#isDelta().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.NativeDBTypeSizes#sizeof(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeCLIStatement(String).mjava,0,0,40,1,1,0.009345794096589088,95,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#[C,D,I-extends-Interval[C,D]]_emptyTree().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#close().mjava,0,0,4,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputPartitioner(Configuration).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMoving(InetAddress).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#scrubOne(ColumnFamilyStore,SSTableReader).mjava,0,0,15,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceCompaction(String,String...).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#rowHeaderSize(ByteBuffer,DeletionInfo).mjava,0,0,4,2,2,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcPort().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover(File...).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addTombstone(ByteBuffer,int,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#ExpiringColumn(ByteBuffer,ByteBuffer,long,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#findInnermostThrowable(Throwable).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#create(Map[String,String]).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#isThriftServerRunning().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#getTracker().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#updateIsDelta().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#submitHint(HintRunnable).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStores().mjava,0,14,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalToken#LocalToken(AbstractType[#],ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#add(long).mjava,0,0,2,1,1,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#makeClockSeqAndNode().mjava,0,1,3,0,2,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#toRowBounds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BigIntegerToken#compareTo(Token[BigInteger]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#updateChecksumInt(Checksum,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#serializedSize(GossipDigestAck2,int).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#getResultMetadata().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.PipelineFactory#PipelineFactory(Server).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#update(ByteBuffer,Column).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Bound#reverse(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#isLive(Column,DeletionInfo.InOrderTester,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#dropFromSchema(long).mjava,0,0,14,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#buildIndexComparator(CFMetaData,ColumnDefinition).mjava,0,0,4,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#SSTableDeletingTask(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#setCallbackForTests(int,CallbackInfo).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#clusteringKeyDef(ByteBuffer,AbstractType[#],Integer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#bindAndGet(List[ByteBuffer]).mjava,0,0,5,1,2,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractRangeCommand#AbstractRangeCommand(String,String,long,AbstractBounds[RowPosition],IDiskAtomFilter,List[IndexExpression]).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#forceUserDefinedCompaction(String).mjava,0,0,16,1,7,0.09090909361839294,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLiveNaturalEndpoints(Keyspace,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#tryCloseFD(int).mjava,0,0,4,1,0,0.05882352963089943,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#invalidateCachedTokenEndpointValues().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#getChunksForSections(Collection[Pair[Long,Long]]).mjava,0,0,10,1,6,0.07999999821186066,2,1,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getColumnDefs().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRingDelay().mjava,0,1,3,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#prepare(CFDefinition.Name).mjava,0,0,12,1,4,0.0,22,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#maxQueried(ReadCommand).mjava,0,0,2,1,2,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getEndpointInfo(InetAddress).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession.SSTableStreamingSections#SSTableStreamingSections(SSTableReader,List[Pair[Long,Long]],long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getCurrentGenerationNumber().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#computeNext().mjava,0,0,7,0,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#onFailure(Throwable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#copyTo(ContextState).mjava,0,0,7,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#rethrow(RequestExecutionException).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_deoverlap(List[Range[T]]).mjava,0,0,16,1,5,0.19354838132858276,20,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStateForEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#isWrapAround().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#compareId(ByteBuffer,int,ByteBuffer,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepare(ColumnSpecification[]).mjava,0,0,21,1,6,0.1818181872367859,9,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo.Direction#Direction(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#UpdateStatement(String,String,String,List[Term],List[Term],List[Term],Attributes).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#vintEncode(long).mjava,0,0,3,1,4,0.03703703731298447,16,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitUninterruptibly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printRemovalStatus(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#loadFromKeyspace().mjava,0,1,7,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#deserialize(DataInput,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#serialize(Commit,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputRpcPort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#DataResource(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getSliceCommands(List[ByteBuffer],int,long).mjava,0,0,10,3,3,0.4000000059604645,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getMinTimestamp().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#onSuccess(StreamState).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#DeletionInfo(ByteBuffer,ByteBuffer,Comparator[ByteBuffer],long,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#getTotalSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil.BufferBuilder#add(ChannelBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getGcGraceSeconds().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#setColumnsReversed(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#Term(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#merge(ColumnFamily,List[CloseableIterator[Column]],SecondaryIndexManager.Updater).mjava,0,0,16,3,5,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthSuccess#getToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#create(int,long,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#addCounter(String,ByteBuffer,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamSummaryCompositeData#toCompositeData(StreamSummary).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#asIFilter(SlicePredicate,CFMetaData,ByteBuffer).mjava,0,0,5,3,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#NodeCmd(NodeProbe).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesToReceive().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getIndex(int).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#close().mjava,0,0,3,0,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addKeyAliases(List[ColumnIdentifier]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#isPure().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#addProperty(String,Map[String,String]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#start().mjava,0,0,3,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.Function#getFunctionNames().mjava,0,3,6,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#get(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printIsNativeTransportRunning(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#getDatacenter(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#getPrefetchedList(ByteBuffer,ByteBuffer).mjava,0,0,4,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getReplicateOnWrite().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#handleModernVersion().mjava,0,1,20,0,3,0.06451612710952759,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#markCompacting(Iterable[SSTableReader]).mjava,0,0,8,1,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#toString(List[T]).mjava,0,0,4,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofWithShortLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#validateFields(CFMetaData).mjava,0,0,3,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLiveNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListUsersStatement#execute(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getPendingMessages().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#abortTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#ParallelCompactionIterable(OperationType,List[ICompactionScanner],CompactionController).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,4,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#mutateLevel(Pair[SSTableMetadata,Set[Integer]],Descriptor,String,int).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#isRunning().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeInternal(QueryState).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#load(CFMetaData).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\TypeCast#toString().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#applyStateLocally(Map[InetAddress,EndpointState]).mjava,0,0,30,1,7,1.2142857313156128,150,12,40,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#quarantineEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#serialize(KeyCacheKey,DataOutput).mjava,0,0,5,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#getCmdLineOptions().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter.GroupByPrefix#count(Column,DeletionInfo.InOrderTester).mjava,0,0,4,2,2,0.0,28,6,4,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#recycleSegment(CommitLogSegment).mjava,0,0,10,1,1,0.04545454680919647,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serializedSize(ReadCommand,ByteBuffer,int).mjava,0,0,9,3,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateResponse#TruncateResponse(String,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#addProperty(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#serialize(DeletionTime,DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#fromSchema(Row,Row).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#toTokenBounds().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#validate(ClientState).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#interruptCompactionFor(Iterable[CFMetaData],boolean).mjava,0,0,6,2,1,0.1818181872367859,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#count(Column,DeletionInfo.InOrderTester).mjava,0,0,1,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#complete().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#SchemaChange(Change,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#scrub().mjava,0,2,77,0,16,0.029069768264889717,110616,23,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#createMessage(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#loadCql3DefsUnchecked(Cassandra.Client,KsDef).mjava,0,0,42,2,13,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performMaximal(ColumnFamilyStore).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompactionThresholds(int,int).mjava,0,0,4,2,0,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#getLengthInBytes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#reconcile(Column).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#unreferenceSSTables().mjava,0,1,10,0,2,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#setStart(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#run().mjava,0,0,7,0,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#attachSocket(InetAddress,Socket,boolean,int).mjava,0,0,3,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\SupportedMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCollection().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getTruncationRecords().mjava,0,2,12,0,5,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getBootstrapState().mjava,0,2,8,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\FloatSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#deserializeEvent(ChannelBuffer).mjava,0,0,3,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#signalCloseDone().mjava,0,2,3,0,0,0.125,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#Range(T,T,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#importJson(String,String,String,String).mjava,0,0,5,4,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRemovalStatus().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaxSizeFile(Iterable[SSTableReader]).mjava,0,0,2,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getDefaultIndexName(String,AbstractType[#],ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#ConnectionHandler(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#main(String[]).mjava,0,0,25,1,9,0.1034482792019844,288,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer.CorruptColumnException#create(DataInput,ByteBuffer).mjava,0,0,7,2,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(String,List[ByteBuffer],ConsistencyLevel).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#getOnDiskFilePointer().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setRangeRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\PrepareMessage#toString().mjava,0,0,8,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getRack(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftClientState#getSchedulingValue().mjava,0,1,2,0,0,0.0,3,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateKeyAlias(CFMetaData,String).mjava,0,0,6,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnsLimit().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getTaskType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithShortLength(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getInstance(Map[ByteBuffer,CollectionType]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#authenticate(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#withNewResolver(IResponseResolver[TMessage,TResolved]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getNextBackgroundTask(int).mjava,0,0,5,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\PureJavaCrc32#PureJavaCrc32().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#close().mjava,0,2,1,0,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil.BufferBuilder#addValue(ByteBuffer).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#abort().mjava,0,12,7,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.SSTableIntervalTree#empty().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\OnDiskAtom.Serializer#Serializer().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#getIndexedValue(ByteBuffer,Column).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#set(TraceState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInterDCTcpNoDelay().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#valueToCB(byte[]).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultInteger#isModified().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\CassandraClient[Shuffle]#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#write(DataOutput).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#fromSchema(UntypedResultSet.Row).mjava,0,0,5,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#CounterColumnType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#prepareReceiving(StreamSummary).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#readRows(List[ByteBuffer],ColumnNameBuilder,Set[ByteBuffer],CompositeType,boolean,ConsistencyLevel).mjava,0,0,26,6,10,0.0,4,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#getRpcAddress(InetAddress).mjava,0,0,4,1,1,0.3333333432674408,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#LocalByPartionerType(IPartitioner[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#destroyConnectionPool(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#pack(List[ByteBuffer],int,int).mjava,0,0,7,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#containsPreviousLast(Row).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#compareAtIndex(long[],long[],int).mjava,0,0,0,3,4,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\WriteTimeoutException#WriteTimeoutException(WriteType,ConsistencyLevel,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeFloat(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#Hashable(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#takeSnapshot(String,String...).mjava,0,0,6,2,2,0.0476190485060215,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getCompressedBuilder().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#addLatency(InetAddress,long).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#string(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#compareTo(RowPosition).mjava,0,0,3,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyType#create(String).mjava,0,0,1,1,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#contains(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTableCountPerLevel().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#nonSystem().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#unescapeSQLString(String).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#getSlice(List[ReadCommand],boolean,org.apache.cassandra.db.ConsistencyLevel).mjava,0,0,6,3,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#keyRange().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#getUnsignedShort(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#preparedQueryBindValues().mjava,0,1,20,0,2,0.125,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\EmptySerializer#deserialize(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getColumnFamily().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ExceptionCode#fromValue(int).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#fromCompositeData(CompositeData).mjava,0,0,14,1,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#insertLocal(RowMutation,AbstractWriteResponseHandler).mjava,0,0,4,2,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#output(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#started().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter#split().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf,String,org.apache.hadoop.util.Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#createFlushWriter(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isIndex().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#DeletionInfo(long,int).mjava,0,0,0,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingStreamingConnection#IncomingStreamingConnection(int,Socket).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#getPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#isEquality().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#validate(Set[String],Set[String]).mjava,0,0,5,2,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputColumnFamily(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#initClient().mjava,0,0,6,0,0,0.1764705926179886,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RequestExecutionException#RequestExecutionException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getId(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#completedSynchronization(NodePair,boolean).mjava,0,0,1,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator#MergeIterator(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#read(SSTableReader,FileDataInput,RowIndexEntry).mjava,0,0,23,3,5,0.04545454680919647,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Putter#Putter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(ConsistencyLevel).mjava,0,0,0,1,0,0.0,19,1,19,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#applyToCFMetadata(CFMetaData).mjava,0,0,58,1,2,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#countLocalEndpoints(Iterable[InetAddress]).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#getValue().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairAttempted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#Restriction(List[Term],boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getDouble(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getBits(int,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#getExpressionComparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#warn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildConditions(ByteBuffer,ColumnNameBuilder,UpdateParameters).mjava,0,0,11,3,3,0.13333334028720856,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#login(AuthenticatedUser).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager.StandardUpdater#update(Column,Column).mjava,0,0,7,2,0,0.1538461595773697,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator#getRegion().mjava,0,1,4,0,1,0.4375,5,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#columnMetadata(Map[ByteBuffer,ColumnDefinition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#estimatedRowSize(EstimatedHistogram).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#OptionsMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#describeKeySpace(String,KsDef).mjava,0,0,24,2,4,0.11363636702299118,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#compareTo(ReplayPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#sync().mjava,0,2,3,0,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#isComplete().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#TCustomServerSocket(InetSocketAddress,boolean,Integer,Integer).mjava,0,0,3,4,0,0.1875,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#streamHints().mjava,0,1,25,0,5,0.1034482792019844,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#renewLocalId(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySimple(org.apache.cassandra.thrift.Column).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#getMetadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getOwnership().mjava,0,0,11,0,5,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareSubArrays(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,4,5,2,0.0625,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\EmptyType#fromString(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter#close(org.apache.hadoop.mapred.Reporter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.BackgroundCompactionTask#run().mjava,0,0,11,0,2,0.0,4,2,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#append(DecoratedKey,RowIndexEntry).mjava,0,0,9,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setReadConsistencyLevel(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#add(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#execute(QueryState).mjava,0,0,5,1,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#createCompactionWriter(File,long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#sendBackToL0(SSTableReader).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#addNano(long).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getValueValidator(String,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#deserialize(DataInput,int).mjava,0,0,4,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#UUIDType().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#size().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#serializedSize(ValidationComplete,int).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getString(Collection[ByteBuffer]).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#isDeadState(EndpointState).mjava,0,0,4,1,3,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,11,4,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Header#Header(int,int,int,Message.Type).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#memorySize().mjava,0,1,7,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\FloatType#fromString(String).mjava,0,0,4,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isIncrementalBackupsEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#DatacenterWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#isEmpty().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablesPerReadHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#[C-extends-Comparable[C],D,I-extends-Interval[C,D]]_build(Collection[I]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getIndexInterval().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\InvalidRequestException#InvalidRequestException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.CounterIdRecord#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#search(ExtendedFilter).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deliverHintsToEndpoint(InetAddress).mjava,0,0,7,1,0,0.0833333358168602,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#SegmentIterator(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#hashCode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#addColumnsToCF(List[#],ByteBuffer,ColumnFamily).mjava,0,0,20,3,4,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#drain(InputStream,long).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getToken(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType[#]],TypeParser).mjava,0,0,7,2,2,0.0,1,0,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.ParallelOrder#start().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLength().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#getReplicationFactor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#serializedSize(Collection[RowMutation],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily.Factory#create(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#Term(long,TermType).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#search(AbstractBounds[RowPosition],List[IndexExpression],IDiskAtomFilter,int,long).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#prepareRowMutations(String,ThriftClientState,List[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Value#get().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#isCommutative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,Set[Component],CFMetaData,IPartitioner).mjava,0,0,1,4,1,0.1538461595773697,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#fromStringCQL2(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(long).mjava,0,0,0,1,3,0.7142857313156128,10,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#listFiles().mjava,0,0,6,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#isFullRowSlice(SliceQueryFilter).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition.RowPositionSerializer#serializedSize(RowPosition,TypeSizes).mjava,0,0,5,2,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#createValue().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#fromFileName(String).mjava,0,0,8,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#makeFilename(File,String,String).mjava,0,0,6,3,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#Relation(ColumnIdentifier,Type,Term.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getMovingNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#position().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#Raw(String,List[Term.Raw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#sstableLister().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#isStale(IndexedEntry,ColumnFamily,long).mjava,0,0,8,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\PerRowSecondaryIndex#validate(Column).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#UnsortedColumns(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#serializedSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#RangeSliceCommand(String,String,long,IDiskAtomFilter,AbstractBounds[RowPosition],List[IndexExpression],int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getOutputCql(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read(byte[],int,int).mjava,0,0,1,3,1,0.10526315867900848,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#pack(List[ByteBuffer],int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#start().mjava,0,1,6,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getoffHeapMemoryAllocator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#isCapExceeded().mjava,0,3,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#uncompress(ByteBuffer,Compression).mjava,0,0,13,2,6,0.02083333395421505,21,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportPort().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#prepare(ColumnSpecification).mjava,0,0,0,1,0,0.0,14,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#complete(int).mjava,0,0,3,1,0,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#createMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#ColumnFamilyRecordWriter(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#search(C).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getHostId(InetAddress).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getColumnFamilyWithColumns(ColumnFamily.Factory).mjava,0,0,8,1,2,0.0555555559694767,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamEvent.ProgressEvent#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#validateCompactionThresholds(int,int).mjava,0,0,1,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#getToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#skipIndex(DataInput).mjava,0,0,3,1,2,16.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#send(Event).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\IsBootstrappingException#IsBootstrappingException().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#writeAttrRaw(PrintStream,boolean,String,String).mjava,0,0,6,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#waitingFor(MessageIn).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#[T]_newTaskFor(Callable[T]).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getRemovalStatus().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#setTypes(Mutation).mjava,0,0,8,1,0,0.0,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getKeyspaceInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(Configuration).mjava,0,0,11,1,3,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#RangeSliceResponseResolver(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addCounter(ByteBuffer,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#deserialize(DataInput).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#createWriter(ColumnFamilyStore,File,int,SSTableReader).mjava,0,0,5,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#compareIdentifiers(String[],String[],int).mjava,0,0,4,3,4,0.0625,96,10,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#addClassPath(File).mjava,0,0,14,1,3,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readChar().mjava,0,0,2,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#deserialize(RefCountedMemory).mjava,0,0,2,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#get().mjava,0,1,5,0,2,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Kind#Kind(int,Message.Codec[ResultMessage]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftClientState#getPrepared().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.BackgroundCompactionTask#BackgroundCompactionTask(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#getName().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#newIndexMetadata(CFMetaData,ColumnDefinition,AbstractType[#]).mjava,0,0,14,3,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#getPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter.Serializer#serialize(SliceQueryFilter,DataOutput,int).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#openWithoutSSTables(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#hasIrrelevantData(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#compose(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getColumnFamilyIterator(DecoratedKey,ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getNormalizedLoadAvg().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#readSimpleColumns(FileDataInput,SortedSet[ByteBuffer],List[OnDiskAtom],int).mjava,0,0,9,4,3,0.0,5,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(ICompressor).mjava,0,0,1,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter.Serializer#serializedSize(SliceQueryFilter,int).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#start().mjava,0,1,9,0,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(int).mjava,0,0,0,1,1,0.5555555820465088,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getArraySize(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#sampleKeyRange().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#alterableOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#countCQL3Rows().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getDroppableTombstoneRatio().mjava,0,1,8,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamState#StreamState(UUID,String,Set[SessionInfo]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#RangeTombstone(ByteBuffer,ByteBuffer,DeletionTime).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#close(Iterable[#-extends-Closeable]).mjava,0,0,2,1,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_construct(String,String).mjava,0,0,7,2,1,0.0476190485060215,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#getStart().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesToSend().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexFor(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#DeletedColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#merge(StreamingHistogram).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getPropertyInt(String,Integer).mjava,0,0,3,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getComment().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.HintRunnable#run().mjava,0,0,4,0,0,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\EchoVerbHandler#doVerb(MessageIn[EchoMessage],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#shutdownBlocking().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#scheduleRepairs(ColumnFamily,String,DecoratedKey,List[ColumnFamily],List[InetAddress]).mjava,0,0,9,5,4,0.2857142984867096,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#getCompactionInfo().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#isCounterCF(CfDef).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#deserialize(ByteBuffer).mjava,0,0,8,1,6,0.0,2,1,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#preparePaxos(Commit,List[InetAddress],int).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#prepare(CFDefinition.Name).mjava,0,0,2,1,1,0.0,28,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#kindInt(AbstractBounds[#]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#hasSufficientReplicas(String,Map[String,Set[InetAddress]],Multimap[String,InetAddress]).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#exists().mjava,0,2,3,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#main(String[]).mjava,0,0,48,1,13,0.034090910106897354,256,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#SchemaChange(Change,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\ExpiredTraceState#ExpiredTraceState(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#uuid(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getDataTracker().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#initLog4j().mjava,0,4,12,0,4,0.16129031777381897,5,3,22,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#serializedSize(DeletionTime,TypeSizes).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#withGeneration(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#DifferencingCounter(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#getUser().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#difference(MerkleTree,MerkleTree).mjava,0,0,7,2,4,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[],byte[]).mjava,0,2,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#add(ByteBuffer,Relation.Type).mjava,0,0,4,2,1,0.44999998807907104,22,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#trace_next_query().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#makeCountResult(String,String,long,ColumnIdentifier).mjava,0,0,4,4,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#awaitTermination(long,TimeUnit).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getNewSourceRanges(String,Set[Range[Token]]).mjava,0,0,12,2,7,0.04545454680919647,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamWriter#write(RandomAccessReader,ChecksumValidator,int,long,long).mjava,0,0,8,5,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#TreeMapBackedSortedColumns(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(String,long,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#getExpectedWriteSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#firstName(ColumnFamily).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#equals(Object).mjava,0,0,0,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#newSSTables(SSTableReader).mjava,0,0,3,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getMutations(List[ByteBuffer],boolean,ConsistencyLevel,long,boolean).mjava,0,0,9,5,6,0.0714285746216774,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#cleanup().mjava,0,0,4,0,0,0.3333333432674408,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#loadClassInternal(String).mjava,0,0,4,1,1,0.07692307978868484,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setHintedHandoffEnabled(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#SetValue(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#getColumnFamily().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#getNotificationInfo().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#inetToCB(InetSocketAddress).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#makeNode().mjava,0,1,4,0,3,1.2727272510528564,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#processPrepared(CQLStatement,ThriftClientState,List[ByteBuffer]).mjava,0,0,9,3,0,0.1538461595773697,7,4,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Literal#isAssignableTo(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#clear().mjava,0,0,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getComparator().mjava,0,2,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[T]_defaultComparator().mjava,0,0,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#DelayedValue(Comparator[ByteBuffer],Set[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,2,7,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\SeedProviderDef#SeedProviderDef(LinkedHashMap[String,#]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#delete(ByteBuffer,Column).mjava,0,0,15,2,4,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#CacheService().mjava,0,0,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#registerFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#limitReceiver().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator#iterators().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#maybeMarkUnwritable(File).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#parseType(String).mjava,0,0,2,1,0,0.0625,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_keyspace(KsDef).mjava,0,0,21,1,2,0.06666667014360428,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#ignoredSchemaRow(Row).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#doDeliverHintsToEndpoint(InetAddress).mjava,0,0,65,1,22,0.08474576473236084,129,8,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#addAll(ColumnFamily,Allocator,Function[Column,Column]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#setKeySpace(String).mjava,0,0,1,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(Message.Request).mjava,0,0,3,1,1,0.0,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#handleOrLog(Throwable).mjava,0,0,5,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat.SplitCallable#call().mjava,0,0,22,0,11,0.05882352963089943,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#SetType(AbstractType[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getTotalSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createReplicationStrategy(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,5,5,1,0.10000000149011612,1,0,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getReferenceSize().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(SSTableReader,Iterable[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#read(ReadableByteChannel).mjava,0,0,17,1,7,0.0625,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getNormalAndBootstrappingTokenToEndpointMap().mjava,0,1,8,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getTotalLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#byteToCB(byte).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#execute(Pageable,ConsistencyLevel,List[ByteBuffer],int,long).mjava,0,0,4,5,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DecimalType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#create(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.GreaterThan#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#iterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#updateKeyspace(KSMetaData).mjava,0,0,10,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#execute(CompactionExecutorStatsCollector).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#isRelocating(Token).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#lastCounted(ColumnFamily).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#finishCompaction(CompactionInfo.Holder).mjava,0,0,6,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter.Serializer#deserialize(DataInput,int).mjava,0,0,5,2,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#connect(InetAddress).mjava,0,0,7,1,3,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compareCollectionMembers(ByteBuffer,ByteBuffer,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#search(ByteBuffer).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#set(CQL3Type).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#Directories(String,String,String).mjava,0,0,5,3,0,0.04545454680919647,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validateColumns(Iterable[Column]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#makeExcludingKeyBounds(RowPosition).mjava,0,0,0,1,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getMemtable().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#skipTemporary(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flushInternal().mjava,0,3,4,0,0,0.2222222238779068,10,5,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#write(long,DataOutput).mjava,0,0,12,2,2,0.09090909361839294,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#UTF8Type().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheSavePeriod().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#promotedSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#getInstance(TypeParser).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#propose(Commit).mjava,0,0,8,1,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#clusteringKeyColumns().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#computeOptimizedFilter().mjava,0,1,11,0,2,0.3103448152542114,6,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#threadLocalMD5Digest().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#diff(ByteBuffer,ByteBuffer).mjava,0,0,15,2,8,0.11304347962141037,150,20,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#reverseIterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#complete(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#createCollector(Collection[SSTableReader],AbstractType[#],int).mjava,0,0,9,3,1,0.13333334028720856,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#updateFilter(int).mjava,0,0,1,1,0,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#getReduced().mjava,0,0,6,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#getNewInOrderSSTable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#loadSchemas().mjava,0,6,9,0,1,0.125,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#applyAssumption(String,String,String).mjava,0,0,20,3,4,0.0555555559694767,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#rangeIterator().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#DynamicParsedComparator(String).mjava,0,0,5,1,2,0.1034482792019844,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#setHeartBeatState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#serializedSize(RangeTombstoneList,TypeSizes,int).mjava,0,0,8,3,3,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Bound#Bound(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LongType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getClientEncryptionOptions().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#vintIsNegative(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#execute(Collection[#-extends-IMutation]).mjava,0,0,5,1,3,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getUnfinishedCompactions().mjava,0,1,8,0,6,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.LocalCounterIdHistory#LocalCounterIdHistory().mjava,0,0,7,0,1,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#intersects(Bounds[T]).mjava,0,0,3,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#fromString(String).mjava,0,0,3,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#remainingCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#SetSerializer(TypeSerializer[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeInt(int).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#createCompressor(Class[#-extends-ICompressor],Map[String,String]).mjava,0,0,19,2,4,0.02380952425301075,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#unixTimestamp(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#compareTo(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getUnwritableDirectories().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onUpdateKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#digest(ColumnFamily).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AsciiSerializer#AsciiSerializer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getKeysMeta(Cassandra.Client).mjava,0,0,71,1,21,0.02222222276031971,194,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onMove(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnLeader(CounterMutation,String,Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#microsTimestamp(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#setIndexBuilt().mjava,0,2,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBloomFilterFalsePositives().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#isEncryptedChannel(InetAddress).mjava,0,0,14,1,1,0.10000000149011612,13,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getScanner(RateLimiter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#hasColumnFamilyAccess(String,String,Permission).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getHostIdMap().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#remove(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBuiltIndexes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#disableScheduledRangeXfers().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#AbstractCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,9,2,1,6.25,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLine().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Config#isClientMode().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#prepareKeyspace(ClientState).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_classForName(String,String).mjava,0,0,3,2,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#setLocation(String,Job).mjava,0,0,27,2,2,0.0,4096,12,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#process(String,ThriftClientState).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#addInternal(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,4,5,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#JMXConnection(String,int,String,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\EventMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#getServerSocket(EncryptionOptions,InetAddress,int).mjava,0,0,9,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#nodeDown(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#initReceivingSide(UUID,String,InetAddress,Socket,boolean,int).mjava,0,0,7,6,2,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#replaceCompactedSSTables(Collection[SSTableReader],Collection[SSTableReader]).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getOnDiskIterator(DataInput,int,ColumnSerializer.Flag,int,Descriptor.Version).mjava,0,0,2,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer.Factory#buildTServer(Args).mjava,0,0,11,1,4,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#BatchMessage(BatchStatement.Type,List[Object],List[List[ByteBuffer]],ConsistencyLevel).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#RowIndexEntry(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#Schema().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#triggers(Map[String,TriggerDefinition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#isDataPresent().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getColumnFamilyIterator(ColumnFamily).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\EmptySerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#prepare(Collection[StreamRequest],Collection[StreamSummary]).mjava,0,0,10,2,1,0.25,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\RepairRunner[NodeProbe]#repairAndWait(StorageServiceMBean,boolean,boolean,boolean).mjava,0,0,6,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#progress(Descriptor,ProgressInfo.Direction,long,long).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#exec(ProcessBuilder).mjava,0,0,15,1,6,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMaxTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompleter#CliCompleter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#containsAlias(ColumnIdentifier).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#toString(ByteBuffer).mjava,0,0,21,1,2,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#hashCode().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#validate(List[ByteBuffer]).mjava,0,0,12,1,2,0.0357142873108387,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidAsBytes().mjava,0,2,14,0,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#TrivialOneToOne(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer#start().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#extractKeysFromColumns(CFMetaData).mjava,0,0,18,1,2,0.0625,34,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#usesHostId(InetAddress).mjava,0,0,4,1,0,0.0,4,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#maybeCorrectResource(DataResource,ClientState).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getFalsePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isDense(AbstractType[#],Collection[ColumnDefinition]).mjava,0,0,3,2,2,1.0526316165924072,7,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#warn(String,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#memorySize().mjava,0,0,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#afterExecute(Runnable,Throwable).mjava,0,0,5,2,0,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setMaximumValidatorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#prepareWriter().mjava,0,1,14,0,5,0.032258063554763794,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getBuiltIndexes().mjava,0,1,7,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice.NavigableMapIterator#computeNext().mjava,0,1,18,0,1,0.07407407462596893,22,6,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#initSchema(String).mjava,0,0,13,1,4,0.06122449040412903,5,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter.AbstractRangeClient#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#setIndex(String,IndexType,Map[String,String]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#mutate(Collection[#-extends-IMutation],ConsistencyLevel).mjava,0,0,22,2,4,0.020408162847161293,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTotalMemtableSpaceInMB().mjava,0,3,0,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#isDigestQuery().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#count().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithLength(byte[],DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#deserialize(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getReverseSortedColumns().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStreamThroughputOutboundMegabitsPerSec().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#NetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,9,4,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Tracker#Tracker(Comparator[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationStateMap().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#newSSTableSegmentThresholdReached(SSTableWriter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyRange(Configuration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(InetAddress,long,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#objToBB(Object).mjava,0,0,22,1,6,0.0,256,8,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AsciiType#AsciiType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printCompactionThreshold(PrintStream,String,String).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#decompose(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#RepairSession(Range[Token],String,boolean,boolean,String...).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#serialize(DataOutput).mjava,0,0,6,1,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#delete(Descriptor,Set[Component]).mjava,0,0,13,2,0,0.2857142984867096,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#toTokenBounds().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getResetInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#maybeMarkUnreadable(File).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#getPos().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setCacheCapacities(int,int).mjava,0,0,3,2,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isRPCServerRunning().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#serialize(NodePair,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#initiate().mjava,0,0,10,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#addNotificationListener(NotificationListener,NotificationFilter,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXConfigurableThreadPoolExecutor#JMXConfigurableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#length().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Parameters#Parameters(Map[ColumnIdentifier,Boolean],boolean,ColumnIdentifier,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LegacyLeveledManifest#migrateManifests(String,String).mjava,0,0,15,2,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#toString(boolean).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#StreamMessage(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_splits(String,String,String,int).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#initSocket().mjava,0,3,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#deserialize(DataInput,int).mjava,0,0,5,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSplitSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getRecentTimeouts().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#generate().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RefCountedMemory#RefCountedMemory(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getNumRecords().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#execute(QueryState,QueryOptions).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#get().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#setUserDefined(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#getResponseCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row.RowSerializer#deserialize(DataInput,int,ColumnSerializer.Flag).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#attemptDirectDelivery(RowMutation,long,Set[InetAddress]).mjava,0,0,11,3,5,0.05714285746216774,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#toString().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#getSegment(long).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getAvailableProcessors().mjava,0,12,5,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#deserialize(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#filter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#excise(Collection[Token],InetAddress).mjava,0,0,7,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#hashHelper(Hashable,Range[Token],Range[Token]).mjava,0,0,15,3,5,0.3461538553237915,36,6,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#getString(AbstractType[#]).mjava,0,0,13,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#truncate(String,long).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isRangeTombstone().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getReadOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.ByNameColumnIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#run().mjava,0,0,14,0,1,0.3333333432674408,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#expand(int).mjava,0,0,1,1,1,10.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#serializedSize(RepairMessage,int).mjava,0,0,1,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#split(T).mjava,0,0,5,1,2,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getReverseComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#initialCompressedBufferLength(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#andKeyEquals(Term).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#FastByteArrayOutputStream(int).mjava,0,0,0,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getComparatorSerializedSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseRemoving(InetAddress,UUID,UUID).mjava,0,0,18,3,2,0.25,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#dirtyString().mjava,0,0,7,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#removeIndex(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#onKeyChange().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateKeyCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DiscarderByKey#DiscarderByKey(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#reverseIterator(ColumnSlice[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#CommitLogSegment(String).mjava,0,0,15,1,2,0.05882352963089943,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getColumnFamilyStoreMBeanProxies().mjava,0,1,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#addColumn(Column,Allocator).mjava,0,0,15,2,2,0.20000000298023224,8,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable.Reducer#getReduced().mjava,0,0,6,0,1,0.1875,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#invalidate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.ByNameColumnIterator#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#nodeUp(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspaceUserName(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getEstimatedDroppableTombstoneRatio(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#isSatisfiedBy(DecoratedKey,ColumnFamily,ColumnNameBuilder).mjava,0,0,10,3,5,0.1428571492433548,12,4,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage.Type#Type(int,int,Serializer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#getMessageType().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#reportSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#deletionTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyRange(CFMetaData,ByteBuffer,KeyRange).mjava,0,0,14,3,4,0.054054055362939835,112,9,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#enqueue(StreamMessage).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#pager(Pageable,ConsistencyLevel,PagingState).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#forSelection(CFDefinition,Selection).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getComponents().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeLong(long).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#nextKeyValue().mjava,0,1,6,0,1,0.0555555559694767,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Pair#equals(Object).mjava,0,0,2,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#release().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#includes(Comparator[ByteBuffer],ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_column_family(CfDef).mjava,0,0,12,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FilterFactory#getFilter(long,int,boolean).mjava,0,0,7,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#deserialize(DataInput,int).mjava,0,0,5,2,4,0.05882352963089943,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllSettled().mjava,0,1,11,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#toString().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSReadError#FSReadError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpoint().mjava,0,2,8,0,2,0.1666666716337204,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getConnection(InetAddress,MessageOut).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#rebuild(String).mjava,0,0,14,1,1,0.04545454680919647,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo#ProgressInfo(InetAddress,String,Direction,long,long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compareTimestampBytes(ByteBuffer,ByteBuffer).mjava,0,0,18,2,3,0.0,128,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstToken(ArrayList[Token],Token).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BooleanSerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#Options(List[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#reload().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage#StreamInitMessage(InetAddress,UUID,String,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\MigrationRequestVerbHandler#doVerb(MessageIn,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#traceNextQuery().mjava,0,5,3,0,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper#bootstrap().mjava,0,1,14,0,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlankAndComma().mjava,0,4,3,0,2,0.0,6,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#Options(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getStrategyOptionsFromTree(Tree).mjava,0,0,15,1,4,0.2777777910232544,6,3,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#output(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeFromMoving(InetAddress).mjava,0,0,7,1,0,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#RowDataResolver(String,ByteBuffer,IDiskAtomFilter,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo#CompressionInfo(CompressionMetadata.Chunk[],CompressionParameters).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#estimatedColumnCount(EstimatedHistogram).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#alter(String,Map[Option,Object]).mjava,0,0,7,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getSSTableMetadata().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CallbackInfo#CallbackInfo(InetAddress,IAsyncCallback,IVersionedSerializer[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicResetInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#create(Map[String,String]).mjava,0,0,1,1,0,0.75,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#awaitTermination().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#columnFilterIsIdentity().mjava,0,1,0,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#remove(SSTableReader).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame#Frame(Header,ChannelBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#prepare(String,ClientState,boolean).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#DropTableStatement(CFName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#setStoreFuncUDFContextSignature(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#isThriftCompatible().mjava,0,1,3,0,0,0.4000000059604645,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toString().mjava,0,0,29,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(CharSequence).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#fromSchema(Row,Iterable[CFMetaData]).mjava,0,0,8,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#ModificationStatement(int,CFMetaData,Attributes).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#LeveledScanner(Collection[SSTableReader],Range[Token]).mjava,0,0,12,2,3,0.10526315867900848,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithLength(ByteBuffer,DataOutput).mjava,0,0,3,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputInitialAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#serializedSize(IRowCacheEntry,TypeSizes).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getWriteRpcTimeout().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager.StandardUpdater#StandardUpdater(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#filter().mjava,0,2,8,0,0,0.0,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#enableRelocations(Collection[String]).mjava,0,0,5,1,1,0.0,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#isIndexBuilt(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BooleanSerializer#serialize(Boolean,DataOutput,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliSessionState#setErr(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#resetUnsafe().mjava,0,1,7,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#reBuffer().mjava,0,0,4,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readValue(ChannelBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#getCompactionInfo().mjava,0,0,3,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.SlicesIterator#SlicesIterator(List[Column],AbstractType[#],ColumnSlice[],boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getSSTableLevel().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#consistencyForUser(String).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#makeCountResult(ColumnIdentifier).mjava,0,0,4,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\Progressable#Progressable(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#size().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#read(ReadableByteChannel).mjava,0,0,15,1,6,0.03846153989434242,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#softCloseSocket().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#MD5Digest(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(CompositeType).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addCounterColumn(ByteBuffer,long).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#getComparatorFor(CFMetaData,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#hasKeyspace().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#hasRemoteNode(List[InetAddress]).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition.RowPositionSerializer#serialize(RowPosition,DataOutput).mjava,0,0,6,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#state().mjava,0,39,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\EmbeddedCassandraService#start().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#serializedSize(Chunk,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\notifications\SSTableListChangedNotification#SSTableListChangedNotification(Iterable[SSTableReader],Iterable[SSTableReader],OperationType).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#printNodesHeader(boolean,boolean).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\LongSerializer#serialize(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ReverseSortedCollection#iterator().mjava,0,0,3,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#toRowBounds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#initiateOnReceivingSide(Socket,boolean,int).mjava,0,0,2,3,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnFamily().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#fromThriftCqlRow(CqlRow).mjava,0,0,5,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#countPerDCEndpoints(Keyspace,Iterable[InetAddress]).mjava,0,0,7,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthChallenge#getToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput,ColumnSerializer.Flag).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#columnsInOrder(ColumnFamily,List[ByteBuffer]).mjava,0,0,23,2,7,0.05714285746216774,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#seekInternal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#removeIndexedColumn(ByteBuffer).mjava,0,0,9,1,1,0.1538461595773697,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.EmptyClauseFilter#getExtraFilter(DecoratedKey,ColumnFamily).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Relation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#isSetTimestamp().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\sink\SinkManager#add(IMessageSink).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSnapshotSSTableReader(String).mjava,0,0,9,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#indexInterval(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#getPartitionKey(Map[String,ByteBuffer]).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#isWildcard().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#deserializerSuperColumnFamily(DataInput,ColumnFamily,ColumnSerializer.Flag,int).mjava,0,0,12,4,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#resetAndTruncate().mjava,0,1,1,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.SequentialOrder#completed(R).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#enableRelocations(String...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#fromString(String).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#encodeBody(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#addTransferFile(SSTableReader,long,List[Pair[Long,Long]]).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCoreThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#addConnection(Channel,Connection).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getId(String,String).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#keyValidator(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTruncationTime().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#add(CommitLog.LogRecordAdder).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#InetAddressType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#maxTimeUUID(long).mjava,0,0,2,1,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#getColumnFamily().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#getCompactionStrategy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setMode(Mode,String,boolean).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#serializationFlags().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleStrategy#getReplicationFactor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLocalHostId().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#write(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#localQuorumFor(Keyspace,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#ChecksumWriter(Descriptor).mjava,0,0,3,1,0,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#destroy().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#ExcludingBounds(T,T,IPartitioner).mjava,0,0,2,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck#getGossipDigestList().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#isIndexed().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2#GossipDigestAck2(Map[InetAddress,EndpointState]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamSummaryCompositeData#fromCompositeData(CompositeData).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap(BiMultiValMap[K,V]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getIndexScanPosition(RowPosition).mjava,0,0,3,1,2,0.1428571492433548,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#setBytes(long,byte[],int,int).mjava,0,0,3,4,1,0.0,16,4,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#split(Token).mjava,0,0,1,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinitionFromColumnName(ByteBuffer).mjava,0,0,5,1,3,0.0,3,2,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#copyArrays(RangeTombstoneList,RangeTombstoneList).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#buildIndexAsync().mjava,0,1,7,0,3,0.125,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String,InetAddress).mjava,0,0,6,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCrcCheckChance(double).mjava,0,0,4,1,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getOwnership().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.SecurePipelineFactory#getPipeline().mjava,0,0,6,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#remove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#isEOF().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#compileQuery(String).mjava,0,0,3,1,5,0.25,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getEstimatedDroppableTombstoneRatio(int).mjava,0,0,3,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#main(String[]).mjava,0,0,35,1,9,0.05970149114727974,16,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#findIndexedColumn(CFMetaData).mjava,0,0,5,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#isEOF().mjava,0,12,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#OneToOne(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterUserStatement#AlterUserStatement(String,UserOptions,Boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#SemanticVersion(int,int,int,String[],String[]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#getCQLVersion().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#SetKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#DeletionInfo(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#serialize(PrepareResponse,DataOutput,int).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#applyImplicitDefaults(org.apache.cassandra.thrift.CfDef).mjava,0,0,19,1,0,0.0,1536,11,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UserOptions#validate().mjava,0,2,8,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#tokensAsSet(Collection[Token]).mjava,0,0,14,1,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#addSourceFilter(ISourceFilter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getCommandPendingTasks(InetAddress).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getScanner(DataRange).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getFileMessages().mjava,0,1,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateRemoving(InetAddress,String[]).mjava,0,0,23,2,4,0.10000000149011612,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnData(CFMetaData,Column,boolean).mjava,0,0,21,3,2,0.03333333507180214,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#mutateAtomically(Collection[RowMutation],ConsistencyLevel).mjava,0,0,22,2,6,0.1315789520740509,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#invalidateKeyCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getThreadPoolMBeanProxies().mjava,0,1,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#deserializeEvent(ChannelBuffer).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#isAssignableTo(ColumnSpecification).mjava,0,0,2,1,2,0.014705882407724857,180,9,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#bulkLoad(String).mjava,0,0,12,1,4,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#gcGraceSeconds(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithScore(InetAddress,List[InetAddress]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Keyspace,String,boolean).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.StatsCollector#beginCompaction(CompactionInfo.Holder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner.KeyScanningIterator#computeNext().mjava,0,1,24,0,1,0.08196721225976944,72,7,43,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#getCompressor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#one().mjava,0,22,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#IndexedSliceReader(SSTableReader,RowIndexEntry,FileDataInput,ColumnSlice[],boolean).mjava,0,0,11,5,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Response#getTracingId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#shouldReplicateOnWrite().mjava,0,0,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaxSSTableSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Upgrader#createCompactionWriter().mjava,0,1,9,0,1,0.1538461595773697,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#shouldInclude(SSTableReader).mjava,0,0,7,1,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(ByteBuffer).mjava,0,0,5,1,2,0.0,2,1,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(boolean,long,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultDouble#DefaultDouble(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#receive(FileMessage).mjava,0,0,6,1,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#Client(String,int,ClientEncryptionOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#streamRanges(Map[String,Multimap[Range[Token],InetAddress]]).mjava,0,0,19,1,12,0.054054055362939835,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Type#fromOpcode(int,Direction).mjava,0,0,2,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#deserialize(DataInput,boolean).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#setConsistencyLevel(ConsistencyLevel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#iterator().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#roundTo(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#serializedSize(StreamingHistogram,TypeSizes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTask#StreamTask(StreamSession,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#IntegerType().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon.NativeAccess#isMemoryLockable().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#ConcurrentLinkedHashCache(ConcurrentLinkedHashMap[K,V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliOptions.CLIOptions#addOption(String,String,String,String).mjava,0,4,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnFinish().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#allocate(int).mjava,0,0,8,1,1,0.4444444477558136,9,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultInteger#DefaultInteger(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#SSTableScanner(SSTableReader,DataRange,RateLimiter).mjava,0,0,8,3,0,0.10000000149011612,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#proposePaxos(Commit,List[InetAddress],int).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setWriteRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#defaultRowSizeHistogram().mjava,0,2,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#computeNext().mjava,0,0,4,0,2,0.0476190485060215,10,5,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.ByNameColumnIterator#computeNext().mjava,0,0,4,0,2,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentBloomFilterFalseRatio().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheRequests().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#iterator().mjava,0,0,13,0,0,0.0,16,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#DeserializedColumnIterator(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#tokenListToSplits(List[String],int).mjava,0,0,6,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#showKeyspace(PrintStream,KsDef).mjava,0,0,28,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#loadConfig().mjava,0,1,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#columnFilter(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#next(ByteBuffer,SortedMap[ByteBuffer,Column]).mjava,0,0,9,2,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#setCompactStorage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsert#prepareInternal(CFDefinition,ColumnSpecification[],Attributes).mjava,0,0,20,3,5,0.02857142873108387,632,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitUserDefined(ColumnFamilyStore,Collection[Descriptor],int).mjava,0,0,10,3,4,0.09375,4,3,18,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#toString(boolean).mjava,0,0,19,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ColumnFamilyMetrics#release().mjava,0,1,65,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toSchema(long).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#serializedSize(GossipDigestAck,int).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelector#SimpleSelector(String,int,AbstractType[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#reloadTriggerClass().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#performStreamingRepair().mjava,0,1,4,0,5,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#clone().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#build().mjava,0,9,7,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getTotalBytes().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openAll(Set[Map.Entry[Descriptor,Set[Component]]],CFMetaData,IPartitioner).mjava,0,0,10,3,4,0.0,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getProtectedField(Class,String).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#SSTableMetadata().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#initHelper(Token,Token,byte,byte).mjava,0,0,7,4,3,0.10000000149011612,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isIncrementalBackupsEnabled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#checkOutputSpecs(Configuration).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getSavedCachesLocation().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch.NodeData#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#terminateSessions().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getMutations(List[ByteBuffer],boolean,ConsistencyLevel,long).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#seek(long).mjava,0,0,5,1,0,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#serialize(SnapshotCommand,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#invalidateCaches().mjava,0,4,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#onSuccess(StreamState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#Raw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Prepender#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,14,4,8,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthenticator().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#signatures(List[Function.Factory],ColumnSpecification).mjava,0,0,7,2,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#onSuccess(StreamState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputCompressionChunkLength(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#getMessages().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#resetAndTruncate(FileMark).mjava,0,0,17,1,3,0.20000000298023224,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#updateColumnMetaData(CfDef,ByteBuffer,String).mjava,0,0,7,3,2,0.13333334028720856,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#execute(QueryState,QueryOptions).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getCompactedRow(List[SSTableIdentityIterator]).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#createClusteringPrefixBuilder(List[ByteBuffer]).mjava,0,0,12,1,5,0.0357142873108387,5,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#getStatement(String).mjava,0,0,7,1,7,0.17391304671764374,1,0,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doSort(List[GossipDigest]).mjava,0,0,17,1,7,0.8888888955116272,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#BulkRecordWriter(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#getScrubInfo().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceRemoveCompletion().mjava,0,0,11,0,1,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxName().mjava,0,5,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheRecentHitRate().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#cleanupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitIndexBuild(SecondaryIndexBuilder).mjava,0,0,4,1,1,0.0,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#finishBootstrapping().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspaceUserNameAndPassword(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.MergeTask#MergeTask(List[Row]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getSuperClassFieldSize(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\EmptyType#EmptyType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#bootstrapping(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#isAfterSliceFinish(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#main(String[]).mjava,0,0,129,1,16,1.4453781843185425,7168,34,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcAddress().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#performWrite(IMutation,ConsistencyLevel,String,WritePerformer,Runnable,WriteType).mjava,0,0,13,6,6,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#retrievePartitionKeyValidator(Cassandra.Client).mjava,0,0,26,1,13,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getEstimatedRowSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleSessionComplete(StreamSession).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getIdentityFilter(DecoratedKey,String,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#read().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#buildAsEndOfRange().mjava,0,5,4,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#printShuffleHelp().mjava,0,2,20,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMinThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#Candidate(Iterator[In],Comparator[In]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#getTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#put(K,V).mjava,0,0,3,2,2,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\SessionCompleteEventCompositeData#toCompositeData(StreamEvent.SessionCompleteEvent).mjava,0,0,6,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#toString().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedCF(ColumnFamily,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsBytes(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#createValue(CFMetaData).mjava,0,0,3,1,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableColumnsCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidate().mjava,0,3,5,0,0,0.0714285746216774,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleStrategy#SimpleStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#setUsername(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getShortName(AbstractType[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokens(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,ColumnFamilyType,AbstractType[#],UUID).mjava,0,0,0,5,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\transport\SSLTransportFactory#getTransport(TTransport).mjava,0,0,3,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#writeColumnsFromBag(ByteBuffer,DefaultDataBag).mjava,0,0,27,2,5,0.08163265138864517,16,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamWriter#write(WritableByteChannel).mjava,0,0,14,1,9,0.21621622145175934,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#dataSize().mjava,0,0,1,0,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message#connection().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#preprocess(MessageIn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getColumnFamilyIterator(DecoratedKey,ColumnFamily).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#validate().mjava,0,1,8,0,0,0.25,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getName().mjava,0,47,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#serialize(RangeSliceCommand,DataOutput,int).mjava,0,0,21,3,4,0.07500000298023224,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamWriter#StreamWriter(SSTableReader,Collection[Pair[Long,Long]],StreamSession).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.Serializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRangeSlice(AbstractBounds[RowPosition],List[IndexExpression],IDiskAtomFilter,int,long,boolean,boolean).mjava,0,0,2,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.MergeTask#call().mjava,0,0,11,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#[T-extends-Enum[T]]_readEnumValue(Class[T],ChannelBuffer).mjava,0,0,5,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#receive(MessageIn,int,long).mjava,0,0,6,3,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,4,2,0,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#hintFor(RowMutation,int,UUID).mjava,0,0,13,3,5,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrub(boolean).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionStrategy().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCompressionMetadata().mjava,0,4,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Operation#Operation(Term,OperationType,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(InetAddress,MessagingService.Verb,T,IVersionedSerializer[T],Map[String,byte[]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#getBoundsTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#buildSeedsList().mjava,0,2,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#ColumnIdentifier(String,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#getPrompt(CliClient).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#putAll(Map[#-extends-K,#-extends-V]).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#mergeMax(List[ByteBuffer],List[ByteBuffer],AbstractType[#]).mjava,0,0,22,3,6,0.0,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#TreeRange(MerkleTree,Token,Token,byte,Hashable).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompressionRatio().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#isStopRequested().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropKeyspace(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#getKeyAlias().mjava,0,1,0,0,0,2.3333332538604736,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerError#ServerError(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FilterFactory#getFilter(long,double,boolean).mjava,0,0,3,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#export(Descriptor,PrintStream,Collection[String],String[]).mjava,0,0,20,4,10,0.0882352963089943,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BytesSerializer#serialize(ByteBuffer).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#addNewSSTablesSize(Iterable[SSTableReader]).mjava,0,0,9,1,1,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(Pair[String,String],boolean,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#insertUser(String,boolean).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.SingleColumnComparator#SingleColumnComparator(int,AbstractType[#]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame#create(Message.Type,int,int,EnumSet[Header.Flag],ChannelBuffer).mjava,0,0,0,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPhiConvictThreshold(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#removeDeletedAndOldShards(DecoratedKey,boolean,CompactionController,ColumnFamily).mjava,0,0,6,4,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#Range(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#stopKey().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#build(Iterable[OnDiskAtom]).mjava,0,0,3,1,1,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getHelp().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getWriteRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#interpret(InetAddress).mjava,0,0,10,1,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitUntil(Date).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#response(MessageIn[Boolean]).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationState(ApplicationState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete#ValidationComplete(RepairJobDesc,MerkleTree).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#writeMetadata(Descriptor,SSTableMetadata,Set[Integer]).mjava,0,0,5,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getContext().mjava,0,1,2,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,2,6,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#containsCachedRow(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#setKeyCacheCapacityInMB(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#readFields(DataInput).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\HeapAllocator#allocate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#serializedSize(TypeSizes).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#getValidator().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getFilename().mjava,0,26,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#register(IMigrationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#truncate(String,String).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#deserialize(DataInput,int,ColumnSerializer.Flag).mjava,0,0,11,3,6,0.03846153989434242,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#updateTimestamp().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#SimpleSeedProvider(Map[String,String]).mjava,0,0,6,1,1,0.06666667014360428,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#isMinimum().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#resetAndTruncate(int).mjava,0,0,4,1,0,0.1428571492433548,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeCount(Tree).mjava,0,0,20,1,9,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#setDeletionInfo(DeletionInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Literal#validateAssignableTo(ColumnSpecification).mjava,0,0,10,1,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#TCustomServerSocket(ServerSocket,boolean,Integer,Integer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilterTruePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getKeyspaces().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getTimeoutsPerHost().mjava,0,0,6,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#clear().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#add(SSTableReader).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getComparator(String,String).mjava,0,0,1,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#ClusterStatus(PrintStream,String).mjava,0,0,9,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#DeletionTime(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message#attach(Connection).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#getAuthenticatedUser().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#read(DataInput,int).mjava,0,0,3,2,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#cas(ByteBuffer,String,List[Column],List[Column],ConsistencyLevel,ConsistencyLevel).mjava,0,0,36,6,9,0.0,8,3,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#markAlive().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#RangeClient(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#serialize(StreamRequest,DataOutput,int).mjava,0,0,8,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#memorySize().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeSlice(AbstractRangeCommand,ConsistencyLevel).mjava,0,0,57,2,23,0.16239316761493683,577,11,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#remove().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getWriteConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#mergeKeyspaces(Map[DecoratedKey,ColumnFamily],Map[DecoratedKey,ColumnFamily]).mjava,0,0,34,2,9,0.4000000059604645,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#RawStatement(CFName,Parameters,List[RawSelector],List[Relation],Term.Raw).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#Metadata(List[ColumnSpecification]).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#updateForKey(ByteBuffer,ColumnNameBuilder,UpdateParameters).mjava,0,0,23,3,8,0.054054055362939835,4,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\sink\SinkManager#processOutboundMessage(MessageOut,int,InetAddress).mjava,0,0,2,3,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#serialize(RepairMessage,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selectable.WritetimeOrTTL#toString().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#run().mjava,0,0,18,0,6,0.12244898080825806,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getIndexInterval().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toFloat(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#maybeSetApplicationState().mjava,0,1,8,0,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#binarySearch(List[Column],Comparator[ByteBuffer],ByteBuffer,int).mjava,0,0,4,4,4,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BigIntegerToken#BigIntegerToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#getColumnStats().mjava,0,2,19,0,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#hashCode().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#decompose(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#RandomAccessReader(File,int,PoolingSegmentedFile).mjava,0,0,2,3,0,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readDouble().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#setMultiKey(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Substracter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#withUpdatedCount(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#mergeSchema(Collection[RowMutation]).mjava,0,0,11,1,5,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#nextPageSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#toString(byte[]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isBlank(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printIsThriftServerRunning(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#ColumnDefinition(ByteBuffer,AbstractType[#],IndexType,Map[String,String],String,Integer,Type).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap#getKeyComponent(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#SelectStatement(SelectExpression,boolean,String,String,ConsistencyLevel,WhereClause,int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#hexToBytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getBroadcastAddress().mjava,0,116,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#validate(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#unregisterMBean().mjava,0,2,3,0,0,0.09090909361839294,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serialize(GossipDigest,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#TriggerExecutor().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#intervalCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(int).mjava,0,0,0,1,3,0.8333333134651184,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getOldLocalCounterIds().mjava,0,1,10,0,5,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Term.Terminal#bindAndGet(List[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,5,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#ListSerializer(TypeSerializer[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#CustomTNonBlockingServer(Args).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,int,String,BlockingQueue[Runnable]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isCountOperation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#isUsingFunction(List[RawSelector]).mjava,0,0,0,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#addColumnDef(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalDiskSpaceUsed().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printEndPoints(String,String,String,PrintStream).mjava,0,0,3,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#execute(ByteBuffer,ColumnFamily).mjava,0,0,16,2,4,0.0,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#drop(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#newPrepare(ByteBuffer,CFMetaData,UUID).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getFileDataInput(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThreshold(String,String,int,int).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#compare(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#split(T).mjava,0,0,3,1,2,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#hasOption(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Operation#Operation(Term).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowPosition#forKey(ByteBuffer,IPartitioner).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeRow(SSTableIdentityIterator,DecoratedKey,PrintStream).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#createTempFile(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Pair#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKey(CFMetaData,ByteBuffer).mjava,0,0,6,2,0,0.05000000074505806,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#announceMigration().mjava,0,0,3,0,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateUserStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#markDead().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfAssumptions#CfAssumptions().mjava,0,0,6,0,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#dropPageCache(String).mjava,0,0,7,1,2,0.0476190485060215,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#deserialize(DataInput).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#serialize(Set[T]).mjava,0,0,6,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getRandomToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serialize(AbstractBounds[#],DataOutput,int).mjava,0,0,6,3,0,0.3076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#getOutputCommitter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readStringToStringListMap(ChannelBuffer).mjava,0,0,5,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#initPermissionsCache().mjava,0,1,7,0,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableLevelResetter#main(String[]).mjava,0,0,21,1,7,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElement(CounterId,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#load().mjava,0,1,8,0,0,0.20000000298023224,8,3,13,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#isLocalDC(InetAddress).mjava,0,0,6,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#jnaAvailable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AsciiType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeyCache().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#resetUnsafe().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#setValidator(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#getSerialConsistency().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytesToHex(ByteBuffer).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#update(double,long).mjava,0,0,13,2,9,0.11764705926179886,2,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#decommission().mjava,0,0,21,0,1,0.0357142873108387,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getServerSocket(InetAddress).mjava,0,0,19,1,4,0.0181818176060915,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#serialize(SyncComplete,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processInternal(String).mjava,0,0,4,1,4,0.0,2,1,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#close().mjava,0,0,0,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#processColumnFamily(ByteBuffer,ColumnFamily,List[ByteBuffer],int,long,Selection.ResultSetBuilder).mjava,0,0,32,6,5,0.0810810774564743,214,11,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#serialize(Chunk,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#filenameFor(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#snapshotExists(String).mjava,0,0,2,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#deserialize(DataInput,int).mjava,0,0,4,2,1,0.0,7,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(KsDef,String).mjava,0,0,3,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.ViewFragment#ViewFragment(List[SSTableReader],Iterable[Memtable]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeEndpoint(InetAddress).mjava,0,0,11,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexAccessMode().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCoreValidationThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUnsignedByte().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#validate(byte[],int,int).mjava,0,0,5,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#serializedSize(Commit,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getTotalTimeouts().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printReleaseVersion(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#deserialize(DataInput).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serializedSize(InetAddress).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#getKeyNameBuilder().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#SSTableSliceIterator(SSTableReader,FileDataInput,DecoratedKey,ColumnSlice[],boolean,RowIndexEntry).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(String,long,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#needsTaskCommit(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#prepareToWrite(RecordWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#addBootstrapToken(Token,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#compareUnsigned(byte[],byte[],int,int,int,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#subName(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\FloatType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#startKey().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointToTokenMapForReading().mjava,0,1,9,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDataResolver#isDataPresent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#deletionTime().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#toString().mjava,0,8,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#getAllRangesWithSourcesFor(String,Collection[Range[Token]]).mjava,0,0,13,2,4,0.0,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfAssumptions#addAssumption(String,String,String,String).mjava,0,0,5,4,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#columnFilter(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#minComponents(List[ByteBuffer],ByteBuffer,AbstractType[#]).mjava,0,0,26,3,7,0.03999999910593033,9,5,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#getLocalDeletionTime().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#build(IPartitioner).mjava,0,0,15,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#ExcludingBounds(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.Function#getValidator().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#isClean().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#startNativeTransport().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists#indexSpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#Restriction(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getKeyType().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.Factory#buildTServer(Args).mjava,0,0,21,1,7,0.022727273404598236,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ProtocolException#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter#SSTableSplitter(ColumnFamilyStore,SSTableReader,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,10,2,6,0.3142857253551483,72,7,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getLeavingNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_keyspace(String).mjava,0,0,8,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#reconnect(InetAddress,InetAddress).mjava,0,0,13,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#columnStats().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Hex#wrapCharArray(char[]).mjava,0,0,1,1,1,0.0625,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#cacheEndpoint(Token,ArrayList[InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printStreamThroughput(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#intToCB(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#getSegment(long).mjava,0,0,3,1,2,0.30000001192092896,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#partialCompactionsAcceptable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getTargetVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getSSTableColumnIterator(SSTableReader,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#Prepared(MD5Digest,int,ResultSet.Metadata,ResultSet.Metadata).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#maySelectPrefix(Comparator[ByteBuffer],ByteBuffer).mjava,0,0,1,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,6,3,2,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsByteArray(String,CfDef).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#keyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#hasNext().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString(Iterable[SSTableReader]).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DoubleType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\PrepareMessage#PrepareMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\Int32Serializer#serialize(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#discardCompletedSegments(UUID,ReplayPosition).mjava,0,0,16,2,2,0.2571428716182709,7,4,20,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSplitSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#trim(AbstractRangeCommand,List[Row]).mjava,0,0,5,2,0,0.1666666716337204,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String,String).mjava,0,14,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#isWorthMergingForRangeQuery(List[InetAddress],List[InetAddress],List[InetAddress]).mjava,0,0,4,3,3,0.10000000149011612,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#init(UUID,String,Collection[StreamSession]).mjava,0,0,5,3,1,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getTaskCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#disconnect().mjava,0,2,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\KSPropDefs#asKSMetadata(String).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateKeyspace(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.SecurePipelineFactory#SecurePipelineFactory().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#shouldInclude(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#value(Column).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#SecondaryIndexManager(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#waitForSchemaAgreement(InetAddress).mjava,0,0,11,1,2,0.22727273404598236,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getKeyValueParameters().mjava,0,1,15,0,3,0.032258063554763794,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#getTypeAndRemove(Map[ColumnIdentifier,AbstractType],ColumnIdentifier).mjava,0,0,6,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(Collection[AbstractBounds[RowPosition]]).mjava,0,0,5,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#totalBlockFor().mjava,0,3,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#rename(CFMetaData,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#update(long,ColumnStats).mjava,0,0,8,2,0,0.699999988079071,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#write(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#getThriftClient(String,int,boolean).mjava,0,0,2,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#creationTime().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#evaluateResponse(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#readValue(ChannelBuffer).mjava,0,0,11,1,1,0.0,14,1,14,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printClusterStatus(PrintStream,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\CompleteMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#maxBytesForLevel(int).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#ignored().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#Unwrapper(CloseableIterator[CompactedRowContainer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#PaxosState(ByteBuffer,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\TruncateException#TruncateException(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#serializedSize(Inner,int).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#hasLiveColumns(ColumnFamily,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readLongString(ChannelBuffer).mjava,0,0,2,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDescribeCluster().mjava,0,1,17,0,2,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getPosition(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeColumn(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#serializeSchema(Map[DecoratedKey,RowMutation],String).mjava,0,0,5,2,1,0.0,4,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#resetToNewerVersion(int).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomCalculations#maxBucketsPerElement(long).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#YamlFileNetworkTopologySnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.ByNameColumnIterator#ByNameColumnIterator(Iterator[ByteBuffer],ColumnFamily,DecoratedKey).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#cfdefToString(CfDef).mjava,0,0,2,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#decodeEntry(DecoratedKey,Column).mjava,0,0,8,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#newSession().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#SortedBiMultiValMap(SortedMap[K,V],SortedSetMultimap[V,K]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#isEmpty().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumnNames().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getDcLocalReadRepair().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#setupTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply.RangeSliceReplySerializer#serialize(RangeSliceReply,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions,InetAddress,int,InetAddress,int).mjava,0,0,6,5,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isAutoBootstrap().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getStatement(String,ClientState).mjava,0,0,5,2,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getConnection(MessageOut).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCommutative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftClientState#getQueryState().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#RepairSession(UUID,Range[Token],String,boolean,boolean,String[]).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#finished().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readStringMap(ChannelBuffer).mjava,0,0,5,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getBatchlogEndpoints(String).mjava,0,0,17,1,4,0.1818181872367859,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream.Reader#runMayThrow().mjava,0,0,4,0,4,0.07692307978868484,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#complete().mjava,0,1,2,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#getIndexedValue(ByteBuffer,Column).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#Parsed(CFName,Attributes.Raw,List[Pair[ColumnIdentifier,Operation.RawUpdate]],boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#write(long,DataOutput).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#finish().mjava,0,3,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#run().mjava,0,1,14,0,4,0.19230769574642181,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#writtenAtomCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBroadcastAddress(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getPartitioner().mjava,0,87,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#SliceQueryPager(SliceFromReadCommand,ConsistencyLevel,boolean,PagingState).mjava,0,0,1,4,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#[T-extends-RingPosition]_getRestrictedRanges(AbstractBounds[T]).mjava,0,0,17,1,7,0.5416666865348816,10,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamStatus().mjava,0,1,4,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#pack(List[ByteBuffer],int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#addRelocatingTokens(Collection[Token],InetAddress).mjava,0,0,8,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#removeEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#start().mjava,0,1,4,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#switchMemtable(boolean,boolean).mjava,0,0,28,2,4,0.40740740299224854,32,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#recycle().mjava,0,0,7,0,0,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#isIndexed().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#setOutput(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onJoin(InetAddress,EndpointState).mjava,0,0,5,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(Version,File,String,String,int,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readShort().mjava,0,0,2,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#advance().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#RangeSliceCommand(String,String,long,IDiskAtomFilter,AbstractBounds[RowPosition],int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,String,String).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#setPhiConvictThreshold(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Config#setOutboundBindAny(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\OnDiskAtom.Serializer#deserializeFromSSTable(DataInput,Descriptor.Version).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns.SCIterator#next().mjava,0,1,18,0,5,2.0,8,3,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,ColumnFamilyType,AbstractType[#],AbstractType[#]).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#parseStatement(String).mjava,0,0,8,1,5,0.1666666716337204,1,0,14,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#fromBytes(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#newSSTableSegmentThresholdReached(SSTableWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor.BackgroundActivityReporter#run().mjava,0,0,7,0,2,0.0555555559694767,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#RowIterator().mjava,0,0,17,0,7,0.022727273404598236,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedUpdate#ParsedUpdate(CFName,Attributes.Raw,List[Pair[ColumnIdentifier,Operation.RawUpdate]],List[Relation],List[Pair[ColumnIdentifier,Operation.RawUpdate]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.Serializer#serializedSize(DeletionInfo,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getRateLimiter().mjava,0,6,4,0,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#prepare(String,String).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#removeNotificationListener(NotificationListener,NotificationFilter,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getTotalLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#unbootstrap(Runnable).mjava,0,0,17,1,4,0.03846153989434242,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#KeysSearcher(SecondaryIndexManager,Set[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#dataSize().mjava,0,3,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.ProtocolDecoder#decode(ChannelHandlerContext,Channel,Object).mjava,0,0,9,3,6,0.032258063554763794,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAckVerbHandler#doVerb(MessageIn[GossipDigestAck],int).mjava,0,0,19,2,8,1.7333333492279053,48,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager.StandardUpdater#updateRowLevelIndexes().mjava,0,0,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#CommitLogArchiver().mjava,0,0,13,0,3,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#invalidateRowCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#subtractContained(Range[T]).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.Name#Name(String,String,ColumnIdentifier,Kind,int,AbstractType[#]).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#[T]_sendRR(MessageOut,InetAddress).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#add(AbstractCompactedRow).mjava,0,0,8,1,0,0.2142857164144516,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubCounter(org.apache.cassandra.db.Column).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Decoder#decode(ChannelHandlerContext,Channel,ChannelBuffer).mjava,0,0,15,3,5,0.1315789520740509,64,6,28,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#scrub(boolean,String,String...).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validateCompactionOptions(Class[#-extends-AbstractCompactionStrategy],Map[String,String]).mjava,0,0,10,2,2,0.0,8,3,18,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Addition#prepare(CFDefinition.Name).mjava,0,0,3,1,1,0.0,21,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#state().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#executeCqlQuery(String,int,boolean,String).mjava,0,0,7,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#getMinimalKey(DecoratedKey).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#cloneMeShallow().mjava,0,9,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.NullOutputHandler#output(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCompressionRatio().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#next().mjava,0,2,3,0,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushQueueSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds#AbstractBounds(T,T,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Response#Response(Type).mjava,0,0,0,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand.Serializer#deserialize(DataInput,int).mjava,0,0,15,2,11,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.InOrderTester#InOrderTester(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#isShutdown().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#write(WritableByteChannel).mjava,0,0,10,1,9,0.17241379618644714,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelector#isAssignableTo(ColumnSpecification).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#getCompletedTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#sendCqlQuery(Map[String,ByteBuffer],List[ByteBuffer]).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#minEndpoint().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#atomic_batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,18,2,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_union(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeAddKeySpace(Tree).mjava,0,0,9,1,3,0.05000000074505806,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#retry(UUID,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#serialize(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#LZ4Compressor().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#init().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DeleteStatement#mutationForKey(ByteBuffer,String,Long,ThriftClientState,List[ByteBuffer],CFMetaData).mjava,0,0,8,6,2,0.1111111119389534,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#validateContext(ByteBuffer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Decoder#Decoder(Connection.Factory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#getName().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getNextWide().mjava,0,1,59,0,5,0.08695652335882187,197,12,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\IDiskAtomFilter.Serializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getDroppableTombstoneRatio().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Marker#bind(List[ByteBuffer]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event#Event(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#skipBytesFully(DataInput,long).mjava,0,0,2,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#speculativeRetry(SpeculativeRetry).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#maybeResetDeletionTimes(int).mjava,0,0,6,1,2,0.0,5,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics.LatencyMetricNameFactory#LatencyMetricNameFactory(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateMoving(InetAddress,String[]).mjava,0,0,7,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#setOptions(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheKeysToSave().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#announceMigration().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#deleteUser(String).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.ResponseHandler#exceptionCaught(ChannelHandlerContext,ExceptionEvent).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#prune(DecoratedKey,ColumnFamily).mjava,0,0,6,2,3,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#describeColumnFamily(KsDef,CfDef,NodeProbe).mjava,0,0,58,3,8,0.04285714402794838,1088,11,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewColumnFamily(CFMetaData).mjava,0,0,10,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#handleStreamEvent(StreamEvent).mjava,0,0,38,1,13,0.019607843831181526,11,5,44,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyNotDefinedException#ColumnFamilyNotDefinedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForRead(String).mjava,0,0,1,1,0,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#getColumnFamilyIds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#create(long,DeletionTime,ColumnIndex).mjava,0,0,1,3,0,0.375,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeof(UUID).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#setIndexRemoved(String,String).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfDefNamesComparator#compare(CfDef,CfDef).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getMaxTimestamp().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientTransportFactory(Configuration).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setMaximumCompactorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getLiveSortedEndpoints(Keyspace,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getMemtablesPendingFlush().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexForColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#copyOpts(CFMetaData,CFMetaData).mjava,0,0,27,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.CompactedRowContainer#CompactedRowContainer(LazilyCompactedRow).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toInt(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#grant(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#initialize(InputSplit,TaskAttemptContext).mjava,0,0,17,2,5,0.03333333507180214,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#estimateRowsFromIndex(RandomAccessReader).mjava,0,0,10,1,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#updateDigest(MessageDigest).mjava,0,0,10,1,1,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBloomFilterDiskSpaceUsed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#whereClause().mjava,0,1,12,0,1,0.20000000298023224,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#disableRelocations(String...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns.SCIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#stringAsType(String,AbstractType[#]).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#vintDecodeSize(byte).mjava,0,0,0,1,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultDouble#isModified().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Value#fromSerialized(ByteBuffer,ListType).mjava,0,0,5,2,2,0.1428571492433548,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message#getStreamId().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#internalAddReadySegment(CommitLogSegment).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#wrapResponseHandler(RowMutation,ConsistencyLevel,WriteType).mjava,0,0,11,3,6,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#forwardToSource().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#execute(QueryState,QueryOptions).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#toString(Map[K,V]).mjava,0,0,12,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#AtomicSortedColumns(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getData().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#createShuffleBatchInsert(Collection[String],IPartitioner[#]).mjava,0,0,16,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getString(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#isReversedType(CFDefinition.Name).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeTombstoneForOverwrite(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getBoundsTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getLevelSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#search(ExtendedFilter).mjava,0,0,7,1,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#next().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getComparator(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#removeColumnDefinition(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\MeteredFlusher#countFlushingBytes().mjava,0,2,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#create(ColumnFamilyStore,DataRange,List[IndexExpression],int,boolean,long).mjava,0,0,1,6,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getInputFormat().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#listen().mjava,0,0,2,0,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#RowIterator().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.PipelineFactory#getPipeline().mjava,0,0,8,0,1,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#currentCfDefs().mjava,0,12,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#describeOwnership(List[Token]).mjava,0,0,19,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#maxRemaining().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#EmptyColumns(CFMetaData,DeletionInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair#NodePair(InetAddress,InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#addAll(IMutation).mjava,0,0,8,1,2,0.1538461595773697,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#create(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,7,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#newSocket().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#serializedSize(NodePair,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#processWhereClause(List[Relation],ColumnSpecification[]).mjava,0,0,18,2,5,0.0,30,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo#toString().mjava,0,3,11,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\PagingState#serialize().mjava,0,2,6,0,2,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.Serializer#deserialize(DataInput,int,AbstractType).mjava,0,0,4,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#prepareToRead(RecordReader,PigSplit).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#doInsert(ConsistencyLevel,List[#-extends-IMutation]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#connectionComplete(SocketAddress).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#search(Interval[C,D]).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getScanners(Collection[SSTableReader],Range[Token]).mjava,0,0,14,2,3,0.190476194024086,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#insertAfter(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,7,5,0,0.7142857313156128,6,3,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#MapType(AbstractType[K],AbstractType[V]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#sendTreeRequests(Collection[InetAddress]).mjava,0,0,12,1,1,0.0833333358168602,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#LocalStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#updateDigest(MessageDigest,ByteBuffer).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#clearEndpointCache().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.OneShotRenewer#OneShotRenewer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#hostId(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#LazyColumnIterator(DecoratedKey,IColumnIteratorFactory).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#start(int,Map[ApplicationState,VersionedValue]).mjava,0,0,15,2,1,8.5,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover().mjava,0,1,13,0,2,0.11538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getRecentBloomFilterTruePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#SSTableSimpleWriter(File,IPartitioner,String,String,AbstractType[#],AbstractType[#]).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#readBytes(int).mjava,0,0,2,1,1,0.05882352963089943,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#setIndexName(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnNames().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rpcaddress(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#close().mjava,0,1,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isCompatible().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#RangeSliceCommand(String,String,long,IDiskAtomFilter,AbstractBounds[RowPosition],List[IndexExpression],int,boolean,boolean).mjava,0,0,0,9,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,10,4,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputColumnFamily(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator#maybeInit().mjava,0,1,25,0,4,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setReadRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#populateIoCacheOnFlush().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#rebuildSecondaryIndex(String,String,String...).mjava,0,0,11,3,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#allData(IPartitioner).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedThrottledReader#CompressedThrottledReader(String,CompressionMetadata,RateLimiter).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#setupDefaultUser().mjava,0,0,9,0,0,0.05263157933950424,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#establishConnection().mjava,0,2,11,0,1,0.13636364042758942,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc#equals(Object).mjava,0,0,6,1,1,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#setupVersion().mjava,0,1,12,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setStreamThroughput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#affectedColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists#Lists().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.CompactedRowContainer#CompactedRowContainer(DecoratedKey,Future[ColumnFamily]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.SequentialOrder#start().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#DropTriggerStatement(CFName,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#fromThrift(TriggerDef).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSavedCachesLocation().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#filter(AbstractScanIterator,ExtendedFilter).mjava,0,0,20,2,7,0.057692307978868484,15,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#serializedSize(TypeSizes).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#RepairJob(UUID,String,String,Range[Token],boolean).mjava,0,0,5,5,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#setSources(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#forProgress(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#makeRowBounds(Token,Token,IPartitioner).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Hex#bytesToHex(byte...).mjava,0,0,1,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#getPathInfo().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#skipBloomFilter(DataInput).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Tracker#isDeleted(Column).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getExceptionCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#currentLimit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#createSecondaryIndexSearcher(Set[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#toString().mjava,0,0,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubInfo#ScrubInfo(RandomAccessReader,SSTableReader).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#serializedSize(Object,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#addExpireTimeForEndpoint(InetAddress,long).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getRegisteredCallbackAge(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#componentsCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#fromSchema(Row).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeReloadCompactionStrategy().mjava,0,2,5,0,0,0.3333333432674408,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\TypeCast#TypeCast(CQL3Type,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#buildIndexBlocking().mjava,0,0,14,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\KSPropDefs#asKSMetadataUpdate(KSMetaData).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#PrepareMessage(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#markSuspect().mjava,0,8,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#fromSchema(Row).mjava,0,0,6,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\Int32Serializer#toString(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#sendNotification(String,String,Object).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#addAll(IMutation).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#close().mjava,0,0,2,0,1,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#asDBColumn(Column).mjava,0,0,0,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSReadError#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFloat().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ScheduledRangeTransferExecutorService#setup().mjava,0,1,5,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkLength().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter.AbstractRangeClient#close().mjava,0,0,2,0,0,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Setter#Setter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.SimpleBlockFetcher#SimpleBlockFetcher().mjava,0,0,9,0,4,0.30434781312942505,5,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#decomposeName(String...).mjava,0,0,6,1,2,0.0833333358168602,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#setKeyCacheSavePeriodInSeconds(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#parseArgs(String[]).mjava,0,0,14,1,8,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeUpdateRowCache(DecoratedKey).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#run().mjava,0,0,14,0,7,0.08620689809322357,14,6,42,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#onFailure(Throwable).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#replace(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,7,2,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\CorruptSSTableException#CorruptSSTableException(Exception,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#receiveMessage(DataInputStream,int).mjava,0,0,10,2,4,0.07999999821186066,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#addAllWithSizeDelta(ColumnFamily,Allocator,Function[Column,Column],SecondaryIndexManager.Updater).mjava,0,0,10,4,3,0.5714285969734192,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete#ValidationComplete(RepairJobDesc).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getColumnName().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#fromThrift(KsDef,CFMetaData...).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#Rows(ResultSet).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#hasKeySpace().mjava,0,13,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#getRecentTotalTimeout().mjava,0,1,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\FloatType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#serialize(V).mjava,0,0,2,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry#columnsIndex().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#submitWrite(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#knowsVersion(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isLocal(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#setVersion(InetAddress,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#newMessageDigest(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#allInSameCF().mjava,0,1,7,0,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#estimatedKeys().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#append(AbstractCompactedRow).mjava,0,0,7,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesSearcher#getIndexedIterator(ExtendedFilter).mjava,0,0,79,1,25,0.1818181872367859,65420,20,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#reconcile(Column,Allocator).mjava,0,0,9,2,1,0.7142857313156128,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#create(ColumnDefinition).mjava,0,0,0,1,0,0.1666666716337204,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#build(ColumnFamily).mjava,0,0,16,1,4,0.04545454680919647,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#indexes(Column).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamException#StreamException(StreamState,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#ConsistencyLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#addCmdOption(String,String,boolean,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculateAlwaysExecutor#executeAsync().mjava,0,0,27,0,5,0.02777777798473835,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#hashCode().mjava,0,0,2,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\StringToken#StringToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromOutputAddressList(Configuration).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#ackCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#isIndexEntryStale(ByteBuffer,ColumnFamily,long).mjava,0,0,5,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#toRowBounds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#NamesQueryFilter(SortedSet[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeByte(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object,Object).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#serialize(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Value#get().mjava,0,0,8,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getInetAddress(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#createAuthenticatedClient(String,int,Configuration).mjava,0,0,12,3,5,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(CFMetaData,DataInput,String,DecoratedKey,long,boolean,SSTableReader,ColumnSerializer.Flag).mjava,0,0,8,8,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnList().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply#createMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserializeColumnBody(DataInput,ByteBuffer,int,ColumnSerializer.Flag,int).mjava,0,0,11,5,9,0.0,4,2,17,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnStart().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#reconcile(Column,Allocator).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getClusterName().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#toString().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#writeKey(PrintStream,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#setIndexBuilt(Set[String]).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#close().mjava,0,0,13,0,5,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#getBackingFiles().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#removeOldShards(int).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#Validator(RepairJobDesc,InetAddress,MerkleTree,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#withUpdatedSlice(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setMode(Mode,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#deserialize(TDeserializer,TBase,DataInput).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_prepared_cql3_query(int,List[ByteBuffer],ConsistencyLevel).mjava,0,0,17,3,2,0.027027027681469917,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#processStatement(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#isThriftCompatible().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#interrupt().mjava,0,0,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,Charset).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isColumnRange().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset(FileMark).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,8,2,4,0.7857142686843872,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewKeyspace(KSMetaData,long).mjava,0,0,6,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#appendToStringBuilder(StringBuilder).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#makeIncludingKeyBounds(RowPosition).mjava,0,0,0,1,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#updateRestriction(CFDefinition.Name,Restriction,Relation,ColumnSpecification[]).mjava,0,0,20,4,5,0.0,57,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator#RequestCoordinator(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#getCurrentKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#encodeBody(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#validationComplete(RepairJobDesc,InetAddress,MerkleTree).mjava,0,0,16,3,2,0.12903225421905518,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#serialize(BigDecimal).mjava,0,0,7,1,4,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getBloomFilterFpChance().mjava,0,8,0,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceRepair(String,boolean,boolean,String...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#decompose(UUID).mjava,0,0,2,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.SecurePipelineFactory#getPipeline().mjava,0,0,4,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#validateConfiguration(Configuration).mjava,0,0,4,1,0,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\TypeCast#isAssignableTo(ColumnSpecification).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#freshSegment().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#convict(InetAddress,double).mjava,0,0,4,2,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#oneSerializedSize(Pair[T,Object]).mjava,0,0,1,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTempSSTablePath(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyDouble(String,Double).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#BatchStatement(int,Type,List[ModificationStatement],Attributes).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#hasProperty(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readChar().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BytesType#BytesType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getHostIdMap().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#serialize(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#checkHealth().mjava,0,1,18,0,6,0.1111111119389534,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputInitialAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getPosition(RowPosition,Operator,boolean).mjava,0,0,40,3,17,0.17924527823925018,1800,17,7,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionController#ValidationCompactionController(ColumnFamilyStore,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serializedSize(GossipDigest,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#examineGossiper(List[GossipDigest],List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,13,3,5,3.5,29,7,27,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#RangeTombstoneList(Comparator[ByteBuffer],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ThrottledReader#open(File,RateLimiter).mjava,0,0,0,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\FloatSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#syncDataOnlyInternal().mjava,0,2,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#serialize(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#clear(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getNaturalEndpoints(RingPosition).mjava,0,0,9,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadVerbHandler#getResponse(ReadCommand,Row).mjava,0,0,2,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDown(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#isOutgoingConnected().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleStrategy#validateOptions().mjava,0,0,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter.GroupByPrefix#GroupByPrefix(long,CompositeType,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#toString().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#nextKeyValue().mjava,0,1,4,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#getSerializer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#isWorthMergingForRangeQuery(List[InetAddress],List[InetAddress],List[InetAddress]).mjava,0,0,3,3,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#write(RowMutation).mjava,0,0,14,1,2,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#isCounter().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addExpiringColumn(ByteBuffer,ByteBuffer,long,int,long).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#setKeyType(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Term.Terminal#bind(List[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#authenticate(Socket).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#fromId(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#[V]_runWithCompactionsDisabled(Callable[V],boolean).mjava,0,0,19,2,5,0.11764705926179886,6,3,34,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printRangeKeySample(PrintStream).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#decompress(byte[]).mjava,0,0,9,1,0,0.3076923191547394,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serializedSize(VersionedValue,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#finish().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#DataDirectory(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#addMovingEndpoint(Token,InetAddress).mjava,0,0,6,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#hashToBigInteger(ByteBuffer).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#setHasMorePages(PagingState).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#deserialize(DataInput,int).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#drop(String).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#InstrumentingCache(String,ICache[K,V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#isEmpty(List[IndexExpression]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#compare(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getRow(QueryFilter).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#mutationFromTuple(Tuple).mjava,0,0,14,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#getDatacenterRacks().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#truncateBlocking(String,String).mjava,0,0,15,2,6,0.19230769574642181,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#AbstractThreadUnsafeSortedColumns(CFMetaData,DeletionInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#processWithSyncBatch().mjava,0,0,25,0,4,0.20000000298023224,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#update(MessageDigest).mjava,0,0,7,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#writeValue(Object,ChannelBuffer).mjava,0,0,16,2,1,0.0,16,1,16,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeSendBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#enforceCommentNotNull(CharSequence).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#[T]_newTaskFor(Runnable,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#filterColumnFamily(ColumnFamily,QueryFilter).mjava,0,0,6,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#ConnectionMetrics(InetAddress,OutboundTcpConnectionPool).mjava,0,0,13,2,0,0.025641025975346565,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#SliceQueryPager(SliceFromReadCommand,ConsistencyLevel,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#revokeAll(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\PermissionAlteringStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheSavePeriodInSeconds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#export(Descriptor,PrintStream,String[]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#shouldCompressConnection().mjava,0,2,4,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#loadNewSSTables(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#withUpdatedSlices(ColumnSlice[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#deserializeBounds(DataInput).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinitionForIndex(String).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#makeAliasSpec(CFDefinition,AbstractType[#],ColumnIdentifier).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateFilterClauses(CFMetaData,List[IndexExpression]).mjava,0,0,17,2,4,0.027027027681469917,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\PoolingSegmentedFile#getSegment(long).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#write(byte[],int,int).mjava,0,0,2,3,0,0.875,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getColumn(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#getBytesRead().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#ColumnFamilyRecordWriter(Configuration,Progressable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markClean(UUID,ReplayPosition).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#CollectionType(Kind).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,8,2,4,0.0,21,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#SSTableSimpleUnsortedWriter(File,IPartitioner,String,String,AbstractType[#],AbstractType[#],int,CompressionParameters).mjava,0,0,1,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortedTokens().mjava,0,18,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#wrap(Throwable,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Literal#prepare(ColumnSpecification).mjava,0,0,11,1,5,0.10526315867900848,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RetriedSliceFromReadCommand#RetriedSliceFromReadCommand(String,ByteBuffer,String,long,SliceQueryFilter,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CommitLogMetrics#CommitLogMetrics(ICommitLogExecutorService,CommitLogAllocator).mjava,0,0,6,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#response(MessageIn[PrepareResponse]).mjava,0,0,6,1,1,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializeCfId(UUID,DataOutput,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#apply(RowMutation,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#newSuperColumn(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#namesFilterToSC(CompositeType,NamesQueryFilter).mjava,0,0,6,2,3,0.0555555559694767,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getIndexExpressions(List[ByteBuffer]).mjava,0,0,18,1,4,0.040816325694322586,120,8,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#minTimeUUID(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#shutdownNow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheSavePeriod().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#createCollector(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_intersectionBothWrapping(Range[T],Range[T]).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#ValidationRequest(RepairJobDesc,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#columnFamily().mjava,0,30,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\TypeCast#prepare(ColumnSpecification).mjava,0,0,7,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#toString(BigDecimal).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamEvent.ProgressEvent#ProgressEvent(UUID,ProgressInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createAllDirectories().mjava,0,2,13,0,0,0.0,8,3,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#start().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputColumnFamily(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getCapacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#getEstimatedAvailableSpace().mjava,0,3,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData.SpeculativeRetry#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#DeletionInfo(RangeTombstone,Comparator[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#serialize(ReadResponse,DataOutput,int).mjava,0,0,12,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftClientState#ThriftClientState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#fetchPage(int).mjava,0,0,16,1,3,0.2857142984867096,64,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#announceMigration().mjava,0,0,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,12,4,3,0.05263157933950424,4,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serializedSize(HeartBeatState,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics.LatencyMetricNameFactory#createMetricName(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#stop().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#readSchemaRow(String).mjava,0,0,7,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#getSubSplits(String,String,TokenRange,Configuration).mjava,0,0,14,4,4,0.02500000037252903,5,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#formatColumnName(String,String,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#markObsolete(Collection[SSTableReader],OperationType).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#state().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.LocalRangeSliceRunnable#runMayThrow().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#bytesUsed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#stopGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#partitionFilterToWhereClauseString(Expression).mjava,0,0,12,1,5,0.0,14,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DecimalType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(File,String).mjava,0,0,11,2,8,0.190476194024086,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateColumns(ColumnFamily,List[#-extends-Iterator[Column]],IDiskAtomFilter,int,long).mjava,0,0,6,5,4,0.095238097012043,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#compare(ByteBuffer,ByteBuffer).mjava,0,0,3,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#maxRemaining().mjava,0,1,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#findDroppableSSTable(int).mjava,0,0,12,1,4,0.03846153989434242,9,4,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ColumnFamilyMetrics#ColumnFamilyMetrics(ColumnFamilyStore).mjava,0,0,91,1,19,0.009900989942252636,128,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#startGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputCompressionParamaters(Configuration).mjava,0,0,6,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliOptions#printUsage().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#Region(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getReadConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MarshalException#MarshalException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand.Type#Type(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getValidatorForValue(CfDef,byte[]).mjava,0,0,7,2,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.RowCacheSerializer#load(Set[ByteBuffer],ColumnFamilyStore).mjava,0,0,4,2,2,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getComparator().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#removeEndpoint(InetAddress).mjava,0,0,15,1,0,0.1111111119389534,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#tokens(Collection[Token]).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#close(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#serialize(StreamSummary,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#addColumn(Column,Allocator,SecondaryIndexManager.Updater).mjava,0,0,10,3,3,0.190476194024086,7,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#createSSTableAndLengthPairs(Iterable[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#process(String,ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addTruePositive().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_isInRanges(T,Iterable[Range[T]]).mjava,0,0,1,2,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#isAnyHostDown().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#bits2words(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId.CounterIdRecord#CounterIdRecord(CounterId,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#fail().mjava,0,0,4,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyFinish().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#RangeStreamer(TokenMetadata,InetAddress,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#getLocalDeletionTime().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\EmptyType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildCasFailureResultSet(ByteBuffer,ColumnFamily).mjava,0,0,12,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#midpoint(Token,Token).mjava,0,0,9,2,6,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#stopRPCServer().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Header.Flag#deserialize(int).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#serializeEvent().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#filterToSC(CompositeType,IDiskAtomFilter).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#toString().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getMap(String).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#addTransferFiles(Collection[Range[Token]],Collection[SSTableReader]).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.CommitLogSegmentFileComparator#compare(File,File).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#IncomingTcpConnection(int,boolean,Socket).mjava,0,0,4,3,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#StreamingHistogram(int,Map[Double,Long]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateCounterForWrite(CFMetaData).mjava,0,0,2,1,0,0.0,8,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#finishStartup().mjava,0,1,8,0,2,0.23076923191547394,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#enqueue(MessageOut[#],int).mjava,0,0,2,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#apply().mjava,0,10,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSSLStoragePort().mjava,0,4,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#getRow(Keyspace).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#serializedSize(StreamInitMessage,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#chunkLengthInKB().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#rangesAsString().mjava,0,1,15,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDescribe(Tree).mjava,0,0,21,1,6,0.04838709533214569,224,11,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#compareCollectionMembers(ByteBuffer,ByteBuffer,ByteBuffer).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#messageReceived(StreamMessage).mjava,0,0,6,1,3,0.0,22,1,22,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#DropIndexStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#Version(String).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Literal#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component#name().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onJoin(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Upgrader.UpgradeController#shouldPurge(DecoratedKey,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.Serializer#serializedSize(DeletionInfo,TypeSizes,int).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#getColumnFamily().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#partialCompactionsAcceptable().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isValid().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#equals(Object).mjava,0,0,0,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#isStale(IndexedEntry,ColumnFamily,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#hash2_64(ByteBuffer,int,int,long).mjava,0,0,15,4,7,0.0,36,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\IntegerType#findMostSignificantByte(ByteBuffer).mjava,0,0,5,1,4,0.0,19,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#joinRing().mjava,0,0,10,0,0,0.0,4,2,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.ParallelOrder#add(R).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#reverseIterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPath(CFMetaData,ColumnPath).mjava,0,0,4,2,0,0.0,20,6,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#apply(DecoratedKey,ColumnFamily,SecondaryIndexManager.Updater).mjava,0,0,11,3,4,0.05263157933950424,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Literal#isAssignableTo(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getReadCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaxSSTableSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getLocalHostId().mjava,0,2,11,0,3,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#getRange().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#add(OnDiskAtom).mjava,0,0,9,1,2,0.2083333283662796,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#intersects(List[ByteBuffer],List[ByteBuffer],SliceQueryFilter).mjava,0,0,11,3,5,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\CassandraException#CassandraException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#addSavedEndpoint(InetAddress).mjava,0,0,14,1,1,0.04545454680919647,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.exceptions.AuthenticationException).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#regularColumnsToFetch().mjava,0,1,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addKeyValues(ColumnIdentifier,List[Term]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThroughput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toSchemaNoColumnsNoTriggers(RowMutation,long).mjava,0,0,82,2,3,0.13953489065170288,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#equals(Object).mjava,0,0,4,1,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#executeLocally().mjava,0,1,6,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#estimatedKeys().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#PrecompactedRow(CompactionController,List[SSTableIdentityIterator]).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#isMinimum(IPartitioner).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#createKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#addMicro(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRangeSlice(AbstractBounds[RowPosition],List[IndexExpression],IDiskAtomFilter,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#addCallback(IAsyncCallback,MessageOut,InetAddress,long).mjava,0,0,6,4,2,0.10000000149011612,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setTraceProbability(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofWithLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#componentsCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReadRpcTimeout().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#replace(Column,Column).mjava,0,0,10,2,1,0.25,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#indexFor(ByteBuffer,List[IndexInfo],AbstractType[#],boolean,int).mjava,0,0,8,5,4,0.5652173757553101,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#addSeed(InetAddress).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#add(DeletionTime).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#beforeAppend(DecoratedKey).mjava,0,0,3,1,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printInfo(PrintStream,ToolCommandLine).mjava,0,0,50,2,7,0.1666666716337204,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#getEffectiveMemoryLayoutSpecification().mjava,0,1,9,0,4,0.546875,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#LocalPartitioner(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeSafe().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Value#Value(Set[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#recover(File[]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#hashCode().mjava,0,0,28,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#bigForBytes(ByteBuffer,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#leaving(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V,long).mjava,0,0,2,3,1,0.5,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#init(String).mjava,0,0,20,1,8,0.027027027681469917,3,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#makeRandomGossipDigest(List[GossipDigest]).mjava,0,0,12,1,5,0.03703703731298447,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#Scrubber(ColumnFamilyStore,SSTableReader,OutputHandler,boolean).mjava,0,0,15,4,1,0.31578946113586426,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#add(double).mjava,0,0,2,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#create(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#columnFilter(ByteBuffer).mjava,0,0,6,1,0,1.1666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#lockFor(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#validateTypes(Function,List[#-extends-AssignementTestable],ColumnSpecification).mjava,0,0,24,3,2,0.13333334028720856,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#forKeyRange(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutationVerbHandler#doVerb(MessageIn[RowMutation],int).mjava,0,0,10,2,5,0.03703703731298447,3,2,19,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#read(DataInput).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#releaseReference().mjava,0,11,10,0,0,0.75,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Response#setTracingId(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#CreateTriggerStatement(CFName,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SchemaCheckVerbHandler#doVerb(MessageIn,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#decommission().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#calculatePendingRanges().mjava,0,11,4,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#getPosition().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getCompletedMesssages().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPartitionerName().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#containsBindMarker().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#getCanonicalPath(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_prepared_cql_query(int,List[ByteBuffer]).mjava,0,0,15,2,2,0.03030303120613098,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#readIndexedColumns(CFMetaData,FileDataInput,SortedSet[ByteBuffer],List[IndexHelper.IndexInfo],long,List[OnDiskAtom]).mjava,0,0,16,6,9,43.0,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#execute(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(File[]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#doGetCounter(ByteBuffer,ColumnPath).mjava,0,0,5,2,3,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalToken#compareTo(Token[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeTransfer[ScheduledRangeTransferExecutorService]#run().mjava,0,0,20,0,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#MessagingService().mjava,0,0,13,0,5,0.0,2,1,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream.Reader#Reader(InputStream,CompressionInfo,BlockingQueue[byte[]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyDrop(String,String).mjava,0,0,7,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#describeRingJMX(String).mjava,0,0,5,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getConnectionPool(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageOut,InetAddress,IAsyncCallback).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#validate(ClientState).mjava,0,0,13,1,1,0.15000000596046448,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#keySamples(Range[Token]).mjava,0,0,4,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#addMicro(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#fetchAsync().mjava,0,2,11,0,3,1.5,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap.Builder#Builder(CompositeType,boolean,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#AbstractType().mjava,0,0,17,0,4,0.0,48,7,3,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#getReceivedCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#hashCode().mjava,0,0,2,0,1,0.2222222238779068,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#returnType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(Descriptor,boolean).mjava,0,0,8,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#setIncrementalBackupsEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#integer(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#getColumnFamily().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#checkStream(PrintStream).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeyCacheHit().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#injectApplicationState(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#ExpiringColumn(ByteBuffer,ByteBuffer,long,int,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\GrantStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractRowResolver#AbstractRowResolver(ByteBuffer,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#QueryMessage(String,ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#decompress(Frame).mjava,0,0,7,1,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getEstimatedColumnCount().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#describeRing(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getString(ByteBuffer).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AlterTableStatement#AlterTableStatement(String,OperationType,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#dataSize().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics.ThreadPoolMetricNameFactory#ThreadPoolMetricNameFactory(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnRegular#indexes(ByteBuffer).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithBadness(InetAddress,List[InetAddress]).mjava,0,0,6,2,2,0.0,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#componentCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#getWorkMap(Multimap[Range[Token],InetAddress]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Serializer#deserializeBody(DataInput,ByteBuffer,Descriptor.Version).mjava,0,0,4,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsBytes(String,CfDef).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#reverse().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#SSTableWriter(String,long).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#isMinimum(IPartitioner).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputColumns(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#replaceFlushed(Memtable,SSTableReader).mjava,0,0,5,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#create(String,Map[Option,Object]).mjava,0,0,7,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#sendToOtherReplica(DecoratedKey,ColumnFamily).mjava,0,0,10,2,4,0.20000000298023224,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#newRow(ByteBuffer).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\DroppedMessageMetrics#getRecentlyDropped().mjava,0,1,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#ManyToOne(List[#-extends-Iterator[In]],Comparator[In],Reducer[In,Out]).mjava,0,0,5,3,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#requireFullClusteringKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getSplits(List[Token],int,CFMetaData).mjava,0,0,8,3,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#bufferCursor().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#createMutationList(ConsistencyLevel,Map[ByteBuffer,Map[String,List[Mutation]]],boolean).mjava,0,0,23,3,10,0.03773584961891174,48,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getHeapMemoryUsage().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#setup().mjava,0,0,5,0,1,0.04545454680919647,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.PipelineFactory#getPipeline().mjava,0,0,9,0,1,0.0833333358168602,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateOnDiskAtom(ColumnFamily,Iterator[#-extends-OnDiskAtom],int).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ReverseSortedCollection#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#validateOptions(Map[String,String],Map[String,String]).mjava,0,0,14,2,3,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#escape(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#serialize(CompressionInfo,DataOutput,int).mjava,0,0,4,3,1,0.0833333358168602,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSync().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommand#createMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#startLeaving().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#WrappedCloseableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#hashpw(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer.SingleDatacenterFilter#SingleDatacenterFilter(IEndpointSnitch,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#addAll(ColumnFamily,Allocator,Function[Column,Column]).mjava,0,0,1,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#compress(byte[],int,int,ICompressor.WrappedArray,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#SplittingCompactionTask(ColumnFamilyStore,SSTableReader,int).mjava,0,0,1,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#serialize(FileMessageHeader,DataOutput,int).mjava,0,0,9,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPartitioner(IPartitioner[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#getGeneration().mjava,0,19,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#validate(Column).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ColumnParent,Iterable[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#flushIndexesBlocking().mjava,0,2,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#CheaterFutureTask(Callable[V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#execute().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#stopClient().mjava,0,0,7,0,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerConnection#getQueryState(int).mjava,0,0,2,1,2,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#maybeAddEntry(DecoratedKey,long).mjava,0,0,4,2,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#commitTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#deserialize(DataInput,Descriptor.Version).mjava,0,0,6,2,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#authorize(AuthenticatedUser,IResource).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getNonSystemKeyspaces().mjava,0,18,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#updateDigest(MessageDigest).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#newAuthorizer(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#selectACollection().mjava,0,2,1,0,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#hasConditions().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#removeEndpoint(InetAddress).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#getReplicationFactor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#ClientState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#createKey().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromInputAddressList(Configuration).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#removeRegisteredCallback(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getResponseCompletedTasks().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#removeDeletedAndOldShards(DecoratedKey,CompactionController,ColumnFamily).mjava,0,0,11,3,2,0.4117647111415863,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#gotoMinOf(IntervalNode).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getColumnFamilyName().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#getTotalLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#validateKeyspace(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.Addition#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UTF8Serializer.UTF8Validator#validate(ByteBuffer).mjava,0,0,3,1,2,0.20000000298023224,75,19,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getCompactedRow(SSTableIdentityIterator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDelColumnFamily(Tree).mjava,0,0,6,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeRangeTombstone(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#get(K).mjava,0,0,4,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#getColumnFamilies().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BytesSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter.AbstractRangeClient#AbstractRangeClient(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isDeleted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getBaseCfs().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#write(int).mjava,0,0,0,1,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnPartitionKey#buildIndexComparator(CFMetaData,ColumnDefinition).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#loadNewSSTables(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#pointInTimeExceeded(RowMutation).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#applyNewStates(InetAddress,EndpointState,EndpointState).mjava,0,0,22,3,3,0.11764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#disable().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#getMarkedForDeleteAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addAtom(OnDiskAtom).mjava,0,0,2,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElement(CounterId,long,long,boolean).mjava,0,0,6,4,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serialize(ReadCommand,ByteBuffer,DataOutput,int).mjava,0,0,8,4,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#thriftify(org.apache.cassandra.db.Column).mjava,0,0,9,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeof(short).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\LongSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#getLiveCount(ColumnFamily,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#CompositeType(List[AbstractType[#]]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#delete(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#RegisterMessage(List[Event.Type]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#computeExpireTime().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#onDiskLength().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#prepare(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(String,String).mjava,0,13,2,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#saveCaches().mjava,0,0,9,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateExpectedOptions().mjava,0,2,6,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.Function#Function(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getOverlappingSSTables(Collection[SSTableReader]).mjava,0,0,11,1,3,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#completeTree().mjava,0,1,4,0,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#cloneWithNewName(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\CompleteMessage#CompleteMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DecimalType#fromString(String).mjava,0,0,3,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#SchemaAlteringStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#createValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#[T]_getBuckets(Collection[Pair[T,Long]],double,double,long).mjava,0,0,13,4,8,0.17142857611179352,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#regularDef(ByteBuffer,AbstractType[#],Integer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#requestGC().mjava,0,1,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UserOptions#getOptions().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#validateOptions().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compactionStrategyOptions(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#hashCode().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#prepareTracingSession(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getRandomToken().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#messageReceived(ChannelHandlerContext,MessageEvent).mjava,0,0,25,2,4,0.043478261679410934,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#ResultSet(List[ColumnSpecification]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#logOpenException(Descriptor,IOException).mjava,0,0,3,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#getReceivingStream(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getAllLocalAddresses().mjava,0,3,6,0,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#initializeNodeUnsafe(InetAddress,UUID,int).mjava,0,0,6,3,4,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#intersects(Range[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#Commit(ByteBuffer,UUID,ColumnFamily).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Literal#validateAssignableTo(ColumnSpecification).mjava,0,0,7,1,1,0.1428571492433548,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpoints(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,16,4,5,0.043478261679410934,8,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#loadTopologyConfiguration().mjava,0,1,26,0,13,0.007751937955617905,4096,12,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#gossiperStarting().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setInMemoryCompactionLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isEmpty().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#create(ColumnFamilyStore,int,Iterable[SSTableReader],SizeTieredCompactionStrategyOptions).mjava,0,0,3,4,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getProperty(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#throwSyntaxError(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#serialize(StreamInitMessage,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#connect().mjava,0,3,14,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getProgress().mjava,0,0,2,0,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#serializedSize(RangeSliceCommand,int).mjava,0,0,21,2,5,0.0,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#CommitLogAllocator().mjava,0,0,7,0,2,0.1538461595773697,3,3,13,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AsciiType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokenMetadata().mjava,0,34,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#setBoundTerms(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#LoadBroadcaster().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#cleanup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(File).mjava,0,0,2,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#StreamingRepairTask(RepairJobDesc,SyncRequest).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#parseIdentifiers(String,String).mjava,0,0,3,2,1,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#createWriter(ColumnFamilyStore,long).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#getSchema(String,Job).mjava,0,0,14,2,7,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#queue(Thread,String,long).mjava,0,0,5,3,1,0.03999999910593033,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#cacheType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#discoverComponentsFor(Descriptor).mjava,0,0,7,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row#getLiveCount(IDiskAtomFilter,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#prepareToWrite(RecordWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata.Codec#encode(Metadata,int).mjava,0,0,23,2,6,0.0,10,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleAbstractColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#rebuildIndex(String,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,byte[],int,int).mjava,0,0,7,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#reconcile(Column,Allocator).mjava,0,0,24,2,0,0.3333333432674408,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ChecksummedOutputStream#write(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updatePreferredIP(InetAddress,InetAddress).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#caclculateEnd(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#comparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#removeOldShards(ByteBuffer,int).mjava,0,0,21,2,12,0.1320754736661911,66,9,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row#Row(DecoratedKey,ColumnFamily).mjava,0,0,0,2,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#deserialize(DataInput,int).mjava,0,0,8,2,8,0.0476190485060215,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#checkAccess(ClientState).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeInternal(QueryState).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serialize(ReplayPosition,DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\ReceivedMessage#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,ByteBuffer,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#dataSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables().mjava,0,1,40,0,7,0.043478261679410934,32,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#add(RangeTombstone).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#getSocket().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#setupTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#RangeNamesQueryPager(RangeSliceCommand,ConsistencyLevel,boolean,PagingState).mjava,0,0,3,4,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#rotl64(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#IndexWriter(long).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeShowKeySpaces().mjava,0,1,5,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#getComponent(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#deserialize(DataInput,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SnapshotCommand#SnapshotCommand(String,String,String,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#CommitLogDescriptor(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#SecondaryIndexBuilder(ColumnFamilyStore,Set[String],ReducingKeyIterator).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#scheduleWithFixedDelay(Runnable,long,long,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#pauseHintsDelivery(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPredecessor(Token).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#getPartitioner(String,int,boolean).mjava,0,0,6,3,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#main(String[]).mjava,0,0,6,1,3,0.1538461595773697,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#copy().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Literal#prepare(ColumnSpecification).mjava,0,0,12,1,7,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#commitPaxos(Commit,ConsistencyLevel).mjava,0,0,16,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#computeNext().mjava,0,0,6,0,1,0.0714285746216774,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#BloomSpecification(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#CommitLogDescriptor(int,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#CreateTableStatement(CFName,CFPropDefs,boolean).mjava,0,0,3,3,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getAllDataFileLocations().mjava,0,0,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateHostId(UUID,InetAddress).mjava,0,0,9,2,2,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#announceMigration().mjava,0,0,2,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flushData().mjava,0,1,3,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame.Header#Header(int,EnumSet[Flag],int,Message.Type).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#NamesQueryFilter(SortedSet[ByteBuffer],boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#fetchMoreData().mjava,0,0,11,0,3,0.20512820780277252,26,7,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#thriftToString(TBase).mjava,0,0,2,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompressionParameters().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#serialize(Collection[RowMutation],DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getColumnCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addDefaultValueAlias(ColumnDefinition,boolean).mjava,0,0,3,2,1,0.0,3,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#mergeMin(List[ByteBuffer],List[ByteBuffer],AbstractType[#]).mjava,0,0,22,3,6,0.0,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMaximumCompactionThreshold(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#ReplayPosition(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage#createMessage().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#fetchPage(int).mjava,0,0,8,1,4,0.0714285746216774,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#equals(Object).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#activeSegments().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#enableAutoCompaction(String,String...).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#delete(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getDefaultMarshallers(CfDef).mjava,0,0,12,1,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#close().mjava,0,0,4,0,0,0.06666667014360428,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getMeanColumns().mjava,0,1,3,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#prepare(ColumnSpecification).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeHeader(DataOutputStream,int,boolean).mjava,0,0,1,3,1,0.8571428656578064,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#quote(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateReplicationFactor(String).mjava,0,0,1,1,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#isExhausted().mjava,0,1,1,0,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#getTypeCount(CompositeType).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#getTopLevelDeletion().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateFilter(CFMetaData,IDiskAtomFilter).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getWithShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#isExistingUser(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getDroppableTombstonesBefore(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat#getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf,String,org.apache.hadoop.util.Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\OnDiskAtom.Serializer#deserializeFromSSTable(DataInput,ColumnSerializer.Flag,int,Descriptor.Version).mjava,0,0,5,4,2,0.0833333358168602,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#makeStatementId(String).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#contains(T).mjava,0,0,4,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\KSPropDefs#validate().mjava,0,2,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#serializedSizeForSSTable().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addRowSize(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeleted(ColumnFamily,int,SecondaryIndexManager.Updater).mjava,0,0,2,3,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removalCoordinator(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#getNewSSTable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#setCrcCheckChance(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getTriggers().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#getTimeToLive().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#recordColumnDrop(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#makeMutation(ByteBuffer,ColumnFamily,ConsistencyLevel,boolean).mjava,0,0,2,4,1,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#elapsed().mjava,0,2,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Term.NonTerminal#bindAndGet(List[ByteBuffer]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#serializedSize(FileMessageHeader,int).mjava,0,0,9,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object[]).mjava,0,0,2,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.SizeComparator#compare(SSTableReader,SSTableReader).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeUpdateKeySpace(Tree).mjava,0,0,9,1,4,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getLocalComparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.Prepared#Prepared(CQLStatement).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getCFMetaData(String,List[ByteBuffer]).mjava,0,0,51,2,4,0.020408162847161293,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getPropertySet(String,Set[String]).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#timeToLiveReceiver(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getIndexKeyFor(ByteBuffer).mjava,0,0,4,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#recordLast(Row).mjava,0,0,0,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readInet(ChannelBuffer).mjava,0,0,5,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getToken(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultInteger#value().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#add(String,ByteBuffer,ByteBuffer,long,int).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\NoScheduler#queue(Thread,String,long).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#dropKeyspace(String).mjava,0,0,19,1,3,0.09090909361839294,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#prepare(ColumnSpecification).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#pager(Pageable,ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeGetWithConditions(Tree).mjava,0,0,36,1,19,0.13432836532592773,18,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#toCompositeData(UUID,SessionInfo).mjava,0,0,19,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#skipLevels(int,Iterable[SSTableReader]).mjava,0,0,3,2,0,0.375,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getCasContentionTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#reloadSSTableMetadata().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#toString(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#getColumnFamily().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getChangedRangesForLeaving(String,InetAddress).mjava,0,0,24,2,5,0.375,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#decodeOne(ChannelBuffer).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#getMergedRowCounts().mjava,0,1,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(DecoratedKey,ByteBuffer,ByteBuffer,boolean,int,long).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Upgrader.UpgradeController#UpgradeController(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#columnFamily().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalToken(Token,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionStrategyInstance(ColumnFamilyStore).mjava,0,0,2,1,1,0.0714285746216774,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#[C,D]_create(C,C,D).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#handleMessage(InetAddress,RepairMessage).mjava,0,0,3,2,4,0.05263157933950424,22,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#announceMigration().mjava,0,0,2,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getUnleveledSSTables().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#unregisterFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#addSSTables(Collection[SSTableReader]).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply#read(byte[],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#search(ExtendedFilter).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getReceivingFiles().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#takeColumnFamilySnapshot(String,String,String).mjava,0,0,5,3,1,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(InetAddress,WriteType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#ConnectionTracker().mjava,0,0,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getFullyExpiredSSTables(ColumnFamilyStore,Set[SSTableReader],Set[SSTableReader],int).mjava,0,0,17,4,4,0.09677419066429138,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#asMap().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#decompose(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#processResults(List[Row],List[ByteBuffer],int,long).mjava,0,0,2,4,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removingNonlocal(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ThrottledReader#ThrottledReader(File,RateLimiter).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#getTopLevelColumns().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#validate(Collection[RowMutation]).mjava,0,0,8,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(SSTableReader,RandomAccessReader,DecoratedKey,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#stop().mjava,0,1,3,0,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#isPresent(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMaxLocalDeletionTime(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int,String,String).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement.Parsed#prepareInternal(CFDefinition,ColumnSpecification[],Attributes).mjava,0,0,10,3,3,0.125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#registerDaemon(CassandraDaemon).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#id().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addColumnDefinition(ColumnDefinition).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#add(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#mark(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#replace(Column,Column).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSSTableColumnIterator(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#executeInternal(QueryState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#register(ILatencySubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#components(CFMetaData).mjava,0,0,7,1,1,0.10526315867900848,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#create(ByteBuffer,long,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getReverseSortedColumns().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#addToStandardCF(List[#],ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#scheduleAtFixedRate(Runnable,long,long,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#getStartKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getReplayPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions,InetAddress,int).mjava,0,0,6,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#computeNext().mjava,0,0,7,0,1,0.20000000298023224,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#TriggerDefinition(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc#toString().mjava,0,1,9,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#initialize(InputSplit,TaskAttemptContext).mjava,0,0,20,2,3,0.054054055362939835,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#asyncRemoveFromBatchlog(Collection[InetAddress],UUID).mjava,0,0,9,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ProtocolException#ProtocolException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#writeCurrentLocalCounterId(CounterId,long).mjava,0,0,8,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeGet(Tree).mjava,0,0,61,1,20,0.12380952388048172,1728,13,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#execute(QueryState).mjava,0,0,20,1,3,0.0,48,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#describeRing(String).mjava,0,0,27,1,9,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#debug(String).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getServerEncryptionOptions().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#equals(Object).mjava,0,0,9,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,ByteBuffer,ColumnFamily).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Operation#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#tryComponentFromFilename(File,String).mjava,0,0,1,2,0,0.20000000298023224,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#columnFilter(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#prepare_cql_query(ByteBuffer,Compression).mjava,0,0,8,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeArchive(String,String).mjava,0,0,6,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#serializedSize(ReadResponse,int).mjava,0,0,10,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serialize(HeartBeatState,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#bootstrap(Collection[Token]).mjava,0,0,15,1,0,0.2380952388048172,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDroppedColumns(ColumnFamily).mjava,0,0,5,1,1,0.0,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumns(Collection[org.apache.cassandra.db.Column],boolean,long).mjava,0,0,6,3,1,0.25,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getFullyQualifiedClassName(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getRangeBatchSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#getLocalAddress().mjava,0,10,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.EmptyClauseFilter#prune(DecoratedKey,ColumnFamily).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#bytesPastMark(FileMark).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#initialCompressedBufferLength(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics.ThreadPoolMetricNameFactory#createMetricName(String).mjava,0,0,13,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(List[AsyncOneResponse],long).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#ensureNotAnonymous().mjava,0,6,2,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#ToolCommandLine(CommandLine).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#Attributes().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#set(long,byte).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getColumnComparator(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#cardinality().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeHelp(Tree).mjava,0,0,8,1,1,0.0,3,2,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCachedPosition(KeyCacheKey,boolean).mjava,0,0,5,2,1,0.0,4,3,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#decorate(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getLong(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#ColumnFamilyStoreMBeanIterator(MBeanServerConnection).mjava,0,0,17,1,5,0.23076923191547394,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#initRowCache().mjava,0,2,7,0,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#equals(Object).mjava,0,0,3,1,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#includeFinishKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#gatherTombstones(ColumnFamily,Iterator[#-extends-OnDiskAtom]).mjava,0,0,5,2,2,0.0,12,4,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#indexRow(DecoratedKey,ColumnFamilyStore,Set[String]).mjava,0,0,17,3,4,0.0,6,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#xor(byte[],byte[]).mjava,0,0,1,2,2,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#copy().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceFlush(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliSessionState#setOut(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getLeavingEndpoints().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#escape(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#sendGossip(MessageOut[GossipDigestSyn],Set[InetAddress]).mjava,0,0,9,2,4,1.7999999523162842,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#serializeSuperColumnFamily(ColumnFamily,DataOutput,int).mjava,0,0,20,3,4,0.625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#inOrderDeletionTester().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ChecksummedOutputStream#ChecksummedOutputStream(OutputStream,Checksum).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#createRepairTask(int,String,Collection[Range[Token]],boolean,boolean,String...).mjava,0,0,43,6,3,0.016129031777381897,2,1,43,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#NotifyingSSTableIdentityIterator(SSTableIdentityIterator,SimpleCondition).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#isExpired().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit(String,String,String[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceNode().mjava,0,5,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#getCFMetaData(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getScanners(Collection[SSTableReader],Range[Token]).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#authorize(AuthenticatedUser,IResource).mjava,0,0,16,2,3,0.0357142873108387,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#sortSampledKeys(List[DecoratedKey],Range[Token]).mjava,0,0,9,2,2,0.1304347813129425,3,2,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printThreadPoolStats(PrintStream).mjava,0,0,18,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData.SpeculativeRetry#SpeculativeRetry(RetryType,double).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeChars(String).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getStateForVersionBiggerThan(InetAddress,int).mjava,0,0,14,2,5,2.3333332538604736,16,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#bind(List[ByteBuffer]).mjava,0,0,12,1,3,0.04545454680919647,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(PrintStream,boolean,String,Number).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getKeyspaceMetaData(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#commitTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#contains(RowPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#unregister(IMigrationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#serializedSize(TypeSizes).mjava,0,0,2,1,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#makeRowBounds(Token,Token,IPartitioner).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamEvent.SessionPreparedEvent#SessionPreparedEvent(UUID,SessionInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#signalAll().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateMutation(CFMetaData,Mutation).mjava,0,0,2,2,3,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getActiveSegmentNames().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#isOverflowed().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessage#FileMessage(SSTableReader,int,long,List[Pair[Long,Long]]).mjava,0,0,3,4,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(AbstractViewSSTableFinder).mjava,0,0,7,1,2,0.05882352963089943,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#validateName(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#MessageDeliveryTask(MessageIn,int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#getDirectories().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#deserialize(DataInput).mjava,0,0,2,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationTask#runMayThrow().mjava,0,0,7,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#response(MessageIn[TMessage]).mjava,0,0,7,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputInitialAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager#tracingExecutor().mjava,0,1,3,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#intersect(OpenBitSet).mjava,0,0,1,1,6,0.125,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getUnreachableNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#scheduleHintDelivery(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isMultithreadedCompaction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#build().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_closeableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#logDroppedMessages().mjava,0,0,8,0,4,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CollectionType#pack(List[ByteBuffer],int,int).mjava,0,0,7,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#discardSegment(CommitLogSegment,boolean).mjava,0,0,5,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#THsHaDisruptorServer(Args).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkOutputFormat.NullOutputCommitter#abortTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(Stage).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#newReadRepairDecision().mjava,0,1,4,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#seenAnySeed().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#scheduleSaving(int,int).mjava,0,0,3,2,1,0.0476190485060215,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#serialize(List[Pair[ByteBuffer,Column]]).mjava,0,0,9,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getTotalBytesCompacted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#setIndexBuilt(String,String).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#isExhausted().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer#stop().mjava,0,0,3,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#compress(Frame).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedByte().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#getColumnFamily().mjava,0,0,5,0,1,0.23076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithConfirm(File,File).mjava,0,0,10,2,0,0.2857142984867096,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.NativeDBTypeSizes#sizeof(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#RowCacheSentinel(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyTypeParameters(List[AbstractType[#]]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getIndexExpressions().mjava,0,2,5,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinition(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshot(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanRowSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#removeKeyspaceInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#asCQL3Type().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#casApplies(ColumnFamily,ColumnFamily).mjava,0,0,12,2,2,0.1818181872367859,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#AbstractFunction(String,AbstractType[#],AbstractType[#]...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#contains(Interval[C,D],C).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#makeTerminal(Function,ByteBuffer).mjava,0,0,8,2,0,0.0,14,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#serializeSchema().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Direction#addToVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#newSSTableSegmentThresholdReached(SSTableWriter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ActiveRepairService#addToActiveSessions(RepairSession).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#stop().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#forceBlockingFlush().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#resultify(String,Row).mjava,0,0,3,2,2,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheCapacityInBytes().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#localCopy(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#RowContainer(NotifyingSSTableIdentityIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#relocateTokens(Collection[Token]).mjava,0,0,35,1,8,0.0,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalTokens(Multimap[InetAddress,Token]).mjava,0,0,17,1,3,0.02857142873108387,12,4,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BigIntegerToken#BigIntegerToken(BigInteger).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableSwitchCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#available().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#expireMessages().mjava,0,1,6,0,2,0.1875,7,4,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#updateDigest(MessageDigest).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#toSchemaUpdate(KSMetaData,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getColumnDefByName(CfDef,ByteBuffer).mjava,0,0,3,2,1,0.0,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#getLengthInBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setCompactionThroughputMbPerSec(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointForHostId(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#poll().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toThrift().mjava,0,1,44,0,2,0.025641025975346565,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#CollationController(ColumnFamilyStore,QueryFilter,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#getRawCallable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getReleaseVersion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#next().mjava,0,0,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.StatusChange#deserializeEvent(ChannelBuffer).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(PrintStream,boolean,String,String).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#disableAutoCompaction().mjava,0,0,4,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#deserialize(DataInput).mjava,0,0,3,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#fromThrift(List[TriggerDef]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#VersionedValueFactory(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#addTree(InetAddress,MerkleTree).mjava,0,0,3,2,0,0.06666667014360428,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#requireAuthentication().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#getCrcCheckChance().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#get(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#size().mjava,0,4,0,0,1,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selectable.WithFunction#toString().mjava,0,1,8,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompleter#getKeyspaceCommands().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#TimestampType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationTask#MigrationTask(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#execute(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\AsyncOneResponse#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TServerCustomFactory#buildTServer(TServerFactory.Args).mjava,0,0,27,1,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#createHardLink(File,File).mjava,0,0,7,2,0,0.1428571492433548,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#getRangeFetchMap(Multimap[Range[Token],InetAddress],Collection[ISourceFilter]).mjava,0,0,7,2,2,0.07407407462596893,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#systemKeyspaceQuery(List[ReadCommand]).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#isGcAble(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getSpeculativeRetry().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#apply(ColumnDefinition,AbstractType[#]).mjava,0,0,19,2,0,0.06666667014360428,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#TreeMapBackedSortedColumns(CFMetaData,SortedMap[ByteBuffer,Column]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractRangeCommand#getTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\MeteredFlusher#run().mjava,0,0,28,0,10,0.15000000596046448,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.Equals#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile#getMetadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#TruncateStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#ReversedType(AbstractType[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#finalizeHeader(long,int).mjava,0,0,5,2,1,0.1304347813129425,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#requireAuthentication().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#scheduleAllDeliveries().mjava,0,0,14,0,7,0.0555555559694767,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#get(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#setupDefaultSuperuser().mjava,0,0,7,0,0,0.05263157933950424,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#getComparator().mjava,0,18,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#IndexInfo(ByteBuffer,ByteBuffer,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#AlterTableStatement(CFName,Type,ColumnIdentifier,CQL3Type,CFPropDefs,Map[ColumnIdentifier,ColumnIdentifier]).mjava,0,0,0,6,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRangeSlice(ExtendedFilter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxType().mjava,0,4,0,0,0,0.0,16,1,16,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#copy().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getLocalDataCenter().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#isAnonymous().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getKey().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#startStreamingFiles().mjava,0,2,7,0,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getIOWait().mjava,0,1,2,0,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#checkSchema(ResourceSchema).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMaxColumnNames(List[ByteBuffer]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getComparator(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(AbstractType...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getNextLevel(Collection[SSTableReader]).mjava,0,0,6,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#CFStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Adder#doAdd(Term,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#incrCreatedHints(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#computeNext().mjava,0,0,4,0,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnsAsColumns(Collection[org.apache.cassandra.db.Column],long).mjava,0,0,4,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesSent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PermissionDetails#compareTo(PermissionDetails).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#asList().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#forceShutdown().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#setKeyAlias(String).mjava,0,0,3,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getCompactionThroughputMbPerSec().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#isDeleted(Column).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#appendKeyWhereClauses(String).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#getLevel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#StorageProxy().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#ExecuteMessage(byte[],List[ByteBuffer],ConsistencyLevel).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#minMarkedAt().mjava,0,1,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#replace(Iterable[SSTableReader],Iterable[SSTableReader]).mjava,0,0,15,2,1,0.21052631735801697,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMinimumCompactionThreshold(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.CacheType#CacheType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#isCapacitySetManually().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#Parsed(Type,Attributes.Raw,List[ModificationStatement.Parsed]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#validateCrcCheckChance(double).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#createMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove_counter(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,11,3,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#AsyncRepairCallback(RowDataResolver,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Pair#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#computeNext().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#vintDecode().mjava,0,4,4,0,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponse#ReadResponse(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#printRelocatingRanges().mjava,0,2,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revoke(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#print().mjava,0,1,34,0,4,0.06976744532585144,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getSendingFiles().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#clean(MappedByteBuffer).mjava,0,0,4,1,1,0.0,1,0,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getTypeByFunction(String).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#Keyspace(String,boolean).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#computeNext().mjava,0,0,6,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#schedule().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#Row(List[ColumnSpecification],List[ByteBuffer]).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCompactionThroughputMbPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#build().mjava,0,2,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#AbstractModification(String,String,String,ConsistencyLevel,Long,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#hash(Collection[InetAddress]).mjava,0,0,4,1,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getIndexTypeFromString(String).mjava,0,0,2,1,1,0.043478261679410934,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#flushSchemaCFs().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#Memory(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#makeWritetimeOrTTLSpec(CFDefinition,Selectable.WritetimeOrTTL,ColumnIdentifier).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#response(MessageIn).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#fireStreamEvent(StreamEvent).mjava,0,0,1,1,0,0.25,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#isBeforeSliceStart(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferRanges(InetAddress,String,Collection[Range[Token]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#fileName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#incrementDroppedMessages(Verb).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactedRow#AbstractCompactedRow(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ForwardSortedCollection#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentBloomFilterFalsePositives().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#markCompacting(Collection[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,9,3,4,0.1111111119389534,27,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#toString().mjava,0,0,20,0,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheHits().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#shouldHint(InetAddress).mjava,0,0,7,1,1,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#serialize(String,DataOutput,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getLimit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#joinTokenRing(int).mjava,0,0,131,1,14,0.5244755148887634,438,24,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.InOrderTester#isDeleted(Column).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToUnreachableMember(MessageOut[GossipDigestSyn]).mjava,0,0,5,1,4,1.600000023841858,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getThriftFramedTransportSize(Configuration).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#mergeAndRemoveOldShards(DecoratedKey,ColumnFamily,int,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaximumCompactionThreshold().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K,V]_create(Comparator[K],Comparator[V]).mjava,0,0,3,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#contentSerializedSize(ColumnFamily,TypeSizes,int).mjava,0,0,9,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#close().mjava,0,1,5,0,0,0.07692307978868484,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthenticateMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#getIndexedValue(ByteBuffer,Column).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#CompressedStreamReader(FileMessageHeader,StreamSession).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#excise(Collection[Token],InetAddress,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDropIndex(Tree).mjava,0,0,20,1,6,0.03703703731298447,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\Int32Type#Int32Type().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addIfRelevant(Column,DeletionInfo.InOrderTester,int).mjava,0,0,5,3,0,0.5714285969734192,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SelectionWithFunctions#SelectionWithFunctions(List[CFDefinition.Name],List[ColumnSpecification],List[Selector],boolean,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#AbstractWriteResponseHandler(Keyspace,Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Runnable,WriteType).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#readRepairChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitValidation(ColumnFamilyStore,Validator).mjava,0,0,3,2,1,0.05263157933950424,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#getComponent(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#process(List[Row],List[ByteBuffer],int,long).mjava,0,0,6,4,2,0.20000000298023224,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#updateColumnsLimit(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#Paging(AbstractBounds[RowPosition],SliceQueryFilter,ByteBuffer,ByteBuffer,Comparator[ByteBuffer]).mjava,0,0,2,5,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setStreamThroughputOutboundMegabitsPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyRecordWriter#close(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\QueryState#getTimestamp().mjava,0,8,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CQLStatement#CQLStatement(StatementType,Object,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UserOptions#isEmpty().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#setConnectionInformation().mjava,0,2,39,0,0,0.0,2048,11,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAliasParameters().mjava,0,1,19,0,4,0.02631578966975212,68,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceRemoveCompletion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#createReader(SSTableReader,RowIndexEntry,FileDataInput,ColumnSlice[],boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getSSTables().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#appendFromStream(DecoratedKey,CFMetaData,DataInput,Descriptor.Version).mjava,0,0,43,4,13,0.08771929889917374,18,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Murmur3BloomFilter#Murmur3BloomFilter(int,IBitSet).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#readLong().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTopLevelColumns(QueryFilter,int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#serializedSize(TypeSizes).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#relToAbsPathForStoreLocation(String,Path).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelection#SimpleSelection(List[CFDefinition.Name],List[ColumnSpecification]).mjava,0,0,0,2,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#removeUnreadableSSTables(File).mjava,0,0,11,1,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#getMarkedForDeleteAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getColumnNames().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse#PrepareResponse(boolean,Commit,Commit).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#fetchRows(List[ReadCommand],ConsistencyLevel).mjava,0,0,56,2,21,0.06666667014360428,2048,13,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#OutboundTcpConnection(OutboundTcpConnectionPool).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#currentStart().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#activateNextSegment().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getColumn(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer.Factory#buildTServer(Args).mjava,0,0,9,1,3,0.10000000149011612,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#announceMigration().mjava,0,0,17,0,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#notifySSTablesChanged(Iterable[SSTableReader],Iterable[SSTableReader],OperationType).mjava,0,0,1,3,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#getHeartBeatVersion().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#printUsage(CmdLineOptions).mjava,0,0,14,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#serialize(List[GossipDigest],DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#removeColumnDef(ByteBuffer).mjava,0,0,5,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#createIterator().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#isColumnFamilyLevel().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#extractThrowable(Runnable).mjava,0,0,4,1,0,0.22727273404598236,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_slice(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,16,4,3,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#timestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#getKeyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheRecentHitRate().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRpcPort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reBuffer().mjava,0,3,3,0,2,0.04545454680919647,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicBadnessThreshold(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performScrub(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyValidator().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#floatingPoint(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalHints().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.Reducer#reduce(Pair[Row,InetAddress]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.ProtocolEncoder#encode(ChannelHandlerContext,Channel,Object).mjava,0,0,12,3,6,0.0416666679084301,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#add(ColumnFamily).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#SSTableSimpleUnsortedWriter(File,CFMetaData,IPartitioner,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#setPartitioner(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#serialize(BigInteger).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#tryFcntl(int,int,int).mjava,0,0,4,3,1,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#maybeResetDeletionTimes(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#awaitTermination().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#validateMinimumInt(String,int,int).mjava,0,0,2,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#UnsortedColumns(CFMetaData,ArrayList[Column]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#toInternalFilter(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,9,3,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isSerialConsistency().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getRandomToken().mjava,0,0,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RequestValidationException#RequestValidationException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getPrepared(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#equals(Object).mjava,0,0,3,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#signal().mjava,0,3,2,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#comment(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#Native(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ScheduledRangeTransferExecutorService#tearDown().mjava,0,1,3,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#syncWriteBatchedMutations(List[WriteResponseHandlerWrapper],String,ConsistencyLevel).mjava,0,0,3,3,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ByteBuffer,Iterable[ByteBuffer]).mjava,0,0,22,3,11,0.057692307978868484,468,11,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(File).mjava,0,0,7,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\OperationType#toString().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getValueValidator(String,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#init(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#BackgroundActivityMonitor().mjava,0,0,4,0,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\DefaultInteger#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#FixedValueComparator(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readBytes(ChannelBuffer).mjava,0,0,2,1,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getCurrentKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets#valueSpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRangesMM(String).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor.UncomplainingRunnable#UncomplainingRunnable(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#newSSTables(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,13,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#ExecuteMessage(MD5Digest,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStore(UUID).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\GuidGenerator#convertToStandardFormat(String).mjava,0,0,16,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspaceUserName(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#getTotalBatchesReplayed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCachedRow(RowCacheKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#isMultiKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#getCompacting().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serializedSize(BloomFilter,TypeSizes).mjava,0,0,2,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#sync().mjava,0,2,2,0,0,0.0714285746216774,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#run().mjava,0,0,19,0,7,0.0793650820851326,26,7,46,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#deserialize(DataInput,int).mjava,0,0,4,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getAndReferenceOverlappingSSTables(Collection[SSTableReader]).mjava,0,0,2,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Codec#encode(ResultSet,int).mjava,0,0,8,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#replace(Column,Column).mjava,0,0,8,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#execute(Runnable).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#serializedSize(IntervalTree[C,D,I],TypeSizes,int).mjava,0,0,4,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#AtomicSortedColumns(CFMetaData,Holder).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#queryNextPage(int,ConsistencyLevel,boolean).mjava,0,0,8,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeRestoreArchive().mjava,0,1,11,0,3,0.0,4,2,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\MapType#[K,V]_getInstance(AbstractType[K],AbstractType[V]).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#serialize(RepairJobDesc,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\AbstractSimplePerColumnSecondaryIndex#insert(ByteBuffer,Column).mjava,0,0,18,2,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#read().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#serialize(RowIndexEntry,DataOutput).mjava,0,0,11,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#serializedSize(SyncRequest,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#findSupportingVersion(SemanticVersion...).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Value#Value(List[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#renameColumn(ByteBuffer,String,ByteBuffer,String).mjava,0,0,10,4,2,0.1111111119389534,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#run().mjava,0,0,6,0,2,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#replayBatch(UUID).mjava,0,0,10,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getOptionValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#getTimeout().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getRack().mjava,0,1,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#serializedSize(IntervalTree[C,D,I],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#rowsRead().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculativeReadExecutor#SpeculativeReadExecutor(ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress],List[InetAddress]).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#deserialize(DataInput).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncComplete#SyncComplete(RepairJobDesc,InetAddress,InetAddress,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getConsistencyLevel().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap.Builder#isSameGroup(ByteBuffer[]).mjava,0,0,1,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#recycleSegment(File).mjava,0,0,14,1,1,0.15789473056793213,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#begin(String,Map[String,String]).mjava,0,0,19,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getMemtableColumnIterator(Memtable).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#serialize(TSerializer,TBase,DataOutput).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#pager(ReadCommand,ConsistencyLevel,boolean,PagingState).mjava,0,0,0,4,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#makeSnapshots(Collection[InetAddress]).mjava,0,0,7,1,1,0.0,1,0,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#Bounds(T,T,IPartitioner).mjava,0,0,2,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#createSegments(String).mjava,0,0,6,1,6,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getCfsProxy(String,String).mjava,0,0,9,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getRack(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ClusterStatus#getOwnershipByDc(Map[InetAddress,Float]).mjava,0,0,12,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#skipBytes(int).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#SliceFromReadCommand(String,ByteBuffer,String,long,SliceQueryFilter).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getComparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#export(SSTableReader,PrintStream,String[]).mjava,0,0,15,3,5,0.0416666679084301,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getInt(String,Integer).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#bind(List[ByteBuffer]).mjava,0,0,6,1,2,0.06666667014360428,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#compress(Frame).mjava,0,0,6,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#isColumnBeforeSliceFinish(OnDiskAtom).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printCompactionThroughput(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#pendingEndpointsFor(Token,String).mjava,0,0,8,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#getCmdLineOptions().mjava,0,1,10,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#setPartitionFilter(Expression).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#waitForDeletions().mjava,0,3,2,0,1,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getKeySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#replacedEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getAdjustedTimestamp(UUID).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#composeQuery(String).mjava,0,0,8,1,4,0.05000000074505806,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#sliceFilterToSC(CompositeType,SliceQueryFilter).mjava,0,0,40,2,6,0.3529411852359772,20,12,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getSchemaKSKey(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#toString().mjava,0,0,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setEndpointSnitch(IEndpointSnitch).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateOnDiskAtom(ColumnFamily,List[#-extends-Iterator[#-extends-OnDiskAtom]],IDiskAtomFilter,int,long).mjava,0,0,4,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#list(CQL3Type).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#existingIndexNames(String).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.ByNameColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\GCInspector#logGCResults().mjava,0,0,24,0,10,0.05882352963089943,256,8,30,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#hasIrrelevantData(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(long[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#newAuthenticator(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#fromThrift(org.apache.cassandra.thrift.CfDef).mjava,0,0,54,1,3,0.0,262144,18,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesSearcher#CompositesSearcher(SecondaryIndexManager,Set[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#compute(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#Attributes(Term,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromThrift(List[ColumnDef],boolean).mjava,0,0,3,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toDouble(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceRepair(String,boolean,boolean,String...).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#CustomClassLoader(ClassLoader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#Custom(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#describeSchemaVersions().mjava,0,1,33,0,11,0.1090909093618393,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractRowResolver#getMessages().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeReceived().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getUUID(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,2,1,0,0.15789473056793213,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_ring(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#join(String...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#name().mjava,0,98,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#getRawKeyspace().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#toTokenBounds().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#compare(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getDroppedMessages().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#reconcile(Column,Allocator).mjava,0,0,15,2,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator.WideColumnIterator#WideColumnIterator(List[KeySlice]).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_isWrapAround(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#forceBatchlogReplay().mjava,0,0,2,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank().mjava,0,9,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#getKeyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteRecursive(File).mjava,0,0,4,1,1,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompactionStrategyClass(String).mjava,0,0,3,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onDropColumnFamily(String,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#StaticParsedComparator(AbstractType[#],String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(File,String,String,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\NativeAllocator#allocate(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#lastRow().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#withUpdatedColumns(SortedSet[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnWithName(org.apache.cassandra.db.Column,ByteBuffer).mjava,0,0,6,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#serializedSize(RangeTombstoneList,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#all().mjava,0,7,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#asThriftOptions().mjava,0,4,5,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Upgrader#upgrade().mjava,0,1,18,0,7,0.022727273404598236,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap.Builder#add(Column).mjava,0,0,7,1,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getAndAppendComparator(int,ByteBuffer,StringBuilder).mjava,0,0,9,3,2,0.0,2,1,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_andnot(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#PeriodicCommitLogExecutorService(CommitLog).mjava,0,0,11,1,3,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#createSecondaryIndexSearcher(Set[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#SemanticVersion(String).mjava,0,0,14,1,3,0.10526315867900848,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#reset().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getCFColumnMetaFromTree(CfDef,Tree).mjava,0,0,29,2,6,0.11764705926179886,35,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyUpdate(CFMetaData,boolean).mjava,0,0,9,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createEndpointSnitch(String).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#ReadCallback(IResponseResolver[TMessage,TResolved],ConsistencyLevel,IReadCommand,List[InetAddress]).mjava,0,0,9,4,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String,Charset).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#Metadata(EnumSet[Flag],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#TypeParser(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#KeyBound(Token,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#replace(Column,Column).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getApplicationStateValue(InetAddress,ApplicationState).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\PureJavaCrc32#update(byte[],int,int).mjava,0,0,0,3,9,1.0,32,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#alter(String,Map[Option,Object]).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#DeleteStatement(int,CFMetaData,Attributes).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#add(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#diff(ColumnFamily,ColumnFamily).mjava,0,1,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\SyntaxException#SyntaxException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#get().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumn(CFMetaData,ByteBuffer,ByteBuffer).mjava,0,0,6,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#withUpdatedTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#IncomingMessageHandler(StreamSession,Socket,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateDeletion(CFMetaData,Deletion).mjava,0,0,8,2,1,0.05263157933950424,32,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#findIndexedColumn(CFMetaData).mjava,0,0,5,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getRegisteredCallback(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTracingProbability().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\Int32Type#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#getValue().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#validateCQLVersion(int).mjava,0,0,2,1,1,1.1111111640930176,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#prepareKeyspace(ClientState).mjava,0,0,3,1,0,0.1666666716337204,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(int).mjava,0,0,0,1,3,1.1666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#getKeyspaceName().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#maxRows().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUTF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#getClause().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getSuccessor(Token).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#toString().mjava,0,0,2,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#getCfNamesByKeySpace(KsDef).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateLeaving(InetAddress,String[]).mjava,0,0,12,2,1,0.2631579041481018,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getBytes(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getKeyComparatorForCF(String).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#setSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#runWith(File).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#restoreReplicaCount(InetAddress,InetAddress).mjava,0,0,26,2,9,0.022727273404598236,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getAllSSTables().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateTokens(InetAddress,Collection[Token]).mjava,0,0,8,2,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#max().mjava,0,0,3,0,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropUserStatement#validate(ClientState).mjava,0,0,6,1,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printCompactionStats(PrintStream).mjava,0,0,26,1,6,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#CassandraStorage(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionTime#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#[C,D,I-extends-Interval[C,D]]_build(Collection[I],Comparator[C]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#isLeaving(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.AbstractScanIterator#needsFiltering().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(MessageOut,int,InetAddress).mjava,0,0,9,3,2,0.23076923191547394,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#shouldPurge(DecoratedKey,long).mjava,0,0,6,2,1,0.1428571492433548,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeofVInt(long).mjava,0,0,0,1,3,0.0476190485060215,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMinColumnNames(List[ByteBuffer]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfAssumptions#readAssumptions().mjava,0,1,20,0,10,0.0,19,9,1,8,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#setupContext().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteAsync(String).mjava,0,0,2,1,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnknownColumnFamilyException#UnknownColumnFamilyException(String,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#compareTo(GossipDigest).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setTruncateRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\Int32Type#compare(ByteBuffer,ByteBuffer).mjava,0,0,8,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#keyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#MigrationManager().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#serializedSize(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#getOutputLocation().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropUserStatement#DropUserStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#LengthAvailableInputStream(InputStream,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#toSchema(RowMutation,long).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputRpcPort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#copy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewKeyspace(KSMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#with(DeletionInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefsTables#mergeColumnFamilies(Map[DecoratedKey,ColumnFamily],Map[DecoratedKey,ColumnFamily]).mjava,0,0,39,2,12,0.17391304671764374,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#start().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#RowIterator(Iterator[Row],InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTotal().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#PaxosState(Commit,Commit).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addAll(ColumnFamily,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addHash(RowHash).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#keyToTuple(ByteBuffer,CfDef,AbstractType).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#threadLocalRandom().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists#valueSpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getPath().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validateCompactionThresholds().mjava,0,1,3,0,0,0.0,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setTokenMetadataUnsafe(TokenMetadata).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message#Message(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getThroughCache(UUID,QueryFilter).mjava,0,0,12,2,5,0.09375,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#getIndexedIterator(ExtendedFilter).mjava,0,0,71,1,18,0.16190476715564728,6404,16,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#AbstractJmxClient(String,Integer,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String).mjava,0,0,6,1,3,0.11764705926179886,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#serialize(StreamingHistogram,DataOutput).mjava,0,0,9,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback#ReadCallback(IResponseResolver[TMessage,TResolved],ConsistencyLevel,int,IReadCommand,Keyspace,List[InetAddress]).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#replaceCompactedSSTables(Collection[SSTableReader],Iterable[SSTableReader],OperationType).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSeverity().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#getCurrentState().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#withUpdatedName(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getHostId(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getColumnMeta(Cassandra.Client).mjava,0,0,19,1,8,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#isFailed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone.Tracker#update(OnDiskAtom).mjava,0,0,12,1,3,0.27272728085517883,5,5,23,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#ErrorMessage(TransportException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getDataCenter().mjava,0,1,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#removeUnreadableSSTables(File).mjava,0,0,4,1,0,0.0,1,0,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.AbstractViewSSTableFinder#sstablesForRowBounds(AbstractBounds[RowPosition],DataTracker.View).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Bounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long,Function[Pair[K,CacheableObject[V]],#]).mjava,0,0,12,2,3,0.0,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#sum(double).mjava,0,0,14,1,5,0.1818181872367859,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#updateProgress(ProgressInfo).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#cfMetaData().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#RangeSliceQueryPager(RangeSliceCommand,ConsistencyLevel,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#onFailure(Throwable).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_indexed_slices(ColumnParent,IndexClause,SlicePredicate,ConsistencyLevel).mjava,0,0,29,4,11,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getAllLevelSize().mjava,0,2,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncComplete#SyncComplete(RepairJobDesc,NodePair,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#minCompactionThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getStartToken().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#delete(DeletionInfo).mjava,0,0,6,1,2,0.09090909361839294,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage.Type#get(byte).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#parseArgs(String[]).mjava,0,0,18,1,5,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(InetAddress,WriteType,Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyInputFormat#getSplits(JobConf,int).mjava,0,0,4,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#equals(Object).mjava,0,0,5,1,1,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getColumns(AbstractType[#]).mjava,0,0,16,1,6,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMaxThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getScores().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterUserStatement#execute(ClientState).mjava,0,0,6,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getClock().mjava,0,13,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#memorySize().mjava,0,0,4,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#Restriction(List[Term]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#requireAuthentication().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspace(Configuration,String).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\SliceQueryPager#recordLast(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTrickleFsyncIntervalInKb().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AbstractThreadUnsafeSortedColumns#delete(RangeTombstone).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isAutoCompactionDisabled().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setOutputCql(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#close(Closeable...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#validate().mjava,0,2,24,0,6,0.11290322244167328,288,11,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getColumnIndexSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#update(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#getHashBuckets(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#stringify(Iterable[InetAddress]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Kind#fromId(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#allColumns().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#addApplicationState(ApplicationState,VersionedValue).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getRecentLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getApproximateKeyCount(Iterable[SSTableReader],CFMetaData).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#ls().mjava,0,1,22,0,7,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compressionParameters(CompressionParameters).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#validateLogin().mjava,0,2,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,QueryState,QueryOptions).mjava,0,0,6,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#loadHelp().mjava,0,1,4,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_partitioner().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Mx4jTool#getPort().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#collectAllData().mjava,0,1,44,0,13,0.2380952388048172,1728,13,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.FunctionSelector#toString().mjava,0,0,9,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.EmptyClauseFilter#EmptyClauseFilter(ColumnFamilyStore,DataRange,int,boolean,long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#subtract(Range[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#getDatacenterEndpoints().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validate().mjava,0,3,38,0,2,0.05714285746216774,1152,17,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(ICompressor,Integer,Map[String,String]).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#write(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.RetriedQueuedMessage#RetriedQueuedMessage(QueuedMessage).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#closeAll().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#minKeyBound().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(String).mjava,0,0,12,1,4,0.09090909361839294,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#contains(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,2,2,1,0.2222222238779068,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#getKeys().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedPoolingSegmentedFile#BufferedPoolingSegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ByteBufferOutputStream#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons.LexicographicalComparerHolder.UnsafeComparer#compareTo(byte[],int,int,byte[],int,int).mjava,0,0,5,6,11,0.1666666716337204,108,9,3,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#toInternalFilter(CFMetaData,ColumnParent,SliceRange).mjava,0,0,3,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#updaterFor(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isJoined().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#getBackupsDirectory(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#NamesQueryPager(SliceByNamesReadCommand,ConsistencyLevel,boolean,PagingState).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPageCount().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokens(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#satisfies(int,IndexOperator).mjava,0,0,0,2,0,0.0,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentCompactors().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#getColumnMetadata(Cassandra.Client,boolean).mjava,0,0,4,2,2,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\MapSerializer#[K,V]_getInstance(TypeSerializer[K],TypeSerializer[V]).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#relocate(Collection[String]).mjava,0,0,10,1,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#onDiskSerializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addTombstone(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Setter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#Topology(Topology).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#QueryFilter(DecoratedKey,String,IDiskAtomFilter,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#stopServer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#clone().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DecimalType#DecimalType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#skipBytes(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputPartitioner(Configuration).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#RowCacheSentinel().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CacheMetrics#getRecentHitRate().mjava,0,2,6,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isClientMode().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeInternal(MessageOut,int,long).mjava,0,0,6,3,0,0.2222222238779068,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getThriftFramedTransportSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters.Serializer#deserialize(DataInput,int).mjava,0,0,6,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PermissionDetails#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokensFor(InetAddress,String).mjava,0,0,8,2,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#containsKey(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#maxComponents(List[ByteBuffer],ByteBuffer,AbstractType[#]).mjava,0,0,26,3,7,0.03999999910593033,9,5,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStore(String).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Literal#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamStateCompositeData#fromCompositeData(CompositeData).mjava,0,0,8,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getSavedTokens().mjava,0,4,9,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpointSnitchInfoProxy().mjava,0,6,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeUpdateColumnFamily(Tree).mjava,0,0,11,1,3,0.04545454680919647,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CFPropDefs#getValidator().mjava,0,2,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#serializedSize(Leaf,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliMain#handleHistoryFiles().mjava,0,1,4,0,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hasExistingNoSystemTables().mjava,0,1,7,0,2,0.05263157933950424,3,2,10,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Runnable,WriteType).mjava,0,0,3,5,0,0.09090909361839294,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getDefaultValidator().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#discardCompactionsInProgress().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice#isBefore(Comparator[ByteBuffer],ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeToSend().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\ProposeVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#bootstrapInProgress().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getRangeAddresses(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openIndexReader().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#position(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#createThriftClient(String,int,String,String).mjava,0,0,4,4,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#toRowBounds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getLengthInBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHintsForEndpoint(InetAddress).mjava,0,0,13,1,4,0.03999999910593033,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#acceptImpl().mjava,0,0,10,0,2,0.0,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.RetriedQueuedMessage#shouldRetry().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#relocating(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#getIndexOperator(String).mjava,0,0,5,1,0,0.0,32,5,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#split(T).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#confirmReplication(InetAddress).mjava,0,0,3,1,0,0.27272728085517883,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstTokenIndex(ArrayList,Token,boolean).mjava,0,0,3,3,1,0.09090909361839294,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#MessageIn(InetAddress,T,Map[String,byte[]],MessagingService.Verb,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#initKeyCache().mjava,0,1,9,0,4,0.1538461595773697,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceCleanup(String,String...).mjava,0,0,3,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#registerReceiving(StreamResultFuture).mjava,0,0,5,1,0,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#toString().mjava,0,0,12,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#truncateBlocking().mjava,0,6,27,0,4,0.3265306055545807,8,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getSampleIndexesForRanges(IndexSummary,Collection[Range[Token]]).mjava,0,0,12,2,5,0.24137930572032928,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#CLibrary().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#parseCompressorClass(String).mjava,0,0,3,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ColumnFamilyMetrics.ColumnFamilyMetricNameFactory#createMetricName(String).mjava,0,0,13,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BootStrapper#BootStrapper(InetAddress,Collection[Token],TokenMetadata).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeUnfinishedCompactionLeftovers(String,String,Set[Integer]).mjava,0,0,24,3,8,0.09756097197532654,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getLocation().mjava,0,1,5,0,2,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ExceptionCode#ExceptionCode(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#SelectExpression(Term,Term,int,boolean,boolean,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputPartitioner(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#getfd(FileDescriptor).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#makeSelector(CFDefinition,RawSelector,List[CFDefinition.Name],List[ColumnSpecification]).mjava,0,0,23,4,8,0.0,22,10,34,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#syncWriteToBatchlog(Collection[RowMutation],Collection[InetAddress],UUID).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer,int,int,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#BytesToken(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(long[],long[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#cloneShallow().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#Server(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#getConsistency().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#internalComparator().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#hash(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RepairException#RepairException(RepairJobDesc,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#init().mjava,0,1,6,0,1,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHint(ByteBuffer,ByteBuffer,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#deconstruct(ByteBuffer).mjava,0,0,6,1,6,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ReadCallback.AsyncRepairRunner#run().mjava,0,0,9,0,4,0.15789473056793213,2,1,14,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#min().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\RepairRunner[NodeProbe]#repairRangeAndWait(StorageServiceMBean,boolean,boolean,String,String).mjava,0,0,6,5,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_cql3_query(ByteBuffer,Compression,ConsistencyLevel).mjava,0,0,14,3,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthResponse#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor).mjava,0,0,10,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#toString(BigInteger).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#get(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinitionComparator(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#loadClass(String).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#add(DeletionInfo).mjava,0,0,3,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\IDiskAtomFilter.Serializer#serialize(IDiskAtomFilter,DataOutput,int).mjava,0,0,4,3,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeySampleSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageIn#[T2]_read(DataInput,int,int).mjava,0,0,19,3,11,0.02631578966975212,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#create().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMinimumCompactionThreshold().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#getInt(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager.StandardUpdater#remove(Column).mjava,0,0,5,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdown().mjava,0,0,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#indexes(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#mutationForKey(String,ByteBuffer,CFMetaData,Long,ThriftClientState,List[ByteBuffer]).mjava,0,0,24,6,7,0.024390242993831635,3,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printCfHistograms(String,String,PrintStream).mjava,0,0,15,3,7,0.0416666679084301,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#Collector(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#changeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#unregister(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#clear().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onLeaveCluster(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getInt(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(AbstractBounds[RowPosition]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\UUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex#ColumnIndex(List[IndexHelper.IndexInfo]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doScrub(ColumnFamilyStore,Iterable[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#prepare(Commit).mjava,0,0,7,1,1,0.05882352963089943,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#rebuild().mjava,0,7,1,0,0,1.2000000476837158,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readString(ChannelBuffer).mjava,0,0,2,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#skip(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#computeNext().mjava,0,0,13,0,4,0.1538461595773697,7,4,18,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#Chunk(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UTF8Serializer#UTF8Serializer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Literal#Literal(List[Pair[Term.Raw,Term.Raw]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\CommitVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getSchemaVersion().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#getComparatorFor(CFMetaData,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#SSTableWriter(String,long,CFMetaData,IPartitioner[#],SSTableMetadata.Collector).mjava,0,0,15,5,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#bloomFilterFpChance(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#setTracker(DataTracker).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#SessionInfo(InetAddress,Collection[StreamSummary],Collection[StreamSummary],StreamSession.State).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#tryParseInt(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getKSMetaData(String).mjava,0,0,7,1,1,0.10000000149011612,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Truncation#createMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#equals(Object).mjava,0,0,3,1,1,0.05263157933950424,160,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#move(Token).mjava,0,0,34,1,3,0.095238097012043,64,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#close().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StreamingHistogram#getAsMap().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\TimeUUIDSerializer#validate(ByteBuffer).mjava,0,0,4,1,1,0.20000000298023224,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#execute(QueryState).mjava,0,0,25,1,8,0.046875,200,11,46,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDSerializer#deserialize(DataInput,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#writeChunkSize(int).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#requireFullClusteringKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#consistency().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosCommit(Commit,UUID).mjava,0,0,10,2,3,0.0714285746216774,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#close().mjava,0,3,3,0,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#consistencyLevelToCB(ConsistencyLevel).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#disable().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#computeNext().mjava,0,0,10,0,0,0.0416666679084301,10,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getBoundsTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#putNext(Tuple).mjava,0,0,7,1,1,0.05263157933950424,6,3,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateHintsDropped(InetAddress,UUID,int).mjava,0,0,4,3,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getNumWords().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\PureJavaCrc32#update(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#resolve(ColumnFamily,Allocator).mjava,0,0,1,2,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DefinitionsUpdateVerbHandler#doVerb(MessageIn[Collection[RowMutation]],int).mjava,0,0,4,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markCurrentViewReferenced().mjava,0,2,2,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#serializedSize(RowMutation,int).mjava,0,0,10,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#response(MessageIn).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#whereClause(List[BoundColumn],int).mjava,0,0,11,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestScheduler().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#requestRanges(InetAddress,String,Collection[Range[Token]],String...).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#newOffHeapAllocator(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RandomPartitioner#midpoint(Token,Token).mjava,0,0,3,2,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosPromise(Commit).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyString(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#create(ColumnFamilyStore,int,List[SSTableReader]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceRepair(Range[Token],String,boolean,boolean,String...).mjava,0,0,7,5,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#cas(String,String,ByteBuffer,ColumnNameBuilder,ColumnFamily,ColumnFamily,ConsistencyLevel,ConsistencyLevel).mjava,0,0,34,8,13,0.11999999731779099,13,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getLiveSortedEndpoints(Keyspace,RingPosition).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#alterableOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#isEnabled().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamWriter#totalSize().mjava,0,1,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.EmptyClauseFilter#getClause().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#RangeTombstoneList(Comparator[ByteBuffer],ByteBuffer[],ByteBuffer[],long[],int[],int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getIndexes().mjava,0,3,2,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex.IndexedEntry#indexedEntryStart().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#WeightedQueue(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#open().mjava,0,0,7,0,0,0.0,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesReceived().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#midpoint(Token,Token).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#ColumnSpecification(String,String,ColumnIdentifier,AbstractType[#]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Client#encodeCredentialsForSasl(Map[String,String]).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskAccessMode().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#differenceToFetch(Range[T]).mjava,0,0,9,1,7,0.1111111119389534,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,18,4,6,0.03448275849223137,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DateType#DateType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDigestResolver#getData().mjava,0,1,2,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#serialize(DataOutput).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#updateDigest(MessageDigest).mjava,0,0,11,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnSlice.Serializer#serialize(ColumnSlice,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#setOrdering(ColumnIdentifier,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#TokenFct(CFMetaData).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#relativeToAbsolutePath(String,Path).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FilterFactory#serialize(IFilter,DataOutput).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Adder#Adder(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#schedule().mjava,0,0,7,0,2,0.05263157933950424,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#optionalKSandCFs(NodeCommand,ToolCommandLine,String[],NodeProbe).mjava,0,0,31,4,7,0.0517241396009922,70,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#writeJSON(PrintStream,Object).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#and(Relation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#decompose(Object...).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#limit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Literal#prepare(ColumnSpecification).mjava,0,0,9,1,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec.Flag#deserialize(int).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponse#ReadResponse(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PaxosState#commit(Commit).mjava,0,0,9,1,2,0.5,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#toFetch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheRequests().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.SimpleBlockFetcher#fetchMoreData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#getString(AbstractType[#]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexesByNames(Set[String]).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#fetchPage(int).mjava,0,0,9,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#renewLocalId().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,String,String).mjava,0,0,8,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDSerializer#serializedSize(UUID,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeAssumeStatement(Tree).mjava,0,0,14,1,3,0.1666666716337204,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#shutdown().mjava,0,0,4,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#readShort().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,8,4,4,0.25,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalRangeLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesSearcher#search(ExtendedFilter).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#discard(boolean).mjava,0,0,2,1,0,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doValidationCompaction(ColumnFamilyStore,Validator).mjava,0,0,24,2,6,0.3181818127632141,24,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#ColumnCounter(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#serve().mjava,0,0,12,0,2,0.5263158082962036,17,5,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#invalids().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#toString().mjava,0,0,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getDrainProgress().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#maxTimestamp().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#withParameter(String,byte[]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnStats#ColumnStats(int,long,long,int,StreamingHistogram,List[ByteBuffer],List[ByteBuffer]).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelector#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_remove(ByteBuffer,ColumnPath,long,ConsistencyLevel,boolean).mjava,0,0,20,5,4,0.0,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer.FailureDetectorSourceFilter#shouldInclude(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\StringToken#compareTo(Token[String]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addColumnCount(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#rebuildSecondaryIndex(String,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#saveCache().mjava,0,0,25,0,8,0.020408162847161293,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#maxTimestamp().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndex#getExpressionComparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#severity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType[#]]).mjava,0,0,4,1,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#phi(long).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#keySamples(Iterable[ColumnFamilyStore],Range[Token]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#makeComparator(ColumnFamilyType,AbstractType[#],AbstractType[#]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#values().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#isOpen().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer#ThriftServer(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\LocalPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(MetricNameFactory,String).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#compareTo(SSTableIdentityIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#overrideDataDirectoriesForTest(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EndpointState#getHeartBeatState().mjava,0,32,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#response(MessageIn).mjava,0,0,8,1,1,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.FunctionSelector#isAssignableTo(ColumnSpecification).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createInternal(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,2,5,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#RowCacheKey(UUID,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#replaceCompactedSSTables(Collection[SSTableReader],Collection[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printDc(PrintStream,String,String,LinkedHashMultimap[String,String],boolean,Map[InetAddress,Float]).mjava,0,0,38,6,15,0.01666666753590107,32,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#serialize(DataOutput).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#deserialize(DataInput).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#constructRangeToEndpointMap(String,List[Range[Token]]).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getWriter(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#filenameFor(Component).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row.RowSerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilterSerializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#getName().mjava,0,0,2,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#isSupportedBy(SemanticVersion).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#createTempFile(String,String,File).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeRemoveUnreadableSSTables(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getListenAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#deserialize(ByteBuffer).mjava,0,0,5,1,3,0.10000000149011612,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#fromSCSliceFilter(CompositeType,ByteBuffer,SliceQueryFilter).mjava,0,0,39,3,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark(FileMark).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getComponentComparator(Integer,ColumnDefinition.Type).mjava,0,0,2,2,3,0.04545454680919647,8,3,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#compressor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#isInitialized().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#contains(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#init().mjava,0,2,5,0,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#compareTo(RowPosition).mjava,0,0,4,1,2,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#reduceNameFilter(QueryFilter,ColumnFamily,long).mjava,0,0,6,3,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\CassandraException#CassandraException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.FunctionSelector#compute(ResultSetBuilder).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#put(DecoratedKey,ColumnFamily,SecondaryIndexManager.Updater).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#trim(ColumnFamily,int,long).mjava,0,0,15,3,4,0.0,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\LazyColumnIterator#getSubIterator().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#NamesQueryFilter(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token#Token(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#columnName(String).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onRemove(InetAddress).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#updatesWithPaxosTime(ColumnFamily,UUID).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BooleanType#BooleanType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#getKeyspace().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#CounterMutation(RowMutation,ConsistencyLevel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ReversedType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\GCInspector#GCInspector().mjava,0,0,5,0,3,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\client\RingCache#getRange(ByteBuffer).mjava,0,0,3,1,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#columnCounter().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ProgressInfo#isCompleted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#writeTo(OutputStream).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#hasRemaining().mjava,0,16,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#iterator().mjava,0,1,1,0,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getPositionsForRanges(Collection[Range[Token]]).mjava,0,0,10,1,6,0.21052631735801697,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#groupSuperColumns(ColumnFamily).mjava,0,0,10,1,6,0.10526315867900848,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#maxColumns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#equals(RowPosition,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#serialize(WriteResponse,DataOutput,int).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\AbstractBounds#intersects(Iterable[Range[T]]).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#addRangeForEndpoint(Range[Token],InetAddress).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#currentSession().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,CompressionMetadata.Chunk).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\WrappedRunnable#run().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokens(InetAddress).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#datacenter(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#hashCode().mjava,0,0,2,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJobDesc#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthenticateMessage#AuthenticateMessage(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,ByteBuffer,Map[UUID,ColumnFamily]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#closeSocket(boolean).mjava,0,0,3,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#getSessionId().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#writeRow(DecoratedKey,ColumnFamily).mjava,0,0,3,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getBytesRead().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\CompressedPoolingSegmentedFile.Builder#complete(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient.ConnectionTracker#addConnection(Channel,Connection).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_array(long[],int,int).mjava,0,0,7,3,27,0.3333333432674408,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#bytesRemaining().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRequestedBound(Bound,List[ByteBuffer]).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#addAndGetIndex(CFDefinition.Name,List[CFDefinition.Name]).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#ColumnDeletion(ColumnIdentifier).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#replace(K,V,V).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#unescape(String).mjava,0,0,6,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthorizer#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStates().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#serializeBounds(DataOutput).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#setCoreThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor.UncomplainingRunnable#run().mjava,0,0,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateTokens(Collection[Token]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Interval#Interval(C,C,D).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadVerbHandler#doVerb(MessageIn[ReadCommand],int).mjava,0,0,7,2,4,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#printBanner().mjava,0,1,6,0,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#reset(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#writeElementAtOffset(ByteBuffer,int,CounterId,long,long).mjava,0,0,7,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int,int).mjava,0,1,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTruncateRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#keysToTokens(Range[Token],List[DecoratedKey]).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serializedSize(Token,TypeSizes).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#deleteFromIndexes(DecoratedKey,List[Column]).mjava,0,0,6,2,2,0.05000000074505806,10,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDiskFailurePolicy(Config.DiskFailurePolicy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#keyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#LexicalUUIDType().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readShortLength(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputPageRowSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\ProgressInfoCompositeData#toCompositeData(UUID,ProgressInfo).mjava,0,0,10,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#filterForQuery(Keyspace,List[InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedUpdate#prepareInternal(CFDefinition,ColumnSpecification[],Attributes).mjava,0,0,8,3,3,0.0,16,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.StatsCollector#finishCompaction(CompactionInfo.Holder).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scheduleFlush().mjava,0,2,8,0,2,0.1428571492433548,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#add(Column).mjava,0,0,9,1,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#setTimeout(int).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\FloatType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#Functions().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputRpcPort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#setIndexType(IndexType,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#deactivate().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Putter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#escape(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getSpProxy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#newKeyspace(String,String,Map[String,String],boolean).mjava,0,0,4,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getCommitLogLocation().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addCondition(Operation).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openMetadata(Descriptor,Set[Component],IPartitioner).mjava,0,0,12,3,2,0.2666666805744171,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#updateKsDefAttributes(Tree,KsDef).mjava,0,0,23,2,7,0.09302325546741486,39,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#serialize(List[T]).mjava,0,0,6,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Frame#create(ChannelBuffer).mjava,0,0,13,1,7,0.06666667014360428,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#fromString(String).mjava,0,0,23,1,9,0.027027027681469917,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getDefaultTimeToLive().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#preventSystemKSSchemaModification(String,DataResource,Permission).mjava,0,0,9,3,0,0.25,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#start(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateOnDiskAtom(ColumnFamily,List[#-extends-Iterator[#-extends-OnDiskAtom]],int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#getCurrentLocalCounterId().mjava,0,1,11,0,3,0.06666667014360428,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#getOldLocalCounterIds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#maybeTrim(Row).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#serialize(GossipDigestSyn,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#OldNetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#toString(Set[T]).mjava,0,0,4,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#internalOpen(Descriptor,Set[Component],CFMetaData,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,IFilter,long,SSTableMetadata).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.ResultSetBuilder#isDead(Column).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#run().mjava,0,1,10,0,2,0.09090909361839294,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#resolve(DecoratedKey,ColumnFamily,SecondaryIndexManager.Updater).mjava,0,0,10,3,3,0.06666667014360428,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#addLeavingEndpoint(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_column_family(String).mjava,0,0,8,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkFor(long).mjava,0,0,5,1,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#[T]_getInstance(AbstractType[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#load(KSMetaData).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearUnsafe().mjava,0,0,3,0,0,0.0,1,0,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#insertFrom(int,ByteBuffer,ByteBuffer,long,int).mjava,0,0,7,5,0,0.3478260934352875,6,3,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#delta().mjava,0,4,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#split(T).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#comparePoints(C,C).mjava,0,0,2,2,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#cleanup().mjava,0,1,8,0,2,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#updateVersionAndAnnounce().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Codec#decode(ChannelBuffer,int).mjava,0,0,4,2,4,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMinRowSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics#ThreadPoolMetrics(ThreadPoolExecutor,String,String).mjava,0,0,14,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#isLocalTask().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#CliClient(CliSessionState,Cassandra.Client).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#tupleToKeyMap(Tuple).mjava,0,0,9,1,3,0.0,5,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#terminate().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#toString(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\ColumnDefinition#ColumnDefinition(ByteBuffer,AbstractType[#],Integer,Type).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\StatusLogger#log().mjava,0,2,47,0,11,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#restoreState(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(CompositeType,List[ByteBuffer],byte[]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#getSimpleStates().mjava,0,0,10,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#getSSProxy(MBeanServerConnection).mjava,0,0,1,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.Serializer#Serializer().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(String,File,String,String,int,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#reverseIterator(ColumnSlice[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.NativeDBTypeSizes#sizeof(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,15,1,6,0.0,27,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#internalIP(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#addToTotalBytesCompacted(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#hasIndexFor(List[IndexExpression]).mjava,0,0,4,1,1,0.1818181872367859,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.NullOutputHandler#debug(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#BulkRecordWriter(Configuration,Progressable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#indexes(ByteBuffer).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#scheduleHintDelivery(InetAddress).mjava,0,0,5,1,0,0.05263157933950424,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#bytesOnDisk().mjava,0,3,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\AbstractModification#isSetConsistencyLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row#Row(ByteBuffer,ColumnFamily).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeShort(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateLocalTokens(Collection[Token],Collection[Token]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider#create(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#compareTo(Range[T]).mjava,0,0,3,1,0,0.5714285969734192,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPrimaryRangesFor(Collection[Token]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,boolean,boolean,boolean,String...).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#trace(ByteBuffer,String,int).mjava,0,0,22,3,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserialize(DataInput,ColumnSerializer.Flag,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ReadyMessage#ReadyMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliCompiler#numColumnSpecifiers(Tree).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FastByteComparisons.LexicographicalComparerHolder.PureJavaComparer#compareTo(byte[],int,int,byte[],int,int).mjava,0,0,0,6,4,0.05882352963089943,6,3,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildCasResultSet(ByteBuffer,ColumnFamily).mjava,0,0,8,2,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumnValues().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#register(StreamResultFuture).mjava,0,0,5,1,0,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\FSError#FSError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\KeyCacheKey#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#deserialize(DataInput,int).mjava,0,0,5,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openDataReader().mjava,0,5,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getReadRepairChance().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#slicesForKey(ByteBuffer).mjava,0,0,12,1,3,0.20000000298023224,15,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getDatacenters().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#equals(Object).mjava,0,0,0,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.LocalMutationRunnable#run().mjava,0,0,9,0,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateResponse#createMessage().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData.Caching#fromString(String).mjava,0,0,5,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPathOrParent(CFMetaData,ColumnPath).mjava,0,0,4,2,0,0.0,36,6,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getUpdateInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#deserialize(DataInput,int).mjava,0,0,12,2,10,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#generateCFMetadataUpdate().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeAtoms(Iterator[OnDiskAtom],PrintStream,CFMetaData).mjava,0,0,6,3,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RepairException#RepairException(RepairJobDesc,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#getBoolean(String,Boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#getFailedHosts().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#announceMigration().mjava,0,0,3,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#StreamSession(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#serialize(ValidationComplete,DataOutput,int).mjava,0,0,3,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int,Charset).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AsciiType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeColumn(Column,AbstractType[#],CFMetaData).mjava,0,0,23,3,4,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getEstimatedRowSizeHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#truncate(String,String).mjava,0,0,1,2,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#includeStartKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#addOrGet(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getWriteEndpoints(Token,String,Collection[InetAddress]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#collectReducedColumns(ColumnFamily,Iterator[Column],int,long).mjava,0,0,18,4,2,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\JEMallocAllocator#free(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#upgradeSSTables(String,boolean,String...).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#hash32(ByteBuffer,int,int,int).mjava,0,0,7,4,8,0.022727273404598236,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#reverseIterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#serialize(EchoMessage,DataOutput,int).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator#getMinimumSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#getKeyTypes(CFMetaData).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSummary#StreamSummary(UUID,int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getOperationMode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstone#getLocalDeletionTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readByte().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(QueryFilter).mjava,0,0,18,1,6,0.0,5,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\FloatSerializer#toString(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspaces().mjava,0,0,6,0,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getPendingRangeToEndpointMap(String).mjava,0,0,9,1,2,0.1818181872367859,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#encodeOne(Pair[T,Object]).mjava,0,0,5,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#binaryHash(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_count(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,23,4,6,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#isSuperuser(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPrimaryRangeFor(Token).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#encode(QueryOptions,int).mjava,0,0,37,2,3,0.0,256,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getTruePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LegacyLeveledManifest#levelOf(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#removeOldSSTablesSize(Iterable[SSTableReader]).mjava,0,0,9,1,2,0.0,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#DecoratedKey(Token,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\RowCacheKey#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flush().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#keyString(List[BoundColumn]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#root().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipShutdownVerbHandler#doVerb(MessageIn,int).mjava,0,0,3,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#getBackingFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSelect(String,SelectStatement,List[ByteBuffer]).mjava,0,0,25,3,3,0.17391304671764374,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processPrepared(CQLStatement,QueryState,QueryOptions).mjava,0,0,13,3,1,0.1428571492433548,7,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#Attributes(ConsistencyLevel,Long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSlicePredicate(Configuration,SlicePredicate).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\JEMallocAllocator#JEMallocAllocator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#TruncateResponseHandler(int).mjava,0,0,1,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReader#StreamReader(FileMessageHeader,StreamSession).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet#addColumnValue(ByteBuffer).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#isAlive(InetAddress).mjava,0,0,5,1,1,0.375,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#doVerb(MessageIn[Truncation],int).mjava,0,0,13,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getRack(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getKeyspace().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#hasCounterId(CounterId).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableDataSize().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#[T]_getInstance(TypeSerializer[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_splits_ex(String,String,String,int).mjava,0,0,15,4,4,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RequestExecutionException#RequestExecutionException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\ListSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#enumeratekeys(Descriptor,PrintStream).mjava,0,0,7,2,3,0.1428571492433548,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#none().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#executeInternal(QueryState).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#maybeLogCQL2Warning().mjava,0,3,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTable#readTOC(Descriptor).mjava,0,0,11,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#setPendingRanges(String,Multimap[Range[Token],InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\TriggerDefinition#deleteFromSchema(RowMutation,String,long).mjava,0,0,11,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#cleanupOnFailure(String,Job).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#StreamPlan(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#getDatacenter(InetAddress).mjava,0,0,10,1,1,0.0,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getDirtyCFIDs().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#convict(InetAddress,double).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#getTimeout().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#sendReplicationNotification(InetAddress).mjava,0,0,8,1,3,0.1666666716337204,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readLine().mjava,0,0,10,0,4,1.0666667222976685,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#isValidType(Function,List[#-extends-AssignementTestable],ColumnSpecification).mjava,0,0,11,3,2,0.125,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#addKeyToTuple(Tuple,ByteBuffer,CfDef,AbstractType).mjava,0,0,6,4,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#executeInternal(QueryState).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageOut,InetAddress,IAsyncCallback,long).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition]_contains(T,T,T).mjava,0,0,5,3,0,0.7692307829856873,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFloat().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#isMarkedForDelete().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#maybeBuildSecondaryIndexes(Collection[SSTableReader],Set[String]).mjava,0,0,8,2,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#getTimeToLive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getOnDiskFilePointer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicResetInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#onFailure(Throwable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedPoolingSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleProgress(ProgressInfo).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#getSessionInfo().mjava,0,2,8,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader.RowIterator#newRow(Map[String,ByteBuffer],String).mjava,0,0,13,2,2,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\Pageable.ReadCommands#ReadCommands(List[ReadCommand]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#streamsNeeded().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#Scrubber(ColumnFamilyStore,SSTableReader).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#build().mjava,0,3,5,0,1,0.27272728085517883,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.NativeDBTypeSizes#sizeof(short).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#serializeEvent().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#validate().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Term#isBindMarker().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#partialCompactionsAcceptable().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Adder#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CollationController#collectTimeOrderedData().mjava,0,1,55,0,16,3.1034483909606934,896,12,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#buildName(CFMetaData,ByteBuffer...).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeIncr(Tree,long).mjava,0,0,25,2,10,0.1041666641831398,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#stop(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#removeNode(String).mjava,0,0,29,1,7,0.22727273404598236,256,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\Scrubber#throwIfFatal(Throwable).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\ChecksummedOutputStream#resetChecksum().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.Setter#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,6,4,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#activate().mjava,0,1,15,0,2,0.06060606241226196,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#FailureDetector().mjava,0,0,2,0,1,0.09090909361839294,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#isRootLevel().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#terminate().mjava,0,1,2,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#ColumnToCollectionType(Map[ByteBuffer,CollectionType]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.Appender#execute(ByteBuffer,ColumnFamily,ColumnNameBuilder,UpdateParameters).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#includeFinishKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#toString().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#validateOptions().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerConnection#getAuthenticator().mjava,0,1,2,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply.RangeSliceReplySerializer#serializedSize(RangeSliceReply,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#preheat(Map[DecoratedKey,RowIndexEntry]).mjava,0,0,11,1,2,0.05882352963089943,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleStrategy#recognizedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#execute(ClientState).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#searchInternal(ByteBuffer).mjava,0,0,4,1,2,0.15789473056793213,6,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getSubColumnName(String,Tree).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#updateColumnsLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerConnection#validateNewMessage(Message.Type,int,int).mjava,0,0,3,3,0,0.05000000074505806,15,4,15,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#cfdefFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#toString().mjava,0,0,2,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#RequestThreadPoolExecutor().mjava,0,0,2,0,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#reloadSecondaryIndexMetadata(CFMetaData).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,List[IndexExpression]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUTF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#OutgoingMessageHandler(StreamSession,Socket,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readInt().mjava,0,3,4,0,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#TopologyChange(Change,InetSocketAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getSchemaVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(Configuration,Progressable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.CompositeComparator#CompositeComparator(List[AbstractType[#]],int[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedColumnsOnly(ColumnFamily,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printSSTables(String,String,String,PrintStream).mjava,0,0,2,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MurmurHash#getblock(ByteBuffer,int,int).mjava,0,0,8,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getKeyspace().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getColumnCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#min().mjava,0,0,2,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#reload().mjava,0,3,11,0,0,0.3076923191547394,8,3,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#Gossiper().mjava,0,0,3,0,1,8.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#LeveledManifest(ColumnFamilyStore,int,SizeTieredCompactionStrategyOptions).mjava,0,0,3,3,1,0.23076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getCachePath(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#fromSCFilter(CompositeType,ByteBuffer,IDiskAtomFilter).mjava,0,0,2,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\NamesQueryPager#timestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#registerMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RetriedSliceFromReadCommand#copy().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentReaders().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DecoratedKey#compareTo(IPartitioner,ByteBuffer,RowPosition).mjava,0,0,6,3,2,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#getMaxVersion().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(String,ConsistencyLevel).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setTokens(Collection[Token]).mjava,0,0,12,1,0,0.1111111119389534,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#log().mjava,0,0,9,0,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#isJoined().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#release().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListUsersStatement#validate(ClientState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#nameComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#normaliseType(String,String).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter#ExtendedFilter(ColumnFamilyStore,DataRange,int,boolean,long).mjava,0,0,1,5,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#open(String,String,boolean,CompressionParameters,Collector).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#rowMutation().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#sstablesRewrite(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\composites\CompositesIndexOnClusteringKey#buildIndexComparator(CFMetaData,ColumnDefinition).mjava,0,0,9,2,3,0.1818181872367859,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComponents().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RepairException#getMessage().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#setMaximumThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#usesVnodes(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#loadTriggerInstance(String).mjava,0,0,5,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\RepairRunner[NodeProbe]#handleNotification(Notification,Object).mjava,0,0,11,2,2,0.0625,6,4,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.SlicesIterator#computeNext().mjava,0,1,13,0,3,0.07999999821186066,34,6,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Murmur3BloomFilter.Murmur3BloomFilterSerializer#createFilter(int,IBitSet).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#getTimeToLive(List[ByteBuffer]).mjava,0,0,4,1,2,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#beforeExecute(Thread,Runnable).mjava,0,0,1,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#isClosed().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#compareTo(SemanticVersion).mjava,0,0,2,1,1,0.0,128,7,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\HintedHandOffManager#calculateHintTTL(RowMutation).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onUpdateColumnFamily(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getToken(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#serialize(StreamMessage,WritableByteChannel,int,StreamSession).mjava,0,0,5,4,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#serializedSize(ColumnFamily,TypeSizes,int).mjava,0,0,19,3,6,0.05882352963089943,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairSession#getId().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftServer#isRunning().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#updateCfDefAttributes(Tree,CfDef).mjava,0,0,59,2,8,0.009708737954497337,92,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#QueryOptions(ConsistencyLevel,List[ByteBuffer],boolean,int,PagingState,ConsistencyLevel).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#open(String).mjava,0,0,0,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliOptions.CLIOptions#addOption(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getPendingTasks().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getLiveCount(ColumnFamily,long).mjava,0,0,2,2,1,0.09090909361839294,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#[T-extends-ColumnFamily]_cloneMeShallow(ColumnFamily.Factory[T],boolean).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters.Serializer#serializedSize(CompressionParameters,int).mjava,0,0,12,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#RowContainer(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getUUID(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#doRetry(FileMessageHeader,Throwable).mjava,0,0,5,2,0,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#memorySize().mjava,0,0,10,0,1,0.1818181872367859,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addFalsePositive().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#toString().mjava,0,0,15,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#RangeSliceQueryPager(RangeSliceCommand,ConsistencyLevel,boolean,PagingState).mjava,0,0,3,4,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation#Operation(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\UnavailableException#UnavailableException(ConsistencyLevel,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#addLocalApplicationState(ApplicationState,VersionedValue).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#validate(ClientState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getUptime().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CLibrary#preheatPage(int,long).mjava,0,0,1,2,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#CassandraStorage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#multiRangeSlice(CFMetaData,SelectStatement,List[ByteBuffer],long).mjava,0,0,52,4,14,0.0555555559694767,27,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\LegacyAuthenticator#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\BytesToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter.ExternalClient#ExternalClient(String,int,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#hasKeyspaceAccess(String,Permission).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#convertDroppedColumns(Map[String,Long]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serializedSize(EstimatedHistogram,TypeSizes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#doStatusCheck().mjava,0,1,29,0,5,0.1111111119389534,56,8,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#addAll(ColumnFamily,Allocator,Function[Column,Column]).mjava,0,0,29,3,5,0.02500000037252903,40,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#read().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLiveSSTableCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicBadnessThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#unmarkCompacting(Iterable[SSTableReader]).mjava,0,0,5,1,1,0.2857142984867096,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#setupAuthKeyspace().mjava,0,1,5,0,1,0.0714285746216774,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#releaseSummary().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setIncrementalBackupsEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#close().mjava,0,1,2,0,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#createLinks(String).mjava,0,0,3,1,2,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#addAll(RangeTombstoneList).mjava,0,0,7,1,2,0.5757575631141663,12,7,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableExport#writeDeletionInfo(PrintStream,DeletionTime).mjava,0,0,4,2,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#Differencer(RepairJobDesc,TreeResponse,TreeResponse).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#getWriter().mjava,0,2,3,0,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#protectedResources().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidate(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#updateVersion().mjava,0,2,8,0,1,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#setPartitioner(IPartitioner).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#getString(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#validate(ClientState).mjava,0,0,6,1,0,0.09090909361839294,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#deserialize(DataInput).mjava,0,0,5,1,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#readAndCompute().mjava,0,2,8,0,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#intersects(List[ByteBuffer],List[ByteBuffer],SliceQueryFilter).mjava,0,0,6,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer.CorruptColumnException#CorruptColumnException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutation#apply().mjava,0,0,13,0,4,0.06666667014360428,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor.Version#toString().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\DropIndexStatement#findIndexedCF().mjava,0,2,4,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#stopNativeTransport().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataInputStream#readUnsignedShort().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#onlyBackups(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcSendBufferSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap#add(ByteBuffer[],int,Column).mjava,0,0,6,3,2,0.05263157933950424,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#multigetSliceInternal(String,List[ByteBuffer],ColumnParent,long,SlicePredicate,ConsistencyLevel).mjava,0,0,14,6,4,0.13333334028720856,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Type#Type(int,Direction,Codec[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter.Serializer#serialize(NamesQueryFilter,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#sendMessage(StreamMessage).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput,ColumnSerializer.Flag,int).mjava,0,0,5,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getColumnFamily().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#checksum(CompressionMetadata.Chunk).mjava,0,0,6,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition#get(ColumnIdentifier).mjava,0,0,4,1,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#leaveRing().mjava,0,1,11,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#findIndexedCF().mjava,0,2,6,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#Memtable(ColumnFamilyStore).mjava,0,0,5,1,2,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData.SpeculativeRetry#fromString(String).mjava,0,0,11,1,3,0.03846153989434242,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[K,V]_getMap(String,AbstractType[K],AbstractType[V]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getValidatorMap(CfDef).mjava,0,0,7,1,2,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Operation#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadPaxosState(ByteBuffer,CFMetaData).mjava,0,0,15,2,5,0.0714285746216774,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_waitOnFuture(Future[T]).mjava,0,0,1,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Connection#channel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#purge(int).mjava,0,0,2,1,0,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#Validator(RepairJobDesc,InetAddress,int).mjava,0,0,2,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#create(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadCommand#setDigestQuery(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\LatencyTracker#getRecentLatencyMicros().mjava,0,0,2,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#requestRanges(InetAddress,String,Collection[Range[Token]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#checkSeedContact(InetAddress).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\vint\EncodedDataOutputStream#writeInt(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LegacyLeveledManifest#snapshotWithoutCFS(String,String).mjava,0,0,17,2,9,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#enableHintedHandoff().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#MappedFileDataInput(MappedByteBuffer,String,long,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable.Reducer#reduce(OnDiskAtomIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getPos().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#setStoreLocation(String,Job).mjava,0,0,12,2,0,0.0,64,6,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Segment#Segment(long,MappedByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#midpoint(Token,Token).mjava,0,0,7,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#shortToCB(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#delete(String,ByteBuffer,long).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#report(InetAddress).mjava,0,0,6,1,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#DynamicEndpointSnitch(IEndpointSnitch).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#write(ByteBuffer,DataOutput).mjava,0,0,10,2,0,0.0,2,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeySamples(Range[Token]).mjava,0,0,10,1,2,0.0,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String,TypeParser).mjava,0,0,11,2,6,0.07999999821186066,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlPagingRecordReader#getLocation().mjava,0,1,5,0,2,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker#containsBindMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Differencer#maxEndpoint().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#getMbeanServerConn().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setCoreCompactorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getOperations().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps#keySpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#clearAllDelta(ByteBuffer).mjava,0,0,9,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_intersect(long[],long[],int,int).mjava,0,0,7,4,27,0.08602150529623032,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateCountOperation(SelectStatement).mjava,0,0,8,1,2,0.1666666716337204,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigest#getEndpoint().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#isUnwritable(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#setNextSlice().mjava,0,3,5,0,1,0.095238097012043,7,5,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\PropertyDefinitions#addProperty(String,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexesBackedByCfs().mjava,0,2,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#diff(Column).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#isCompatibleWith(AbstractType[#]).mjava,0,0,6,1,3,0.23529411852359772,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#AbstractCompactionIterable(CompactionController,OperationType,List[ICompactionScanner]).mjava,0,0,2,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(String,ByteBuffer,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#ensureHasPermission(Permission,IResource).mjava,0,0,5,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onDead(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isSnapshotBeforeCompaction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#discardLast(List[Row]).mjava,0,0,10,1,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#StartupMessage(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#listRelocations().mjava,0,2,4,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selectable.WithFunction#WithFunction(String,List[Selectable]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#startRPCServer().mjava,0,0,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#addColumn(OnDiskAtom).mjava,0,0,3,1,0,0.4615384638309479,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getHintedHandoffEnabled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile.Builder#complete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#entrySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#Topology().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#logExceptionsAfterExecute(Runnable,Throwable).mjava,0,0,4,2,1,0.4285714328289032,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCachedRow(DecoratedKey).mjava,0,0,3,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitCacheWrite(AutoSavingCache.Writer).mjava,0,0,10,1,1,0.0,2,1,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#getByte(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleSessionPrepared(StreamSession).mjava,0,0,9,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revokeAll(IResource).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#isNativeTransportRunning().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#main(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#WhereClause(Relation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getRack(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getCacheServiceMBean().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#setupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#getLocalId().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#StorageService().mjava,0,0,47,0,1,2.5,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeWaitForArchiving(String).mjava,0,0,4,1,1,0.043478261679410934,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int,ClientEncryptionOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#SerializingCache(long,Weigher[RefCountedMemory],ISerializer[V]).mjava,0,0,6,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#hasUnreclaimedSpace().mjava,0,1,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#isKeyspaceLevel().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#columnCounter(AbstractType[#],long).mjava,0,0,0,2,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#parseArgs(String[]).mjava,0,0,11,1,9,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamManager#getRateLimiter().mjava,0,1,3,0,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#makeExtendedFilter(AbstractBounds[RowPosition],IDiskAtomFilter,List[IndexExpression],int,boolean,boolean,long).mjava,0,0,4,7,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#initRowCache().mjava,0,1,9,0,4,0.0833333358168602,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#flushOldestKeyspaces().mjava,0,1,7,0,4,0.15789473056793213,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#beginCompaction(CompactionInfo.Holder).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\UpdateStatement#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getContext().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#getMarkedForDeleteAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#isIndexing(List[IndexExpression]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\AbstractMarker#AbstractMarker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\PerColumnSecondaryIndex#validate(Column).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#PagedRangeCommand(String,String,long,AbstractBounds[RowPosition],SliceQueryFilter,ByteBuffer,ByteBuffer,List[IndexExpression],int).mjava,0,0,0,9,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputCQLPageRowSize(Configuration,String).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplitController#SplitController(ColumnFamilyStore,Collection[SSTableReader]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairRepairedBackground().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#Server(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SlabAllocator#allocate(int).mjava,0,0,5,1,2,0.2222222238779068,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#CacheableObject(T,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getCaching().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRangeForEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(RequestValidationException).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#shutdown().mjava,0,2,5,0,0,0.2142857164144516,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneOnlyTokenMap().mjava,0,15,6,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializedSize(ColumnFamily,TypeSizes,int).mjava,0,0,5,3,0,1.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#create(ByteBuffer,ByteBuffer,long,int,int,int,ColumnSerializer.Flag).mjava,0,0,0,7,0,0.800000011920929,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\Int32Type#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.CompositeComparator#compare(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,4,2,5,0.0,3,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#getMessagingVersion().mjava,0,2,0,0,0,0.0,7,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#without(UUID).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet(long).mjava,0,0,1,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getTotalNumberOfFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#run().mjava,0,2,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeWithPerStatementVariables(ConsistencyLevel,QueryState,List[List[ByteBuffer]]).mjava,0,0,3,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#description().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\DataType#getId().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintWindow().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#removedNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#importSorted(String,ColumnFamily,String,IPartitioner[#]).mjava,0,0,32,4,10,0.1034482792019844,132,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.RowCacheSerializer#deserialize(DataInputStream,ColumnFamilyStore).mjava,0,0,7,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#reloadClasses().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#QueryMessage(String,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#compactValueColumn().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#deserialize(DataInput,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#keyRangeFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\LocalStrategy#getNaturalEndpoints(RingPosition).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#validateMagic(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#serialize(SyncRequest,DataOutput,int).mjava,0,0,7,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Term.Terminal#collectMarkerSpecification(ColumnSpecification[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#intersects(ByteBuffer,ByteBuffer,ByteBuffer,ByteBuffer).mjava,0,0,4,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#consume().mjava,0,0,10,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedColumnsOnly(ColumnFamily,int,SecondaryIndexManager.Updater).mjava,0,0,10,3,3,0.3076923191547394,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyAlias().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#merge(ResultSet,ResultSet).mjava,0,0,13,2,3,0.0,4,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#serializedSize(CounterMutation,int).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler(RequestSchedulerOptions).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceCleanup(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceBlockingFlush().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getCFMetaData().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\Tracing#addColumn(ColumnFamily,ByteBuffer,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Relation#createInRelation(ColumnIdentifier).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\SnapshotVerbHandler#doVerb(MessageIn[SnapshotCommand],int).mjava,0,0,8,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#makeExtendedFilter(AbstractBounds[RowPosition],SliceQueryFilter,ByteBuffer,ByteBuffer,List[IndexExpression],int,long).mjava,0,0,1,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#close().mjava,0,1,4,0,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\ListType#getInstance(TypeParser).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#wrap(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#isTimestampSet().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue#versionString(String...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#hasCollection().mjava,0,1,3,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#ConvertToColumnIterator(DataRange,Iterator[Map.Entry[DecoratedKey,T]]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFName#setKeyspace(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentTruePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#DynamicCompositeType(Map[Byte,AbstractType[#]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\Pair#Pair(T1,T2).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeShowClusterName().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForWrite(String).mjava,0,0,1,1,0,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\BulkRecordWriter#close(org.apache.hadoop.mapred.Reporter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#CompressionMetadata(String,long).mjava,0,0,9,2,7,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#getRecentLatency().mjava,0,6,2,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\ClientState#getKeyspace().mjava,0,32,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Keyspace#clear(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BiMultiValMap#removeValue(V).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#prepare(ColumnFamilyStore).mjava,0,0,15,1,4,0.09375,2,4,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(RequestTimeoutException).mjava,0,0,4,1,2,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliUtils#maybeEscapeName(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addColumnMetadataFromAliases(List[ByteBuffer],AbstractType[#],ColumnDefinition.Type).mjava,0,0,12,3,1,0.0,4,4,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps#Maps().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#extractKeyAliasFromColumns(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Literal#Literal(Type,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#write(Map[String,ByteBuffer],List[ByteBuffer]).mjava,0,0,12,2,3,0.1764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#copy(InputStream,OutputStream,long).mjava,0,0,2,3,4,0.0555555559694767,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#next().mjava,0,0,2,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Event#deserialize(ChannelBuffer).mjava,0,0,4,1,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RowDigestResolver#resolve().mjava,0,0,17,0,6,0.1794871836900711,60,8,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#fromString(String).mjava,0,0,4,1,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairRepairedBackground().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#parseMeta(Map[#,#],ColumnFamily,ByteBuffer).mjava,0,0,9,3,4,0.07692307978868484,3,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#modify(Set[Permission],IResource,String,String).mjava,0,0,6,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#clear().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#appendEndpointState(StringBuilder,EndpointState).mjava,0,0,9,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#lookupSSTable(ColumnFamilyStore,Descriptor).mjava,0,0,4,2,0,0.5,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\OptionCodec#OptionCodec(Class[T]).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#deallocate().mjava,0,2,0,0,0,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Segment#compareTo(Segment).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object[]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange.Paging#updateColumnsLimit(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#hash(ByteBuffer...).mjava,0,0,10,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CompositeType#extractComponent(ByteBuffer,int).mjava,0,0,4,2,2,0.07692307978868484,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Memtable#getColumnFamily(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#columnsIndex().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getMaxEndpointStateVersion(EndpointState).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#iterator().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#summarize(ByteBuffer).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isDroppedColumn(Column,CFMetaData).mjava,0,0,7,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#getTransferSections(CompressionMetadata.Chunk[]).mjava,0,0,5,1,2,0.07692307978868484,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#copy().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#getValueValidator(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeySample(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addAll(Iterator[RowHash]).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#startNativeTransport().mjava,0,0,2,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokens().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUnsafe(long,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printDescribeRing(String,PrintStream).mjava,0,0,7,2,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString(StringBuilder,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#CommitLogReplayer().mjava,0,0,13,0,5,0.27272728085517883,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#deserialize(DataInput,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#remainingCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\AbstractColumnFamilyOutputFormat.NullOutputCommitter#needsTaskCommit(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#register(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getKeyspaceDefinitions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogAllocator#createFreshSegment().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#rawAppend(ColumnFamily,long,DecoratedKey,DataOutput).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isReplacing().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Setter#Setter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.DefaultReadExecutor#DefaultReadExecutor(ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress],List[InetAddress]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotExists(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addColumn(Column).mjava,0,0,6,1,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsBytes(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#clearSnapshot(String).mjava,0,0,5,1,2,0.07692307978868484,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceUpdate(KSMetaData).mjava,0,0,8,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#extractExpireTime(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#getSliceInternal(String,ByteBuffer,ColumnParent,long,SlicePredicate,ConsistencyLevel).mjava,0,0,3,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server#Server(InetSocketAddress).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#isInclusive(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#set(long).mjava,0,0,2,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#invalidateCachedRow(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#iterator(ColumnSlice[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#dateStringToTimestamp(String).mjava,0,0,9,1,1,0.06666667014360428,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#serialize(CounterMutation,DataOutput,int).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree#[C,D,I-extends-Interval[C,D]]_serializer(ISerializer[C],ISerializer[D],Constructor[I]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#serializedSize(SyncComplete,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#hasIrrelevantData(int).mjava,0,0,0,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#closeAndOpenReader().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputWhereClauses(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#toString().mjava,0,0,43,0,2,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeConnect(Tree).mjava,0,0,17,1,4,0.21052631735801697,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#estimatedKeysForRanges(Collection[Range[Token]]).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(UUID).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#getIndexedValue(ByteBuffer,Column).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#grant(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#legacySerialize(SSTableMetadata,Set[Integer],Descriptor,DataOutput).mjava,0,0,15,4,0,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#DataResource(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#getFinish().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#DynamicEndpointSnitch(IEndpointSnitch,String).mjava,0,0,5,2,2,0.08695652335882187,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#warn(String,Throwable).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadMap().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeConsistencyLevelStatement(Tree).mjava,0,0,9,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata#toString().mjava,0,0,17,0,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#predicateFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#onAlive(InetAddress,EndpointState).mjava,0,0,4,2,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getWriteCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#getRelocatingRanges().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SequentialWriter#mark().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#LogRecordAdder(RowMutation).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#elementIdx().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnsReversed().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getSSTables(String,String,String).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#readConsistencyLevel(ChannelBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Directories#snapshotExists(String).mjava,0,0,2,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#equals(Object).mjava,0,0,1,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Component.Type#fromRepresentation(String).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#readLocally(String,List[ReadCommand]).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getDirectory(File).mjava,0,0,6,1,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponse#digest().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,11,5,0,0.05882352963089943,2,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#worthDroppingTombstones(SSTableReader,int).mjava,0,0,20,2,7,0.29032257199287415,16,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read(byte[],int,int).mjava,0,0,8,3,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz2(long).mjava,0,0,0,1,2,0.125,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#getSortedColumns().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#newAuthenticator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryOptions#getPagingState().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\sink\SinkManager#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#taskCompleted(StreamReceiveTask).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList.InOrderTester#isDeleted(ByteBuffer,long).mjava,0,0,3,2,1,0.03999999910593033,6,5,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getTokenToEndpointMap().mjava,0,1,8,0,3,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\BooleanType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#toString(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#intern(ByteBuffer).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#create(ByteBuffer,ByteBuffer,long,long,ColumnSerializer.Flag).mjava,0,0,4,5,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#execute(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\security\SSLFactory#filterCipherSuites(String[],String[]).mjava,0,0,10,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#addSelectedColumns(ColumnNameBuilder).mjava,0,0,22,1,5,0.27586206793785095,2,3,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator#completed(R).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeIntern(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Restriction#getIndexOperator(Bound).mjava,0,0,0,1,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,long,long,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#minTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Metadata.Codec#decode(ChannelBuffer,int).mjava,0,0,18,2,12,0.0714285746216774,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream(Set[InetAddress]).mjava,0,0,19,1,5,0.07999999821186066,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#inOrderTester(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#acquireReferences(Iterable[SSTableReader]).mjava,0,0,2,1,1,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\RangeSliceVerbHandler#doVerb(MessageIn[AbstractRangeCommand],int).mjava,0,0,6,2,1,2.5999999046325684,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#enable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#addColumn(Column,Allocator).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_paged_slice(String,KeyRange,ByteBuffer,ConsistencyLevel).mjava,0,0,37,4,15,0.013698630034923553,8,3,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\ProgressInfoCompositeData#fromCompositeData(CompositeData).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeyCacheRequest().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getRangesForEndpoint(String,InetAddress).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#buildListQuery(IResource,String).mjava,0,0,12,2,3,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthSuccess#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#deserialize(DataInput).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnRelations().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ExpiringColumn#equals(Object).mjava,0,0,0,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Token.KeyBound#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#deserialize(DataInput,int).mjava,0,0,8,2,6,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#bytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage#ResultMessage(Kind).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns.SCIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxStreamingRetries().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#updateForKey(ByteBuffer,ColumnNameBuilder,UpdateParameters).mjava,0,0,23,3,4,0.42424243688583374,10,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setRangeBatchSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#isAfter(Commit).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#getColumnFamily().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BytesReadTracker#BytesReadTracker(DataInput).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\HeartBeatState#updateHeartBeat().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker#postReplace(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revoke(AuthenticatedUser,Set[Permission],IResource,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectStatement#isMultiKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#getCFMetaData().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#validate(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCandidatesFor(int).mjava,0,0,43,1,8,0.4067796468734741,495,11,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableMetadataViewer#main(String[]).mjava,0,0,15,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#isWrapAround().mjava,0,1,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#planId().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SimpleCondition#isSignaled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#checkAccess(ClientState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printNetworkStats(InetAddress,PrintStream).mjava,0,0,41,2,4,0.0,8,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\GossipDigestAck#GossipDigestAck(List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#serialize(List[Pair[ByteBuffer,Column]]).mjava,0,0,5,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#makeDroppedColumnName(ByteBuffer).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#CompressedSequentialWriter(File,String,boolean,CompressionParameters,Collector).mjava,0,0,4,5,0,2.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#process(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrubDataDirectories(String,String).mjava,0,0,30,2,7,0.15789473056793213,32,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForCasCommit(String).mjava,0,0,1,1,0,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#onSuccess(StreamState).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeDelete(Tree).mjava,0,0,38,1,13,0.016393441706895828,160,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addTriggerDefinitionsFromSchema(CFMetaData,Row).mjava,0,0,2,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes(long,int).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Marker#bind(List[ByteBuffer]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#handleFSError(FSError).mjava,0,0,13,1,1,0.05714285746216774,19,6,27,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.EmptyCompactionScanner#next().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getPendingAddressRanges(TokenMetadata,Collection[Token],InetAddress).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(ByteBuffer[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Attributes#isTimeToLiveSet().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#setBaseCfs(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ColumnFamilyMetrics#updateSSTableIterated(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#mergeTombstoneHistogram(StreamingHistogram).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#hasParent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getValidKeyspace(String).mjava,0,0,3,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MD5Digest#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#read(List[ReadCommand],ConsistencyLevel).mjava,0,0,19,2,7,0.03773584961891174,6,3,5,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#bind(List[ByteBuffer]).mjava,0,0,5,1,2,0.06666667014360428,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand#forSubRange(AbstractBounds[RowPosition]).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#prepareKeyspace(ClientState).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#toString().mjava,0,2,20,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#MmappedSegmentedFile(String,long,Segment[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#reduce(RowContainer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printUsage().mjava,0,3,10,0,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#unregisterMBean().mjava,0,1,4,0,2,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\SSTableImport#addToSuperCF(Map[#,#],ColumnFamily).mjava,0,0,11,2,4,0.06666667014360428,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getReverseSortedColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,RingPosition).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset(InetAddress).mjava,0,0,3,1,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyKeySlices(List[Row],ColumnParent,SlicePredicate,long).mjava,0,0,3,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\InstrumentingCache#putIfAbsent(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#composeComposite(AbstractCompositeType,ByteBuffer).mjava,0,0,9,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnCoordinator(CounterMutation,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#parseComparator(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RepairJob#isFailed().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\FailureDetector#toString().mjava,0,1,10,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#lastIndexOf(ByteBuffer,byte,int).mjava,0,0,5,3,0,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\SetType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\Validator#rowHash(AbstractCompactedRow).mjava,0,0,3,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#MessageHandler(StreamSession,Socket,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#makeFunctionSpec(CFDefinition,Selectable.WithFunction,AbstractType[#],ColumnIdentifier).mjava,0,0,2,4,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#promotedSize().mjava,0,0,5,0,2,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[T]_getSet(String,AbstractType[T]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\ColumnNameHelper#min(ByteBuffer,ByteBuffer,AbstractType[#]).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNumTokens().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#normalize(long).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#localCopy(ColumnFamilyStore).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#parseDefaultParameters(AbstractType[#],TypeParser).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb,T,IVersionedSerializer[T]).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#setInt(long,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#getStorageConfigURL().mjava,0,1,5,0,3,0.05263157933950424,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#calculateToFromStreams(Collection[Token],List[String]).mjava,0,0,33,2,15,0.35555556416511536,4,2,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,18,2,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#fromUnixTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCasContentionTimeout().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#getOperationMode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#putShortLength(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#handleStreamEvent(StreamEvent).mjava,0,0,1,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\RevokeStatement#RevokeStatement(Set[Permission],IResource,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfAssumptions#writeAssumptions().mjava,0,1,27,0,3,0.0,2,1,32,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\YamlFileNetworkTopologySnitch#YamlFileNetworkTopologySnitch(String).mjava,0,0,5,1,1,0.260869562625885,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#consistencyForUser(String).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toThriftPreparedResult().mjava,0,1,9,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#incrementTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#Prepared(MD5Digest,ParsedStatement.Prepared).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\messages\SessionFailedMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheCapacityInMB().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getResponsePendingTasks().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\LoadBroadcaster#startBroadcasting().mjava,0,1,6,0,1,0.1538461595773697,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyCollectionsParameters(Map[ByteBuffer,CollectionType]).mjava,0,0,11,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(Pair[String,String],boolean,String,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#hashCode().mjava,0,0,0,0,1,0.625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ColumnCounter#countAll(ColumnFamily).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#getSchema(String,Job).mjava,0,0,52,2,19,0.24637681245803833,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataRange#DataRange(AbstractBounds[RowPosition],IDiskAtomFilter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(SequentialWriter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\RevokeStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Setter#Setter(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#emptyCommit(ByteBuffer,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ReadTimeoutException#ReadTimeoutException(ConsistencyLevel,int,int,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#dropPageCache().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#lastCounted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth.MigrationListener#onDropKeyspace(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hasCrossNodeTimeout().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.BlockFetcher#BlockFetcher(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.SSTableIntervalTree#SSTableIntervalTree(Collection[Interval[RowPosition,SSTableReader]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TCustomSocket#close().mjava,0,2,2,0,0,0.1818181872367859,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ForwardSortedCollection#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DataTracker.View#replace(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#isValid(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#replaceFlushed(Memtable,SSTableReader).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#CounterUpdateColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#getLiveNodes().mjava,0,3,3,0,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,Set[Component],CFMetaData,IPartitioner,boolean).mjava,0,0,14,5,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#addDefaultColumnAliases(List[ColumnDefinition]).mjava,0,0,7,1,4,0.0,4,3,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#toString().mjava,0,0,13,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#sendReply(MessageOut,int,InetAddress).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Column#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#discardFirst(List[Row]).mjava,0,0,9,1,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#timestampOfLastDelete().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#timestampMicros().mjava,0,20,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo#minTimestamp().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#sum().mjava,0,1,0,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitBackground(ColumnFamilyStore).mjava,0,0,20,1,2,0.0833333358168602,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#keyspace().mjava,0,25,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService.RowCacheSerializer#serialize(RowCacheKey,DataOutput).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#enableAutoCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\SemanticVersion#toString().mjava,0,2,12,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SystemKeyspace#readSchemaRow(String,String,String).mjava,0,0,8,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getStrategyOptions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#execute(List[ByteBuffer]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#ColumnFamilyRecordReader(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection#Selection(List[CFDefinition.Name],List[ColumnSpecification],boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\metrics\ClientRequestMetrics#release().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#flushSSTables(Iterable[ColumnFamilyStore]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#argsType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#TraceState(InetAddress,UUID).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#internOrCopy(ByteBuffer,Allocator).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\CreateUserStatement#CreateUserStatement(String,UserOptions,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#convertOldStrategyName(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInMemoryCompactionLimit().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#recognizedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#SliceQueryFilter(ColumnSlice[],boolean,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#isUnreadable(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Message.Request#Request(Type).mjava,0,0,0,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setPartitionerUnsafe(IPartitioner).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toLong(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamStateCompositeData#toCompositeData(StreamState).mjava,0,0,20,1,8,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#closeSession(State).mjava,0,0,5,1,0,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#add(CommitLog.LogRecordAdder).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#fileSent(FileMessageHeader).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletionInfo.Serializer#serialize(DeletionInfo,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\AbstractCassandraStorage#getQueryMap(String).mjava,0,0,4,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String).mjava,0,0,3,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\Shuffle#Shuffle(String,int,String,int,boolean,String,String).mjava,0,0,2,7,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#compareTo(Candidate[In]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\CBUtil#uuidToCB(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\Attributes#setTimeToLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#getKeyAsBytes(String,Tree).mjava,0,0,6,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeightedQueue(String).mjava,0,0,4,1,2,0.23076923191547394,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#equals(Object).mjava,0,0,2,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\PerRowSecondaryIndex#getNameForSystemKeyspace(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelCount().mjava,0,2,1,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CassandraDaemon#setup().mjava,0,2,97,0,10,0.23636363446712494,3584,13,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#connect().mjava,0,1,52,0,4,0.03896103799343109,258,9,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap#ColumnGroupMap(ByteBuffer[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#clone(ByteBuffer).mjava,0,0,13,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionController#CompactionController(ColumnFamilyStore,Set[SSTableReader],int).mjava,0,0,4,3,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#makeRowBounds(Token,Token,IPartitioner).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#waitForStreaming().mjava,0,1,5,0,0,0.2222222238779068,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#sync().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#readNextIdentifier().mjava,0,5,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getBuilder(Config.DiskAccessMode).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator#add(R).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CassandraStorage#indexExpressionsFromString(String).mjava,0,0,3,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#forceFilterFailures().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps#valueSpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#pushSchemaMutation(InetAddress,Collection[RowMutation]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processStatement(CQLStatement,QueryState,QueryOptions).mjava,0,0,6,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#serializedSize(TypeSizes).mjava,0,0,6,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializeForSSTable(ColumnFamily,DataOutput).mjava,0,0,0,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Maps.Value#fromSerialized(ByteBuffer,MapType).mjava,0,0,9,2,2,0.1428571492433548,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,0,3,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\CounterColumn#diff(Column).mjava,0,0,9,1,1,0.4166666567325592,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutation#add(String,ByteBuffer,ByteBuffer,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#getCFSMBeans(MBeanServerConnection,String).mjava,0,0,5,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#WhereClause().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\AuthSuccess#AuthSuccess(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMember(InetAddress).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSegmentSize().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\Row.RowSerializer#serialize(Row,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#ColumnFamilyStore(Keyspace,String,IPartitioner,int,CFMetaData,Directories,boolean).mjava,0,0,29,7,7,0.08955223858356476,176,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#submit(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,38,2,9,0.13333334028720856,80,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#left(Collection[Token],long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#withUpdatedStart(ByteBuffer,AbstractType[#]).mjava,0,0,8,2,4,0.0,9,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheCapacityInMB().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getRack(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeProbe#removeNode(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator.SequentialOrder#add(R).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\Schema#storeKeyspaceInstance(Keyspace).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelection#SimpleSelection(List[CFDefinition.Name]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Auth#setup().mjava,0,2,17,0,1,0.1666666716337204,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(ByteBuffer,ByteBuffer,long,int).mjava,0,0,6,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.Type#Type(int,MessageSerializer[RepairMessage]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#isUnix().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\messages\SyncRequest#SyncRequest(RepairJobDesc,InetAddress,InetAddress,InetAddress,Collection[Range[Token]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getSeverity(InetAddress).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#updateColumnsLimit(int).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readBytes(int).mjava,0,0,11,1,3,0.06666667014360428,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#columnFamily().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#setTruncateRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\AbstractDataOutput#writeBoolean(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\SelectExpression#getColumns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceCommand#withUpdatedLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputColumnFamily(Configuration,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#validateAlias(ColumnDefinition,String).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#and(OpenBitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\RequestCoordinator#start().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPartitioner().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#SSTableReader(Descriptor,Set[Component],CFMetaData,IPartitioner,long,SSTableMetadata).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Constants.Marker#bindAndGet(List[ByteBuffer]).mjava,0,0,3,1,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.WideRowIterator.WideColumnIterator#nextRow().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputInitialAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\Server.SecurePipelineFactory#SecurePipelineFactory(Server,EncryptionOptions).mjava,0,0,1,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumnName(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\functions\Functions#signature(Function).mjava,0,0,12,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_cluster_name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#AuthenticatedUser(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.HintRunnable#HintRunnable(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\context\CounterContext#create(CounterId,long,long,boolean).mjava,0,0,7,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#binarySearch(RowPosition).mjava,0,0,3,1,1,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performCleanup(ColumnFamilyStore,CounterId.OneShotRenewer).mjava,0,0,4,2,1,0.1818181872367859,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\Memory#free().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#Custom(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns.Holder#with(SnapTreeMap[ByteBuffer,Column]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamPlan#flushBeforeTransfer(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(DecoratedKey).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getRecentLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getTotalCommitlogSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File,int,PoolingSegmentedFile).mjava,0,0,0,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#repairOverlappingSSTables(int).mjava,0,0,7,1,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TimestampType#fromString(String).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\WriteResponse#createMessage().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ReadResponse#row().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeight(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#replaceCompactedSSTables(Collection[SSTableReader],Iterable[SSTableReader],OperationType).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.exceptions.UnavailableException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#run().mjava,0,0,9,0,3,0.05882352963089943,25,6,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerError#ServerError(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLifetimeWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\ExtendedFilter.WithClauses#extractDataValue(ColumnDefinition,ByteBuffer,ColumnFamily,ColumnNameBuilder).mjava,0,0,14,4,2,0.0,12,1,12,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ObjectSizes#measureDeep(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFPropDefs#getCompressionOptions().mjava,0,3,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\paxos\Commit#makeMutation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getTimeouts().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getScanners(Collection[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#close().mjava,0,0,2,0,1,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#reduceScopeForLimitedSpace().mjava,0,0,6,0,0,0.27272728085517883,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#LZ4Compressor().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient.CfAssumptions#replayAssumptions(String).mjava,0,0,10,1,3,0.0,4,2,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\SnitchProperties#get(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\RangeStreamer#addRanges(String,Collection[Range[Token]]).mjava,0,0,16,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read().mjava,0,0,2,0,0,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\AbstractRowResolver#preprocess(MessageIn[ReadResponse]).mjava,0,0,5,1,1,0.05000000074505806,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getCachedEndpoints(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#reconnect(InetAddress,VersionedValue).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateKeyspace(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#run().mjava,0,0,8,0,1,0.17391304671764374,3,2,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\Resources#toString(List[Object]).mjava,0,0,6,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getPath().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#add(double).mjava,0,0,3,1,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToSeed(MessageOut[GossipDigestSyn]).mjava,0,0,10,1,3,0.6428571343421936,5,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\DeletedColumn#withUpdatedName(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#wrap(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ColumnGroupMap.Simple#Simple(Column).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#getTotalNumberOfFiles().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy#sendCommit(Commit,Iterable[InetAddress]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\PagedRangeCommand.Serializer#serialize(PagedRangeCommand,DataOutput,int).mjava,0,0,14,3,1,0.1111111119389534,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#addAll(ColumnFamily,Allocator,Function[Column,Column]).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#handleStreamEvent(StreamEvent).mjava,0,0,0,1,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#getCommandCompletedTasks().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#includeKeyBound(Bound).mjava,0,0,2,1,0,0.10000000149011612,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\PoolingSegmentedFile#recycle(RandomAccessReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.WritetimeOrTTLSelector#compute(ResultSetBuilder).mjava,0,0,2,1,2,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(MessageOut,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalMemtableLiveSize().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamSession#state(State).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\EmptyColumns#getSortedColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(String,Integer,Map[String,String]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#deleteColumnOrSuperColumn(RowMutation,String,Deletion).mjava,0,0,27,3,0,0.0,10,7,20,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#encode(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\WhereClause#getFinishKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#setLog4jLevel(String,String).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#build().mjava,0,0,6,0,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\ColumnFamily#maxTimestamp().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#requestInvoke(FrameBuffer).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\SimpleClient#close().mjava,0,1,4,0,0,0.6666666865348816,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#printHistory(String[],ToolCommandLine).mjava,0,0,8,2,3,0.125,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPhiConvictThreshold().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageService#handleStateNormal(InetAddress,String[]).mjava,0,0,63,2,7,0.125,9120,19,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#getBoundsTerms().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#validateOptions().mjava,0,0,5,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\serializers\SetSerializer#[T]_getInstance(TypeSerializer[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData#apply(CFMetaData).mjava,0,0,19,1,3,0.20512820780277252,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#map(CQL3Type,CQL3Type).mjava,0,0,7,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\ServerConnection#ServerConnection(Channel,int,Connection.Tracker).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\CassandraServer#startSessionIfRequested().mjava,0,20,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.IndexSummarySerializer#serialize(IndexSummary,DataOutputStream).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\TypeSizes.VIntEncodedTypeSizes#sizeof(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\CFDefinition.NonCompositeBuilder#add(ByteBuffer,Relation.Type).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\hadoop\pig\CqlStorage#CqlStorage(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getKeyspace().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns.SCIterator#SCIterator(DataInput,int,ColumnSerializer.Flag,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#execute(QueryState).mjava,0,0,6,1,3,0.0833333358168602,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeTombstoneList#add(ByteBuffer,ByteBuffer,long,int).mjava,0,0,7,4,2,0.15000000596046448,4,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\QueryProcessor#storePreparedStatement(String,String,ParsedStatement.Prepared,boolean).mjava,0,0,11,4,3,0.095238097012043,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getMutations(List[List[ByteBuffer]],ConsistencyLevel,long).mjava,0,0,5,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\DataResource#getKeyspace().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateSlicePredicate(CFMetaData,ByteBuffer,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#handleStreamEvent(StreamEvent).mjava,0,0,16,1,3,0.0,15,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\SuperColumns#fromSCNamesFilter(CompositeType,ByteBuffer,NamesQueryFilter).mjava,0,0,8,3,4,0.0,2,1,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#pageRowLocally(ColumnFamilyStore,ByteBuffer,int).mjava,0,0,6,3,4,0.0357142873108387,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#count().mjava,0,5,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#serialize(IntervalTree[C,D,I],DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskFailurePolicy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyInt(String,Integer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#percentile(double).mjava,0,0,5,1,3,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\BloomFilter#getHashBuckets(ByteBuffer,int,long).mjava,0,0,4,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\FBUtilities#toString(Map[#,#]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\AtomicSortedColumns#deletionInfo().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\exceptions\RequestValidationException#RequestValidationException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\UnsortedColumns#getColumn(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\MigrationManager#submitMigrationTask(InetAddress).mjava,0,0,2,1,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#close().mjava,0,1,11,0,4,0.13636364042758942,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cli\CliClient#executeSet(Tree).mjava,0,0,41,1,14,0.11940298229455948,240,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\tools\NodeCmd#complainNonzeroArgs(String[],NodeCommand).mjava,0,0,4,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\ResultSet.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getLiveCount(ColumnFamily,long).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\dht\ExcludingBounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\sstable\Descriptor#asTemporary(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithOutConfirm(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#maybeComplete(StreamSession).mjava,0,0,8,1,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#SliceQueryFilter(ColumnSlice[],boolean,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#append(byte[],int,int).mjava,0,0,5,3,0,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql\BatchStatement#BatchStatement(List[AbstractModification],Attributes).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#size().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#run().mjava,0,0,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#setupCredentialsTable().mjava,0,1,2,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#DiscarderByIndex(ColumnIdentifier,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#isCompacting(Iterable[ColumnFamilyStore]).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\BatchlogManager#getBatchlogMutationFor(Collection[RowMutation],UUID).mjava,0,0,11,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\UserOptions#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\CFMetaData.SpeculativeRetry#toString().mjava,0,5,1,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\KSMetaData#traceKeyspace().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllLeft().mjava,0,4,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RowMutationVerbHandler#forwardToLocalNodes(RowMutation,MessagingService.Verb,byte[],InetAddress).mjava,0,0,8,4,5,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\RangeSliceReply.RangeSliceReplySerializer#deserialize(DataInput,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRangeRpcTimeout().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\service\pager\QueryPagers#QueryPagers().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cache\SerializingCache#[K,V]_create(long,Weigher[RefCountedMemory],ISerializer[V]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupInfo#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\CounterId#wrap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file2.0\src\java\org\apache\cassandra\cql3\statements\Selection.SimpleSelector#compute(ResultSetBuilder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
