C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#prepareInternal(String).mjava,0,0,7,1,1,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator.Purger#updateProgress().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performSSTableRewrite(ColumnFamilyStore,boolean).mjava,0,0,15,2,4,0.0,3,2,17,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#copy(ByteBuffer,int,byte[],int,int).mjava,0,0,6,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#size(Token).mjava,0,0,1,1,3,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#enableScriptedUserDefinedFunctions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#RandomAccessReader(Builder).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setLoggingLevel(String,String).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getUnreachableNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#decodeCredentials(byte[]).mjava,0,0,3,1,3,0.0,24,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#[E]_splice(E[],int,E[],int,int).mjava,0,0,3,5,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#removeEndpoint(InetAddress).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.StatsCollector#get().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#compareTo(Token).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ConstructorVisitor#visitMethodInsn(int,String,String,String,boolean).mjava,0,0,4,5,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#stop().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#hasProperty(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#position().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#manages(String).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#split(Collection[SSTableReader]).mjava,0,0,7,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addSSTable(SSTableReader).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove_counter(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,11,3,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ProtocolException#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#computeNext().mjava,0,0,13,0,4,0.1538461595773697,7,4,18,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getBootstrapTokens().mjava,0,2,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#readComplexColumn(ColumnDefinition,DataInputPlus,SerializationHeader,SerializationHelper,boolean,Row.Builder,LivenessInfo).mjava,0,0,13,7,3,0.0,10,5,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#createBuffer().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjTargetClassLoader#classData(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#fromString(String).mjava,0,0,3,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readConsistencyLevel(ByteBuf).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#select(SSTableSet,DecoratedKey).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#requestNames().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ByteSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.DispatchHintsTask#DispatchHintsTask(HintsStore,UUID).mjava,0,0,6,2,2,0.7142857313156128,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2VerbHandler#doVerb(MessageIn[GossipDigestAck2],int).mjava,0,0,8,2,2,0.38461539149284363,6,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#DefaultQueryOptions(ConsistencyLevel,List[ByteBuffer],boolean,SpecificOptions,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addMapEntry(String,Object,Object).mjava,0,0,13,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcPort().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#currentOpenDeletionTimeInMerged().mjava,0,3,1,0,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#hasWaiters().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#isEnd().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getSmallMessageDroppedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MajorLeveledCompactionWriter#switchCompactionLocation(Directories.DataDirectory).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\LockedDynamicList#append(E,int).mjava,0,0,4,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#extractThrowable(Runnable).mjava,0,0,4,1,0,0.22727273404598236,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#setTableMetadata(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isBlank(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#unsharedHeapSizeExcludingData().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#cellsCount().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#chooseName(String,Method).mjava,0,0,2,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SingleRangeResponse#waitForResponse().mjava,0,1,1,0,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#hasActiveSessions().mjava,0,1,2,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toLong(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RemoteSyncTask#startSync(List[Range[Token]]).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#nextKeyValue().mjava,0,1,6,0,1,0.0555555559694767,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.ColumnsCollector#update(PartitionColumns).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputCoreConnections(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getProtocolVersion(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableThrift#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#containsValue(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#getCustomOptions().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#makeMutation().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#bytesPastLimit().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#login(AuthenticationRequest).mjava,0,0,6,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#fillTemporaryKey(int,ByteBuffer).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#RangeNamesQueryPager(PartitionRangeReadCommand,PagingState,int).mjava,0,0,4,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata(BiMultiValMap[Token,InetAddress],BiMap[InetAddress,UUID],Topology,IPartitioner).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#deserialize(DataInputPlus,int,CFMetaData,ColumnFilter,SerializationHelper.Flag).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#total(ByteBuffer).mjava,0,0,4,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long,Function[Pair[K,CacheableObject[V]],#]).mjava,0,0,12,2,3,0.0,8,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#getMetadataSerializer().mjava,0,18,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#mutateRepairedAt(Descriptor,long).mjava,0,0,8,2,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\NoScheduler#release().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#destroy().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#bbToString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.EmptyCellPath#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTombstoneFailureThreshold().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#compactingRepaired().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isValid().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(CFMetaData,OperationType,long,long,String,UUID).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#consume().mjava,0,0,10,0,3,0.0,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\IncomingFileMessage#IncomingFileMessage(SSTableMultiWriter,FileMessageHeader).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#toString(boolean).mjava,0,0,12,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#name().mjava,0,43,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator#createReader(RowIndexEntry,FileDataInput,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchKeyspaceParams(String).mjava,0,0,8,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#keyspace().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#concatWithIndexes().mjava,0,14,3,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#role(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(AbstractType[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Initializer#Initializer(Server).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#createMutationList(ConsistencyLevel,Map[ByteBuffer,Map[String,List[Mutation]]],boolean).mjava,0,0,35,3,16,0.04615384712815285,192,8,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[T]_toArray(T[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,2,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#getColumnSpecifications().mjava,0,1,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#put(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#resourceToFile(String).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#tryCloseFD(int).mjava,0,0,4,1,0,0.05882352963089943,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#beforeClose(Message).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateResponse#TruncateResponse(String,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UTF8Serializer#UTF8Serializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Value#fromSerialized(ByteBuffer,ListType,int).mjava,0,0,7,3,2,0.2142857164144516,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#hasIndex(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators.Serializer#deserialize(DataInputPlus,int,CFMetaData,ColumnFilter,SerializationHelper.Flag).mjava,0,0,6,5,1,0.0535714291036129,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#createDescriptor(File,String,String,SSTableFormat.Type).mjava,0,0,1,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#build().mjava,0,0,0,0,0,0.75,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#forwardIterator(Slice).mjava,0,0,26,1,6,0.20000000298023224,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#deserializeSlicePartitionFilter(DataInputPlus,CFMetaData).mjava,0,0,12,2,9,0.2195121943950653,44,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#OffHeapBitSet(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#containsBindMarker().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#updateEndpoint(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#microsTimestamp(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#CompressedSegmentedFile(ChannelProxy,int,CompressionMetadata).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#hashCode().mjava,0,0,2,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compare(byte[],int,int,byte[],int,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxLongTracker#update(long).mjava,0,0,0,1,0,0.0,2,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#midpoint(BigInteger,BigInteger,int).mjava,0,0,12,3,5,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#getBackingFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#Raw(ColumnIdentifier.Raw,Type).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#SimpleDateType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#reset(Object[],Object,UpdateFunction,Comparator).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyRange(Configuration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#getRangeFetchMap(Multimap[Range[Token],InetAddress],Collection[ISourceFilter],String).mjava,0,0,7,3,2,0.07407407462596893,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#toTerm(List[#-extends-ColumnSpecification],Raw,String,VariableSpecifications).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#Row(Map[String,ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fieldTypes().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#fromHeader(File).mjava,0,0,2,1,0,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#allData(IPartitioner).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,6,1,3,0.05882352963089943,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#sq(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions.Builder#add(Function).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setThriftFramedTransportSizeInMb(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#StreamingHistogram(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getShort(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeightedQueue(String).mjava,0,0,3,1,2,0.1666666716337204,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\SupportedMessage#SupportedMessage(Map[String,List[String]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isIndex().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReusablePartitionData#add(Unfiltered).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#terminateSessions().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#newINRestriction(CFMetaData,VariableSpecifications).mjava,0,0,5,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#isReplaced().mjava,0,1,0,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#TimeType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\WindowsTimer#WindowsTimer().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#getSerializer().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#setDiscarding().mjava,0,2,3,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.RefViewFragment#release().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getCurrentPosition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#getUncompacting(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.TrueFilesSizeVisitor#visitFile(Path,BasicFileAttributes).mjava,0,0,6,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#[T]_toArray(T[],int).mjava,0,0,1,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getCounterLockKeys().mjava,0,1,12,0,0,0.0,1,0,7,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\IsBootstrappingException#IsBootstrappingException().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#makeSlices(CFMetaData,SliceRange).mjava,0,0,4,2,2,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#measureDeep(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.CandidateInfo#CandidateInfo(Token,TokenInfo[Unit],UnitInfo[Unit]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#ContainsRestriction(ColumnDefinition,Term,boolean).mjava,0,0,2,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#copy(AbstractAllocator).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomCalculations#maxBucketsPerElement(long).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRolesValidity(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#appliesToRegularColumns().mjava,0,1,3,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#delete(ByteBuffer,Clustering,DeletionTime,OpOrder.Group).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#body().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#waitUntilListening().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#length().mjava,0,31,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#connect().mjava,0,3,19,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#ranges().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#addUpdateForKey(PartitionUpdate,Slice,UpdateParameters).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter.RestorableEWMA#RestorableEWMA(double,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#setCallbackForTests(int,CallbackInfo).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#checkForInvalidInput(List[UnfilteredRowIterator]).mjava,0,0,12,1,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#isLatencyForSnitch().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#Group(List[SinglePartitionReadCommand],DataLimits).mjava,0,0,6,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getUnreadableDirectories().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getColumnDefinitions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing.TraceType#getTTL().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#computeNext().mjava,0,1,5,0,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\CompactionStats#execute(NodeProbe).mjava,0,0,32,1,20,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IfExistsCondition#addConditionsTo(CQL3CasRequest,Clustering,QueryOptions).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestExecutionException#RequestExecutionException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#readLocalRows(TemporalRow.Set).mjava,0,0,15,1,3,0.0,4,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.UnexpectedChannelExceptionHandler#UnexpectedChannelExceptionHandler(Channel,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#createTriggersFromTriggerRows(UntypedResultSet).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getNormalizedLoadAvg().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComponents().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#StreamResultFuture(UUID,String,boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#split(Token).mjava,0,0,1,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#toString(boolean).mjava,0,0,22,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isHandoffEnabled().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#[K,V]_create(long,Weigher[RefCountedMemory],ISerializer[V]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#appendSnippet(StringBuilder,Token,Token,Token).mjava,0,0,26,4,5,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#createGlobal(CounterId,long,long).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#computeNext().mjava,0,0,6,0,0,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,2,7,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#open(CompressionParams,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#initHelper(Token,Token,byte,byte).mjava,0,0,7,4,3,0.10000000149011612,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#traceNextQuery().mjava,0,5,3,0,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#max().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#forceFilterFailures().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#makeBounds(SSTableReader,Collection[Range[Token]]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#isShadowable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#serialize(Collection[Mutation],DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#PrepareCallback(DecoratedKey,CFMetaData,int,ConsistencyLevel).mjava,0,0,3,4,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\WeightedQueue.Entry#Entry(Thread).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#onPartitionClose().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#EQRestriction(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthResponse#AuthResponse(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.CompositeComparator#compare(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,6,2,5,0.0,3,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheKeysToSave().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#invalidate(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#isSimpleSelectorFactory(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#fromSliceBound(Slice.Bound).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer.GrowingChannel#write(ByteBuffer).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setWriteRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#fromRow(CFMetaData,Row).mjava,0,0,41,2,16,0.10000000149011612,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxGauge#getValue().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#all(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#disconnect().mjava,0,4,4,0,0,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#UUIDType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#isLive().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.CommitLogReplayException#CommitLogReplayException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#asByteBuffers(long,long).mjava,0,0,5,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#maybeConvertNamesToSlice(SinglePartitionReadCommand).mjava,0,0,16,1,3,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#shutdownBlocking().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSavedCachesLocation().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#BTreeSearchIterator(Object[],Comparator[#-super-K],BTree.Dir).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#CLibrary().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeSlice(PartitionRangeReadCommand,ConsistencyLevel).mjava,0,0,20,2,4,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#getMappings().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_union(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,5,2,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#nextIsStatic().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\NativeDecoratedKey#getKey().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#CollectionBound(ColumnCondition,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#connect().mjava,0,1,10,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#key().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#numChunks().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#replace(RowCacheKey,IRowCacheEntry,IRowCacheEntry).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#allowPartitionKeyRanges().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#getTemporaryFiles(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#addCallback(IAsyncCallback,MessageOut,InetAddress,long,boolean).mjava,0,0,4,5,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#Collection(CollectionType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#sstablesRewrite(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#isValueCompatibleWithFrozen(CollectionType[#]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeFloat(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,21,4,7,0.06666667014360428,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#serializedSize(GossipDigestAck,int).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#Verifier(ColumnFamilyStore,SSTableReader,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#Schema().mjava,0,0,5,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#partitionKeyDef(String,String,String,AbstractType[#],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#asJavaClass(DataType).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#keyspace().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#onHeap().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#remove(MetricName).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Marker#Marker(int,ColumnSpecification).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PreHashedDecoratedKey#filterHash(long[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicResetInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#prepareToCommit().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#clustering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#snapshots(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#DroppableRunnable(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#values(ColumnDefinition,Resolver).mjava,0,0,8,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NanoTimeToCurrentTimeMillis#convert(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#waitingFor(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readBytes(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#IndexSummaryManager().mjava,0,0,7,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService#finishUpdate().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#isExtended(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#put(PartitionUpdate,UpdateTransaction,OpOrder.Group).mjava,0,0,19,3,6,0.1111111119389534,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(Throwable,Iterator[#-extends-DiscreteAction[#]]).mjava,0,0,4,2,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#hasReferenceTo(Function).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener#getRowMergeListener(DecoratedKey,List[UnfilteredRowIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableMetricNameFactory#createMetricName(String).mjava,0,0,13,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples#componentSpecOf(ColumnSpecification,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Slice#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,18,2,8,0.17391304671764374,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#isExclusive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#finishAndClearBatches(ArrayList[ReplayingBatch],Set[InetAddress],Set[UUID]).mjava,0,0,4,3,0,0.1111111119389534,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#moveElements(int).mjava,0,0,4,1,0,0.2222222238779068,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#isWorthMergingForRangeQuery(List[InetAddress],List[InetAddress],List[InetAddress]).mjava,0,0,3,3,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetHostStat#size().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#PermissionsCache(IAuthorizer).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#SimpleSeedProvider(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#enableUserDefinedFunctionsThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#sessionIndex().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction.Raw#Raw(FunctionName,List[Selectable.Raw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Adder#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#jnaAvailable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#map(CQL3Type.Raw,CQL3Type.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#resetAndTruncate(FileMark).mjava,0,0,30,1,4,0.12280701845884323,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#updateEndpoints().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getColumnFamily().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns.Builder#add(ColumnDefinition).mjava,0,0,8,1,0,0.0,3,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#next().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#isSlice().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#validate().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#CompactionStrategyManager(ColumnFamilyStore).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#getfd(FileDescriptor).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#getString(AbstractType[#]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#valueAppliesTo(CollectionType,Iterator[Cell],Term.Terminal,Operator).mjava,0,0,4,4,3,0.0,20,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleSessionComplete(StreamSession).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#validate(byte[],int,int).mjava,0,0,4,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#Message(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setBootstrapState(BootstrapState).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getMetrics().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#minKeyBound().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader#ChecksummedRandomAccessReader(Builder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#allInSameTable(Collection[ColumnSpecification]).mjava,0,0,7,1,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\MoreRows#extend(UnfilteredRowIterator,MoreRows[#-super-UnfilteredRowIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredPartitionIterator#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#serializedSize(PrepareResponse,int).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#totalSize().mjava,0,1,0,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata#copy().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXNotificationProgressListener#handleConnectionClosed(long,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#addRowDeletion(Deletion).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getData().mjava,0,9,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#quorumFor(Keyspace).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#TokenFilter(PrimaryKeyRestrictions,TokenRestriction).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#getPreparedForThrift(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getSet(int,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getComparatorSerializedSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators#unfilteredRow(CFMetaData,DecoratedKey,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#sum(double).mjava,0,0,14,1,5,0.1818181872367859,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputCompressionClass(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isMultiCell().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#getFinalFiles(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#setMetadata(IndexMetadata).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#successfulRepairJob(UUID,String,String).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\EncodedHintMessage#createMessageOut().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#selects(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#isTraced().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#getUpdateFor(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#LifecycleTransaction(Tracker,LogTransaction,Iterable[SSTableReader]).mjava,0,0,3,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#store(Batch,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators#partition().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getScanners(Collection[SSTableReader],Collection[Range[Token]]).mjava,0,0,9,2,5,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#addUpdateForKey(PartitionUpdate,Clustering,UpdateParameters).mjava,0,0,24,3,1,0.3076923191547394,10,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#prepareKeyspace(ClientState).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.CurrentFormatIterator#readStaticRow().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#getNotificationInfo().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CFName#getColumnFamily().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#[E-extends-BaseIterator]_add(E,MoreContents).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#mutable(RowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\TopKSampler#addSample(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeWaitForArchiving(String).mjava,0,0,4,1,1,0.043478261679410934,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#add(SelfRefCounted[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#asMap().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#initialized().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#getStatement(String,long,TimeUnit).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.TrueFilesSizeVisitor#isAcceptable(Path).mjava,0,0,9,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getConnection(InetAddress,MessageOut).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage.WrappedException#WrappedException(Throwable,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#isCustom().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#destroyConnectionPool(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getLiveSortedEndpoints(Keyspace,RingPosition).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#isEmpty(ClusteringComparator).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#isComposites().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GoogleCloudSnitch#GoogleCloudSnitch().mjava,0,0,8,0,5,0.0833333358168602,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#SingleColumnRelation(ColumnIdentifier.Raw,Term.Raw,Operator,Term.Raw).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_double(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateFunction(UDFunction).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#run().mjava,0,1,10,0,4,0.125,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readStringList(ByteBuf).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#getOutput(int).mjava,0,0,2,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#[K]_moveOutOfLeaf(boolean,NodeCursor[K],NodeCursor[K]).mjava,0,0,2,3,0,0.0,5,3,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#ttl().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#Simple(BiFunction[V,V,V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell.Serializer#serializedSize(Cell,LivenessInfo,SerializationHeader).mjava,0,0,28,3,6,0.05263157933950424,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection#compareTo(ColumnSubselection).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#nameComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#incrementTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#endOfComplexColumn().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getDependentIndexes(ColumnDefinition).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#grantPermissionsToCreator(QueryState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#purge(DeletionPurger,int).mjava,0,0,6,2,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#read(SinglePartitionReadCommand.Group,ConsistencyLevel,ClientState).mjava,0,0,6,3,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#fromIterator(RowIterator).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#countTombstone(ClusteringPrefix).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable#WrappedSharedCloseable(AutoCloseable[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#getEndpoint().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\DefaultCompactionWriter#estimatedKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#incrementRowCount().mjava,0,2,2,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#singleCellRow(Clustering,Cell).mjava,0,0,7,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addRegularColumn(String,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#ColumnDefinition(String,String,ColumnIdentifier,AbstractType[#],int,Kind).mjava,0,0,11,6,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#nonTombstoneCellCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#hasNext().mjava,0,4,2,0,0,0.0,10,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#complete(ChannelProxy,int,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection.ShortReadRowProtection#doShortReadRetry(SinglePartitionReadCommand).mjava,0,0,13,1,2,0.09090909361839294,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addUpdatedIndexToSchemaMutation(CFMetaData,IndexMetadata,long,Mutation).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addKeyspace(KeyspaceMetadata).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readKeyspaceParams(String).mjava,0,0,10,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#LogFile(OperationType,UUID,List[File]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#shutdownPostFlushExecutor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#addRangeTombstone(LegacyRangeTombstone).mjava,0,0,12,1,0,0.03448275849223137,27,6,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\EmptySerializer#toString(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#CommitLogReplayer(CommitLog,ReplayPosition,Map[UUID,ReplayPosition],ReplayFilter).mjava,0,0,0,4,0,0.07692307978868484,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader.Builder#Builder(ICompressedFile).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#toKeyExcl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#tryFcntl(int,int,int).mjava,0,0,4,3,1,0.11764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#remove(Node[E]).mjava,0,0,8,1,2,0.4285714328289032,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeyBounds(IPartitioner,QueryOptions).mjava,0,0,9,2,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeInternalWithoutCondition(QueryState,QueryOptions).mjava,0,0,5,2,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter.SliceDeserializer#deserialize(DataInputPlus,int,CFMetaData,boolean).mjava,0,0,1,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#updateCompacting(Set[SSTableReader],Iterable[SSTableReader]).mjava,0,0,6,2,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#TCustomServerSocket(InetSocketAddress,boolean,Integer,Integer,Integer).mjava,0,0,2,5,0,0.1875,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithMarker#getValues(QueryOptions).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#readVInt(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#doMergeWith(Restriction).mjava,0,0,9,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#readTxnLog(LogFile).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildSlice().mjava,0,0,3,0,0,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#inclusiveEndOf(ByteBuffer...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\Roles#getRoles(RoleResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#[R]_applyToChannel(Function[WritableByteChannel,R]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#merge().mjava,0,1,14,0,5,0.22580644488334656,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#unregisterMBean().mjava,0,1,4,0,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#search(C).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#getDatacenter(InetAddress).mjava,0,0,10,1,1,0.0,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\Int32Serializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#getOutputLocation().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(CompositeType).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getDatacenter(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#ChannelProxy(ChannelProxy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#add(ColumnDefinition).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder.RawUDT#referencesUserType(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeBytesMap(Map[String,ByteBuffer],ByteBuf).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#toString(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMaximumCompactionThreshold(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addRangeTombstone(Object,Object).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PaxosState#prepare(Commit).mjava,0,0,18,1,3,0.032258063554763794,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthResponse#execute(QueryState).mjava,0,0,7,1,3,0.0476190485060215,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#isEmpty(ClusteringComparator,Slice.Bound,Slice.Bound).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#updateTopology().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#processModifications(PartitionUpdate).mjava,0,0,14,1,2,0.0625,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#forceBatchlogReplay().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Tester#canSkipValue(CellPath).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#equals(Object).mjava,0,0,2,1,1,0.0,68,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.NonTerminal#bindAndGet(QueryOptions).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DefaultValue#value().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#toString().mjava,0,0,11,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy.Cleanup#Cleanup(String,FileChannel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#clearState().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getSSTablesForSTCS(Collection[SSTableReader]).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#shutdownBlocking().mjava,0,1,7,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#markObsolete(Runnable).mjava,0,0,4,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#getCompactions().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#tidy().mjava,0,0,6,0,0,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setLoggingLevel(String,String).mjava,0,0,14,2,3,0.10000000149011612,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#sync(boolean).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputLocalDCOnly(Configuration,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#withSwapped(Functions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copy(UUID).mjava,0,0,9,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#countLocalEndpoints(Iterable[InetAddress]).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMinimumCompactionThreshold().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SnapshotDeletingTask#pendingDeletionCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#close(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#filter(PartitionIterator,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairRangeAsync(String,String,String,int,Collection[String],Collection[String],boolean,String...).mjava,0,0,13,8,3,0.0,16,4,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#intersects(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,1,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#commit(Throwable).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markAllCompacting(OperationType).mjava,0,0,8,1,3,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams.Serializer#serializedSize(CompressionParams,int).mjava,0,0,12,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#updateDefinition(ViewDefinition).mjava,0,0,15,1,6,0.10526315867900848,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#buildIndexesBlocking(Collection[SSTableReader],Set[Index]).mjava,0,0,20,2,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#JVMStabilityInspector().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.ExistCondition#appliesTo(FilteredPartition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#live().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#exists().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#getSlice(List[SinglePartitionReadCommand],boolean,int,org.apache.cassandra.db.ConsistencyLevel,ClientState).mjava,0,0,8,5,2,0.0,2,1,10,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#subSet(V,boolean,V,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#isWorking().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumns(CFMetaData,Iterator[LegacyLayout.LegacyCell]).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#canBeNonFrozen().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getReadSocketOptions(Configuration).mjava,0,0,32,1,9,0.0,256,8,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDown(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#closeAll(List[#-extends-AutoCloseable]).mjava,0,0,2,1,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addTableParamsToSchemaMutation(TableParams,RowUpdateBuilder).mjava,0,0,19,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#aggregatesUsingFunction(Function).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#limitReceiver().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setKeyCacheCapacityInMB(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropKeyspace(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#setupContext().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#receiveMessages().mjava,0,1,25,0,6,0.13513512909412384,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#getCell(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#isReverseOrder().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#getEarliestCell().mjava,0,0,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#using(String).mjava,0,0,3,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#removeFromLocalQueue(Chunk).mjava,0,0,0,1,0,0.2857142984867096,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\CustomIndexExpression#addToRowFilter(RowFilter,CFMetaData,QueryOptions).mjava,0,0,7,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\LocalSyncTask#onSuccess(StreamState).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\UnavailableException#UnavailableException(ConsistencyLevel,String,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#commitTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\KeyspaceElementName#toInternalName(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.ResponseHandler#exceptionCaught(ChannelHandlerContext,Throwable).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#forShortReadRetry(int).mjava,0,0,0,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestResolver#resolve().mjava,0,0,18,0,4,0.10000000149011612,32,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLocalHostId().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K-extends-Comparable[K],V-extends-Comparable[V]]_create().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isPartitionKey().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#regularDef(CFMetaData,ByteBuffer,AbstractType[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#values().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#shouldLog(long).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#getAvailableSpace().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionHistory().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#checkAccess(ClientState).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#nextIsRow().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#doBeforeChangeNotifications(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,1,4,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#clearWrappedLoggersForTest().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#addMutations(int,List[ByteBuffer]).mjava,0,0,3,2,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#ReadCallback(ResponseResolver,ConsistencyLevel,int,ReadCommand,Keyspace,List[InetAddress]).mjava,0,0,6,6,0,0.0833333358168602,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#unsharedHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\WriteFailureException#WriteFailureException(ConsistencyLevel,int,int,int,WriteType).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getHollowByteBuffer().mjava,0,0,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#getOffendingTokenIndex(int,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\StreamStateStore#isDataAvailable(String,Token).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#entriesAtSamplingLevel(int,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#bulkLoad(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager.PagersIterator#PagersIterator(int,ConsistencyLevel,ClientState,ReadOrderGroup).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablePath(File).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#cachingFromThrift(String,String).mjava,0,0,4,2,3,0.1538461595773697,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#removeView(String).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfUUID(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#promptAndReadPassword().mjava,0,1,3,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#inclusiveRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#doCommit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TypeCast#castedSpecOf(String,ColumnSpecification).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#deletePartition(UnfilteredRowIterator,int).mjava,0,0,16,2,2,0.15000000596046448,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getBytes(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#tryComponentFromFilename(File,String).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#isStale(Row,ByteBuffer,int).mjava,0,0,5,3,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#UDAggregate(FunctionName,List[AbstractType[#]],AbstractType[#],ScalarFunction,ScalarFunction,ByteBuffer).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#committed().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#deactivate().mjava,0,2,3,0,0,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#pushSchemaMutation(InetAddress,Collection[Mutation]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLocalRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintVerbHandler#doVerb(MessageIn[HintMessage],int).mjava,0,0,11,2,2,0.25925925374031067,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#saveCaches().mjava,0,0,12,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#makeColumnList(Collection[String]).mjava,0,0,4,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#announceMigration(boolean).mjava,0,0,15,1,1,0.07692307978868484,66,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getWriteableLocation(long).mjava,0,0,10,1,4,0.09677419066429138,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClientRequestMetrics#ClientRequestMetrics(String).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeSliceCommand(SinglePartitionReadCommand,DataOutputPlus).mjava,0,0,29,2,8,0.08695652335882187,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\SessionCompleteEventCompositeData#toCompositeData(StreamEvent.SessionCompleteEvent).mjava,0,0,6,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#canRemoveRow(Row,Columns,long).mjava,0,0,6,3,1,0.27272728085517883,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#hasClosingMarkerBefore(LegacyLayout.LegacyAtom).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readDouble().mjava,0,0,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isStart().mjava,0,5,0,0,0,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#addSelectorForOrdering(ColumnDefinition,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#metadata().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#rootNode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#isPresent(FilterKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#release().mjava,0,6,10,0,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ShortSerializer#validate(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#DropFunctionStatement(FunctionName,List[CQL3Type.Raw],boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#getVersion(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#setOption(IRoleManager.Option,Object).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#Builder(Comparator[#-super-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#serialize(GossipDigestAck2,DataOutputPlus,int).mjava,0,0,7,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#create(Class[#-extends-AbstractCompactionStrategy],Map[String,String]).mjava,0,0,12,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint#Hint(Mutation,long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#hotKeyIterator(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#ThreadAwareSecurityManager().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\SSTableRepairStatusChanged#SSTableRepairStatusChanged(Collection[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#toString().mjava,0,5,12,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.INRaw#INRaw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#applyTo(PartitionIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#FlushRunnable(ReplayPosition).mjava,0,0,7,1,1,0.3571428656578064,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#isSystemKeyspaceSchemaPartition(DecoratedKey).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound.Serializer#serializedSize(RangeTombstone.Bound,int,List[AbstractType[#]]).mjava,0,0,3,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#leftPadZeros(int,int,StringBuilder).mjava,0,0,3,3,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlankAndComma().mjava,0,7,3,0,2,0.0,6,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#timer(MetricName).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#unsharedHeapSize().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeDropFunctionMutation(KeyspaceMetadata,UDFunction,long).mjava,0,0,4,3,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#flush(FlushItem).mjava,0,0,6,1,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#prepare(int,int).mjava,0,0,6,2,0,0.5555555820465088,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#loadRowAndKeyCacheAsync().mjava,0,1,3,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getKey(int).mjava,0,0,3,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#forKeyCache(CFMetaData).mjava,0,0,4,1,2,0.4166666567325592,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#copy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getTimestamp(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#waitForSync(Pair[RepairJobDesc,NodePair],RemoteSyncTask).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#indexAvailable().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#AtomIterator(TombstoneTracker).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.Obsoletion#Obsoletion(SSTableReader,SSTableTidier).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\ValidationTask#treesReceived(MerkleTrees).mjava,0,0,2,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Status#hasError().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#isValid(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setTokenMetadataUnsafe(TokenMetadata).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#dataSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#equals(Object).mjava,0,0,0,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#estimatedKeys().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#isUnrestricted().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#abort().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractPrimaryKeyRestrictions#bounds(Bound,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#applyConfig(Config).mjava,0,0,99,1,8,13.666666984558105,0,78,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#TruncateStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#seekInNode(K,boolean).mjava,0,0,3,2,4,0.125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#AlterTypeStatement(UTName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#toString().mjava,0,0,14,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCellName#toString().mjava,0,0,9,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#partitionUpdate(DecoratedKey,Row).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#addThriftExpression(CFMetaData,ByteBuffer,Operator,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#prepareNext().mjava,0,3,4,0,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#firstColumn().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#deserialize(DataInputPlus,int).mjava,0,0,11,2,9,0.0476190485060215,7,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#preparedStatementsCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeShort(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator#SSTableReversedIterator(SSTableReader,DecoratedKey,ColumnFilter,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#createRepairRangeFrom(String,String).mjava,0,0,17,2,6,0.09090909361839294,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo#toString().mjava,0,2,13,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#shutdownNow().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serializedSize(EstimatedHistogram).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#isGlobal().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#containsCachedParition(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.OldFormatIterator#OldFormatIterator(CFMetaData,DataInputPlus,SerializationHelper,DeletionTime).mjava,0,0,1,4,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#replicas().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#cleanUp(HintsDescriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.SimpleBound#SimpleBound(ColumnCondition,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(int).mjava,0,0,0,1,3,1.1666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTables(String).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClearableHistogram#ClearableHistogram(EstimatedHistogramReservoir).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractPrimaryKeyRestrictions#AbstractPrimaryKeyRestrictions(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#getOrCreateNextSession(InetAddress,InetAddress).mjava,0,0,5,2,1,0.1428571492433548,2,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getKeyCacheRequest().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId.LocalCounterIdHolder#get().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#isReverseOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter.FilterNotIndexed#applyToStatic(Row).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#intervalCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#getSuperuser().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getSnapshotManifestFile(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#withNewKind(Kind).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getNextBackgroundTask(int).mjava,0,0,4,1,2,0.0,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#floor(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#getWriter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#encodedSize(QueryOptions,int).mjava,0,0,15,2,2,0.0,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter.TransactionalProxy#doPrepare().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#isNull(long,int).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#isCompatibleWith(AbstractType[#]).mjava,0,0,6,1,3,0.06666667014360428,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.BuffersIterator#BuffersIterator(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#shutdownNow().mjava,0,0,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TriggerMetadata#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#getKeyspace().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#contains(ColumnDefinition).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#compute(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.DisabledCoalescingStrategy#[C-extends-Coalescable]_coalesceInternal(BlockingQueue[C],List[C],int).mjava,0,0,5,3,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#decompose(UUID).mjava,0,0,2,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addPartitionKey(ColumnIdentifier,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithValues#InRestrictionWithValues(ColumnDefinition,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getAllLevelSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#getTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#[T]_create(InetAddress,T,Map[String,byte[]],MessagingService.Verb,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#compression(CompressionParams).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getNextBackgroundTask(int).mjava,0,0,8,1,2,0.0,6,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#execute(PartitionUpdate).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#doInsert(ConsistencyLevel,List[#-extends-IMutation]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#toCQLString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#toCQLString(Iterable[ColumnDefinition]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithMarker#splitValues(QueryOptions).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#readLegacyRangeTombstoneBody(CFMetaData,DataInputPlus,ByteBuffer).mjava,0,0,4,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\EmptySerializer#serialize(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#size().mjava,0,34,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRangeSliceReplySerializer#serialize(ReadResponse,DataOutputPlus,int).mjava,0,0,13,3,1,0.1034482792019844,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#add(Cell,int).mjava,0,0,7,2,0,0.0,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#isStart().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#slice(Dir).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamThroughput().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#serializedSize(SnapshotCommand,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFileCacheSizeInMB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#handleConnectionFailed(long,String).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#setMaximumThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#finishChild(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isSilentShutdownState(EndpointState).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#makeDataRequests(Iterable[InetAddress]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#partitionLevelDeletion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#register(StreamResultFuture).mjava,0,0,5,1,0,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#filterOldSSTables(List[SSTableReader],long,long).mjava,0,0,2,3,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(Cleanup,ChannelProxy,int,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_findIndex(Object[],Comparator[#-super-V],V).mjava,0,0,4,3,5,0.0,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getActiveOnDiskSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#validateAssignableTo(String,ColumnSpecification).mjava,0,0,14,2,3,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#iterator().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#skip(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readBytesWithShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#handleNotification(INotification,Object).mjava,0,0,23,2,7,0.0,38,11,54,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#MetricName(String,String,String,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#ConcurrentBiMap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.EQRestriction#values(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#addSessionInfo(SessionInfo).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#parsedValue(AbstractType[#]).mjava,0,0,5,1,0,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#withAlias(ColumnIdentifier).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.AbstractSecureIntializer#AbstractSecureIntializer(Server,EncryptionOptions).mjava,0,0,1,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#emptySet().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.Initializer#initChannel(Channel).mjava,0,0,10,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#getLoadInfo().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#ColumnIdentifier(String,boolean).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#dateStringToTimestamp(String).mjava,0,0,9,1,0,0.08695652335882187,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#selectAndReference(Function[View,Iterable[SSTableReader]]).mjava,0,0,11,1,4,0.0,11,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessBound#ElementAccessBound(ColumnCondition,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#iterator().mjava,0,0,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#createBuffer().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#getServerSocket(EncryptionOptions,InetAddress,int).mjava,0,0,10,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder#add(String,List[String],List[String]).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#buildWithStdevRangesAroundMean(int).mjava,0,0,7,1,11,0.06060606241226196,40,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#ThriftServerThread(InetAddress,int,int,TProcessor,TTransportFactory).mjava,0,0,7,5,1,0.0714285746216774,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#repairOverlappingSSTables(int).mjava,0,0,7,1,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#[C-extends-Coalescable]_coalesceInternal(BlockingQueue[C],List[C],int).mjava,0,0,16,3,3,0.0,6,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#SetterByIndex(ColumnDefinition,Term,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isSerialConsistency().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType[#]],TypeParser).mjava,0,0,6,2,2,0.0,1,0,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo#isCompleted().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateRowCacheForCf(Pair[String,String]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#add(ColumnDefinition,Object).mjava,0,0,7,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\Int32Serializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#registerAlias(MetricName,MetricName).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#WatchedResource(String,Runnable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#valuesAsClustering(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#populateTokenInfoAndAdjustUnit(TokenInfo[Unit],GroupInfo).mjava,0,0,2,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairAttempted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#merge(List[UnfilteredRowIterator],int,MergeListener).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher#CompositesSearcher(ReadCommand,RowFilter.Expression,CassandraIndex).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#getConnectionFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#put(K,V).mjava,0,0,6,2,2,0.10000000149011612,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata#hashCode().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readAggregates(Functions,String).mjava,0,0,13,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#flush().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#handleMessage(InetAddress,RepairMessage).mjava,0,0,3,2,4,0.05263157933950424,22,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#findBlockIndex(Slice.Bound,int).mjava,0,0,2,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#getAllMemtables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isContains().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#removeInvalidPreparedStatementsForFunction(Iterator[ParsedStatement.Prepared],String,String).mjava,0,0,7,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#firstKeyBeyond(PartitionPosition).mjava,0,0,10,1,4,0.0,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#prepareKeyspace(ClientState).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#hasNext().mjava,0,0,6,0,6,0.0,15,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getSSTableMetadata().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#addTask(FutureTask[#]).mjava,0,0,16,1,3,0.5333333611488342,18,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getToken(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addClusteringColumn(ColumnIdentifier,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_count(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,23,4,6,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#getCells(Row,ColumnDefinition).mjava,0,0,4,2,1,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,QueryState,QueryOptions,Map[String,ByteBuffer]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#error(long,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#listFiles(File,FileType...).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getLargeMessagePendingTasks().mjava,0,1,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#create(Map[String,String]).mjava,0,0,1,1,0,0.75,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#isPresent(FilterKey).mjava,0,0,2,1,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serialize(Row,SerializationHeader,DataOutputPlus,long,int).mjava,0,0,34,5,9,0.0,49152,16,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#collectionSize(List[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V-extends-Comparable[V]]_of(Collection[V]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#intersectionWith(Range[T]).mjava,0,0,18,1,2,0.38461539149284363,48,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#count().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#allTypes().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#handleReplayError(boolean,String,Object...).mjava,0,0,6,3,2,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#extractStaticColumns(CFMetaData,DataInputPlus,Columns).mjava,0,0,16,3,6,0.10000000149011612,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#isIndexed().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getSnapshotDetails().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#newSession(UUID,TraceType).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#writeValue(ByteBuffer,ByteBuffer,int).mjava,0,0,5,3,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#hasMoreContents().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Dir#asc(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeBoolean(boolean).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.BestHolder#getBest().mjava,0,1,9,0,4,0.10526315867900848,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#isAlive(InetAddress).mjava,0,0,5,1,1,0.375,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#onSuspected(Host).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getAvailableProcessors().mjava,0,11,5,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#validateCustomIndexOptions(Class[#-extends-Index],Map[String,String]).mjava,0,0,13,2,2,0.0,8,3,18,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestTimeoutException#RequestTimeoutException(ExceptionCode,ConsistencyLevel,int,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setKeyCacheKeysToSave(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compareForCQL(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#setup(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#DataResource(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyTypeParameters(List[AbstractType[#]]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#SnappyCompressor().mjava,0,0,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#serializedSize(List[GossipDigest],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(Token,Token,Iterable[SSTableReader]).mjava,0,0,5,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#toExcl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#snapshotExists(String).mjava,0,0,2,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File,File).mjava,0,2,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#maybeStop(long,long).mjava,0,0,7,2,1,0.260869562625885,6,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokens(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#BooleanType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#getPartitioner().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateTableMutation(KeyspaceMetadata,CFMetaData,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#append(E).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#dropRole(AuthenticatedUser,RoleResource).mjava,0,0,8,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getCounterWriteRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#sizeOfStructureOnHeap(Object[]).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#toString().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateRoleStatement#validate(ClientState).mjava,0,0,8,1,0,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getTableInsertStatement(Configuration,String).mjava,0,0,1,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#getPartitionDeletion().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#execute(ConsistencyLevel,ClientState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#getNext(Iterator[Cell]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#startOrderGroup().mjava,0,0,1,0,0,0.25,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#sliceSSTableDetails(Collection[StreamSession.SSTableStreamingSections]).mjava,0,0,10,1,7,0.0476190485060215,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#compactionParamsFromThrift(CfDef).mjava,0,0,9,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setTombstoneWarnThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#remove(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getUserDefinedFunctionFailTimeout().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#maybeAddKeyspace(KeyspaceMetadata).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.EndpointFilter#filter().mjava,0,1,35,0,5,0.1666666716337204,64,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#encodedUTF8Length(String).mjava,0,0,2,1,3,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#isEmpty().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#offerFirst(HintsDescriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#consumeHeap(int).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#keyspace().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#supportsFreezing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getCompleted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#build().mjava,0,5,13,0,5,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#computeThriftId(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#CqlRecordReader().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#comparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#expiring(CFMetaData,ByteBuffer,ByteBuffer,ByteBuffer,long,int,int).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerError#ServerError(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#markLocalToBeCleared(ByteBuffer).mjava,0,0,12,1,3,0.0833333358168602,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#replace(K,V,V).mjava,0,0,10,3,4,0.20000000298023224,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#available().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#add(Transformation).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.UDFClassLoader#getResources(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#getDispatchOffset(HintsDescriptor).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#clusteringDef(String,String,String,AbstractType[#],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#openTransport(String,int).mjava,0,0,1,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJob#sendSequentialValidationRequest(Collection[InetAddress]).mjava,0,0,20,1,8,0.06666667014360428,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#removeTruncationRecord(UUID).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#schedule(long).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput.Builder#Builder(ChannelProxy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#toJSONString(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#loggingIterator(UnfilteredRowIterator,String,boolean).mjava,0,0,17,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getKeyspaces().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#permitRedundantTransitions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createTombstone(TemporalRow,DecoratedKey,Row.Deletion,TemporalRow.Resolver,int).mjava,0,0,6,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#withUpdatedLimit(DataLimits).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ReadTimeoutException#ReadTimeoutException(ConsistencyLevel,int,int,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createTriggerFromRow(UntypedResultSet.Row).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#write(byte[],int,int).mjava,0,0,5,3,2,0.043478261679410934,24,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#getColumnNamesAsString().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier.Options#Options(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#isEnabled().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.SingletonPartitionIterator#computeNext().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_column_family(String).mjava,0,0,10,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getSelectColumns().mjava,0,1,6,0,1,0.07692307978868484,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropAggregate(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativePool#needToCopyOnHeap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#getExpectedWriteSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#verify(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PreHashedDecoratedKey#PreHashedDecoratedKey(Token,ByteBuffer,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#outOfBounds(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stop(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf,String,org.apache.hadoop.util.Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#Discarder(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#start(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#openWithoutSSTables(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#withNewEnd(LegacyBound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#iterator(FileDataInput,DecoratedKey,RowIndexEntry,ColumnFilter,boolean,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#execute(CompactionExecutorStatsCollector).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#checkpoint().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#applicablePermissions().mjava,0,1,0,0,0,0.0,6,1,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause#WhereClause(Builder).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#findPositionOf(ByteBuffer,CounterId).mjava,0,0,7,2,6,0.0555555559694767,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#hasSufficientReplicas(String,Map[String,Set[InetAddress]],Multimap[String,InetAddress]).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setEndpointSnitch(IEndpointSnitch).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.AlwaysSpeculatingReadExecutor#getContactedReplicas().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplitController#maxPurgeableTimestamp(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#isEmpty().mjava,0,33,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceTokens().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromOutputAddressList(Configuration).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#printHelp(String,String).mjava,0,0,9,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#asAlteredKeyspaceParams(KeyspaceParams).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#toArray(Object[],Object[],int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#setInternal(int,LegacyBound,LegacyBound,long,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#prev(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#validateCompactionThresholds(int,int).mjava,0,0,1,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#tryRef().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#CommitLogArchiver(String,String,String,long,TimeUnit).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#caching(CachingParams).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#executeInternal(ReadOrderGroup).mjava,0,0,5,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Setter#Setter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ResponseResolver#preprocess(MessageIn[ReadResponse]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#ttl().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#allColumnsBuilder(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#outValue(VersionedValue,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithMarker#toMultiColumnRestriction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata.Serializer#serializedSize(IndexMetadata,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeUTF(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#establishConnection().mjava,0,2,12,0,1,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#DynamicList(int).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#equals(Object).mjava,0,0,4,1,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#canHaveShadowedData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#fromJsonList(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#handleStreamEvent(StreamEvent).mjava,0,0,16,1,3,0.0,15,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#createColumnFromColumnRow(UntypedResultSet.Row,String,String,AbstractType[#],AbstractType[#],boolean,boolean,boolean,boolean).mjava,0,0,11,9,5,0.4285714328289032,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#decompose(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#reclaimer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableAutoCompaction#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#stats().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getNextBackgroundTask(int).mjava,0,0,9,1,5,0.032258063554763794,7,4,21,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredRows#FilteredRows(RowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionGenerator#getNextVersion().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#serialize(SyncComplete,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#create(CFMetaData,Row,int).mjava,0,0,16,3,3,0.2380952388048172,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#Triggers(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#activate().mjava,0,1,28,0,3,0.1034482792019844,24,6,40,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#fromString(String).mjava,0,0,5,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCoreThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#serialize(int).mjava,0,0,10,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#newTester(ColumnDefinition).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeUUIDSerializer#validate(ByteBuffer).mjava,0,0,4,1,1,0.20000000298023224,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#startNativeTransport().mjava,0,2,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider#create().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#getInValues().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#extractExpireTime(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#statsMetadata().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#BTreeSet(Object[],Comparator[#-super-V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap(Map[K,V],Multimap[V,K]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getToken(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#getTotal().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator.MergeReducer#getReduced().mjava,0,0,9,0,2,0.0,3,3,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#init(StreamResultFuture).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionThroughput().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#encodeClustering(CFMetaData,ClusteringPrefix).mjava,0,0,8,2,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#validate(ClientState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isMultiColumn().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,String,String).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringMap(Map[String,String],ByteBuf).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits#forPaging(int,ByteBuffer,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#allocate(long,OpOrder.Group).mjava,0,0,11,2,2,0.0833333358168602,7,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata.Codec#decode(ByteBuf,int).mjava,0,0,14,2,13,0.05882352963089943,16,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Adder#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#id().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#hashCode().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory.MemoryTidy#tidy().mjava,0,0,1,0,0,5.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#partitionOrdering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isBound().mjava,0,0,0,0,0,0.0,6,1,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#validateCollectionMember(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#validateData(CFMetaData).mjava,0,0,11,1,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_remove(ByteBuffer,ColumnPath,long,ConsistencyLevel,boolean).mjava,0,0,26,5,11,0.0,32,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#lower(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#getFilePointer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#calculateToFromStreams(Collection[Token],List[String]).mjava,0,0,61,2,21,0.2261904776096344,50,8,1,7,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#bindInternal(QueryOptions).mjava,0,0,7,1,1,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#fromExcl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#toString(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#warn(String).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#freeze().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#isMarkedSuspect().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#CounterMark(Row,ColumnDefinition,CellPath).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#stopNativeTransport().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#indexOfCurrent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#add(MoreContents).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#frozenList(String,List[#]).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getPhiValues().mjava,0,0,7,0,5,0.043478261679410934,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeShortLength(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.Type#Type(int,MessageSerializer[RepairMessage]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#getElementCount(List[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateReplicationStrategy(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#addKey(ByteBuffer).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#execute(QueryState).mjava,0,0,34,1,7,0.06382978707551956,288,9,38,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepare(VariableSpecifications).mjava,0,0,9,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#newPrepare(DecoratedKey,CFMetaData,UUID).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#keyIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#map(ChannelProxy,long).mjava,0,0,0,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getTruncatedAt(UUID).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#getTimestamp(long,QueryOptions).mjava,0,0,3,2,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId.LocalCounterIdHolder#LocalCounterIdHolder().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputMaxConnections(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setHintedHandoffThrottleInKB(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\ResponseVerbHandler#doVerb(MessageIn,int).mjava,0,0,14,2,4,0.04545454680919647,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamSummaryCompositeData#toCompositeData(StreamSummary).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#isAnyStorageHostDown().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#isCounterCell().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#toUnfilteredRowIterator(CFMetaData,DecoratedKey,LegacyDeletionInfo,Iterator[LegacyCell],boolean,SerializationHelper).mjava,0,0,16,6,6,0.0833333358168602,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.CompressedFileWriterMark#CompressedFileWriterMark(long,long,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#takeTaskPermit().mjava,0,2,6,0,2,0.0,7,4,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#getOrOpenWriter().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage.Serializer#serialize(HintMessage,DataOutputPlus,int).mjava,0,0,5,3,0,0.8333333134651184,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\RegularColumnIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#pendingEndpointsFor(Token,String).mjava,0,0,8,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateAggregate(UDAggregate).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Element#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropRoleStatement#DropRoleStatement(RoleName,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#toString().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#dispatch().mjava,0,1,1,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#buildValue(ByteBuffer[]).mjava,0,0,8,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#getAllRangesWithSourcesFor(String,Collection[Range[Token]]).mjava,0,0,12,2,4,0.0,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#getElementsType().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#doAbort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(String,FileOpType,DiscreteAction[#-extends-IOException]...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.InReverseOrderTester#InReverseOrderTester().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager.Pager#applyToStatic(Row).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TriggerMetadata#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getKeyspaces().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#SubAllocator(MemtablePool.SubPool).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#size().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.ColumnsCollector#update(ColumnDefinition).mjava,0,0,4,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readFunctionTimestamp(String,String,List[String]).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits.PagingAwareCounter#applyToPartition(DecoratedKey,Row).mjava,0,0,2,2,0,0.3636363744735718,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#getSeeds().mjava,0,0,8,0,3,0.03999999910593033,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#setHasMorePages(PagingState).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#applyToMarker(RangeTombstoneMarker).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#onlyBackups(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#toCQLLiteral(ByteBuffer,StringBuilder).mjava,0,0,8,2,2,0.0,2,3,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#parseArgs(String[]).mjava,0,0,12,1,9,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Validator#applyToStatic(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithNames#getValues().mjava,0,0,0,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCacheKey(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.EQRestriction#doMergeWith(TokenRestriction).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#getProgressPercentage().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#replace(IndexMetadata).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#allocateBytes(int).mjava,0,0,4,1,2,0.125,9,4,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getColumnFamilyStoreInstance(UUID).mjava,0,0,4,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_singleton(T,Comparator[#-super-T]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir.HistogramSnapshot#getMax().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getAddress(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#getInstance(TypeParser).mjava,0,0,6,1,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTypeMetadata(String,String).mjava,0,0,14,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxMutationSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex#writeAndBuildIndex(UnfilteredRowIterator,SequentialWriter,SerializationHeader,Version).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#SelectStatement(CFMetaData,int,Parameters,Selection,StatementRestrictions,boolean,Comparator[List[ByteBuffer]],Term).mjava,0,0,1,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#inclusiveCloseExclusiveOpen(boolean,ByteBuffer[],DeletionTime,DeletionTime).mjava,0,0,1,4,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair#NodePair(InetAddress,InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\ReceivedMessage#ReceivedMessage(UUID,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#makeComplexIterator(Object).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#KeysIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FsyncWritersTask#FsyncWritersTask(Iterable[HintsStore]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#initialCompressedBufferLength(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#serializeEvent(ByteBuf,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#getfd(String).mjava,0,0,4,1,0,0.09090909361839294,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#processClusteringColumnsRestrictions(boolean,boolean,boolean,boolean).mjava,0,0,25,4,4,0.025641025975346565,6,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#entrySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#hasRemoteNode(List[InetAddress]).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#isCompatibleWithFrozen(CollectionType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#calc().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#Types(Map[ByteBuffer,UserType]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#seekTo(K,boolean,boolean).mjava,0,0,16,3,7,0.4583333432674408,360,10,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndexBase#CollectionKeyIndexBase(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getToken(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DefaultNameFactory#createMetricName(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#isStopped().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#iterator().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#attach(Connection).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getRoles(RoleResource,boolean).mjava,0,0,6,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#legacyCellNameComparator(CFMetaData,boolean).mjava,0,0,8,2,3,0.1190476194024086,90,9,30,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getBatchSizeFailureThreshold().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#toBoundType(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#toString().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#update(SSTableReader,boolean).mjava,0,0,10,2,0,0.10000000149011612,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#hasClusteringColumnsRestriction().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Serializer#deserialize(DataInputPlus,int,List[AbstractType[#]]).mjava,0,0,2,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#update(double,long).mjava,0,0,13,2,9,0.11764705926179886,2,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#fromJsonMap(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeyUnrestrictedComponents().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getSSTableLevel().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ensureIsSuper(String).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\StreamStateStore#getAvailableRanges(String,IPartitioner).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCoreCompactorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#takeMultipleTableSnapshot(String,String...).mjava,0,0,14,2,6,0.10256410390138626,65,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#inCondition(ColumnDefinition,Term,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#FrozenType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#deserialize(DataInputPlus,int).mjava,0,0,4,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBuiltIndexes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#groupSSTablesForAntiCompaction(Collection[SSTableReader]).mjava,0,0,11,1,5,0.0,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#deserialize(ByteBuffer).mjava,0,0,1,1,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#prepare(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#isBlockingSignal().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#requestInvoke(FrameBuffer).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredRowIterator#partitionLevelDeletion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Stop#execute(NodeProbe).mjava,0,0,4,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#updateLocalDeletionTime(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createReplicationStrategy(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,5,5,1,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#prepareKeyspace(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#withNewName(ColumnIdentifier).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#addColumnValue(ColumnIdentifier,CellPath,long,int,int,ByteBuffer,boolean).mjava,0,0,11,7,1,0.0714285746216774,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#rowComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#StatsMetadata(EstimatedHistogram,EstimatedHistogram,ReplayPosition,long,long,int,int,int,int,double,StreamingHistogram,int,List[ByteBuffer],List[ByteBuffer],boolean,long,long,long).mjava,0,0,0,18,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#StreamReceiveTask(StreamSession,UUID,int,long).mjava,0,0,1,4,0,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL#newSelectorFactory(CFMetaData,List[ColumnDefinition]).mjava,0,0,8,2,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#digestVersion().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#minValueIfSet(int,int,int).mjava,0,0,1,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#Stack().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLocalTokens().mjava,0,7,2,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#executeInternal(PartitionUpdate).mjava,0,0,15,1,4,0.0,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeBytes(String).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#deserializeEvent(ByteBuf,int).mjava,0,0,9,2,7,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#binaryHash(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#get(SSTableReader).mjava,0,0,4,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#skipMetadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLocalHostId().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputCluster(String,Configuration).mjava,0,0,1,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfArray(long[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#serializedRowFilterSize(RowFilter).mjava,0,0,6,1,1,0.20000000298023224,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRangeSliceReplySerializer#deserialize(DataInputPlus,int).mjava,0,0,5,2,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#pushViewReplicaUpdates(PartitionUpdate,boolean,AtomicLong).mjava,0,0,13,3,3,0.10000000149011612,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyValidator().mjava,0,30,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#digest(MessageDigest).mjava,0,0,12,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable.Tidy#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getDefaultGcBefore(ColumnFamilyStore,int).mjava,0,0,2,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#isSuccess().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#columns().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isRowCacheEnabled().mjava,0,5,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getName().mjava,0,54,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.ValueSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,2,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#describeRing(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#escape(String).mjava,0,0,4,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#roundUpNormal(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#append(UnfilteredRowIterator).mjava,0,0,17,1,6,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#getPagingState().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#processBatch(BatchStatement,QueryState,BatchQueryOptions,Map[String,ByteBuffer]).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.Renames#makeUpdatedType(UserType).mjava,0,0,9,1,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#intersects(Bounds[T]).mjava,0,0,3,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CFName#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#isSuper(String).mjava,0,0,1,1,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairRepairedBackground().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection.Raw#prepare(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#recognizedOptions().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTrickleFsyncIntervalInKb().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\PrepareMessage#PrepareMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointToTokenMapForReading().mjava,0,1,9,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#SizeTieredCompactionStrategyOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#startGossiping().mjava,0,0,6,0,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#ViewDefinition(ViewDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#getMissingFunctionError().mjava,0,1,6,0,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage#createMessage().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.Literal#prepare(String,ColumnSpecification).mjava,0,0,15,2,8,0.0357142873108387,15,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#loadTriggerInstance(String).mjava,0,0,5,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec.Flag#deserialize(int).mjava,0,0,2,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#appliesToRegularColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#contains(PartitionPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#build(IPartitioner,ReadableBoundary).mjava,0,0,8,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#returnWorkPermit().mjava,0,3,4,0,2,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#getConnectedClients().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getChannel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getRowCacheSavePeriodInSeconds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#fromCompositeData(CompositeData).mjava,0,0,15,1,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#forReversePaging(ClusteringComparator,Clustering,boolean).mjava,0,0,2,3,3,0.0,5,3,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#increaseSlightly().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openAll(Set[Map.Entry[Descriptor,Set[Component]]],CFMetaData).mjava,0,0,14,2,4,0.0,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\InvalidateCounterCache#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers.Builder#add(TriggerMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#antiCompactGroup(ColumnFamilyStore,Collection[Range[Token]],LifecycleTransaction,long).mjava,0,0,51,4,10,0.09589041024446487,30,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#StatusChange(Status,InetSocketAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSlicePredicate(Configuration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CacheKey#CacheKey(Pair[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#HintsDescriptor(UUID,int,long,ImmutableMap[String,Object]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#Options(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#queryMemtableAndDisk(ColumnFamilyStore,OpOrder.Group).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#applyToPartition(DecoratedKey,Row).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getBroadcastAddress().mjava,0,142,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#ensureParent().mjava,0,2,1,0,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getSSLOptions(Configuration).mjava,0,0,19,1,7,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeInt(int).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#onFailure(InetAddress).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#deserialize(DataInput,boolean,boolean).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#isPrimaryKeyIndex().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#stateFuncSig(FunctionName,CQL3Type.Raw,List[CQL3Type.Raw]).mjava,0,0,8,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#serializeInternal(DataOutputPlus,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#validateForNativeProtocol(ByteBuffer,int).mjava,0,0,5,2,2,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getHostId(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Direction#addToVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#getProgressCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#isClosed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#OldFormatDeserializer(CFMetaData,DataInputPlus,SerializationHelper,DeletionTime,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#defaultTimeToLive(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,18,2,12,0.03333333507180214,40,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getFiveMinuteRate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists#valueSpecOf(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#withSwapped(Types).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#condition(ColumnDefinition,Term,Operator).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor.UncomplainingRunnable#UncomplainingRunnable(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onLeaveCluster(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#applyToStatic(Row).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getNextLevel(Collection[SSTableReader]).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#apply().mjava,0,2,11,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getDatacenter(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#mutateAtomically(Collection[Mutation],ConsistencyLevel,boolean).mjava,0,0,23,3,8,0.1071428582072258,4,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateView(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#await().mjava,0,2,7,0,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeyBounds(QueryOptions).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#Inner(Token,Hashable,Hashable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#hasAllKeyspacesAccess(Permission).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#connect().mjava,0,1,4,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#bind(QueryOptions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetTraceProbability#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#newPartitioner(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#Tracker(ColumnFamilyStore,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Cleanup#execute(NodeProbe).mjava,0,0,4,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder.CellResolver#CellResolver(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#register(MigrationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onMove(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#ListRolesStatement().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyType#fromSerializedValue(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#difference(MerkleTree,MerkleTree).mjava,0,0,12,2,6,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ProtocolException#ProtocolException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getUnleveledSSTables().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#cas(ByteBuffer,String,List[Column],List[Column],ConsistencyLevel,ConsistencyLevel).mjava,0,0,51,6,9,0.02777777798473835,8,3,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#toReceivers(ColumnDefinition,boolean).mjava,0,0,37,2,2,0.27272728085517883,40,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Marker#bind(QueryOptions).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableCleanerThread#needsCleaning().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOnHeapOf(ByteBuffer[]).mjava,0,0,2,1,1,0.0,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#relaseAllExcept(Collection[T]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateRoleStatement#checkAccess(ClientState).mjava,0,0,7,1,0,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#isPrefix(ByteBuffer,ByteBuffer).mjava,0,0,8,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(MessageOut,int,InetAddress).mjava,0,0,9,3,1,0.27272728085517883,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getReleaseVersionString().mjava,0,7,7,0,1,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#isNullOrEmpty(AbstractType[#],ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#bootstrapComplete().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#doFlush().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#hasRegulars().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#setResizeIntervalInMinutes(int).mjava,0,0,5,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#SEPExecutor(SharedExecutorPool,int,int,String,String).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#append(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#add(Unfiltered).mjava,0,0,10,1,2,0.10526315867900848,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#fromFilename(File,String).mjava,0,0,3,2,3,0.0714285746216774,44,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Value#equals(ListType,Value).mjava,0,0,7,2,0,0.0,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getLocationForDisk(DataDirectory).mjava,0,0,3,1,0,0.0,3,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#toString(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#RoleResource(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#matchAguments(String,Function,List[#-extends-AssignmentTestable],String,String).mjava,0,0,7,5,4,0.0476190485060215,18,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#triggerDefinitionsFromThrift(List[TriggerDef]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetBuffer().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSnapshotDetails().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogCompression().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#get().mjava,0,13,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#Reader(FileDataInput,boolean,boolean).mjava,0,0,1,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#LogRecord(Type,String,long,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#current().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.CommitLogReplayException#CommitLogReplayException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEndInSummary(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GossipInfo#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#warn(String,Throwable).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#ThriftServer(InetAddress,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#error(long,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#getPermissions(AuthenticatedUser,IResource).mjava,0,0,3,2,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Debug#Debug().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#simpleInCondition(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CQLMetrics#CQLMetrics().mjava,0,0,17,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#returnType().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#computeNext().mjava,0,0,14,0,0,0.0,10,7,18,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#prepare(boolean).mjava,0,0,18,1,7,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#getColumnDefinition(CFMetaData,Raw).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#toRangeSet(List[ByteBuffer]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#onUp(Host).mjava,0,0,4,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#position().mjava,0,37,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#operator().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#dumpMemtables().mjava,0,1,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintsInProgress(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#equals(Object).mjava,0,0,0,1,4,0.10000000149011612,72,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#WrappedDataOutputStreamPlus(OutputStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getCurrentGenerationNumber().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addTruePositive().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#getOrderingIndex(CFMetaData,Selection).mjava,0,0,7,2,4,0.20000000298023224,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#without(Set[UUID]).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputMaxSimultReqPerConnections(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#newRow(Clustering).mjava,0,0,10,1,1,0.13636364042758942,9,5,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics#release().mjava,0,1,12,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.SecureInitializer#SecureInitializer(Server,EncryptionOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#attachTo(BasePartitions).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#maxPurgeableTimestamp(DecoratedKey).mjava,0,0,11,1,1,0.1428571492433548,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#fileName().mjava,0,6,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithVIntLength(ByteBuffer,DataOutputPlus).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPermissionsValidity(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildBound(boolean,boolean).mjava,0,0,3,2,0,0.2857142984867096,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfValue(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#AlterTableStatement(CFName,Type,ColumnIdentifier.Raw,CQL3Type.Raw,TableAttributes,Map[ColumnIdentifier.Raw,ColumnIdentifier.Raw],boolean).mjava,0,0,0,7,0,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#classFromName(String).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#saveSystemKeyspacesSchema().mjava,0,1,9,0,4,0.1538461595773697,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#getLatestVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#writtenLength(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#createSSTableMultiWriter(Descriptor,long,long,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,2,6,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheClassName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#toFetch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\RawSelector#toSelectables(List[RawSelector],CFMetaData).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#emptyRow(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#state().mjava,0,0,3,0,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\EncodedHintMessage#EncodedHintMessage(UUID,ByteBuffer,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#subtypes().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#LexicalUUIDType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#estimatedKeys().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#prepareWriter().mjava,0,1,14,0,1,0.0,6,3,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.ColumnDataReducer#setActiveDeletion(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAllocateTokensForKeyspace().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#markAllIndexesRemoved().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#cancel().mjava,0,0,4,0,0,0.1818181872367859,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#write(File,List[String],StandardOpenOption...).mjava,0,0,2,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#mergeRestrictions(Restriction,Restriction).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex#nothing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#logConfig(byte[]).mjava,0,0,7,1,1,0.09090909361839294,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjTargetClassLoader#EcjTargetClassLoader().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#toMultiColumnRestriction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#TypeSizes().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#mergeSchemaAndAnnounceVersion(Collection[Mutation]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#localDeletionTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setIncrementalBackupsEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#replaceAndSink(Candidate[In],int).mjava,0,0,5,2,7,0.25333333015441895,912,15,4,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#cachedLiveRows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\CleanupMessage.CleanupMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#getChunksForSections(Collection[Pair[Long,Long]]).mjava,0,0,9,1,6,0.07999999821186066,2,1,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCrcCheckChance().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexedColumn().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#Session(ByteBuffer,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeSendBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#removeNode(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#evaluateReplicatedOwnership(TokenMetadata,AbstractReplicationStrategy).mjava,0,0,9,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#doWaitSpin().mjava,0,1,11,0,6,0.2380952388048172,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#fileSent(FileMessageHeader).mjava,0,0,5,1,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#addInput(int,ResultSetBuilder).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#updateWith(AbstractType[#],String,ByteBuffer,UserType).mjava,0,0,25,4,11,0.03773584961891174,37,10,41,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\ValidationTask#run().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#prepareForObsoletion(Iterable[SSTableReader],LogTransaction,List[LogTransaction.Obsoletion],Throwable).mjava,0,0,3,4,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#[T-extends-RefCounted[T]]_tryRef(Iterable[T]).mjava,0,0,4,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#counted().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#chunkLengthInKB().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#applyTo(RowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#RangeTombstoneList(ClusteringComparator,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#isComplete().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#readUserPasswordFromFile(String,String).mjava,0,0,8,2,3,0.0,4,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getBloomFilterSerializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#makeInternalOptions(ParsedStatement.Prepared,Object[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#getCFMetaData().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDiskOptimizationStrategy(Config.DiskOptimizationStrategy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#unitFor(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#create(Descriptor,long,long,int,SerializationHeader,LifecycleTransaction).mjava,0,0,2,6,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#create(String,String,UUID,boolean,boolean,boolean,boolean,boolean,List[ColumnDefinition],IPartitioner).mjava,0,0,7,10,3,0.0,10,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getValidColumnFamilies(boolean,boolean,String...).mjava,0,0,20,3,6,0.0476190485060215,27,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UTF8Serializer.UTF8Validator#validate(ByteBuffer).mjava,0,0,3,1,2,0.20000000298023224,75,19,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#updateAllTimestamp(long).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#requestAll(GossipDigest,List[GossipDigest],int).mjava,0,0,5,3,0,6.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.4545454680919647,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceTypeDrop(UserType,boolean).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection.Raw#Raw(Selectable.Raw,ColumnIdentifier.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#forSubRange(AbstractBounds[PartitionPosition]).mjava,0,0,2,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#RowIndexEntry(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#readLine().mjava,0,1,10,0,4,0.9444444179534912,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.ReplicationVisitor#prevSeen(GroupInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithColumnSpecifications#OptionsWithColumnSpecifications(QueryOptions,List[ColumnSpecification]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Bounded#getScanner(SSTableReader,RateLimiter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#readRepairChance(double).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCompressionMetadataOffHeapSize().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Verify#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#getEntity().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#staticRow().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#getProtocolVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getUncompactingSSTables().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#makeIndexFilter(ReadCommand).mjava,0,0,45,1,18,0.27419355511665344,3,7,45,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#first().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer.GrowingChannel#isOpen().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#getDurationUnit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getToken(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#hasStatic().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#count().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#warnIfRunningInDegradedMode().mjava,0,0,7,0,4,0.0,3,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeChars(String).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#prepareReplacementInfo().mjava,0,1,22,0,2,0.1538461595773697,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#getTotalSinceLastCheck().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#release().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#inclusiveLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#getPartitionKeyBindIndexes(CFMetaData).mjava,0,0,6,1,2,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getIndexName(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#compareToFirst(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#fromThrift(ConsistencyLevel,List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#lz4().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#saveTruncationRecord(ColumnFamilyStore,long,ReplayPosition).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,7,2,7,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#PrimaryKeyRestrictionSet(ClusteringComparator,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#load(boolean,boolean).mjava,0,0,29,2,2,0.05454545468091965,128,7,41,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#addProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getFilePointer().mjava,0,24,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#isEmpty().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#exclusiveStartOf(ClusteringPrefix).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputWhereClauses(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#binarySearch(PartitionPosition).mjava,0,0,4,1,2,0.043478261679410934,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#rawAddRow(Map[String,ByteBuffer]).mjava,0,0,8,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#toTerm(List[#-extends-ColumnSpecification],Raw,String,VariableSpecifications).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerConnection#getQueryState(int).mjava,0,0,2,1,2,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#copy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,5,5,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#createCorrespondingOpenMarker(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#getFirstColumn().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#containsAll(Collection[#]).mjava,0,0,5,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#isInvalid().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#serializedSize(Version,Component).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#setCrcCheckChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#forInternalCalls(List[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#setStatus(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#readNext().mjava,0,0,2,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#indexOf(Object).mjava,0,0,2,1,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#checkAccess(ClientState).mjava,0,0,11,1,1,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#promotedSize(IndexHelper.IndexInfo.Serializer).mjava,0,0,8,1,1,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#get(int).mjava,0,0,4,1,6,1.137930989265442,18,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#hasComplex().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_isWrapAround(T,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ColumnData#ColumnData(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#RawCollection(CollectionType.Kind,CQL3Type.Raw,CQL3Type.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#openRange().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#isReverseOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeRemote(CounterId,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read(byte[]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#pageSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#isOpen(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#makeKey(CFMetaData,Object...).mjava,0,0,4,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.TrueFilesSizeVisitor#visitFileFailed(Path,IOException).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onJoin(InetAddress,EndpointState).mjava,0,0,6,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#SingleColumnRestriction(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.State#assertNotReleased().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#serializedSize(SyncComplete,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#CreateKeyspaceStatement(String,KeyspaceAttributes,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.IndexGCTransaction#onRowMerge(Row,Row...).mjava,0,0,5,2,2,0.06451612710952759,9,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthMigrationListener#onDropColumnFamily(String,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#addProperty(String,Map[String,String]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#process(String,ConsistencyLevel).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#SliceRestriction(ColumnDefinition,TermSlice).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#compactValueColumn().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SharedExecutorPool#newExecutor(int,int,String,String).mjava,0,0,1,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#getName().mjava,0,1,2,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serializedSize(Columns).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#serializedSize(Object,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.CleanupGCTransaction#commit().mjava,0,0,5,0,1,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#addRange(SSTableReader,AbstractBounds[PartitionPosition],List[AbstractBounds[PartitionPosition]]).mjava,0,0,23,3,5,0.08571428805589676,10,6,27,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#verifyBatchType(Iterable[PartitionUpdate]).mjava,0,0,18,1,2,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMaxLocalDeletionTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#getSnippetLastTokenIndex(int,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#getValue().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateLeft(InetAddress,String[]).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkFor(long).mjava,0,0,3,1,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter.BufferedFileWriterMark#BufferedFileWriterMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#scts(Map[String,String]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#deserialize(DataInputPlus,int).mjava,0,0,4,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#readUnsignedVInt(DataInput).mjava,0,0,4,1,4,0.0714285746216774,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_column_family(CfDef).mjava,0,0,15,1,3,0.05000000074505806,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#complexColumnCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#EcjCompilationUnit(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps#Maps().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#skipTemporary(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#lookupIndexedTable().mjava,0,3,7,0,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#checkComparable().mjava,0,0,0,0,0,0.0,3,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#invalidIndex(IndexName,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#extend(long).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#isWorthMergingForRangeQuery(List[InetAddress],List[InetAddress],List[InetAddress]).mjava,0,0,9,3,3,0.1666666716337204,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isIN().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#addExpireTimeForEndpoint(InetAddress,long).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#CredentialsMessage(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspaceNotSystem(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#toString().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\LegacyMetadataSerializer#serialize(Map[MetadataType,MetadataComponent],DataOutputPlus,Version).mjava,0,0,21,3,3,0.0416666679084301,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cacheKey(DecoratedKey,RowIndexEntry).mjava,0,0,5,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedNamesFilterSize(ClusteringIndexNamesFilter,CFMetaData,PartitionColumns).mjava,0,0,11,3,2,0.10000000149011612,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#buildRange(long,long,boolean,double,int).mjava,0,0,2,5,6,0.20000000298023224,48,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#toType(Pair[DataType,Object]).mjava,0,0,7,1,1,0.0,16,1,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#BufferedSegmentedFile(BufferedSegmentedFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#move(Token).mjava,0,0,35,1,3,0.09302325546741486,64,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#open(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager#shutdownNow().mjava,0,1,3,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2#GossipDigestAck2(Map[InetAddress,EndpointState]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#scheduleAtFixedRate(Runnable,long,long,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#shutdown().mjava,0,2,6,0,0,0.190476194024086,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#checkHealth().mjava,0,0,15,0,6,0.11999999731779099,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#equals(Object).mjava,0,0,3,1,1,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#updateTypes(List[AbstractType[#]],String,ByteBuffer,UserType).mjava,0,0,4,4,2,0.07692307978868484,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#checkPermission(ClientState,Permission,RoleResource).mjava,0,0,4,3,0,0.0833333358168602,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#appliesOnlyToStaticColumns(Operations,Conditions).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Info#getOffHeapMemoryUsed(NodeProbe).mjava,0,0,10,1,5,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter.TransactionalProxy#doCommit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CASClientRequestMetrics#CASClientRequestMetrics(String).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.RefViewFragment#RefViewFragment(List[SSTableReader],Iterable[Memtable],Refs[SSTableReader]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#getPager(PagingState,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipShutdownVerbHandler#doVerb(MessageIn,int).mjava,0,0,3,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,2,6,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#createLinks(String).mjava,0,0,4,1,2,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRestrictions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Cleanup#Cleanup(ChannelProxy,CompressionMetadata,MmappedRegions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#LeveledScanner(Collection[SSTableReader],Range[Token]).mjava,0,0,12,2,3,0.10526315867900848,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\SEPMetrics#SEPMetrics(SEPExecutor,String,String).mjava,0,0,15,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter.InvalidateKeys#run().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#addEachElementToAll(List[ByteBuffer]).mjava,0,0,11,1,3,0.0,4,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#fileName().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.TransactionTidier#TransactionTidier(LogFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\MemtableRenewedNotification#MemtableRenewedNotification(Memtable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#resetAvailableRanges().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addStaticColumn(String,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#getSerializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage.Serializer#deserialize(DataInputPlus,int).mjava,0,0,6,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#getAcceptCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#flushBeforeTransfer(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeRemoveUnreadableSSTables(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateAvailableRanges(String,Collection[Range[Token]]).mjava,0,0,5,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#dataSize().mjava,0,4,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableRepairedAtSetter#main(String[]).mjava,0,0,30,1,5,0.02083333395421505,24,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#release(T).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#PrepareMessage(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompressionParameters().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound.Serializer#deserialize(DataInputPlus,int,List[AbstractType[#]]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#onInserted(Row).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#exists().mjava,0,0,3,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.Builder#build().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#dropCf(UUID).mjava,0,0,9,1,1,0.09090909361839294,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#getCompactValueColumn(PartitionColumns,boolean).mjava,0,0,4,2,0,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator.MergeReducer#onKeyChange().mjava,0,0,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Raw#toString().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createHardLink(File,File).mjava,0,0,5,2,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#CustomTNonBlockingServer(Args).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isInShutdownHook().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#reset().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isIncrementalBackupsEnabled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isGossipRunning().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#compose(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serializedSize(AbstractBounds[T],int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#forceUserDefinedCompaction(String).mjava,0,0,20,1,6,0.10000000149011612,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#BTreeRange(BTreeRange[V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection#element(ColumnDefinition,CellPath).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InValue#getSplitValues().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#serialize(GossipDigestAck,DataOutputPlus,int).mjava,0,0,8,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#internalIP(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#state().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata.StatsMetadataSerializer#serialize(Version,StatsMetadata,DataOutputPlus).mjava,0,0,25,3,0,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#set_keyspace(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#hasBound(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewKeyspace(KeyspaceMetadata,long,boolean).mjava,0,0,6,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#makeExcludingKeyBounds(PartitionPosition).mjava,0,0,2,1,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeVInt(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#dropTypeFromSchemaMutation(KeyspaceMetadata,UserType,long).mjava,0,0,2,3,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#treeIndexOfKey(Object[],int).mjava,0,0,2,2,1,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#bound(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ScriptBasedUDFunction#executeUserDefined(int,List[ByteBuffer]).mjava,0,0,33,2,7,0.056338027119636536,91920,23,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBufferFixed#DataOutputBufferFixed(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInitialTokens().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#handleOrLog(Throwable).mjava,0,0,5,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#bootstrap(StreamStateStore,boolean).mjava,0,0,29,2,15,0.0,34,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#inclusiveRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthenticator().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String,String).mjava,0,24,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#comparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#invalidate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#isRow(LegacyLayout.LegacyAtom).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#phi(long).mjava,0,0,2,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setBytes(long,byte[],int,int).mjava,0,0,2,4,0,0.0,8,3,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#toSlices(SortedSet[Slice.Bound],SortedSet[Slice.Bound]).mjava,0,0,11,2,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#deserialize(DataInputPlus,int).mjava,0,0,6,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FilterFactory#getFilter(long,int,boolean,boolean).mjava,0,0,7,4,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Marker#bindAndGet(QueryOptions).mjava,0,0,4,1,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#initialCompressedBufferLength(int).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\SSTableAddedNotification#SSTableAddedNotification(Iterable[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#numberOfKeys().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#findType(String).mjava,0,0,5,1,4,0.0,4,2,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#compressedChecksumType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#restartUnsafe().mjava,0,1,3,0,0,0.5833333134651184,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#getCell(CellPath).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableTimer(String,String,Timer).mjava,0,2,7,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setInt(long,int).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#canBeConvertedToMultiColumnRestriction().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#takeTableSnapshot(String,String,String).mjava,0,0,6,3,2,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#getPartitionUpdate(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteRecursive(File).mjava,0,0,4,1,1,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#buildAsEndOfRange().mjava,0,4,4,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#CellGrouper(CFMetaData,SerializationHelper).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove(ByteBuffer,ColumnPath,long,ConsistencyLevel).mjava,0,0,10,4,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#classifyFiles(File).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getVersion().mjava,0,19,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addConditions(Clustering,CQL3CasRequest,QueryOptions).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addRowDeletion().mjava,0,1,6,0,0,0.6666666865348816,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#writeCollectionSize(ByteBuffer,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revokeAllOn(IResource).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSWriteError#FSWriteError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#toString(Map[K,V]).mjava,0,0,12,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#valueLengthIfFixed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onCreateAggregate(String,String,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask.SnapshotCallback#onFailure(InetAddress).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#supportsOperator(ColumnDefinition,Operator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#getRemoveMutation(UUID).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXNotificationProgressListener#handleNotification(Notification,Object).mjava,0,0,19,2,4,0.0,15,2,19,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxIntTracker#MinMaxIntTracker(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#getGeneration().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateViewMutation(KeyspaceMetadata,ViewDefinition,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#systemKeyspaceQuery(List[#-extends-ReadCommand]).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#clustering().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#consistency().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#StreamDeserializer(CFMetaData,DataInputPlus,Version,SerializationHeader).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#getSstableCompressor().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#doCommit(Throwable).mjava,0,0,11,1,0,0.4545454680919647,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#getActiveCount().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#getComplexColumnData(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#open(long,long).mjava,0,0,4,2,2,0.20000000298023224,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#state().mjava,0,38,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheSavePeriod().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBroadcastRpcAddress().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#bindAndGet(QueryOptions).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#forKeyRange(Range[PartitionPosition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#distinct(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#isEOF().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DigestResponse#isDigestResponse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#fromInt(int).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#fromString(String).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#JMXConnection(String,int,String,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#remove(Type,SSTable).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputLocalDCOnly(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.TransactionTidier#name().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#reload().mjava,0,1,7,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader.CorruptFileException#CorruptFileException(Exception,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitLogSync(CommitLogSync).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasNewStatsFile().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthKeyspace#AuthKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Parameters#Parameters(Map[ColumnIdentifier.Raw,Boolean],boolean,boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID(long,long,long).mjava,0,2,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#threshold().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#serialize(ValidationRequest,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#sstablesInBounds(SSTableSet,PartitionPosition,PartitionPosition).mjava,0,0,8,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#alter(UTName,ColumnIdentifier,CQL3Type.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readAggregateMetadata(Functions,String,String,List[String]).mjava,0,0,18,4,10,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options#Options(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#prepareType(String,CQL3Type.Raw).mjava,0,0,6,2,1,0.25,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager.ReadRateComparator#ReadRateComparator(Map[SSTableReader,Double]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#updateCrc().mjava,0,2,7,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#GlobalTidy(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#bindAndGet(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#totalSize().mjava,0,1,0,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#run().mjava,0,0,6,0,0,0.03846153989434242,2,1,13,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#hasCells().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readUUID(ByteBuf).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OverlapIterator#OverlapIterator(Collection[Interval[I,V]]).mjava,0,0,4,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#addMapEquality(ColumnDefinition,ByteBuffer,Operator,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#getHashBuckets(FilterKey,int,long).mjava,0,0,2,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.KeySerializer#serialize(RowCacheKey,ByteBuffer).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(SSTableReader,Iterable[SSTableReader]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitAdjustmentTracker#calculateUnitChange(double,double).mjava,0,0,2,2,7,0.043478261679410934,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#getLengthInBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropViewStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#deflate(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isIN().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#empty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isComplex().mjava,0,34,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getDatacenter(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#[K-extends-IMeasurableMemory,V-extends-IMeasurableMemory]_create(long).mjava,0,0,3,1,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputPlus#skipBytesFully(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#keyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#deserializeValuesWithoutSize(DataInputPlus,int,int,List[AbstractType[#]]).mjava,0,0,6,4,4,0.0555555559694767,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getPosition(PartitionPosition,Operator).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#discard(boolean).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#close().mjava,0,0,4,0,0,0.0,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Keyspace,String,CFMetaData,boolean).mjava,0,0,14,4,5,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getMaximumValidatorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTables(SSTableSet).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getCapacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getHostData(InetAddress).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#getToken().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#putShortByByte(long,short).mjava,0,0,4,2,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#getCmdLineOptions().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getFunctions(IndexMetadata,Pair[ColumnDefinition,IndexTarget.Type]).mjava,0,0,3,2,1,0.0555555559694767,210,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#roundBufferSize(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeRecvBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#Slice(Bound,Bound).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getNonSystemKeyspaces().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropFunction(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBatchlogReplayThrottleInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getMetadataReloadTask(IndexMetadata).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#SafeMemory(SafeMemory).mjava,0,0,2,1,0,2.6666667461395264,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#openWriter().mjava,0,1,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeDouble(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#disable().mjava,0,4,2,0,0,0.1428571492433548,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#saveSummary(Descriptor,DecoratedKey,DecoratedKey,SegmentedFile.Builder,SegmentedFile.Builder,IndexSummary).mjava,0,0,14,6,1,0.05263157933950424,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#run().mjava,0,0,20,0,7,0.1492537260055542,42,8,48,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#incrementReadCount().mjava,0,4,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#none().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_andnot(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker#AbstractMarker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#appliesToStaticColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#rebuild(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#Bounds(T,T).mjava,0,0,1,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#hasActiveSessions().mjava,0,3,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.NeverSpeculatingReadExecutor#getContactedReplicas().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setDeleteSourceOnSuccess(Configuration,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#maybeInit().mjava,0,4,1,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SharedExecutorPool#maybeStartSpinningWorker().mjava,0,1,3,0,1,0.4000000059604645,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#isSignaled().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#LegacyRangeTombstone(LegacyBound,LegacyBound,DeletionTime).mjava,0,0,1,3,0,0.5882353186607361,5,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#concat(List[PartitionIterator]).mjava,0,0,6,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\FloatSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#caching(CachingParams).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputcolumns(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#assureSufficientLiveNodes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Value#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#generateSetOrListCQLLiteral(ByteBuffer,int,StringBuilder,int,CQL3Type).mjava,0,0,3,5,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectoryCandidate#calcFreePerc(long).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#makeInternalOptions(ParsedStatement.Prepared,Object[],ConsistencyLevel).mjava,0,0,7,3,3,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#isLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#getColumnFamilyIds().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#computeNext().mjava,0,0,6,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#hasLowerBound().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#copyTo(DataInput,OutputStream,int).mjava,0,0,4,3,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator.Keyspace#Keyspace(long,String,KeyspaceParams,Collection[Table],Collection[Type],Collection[Function],Collection[Aggregate]).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getMinRepairedAt(Set[SSTableReader]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#resumeDispatch().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Option#toString().mjava,0,21,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#removeEndpoint(InetAddress).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\UnknownIndexException#UnknownIndexException(CFMetaData,UUID).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getColumnFamilyStoreIncludingIndexes(Pair[String,String]).mjava,0,0,11,1,8,0.2800000011920929,64,6,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleStrategy#validateOptions().mjava,0,0,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists#existingSize(Row,ColumnDefinition).mjava,0,0,2,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#initiateOnReceivingSide(Socket,boolean,int).mjava,0,0,2,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#columns().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setMaxHintWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addPartitionKey(String,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_identityMap(Iterable[T]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#toWriteUTFBytes(String).mjava,0,0,3,1,2,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#scheduleSetupTask(Callable[Void]).mjava,0,0,8,1,0,0.1666666716337204,2,1,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#clear().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#validateOptions().mjava,0,0,5,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#ConnectionTracker().mjava,0,0,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getMaxLocalPause().mjava,0,1,4,0,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#getString(ByteBuffer).mjava,0,0,14,1,5,0.0476190485060215,9,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.SSTableTidier#SSTableTidier(SSTableReader,boolean,LogTransaction).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark(FileMark).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#internalQueryState().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#ActiveRepairService(IFailureDetector,Gossiper).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#hasAcceptableProcNumber().mjava,0,1,3,0,1,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#readFromFile(Path).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#init().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#FutureTask(Runnable,T).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#prepare(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#supports(BufferType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#consumeNextRange().mjava,0,2,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#reconcile(TemporalCell).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#Options(List[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(String,ConsistencyLevel).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#finish(long,long,boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#put(ByteBuffer).mjava,0,0,6,1,3,0.30000001192092896,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBroadcastAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getLastRecord().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputColumnFamily(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#reduceFilter(ClusteringIndexNamesFilter,Partition,long).mjava,0,0,23,3,10,0.10526315867900848,256,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#isStatic(Unfiltered).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#serializeRowFilter(DataOutputPlus,RowFilter).mjava,0,0,10,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateClusteringValues(ClusteringPrefix).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#bloomFilterFpChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#parent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnknownColumnException#UnknownColumnException(CFMetaData,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getClusterName().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#allocate(int).mjava,0,0,6,1,2,0.05263157933950424,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#ColumnConditions(Builder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#fromCode(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#isUnrestricted().mjava,0,4,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getCompactionCandidates(Iterable[SSTableReader],long,int).mjava,0,0,10,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#getDirectories().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexSummaryResizeIntervalInMinutes().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#setOrListToJsonString(ByteBuffer,AbstractType,int).mjava,0,0,7,3,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableHandoff#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#registerMBean(Metric,ObjectName).mjava,0,0,2,2,1,0.0,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation.MutationSerializer#serializedSize(Mutation,int).mjava,0,0,13,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#fetchTypes(String,Session).mjava,0,0,8,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXNotificationProgressListener#handleNotificationLost(long,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#lastRow().mjava,0,0,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#copy(AbstractAllocator).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#filterForQuery(Keyspace,List[InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex#ColumnIndex(long,List[IndexHelper.IndexInfo]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#CassandraMetricsRegistry().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#hasParent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#getConsistency().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#setup().mjava,0,0,7,0,0,0.22727273404598236,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(int).mjava,0,0,0,1,1,0.5555555820465088,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#computeNext().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#compareUnsigned(byte[],byte[],int,int,int,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#containsBindMarker().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getContext().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#untrackNew(SSTable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#encodeExtraBytesToRead(int).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WindowsFailedSnapshotTracker#deleteOldSnapshots().mjava,0,1,15,0,3,0.09302325546741486,6,4,25,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#make(String).mjava,0,0,14,1,2,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getInt(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClientMetrics#ClientMetrics().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#getColumnIdentifier(CFMetaData,Set[ColumnIdentifier],boolean,ColumnIdentifier.Raw,List[ColumnIdentifier],StatementRestrictions).mjava,0,0,11,6,4,0.1538461595773697,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#getHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_long(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#builder(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#getKeyspace().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BufferDecoratedKey#BufferDecoratedKey(Token,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#createPartitionUpdate(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher#queryDataFromIndex(DecoratedKey,RowIterator,ReadCommand,ReadOrderGroup).mjava,0,0,37,4,7,0.12941177189350128,288,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#hasAppenders(ch.qos.logback.classic.Logger).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#ensureReadMeter().mjava,0,1,5,0,0,0.13636364042758942,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#metadata(String,long).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#grantPermissionsToCreator(QueryState).mjava,0,0,8,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isContainsKey().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getTotalRows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateCounterForWrite(CFMetaData).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingStreamingConnection#IncomingStreamingConnection(int,Socket,Set[Closeable]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#getPartition(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer.Allocation#write(Hint).mjava,0,0,12,1,3,0.0555555559694767,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(CFMetaData,int,ColumnFilter,RowFilter,DataLimits,DecoratedKey,ClusteringIndexFilter).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.RetriedQueuedMessage#RetriedQueuedMessage(QueuedMessage).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#next().mjava,0,0,6,0,3,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#columns(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#hash(Range[Token]).mjava,0,0,6,1,3,0.0,3,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#serialize(V).mjava,0,0,3,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#isInclusive(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#hasKeyspaceAccess(String,Permission).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.HintRunnable#HintRunnable(Collection[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Header.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#expiring(ColumnDefinition,long,int,int,ByteBuffer).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#beforeExecute(Thread,Runnable).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftExpression#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#add(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInterDCTcpNoDelay().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#CachedBTreePartition(CFMetaData,DecoratedKey,Holder,int,int,int,int,int).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithVIntLength(DataInputPlus).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#grow(LegacyBound[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableHistogram(String,Histogram).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#serialize(String,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#asByteBuffer(long,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#cellPathSerializer().mjava,0,13,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#timeToLiveReceiver(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Request#Request(Type).mjava,0,0,0,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#validate(ClientState).mjava,0,0,6,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#toString().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#sampleKeyRange().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.MissingPropertiesChecker#MissingPropertiesChecker().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#forKeys(AbstractType[#]).mjava,0,0,1,1,1,0.0,4,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#comparisonOrder(Kind,boolean,long,ColumnIdentifier).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#Ec2MultiRegionSnitch().mjava,0,0,6,0,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RoleManagementStatement#RoleManagementStatement(RoleName,RoleName).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#init().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#copy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#assureSufficientLiveNodes(Keyspace,Iterable[InetAddress]).mjava,0,0,25,2,6,0.03999999910593033,23,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#CassandraIndexSearcher(ReadCommand,RowFilter.Expression,CassandraIndex).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#moveStarts(SSTableReader,DecoratedKey).mjava,0,0,17,2,5,0.09375,24,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#rowsPerPartitionAsString().mjava,0,2,1,0,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#create(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#checksum(CompressionMetadata.Chunk).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch.Serializer#readEncodedMutations(DataInputPlus).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#GCInspector().mjava,0,0,9,0,3,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#parseDefaultParameters(AbstractType[#],TypeParser).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#getResponseCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterRoleStatement#validate(ClientState).mjava,0,0,7,1,0,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#compareTo(SSTableIdentityIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.CoalescingStrategy#[C-extends-Coalescable]_debugTimestamps(Collection[C]).mjava,0,0,2,1,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#RowCacheKey(Pair[String,String],ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(MetricNameFactory,String,LatencyMetrics...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getOneMinuteRate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#BloomFilter(BloomFilter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#signalCloseDone().mjava,0,2,4,0,0,0.27272728085517883,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSerializedCachePath(CacheService.CacheType,String,String).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#isLeaf(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#getReaderFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.FiltrationTracker#FiltrationTracker(Function[#-super-V,#-extends-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBasePartitionIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#unsharedHeapSize().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#rangeCovering(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#[G,T]_createTableGauge(String,String,Gauge[T],Gauge[G]).mjava,0,4,7,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#withEventExecutor(EventExecutor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,8,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#getblock(ByteBuffer,int,int).mjava,0,0,8,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#maybeSchedule().mjava,0,3,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#shutdown().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#flushAllNonCFSBackedIndexesBlocking().mjava,0,1,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#getValidity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#hasComplexDeletion().mjava,0,0,5,0,0,0.10000000149011612,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#popClosingMarker().mjava,0,2,8,0,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareSubArrays(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,4,5,2,0.0625,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#isKeyspaceLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#stop().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#inc(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#toString().mjava,0,2,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#flush().mjava,0,2,5,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#decompose(Object...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#isCounter().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(PartitionUpdate,long,int,Mutation).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#serializedSize(RepairJobDesc,int).mjava,0,0,8,2,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DefaultNameFactory#DefaultNameFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#seekTo(int).mjava,0,0,13,1,5,0.054054055362939835,15,5,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#compareLongs(ByteBuffer,ByteBuffer).mjava,0,0,9,2,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setMaximumCompactorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#selects(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint#create(Mutation,long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#create(Kind,ByteBuffer[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#deleteRecordFiles(LogRecord).mjava,0,0,6,1,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#valueSet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentCompactors().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#makeUpdateParameters(Collection[ByteBuffer],ClusteringIndexFilter,QueryOptions,DataLimits,boolean,long).mjava,0,0,5,6,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setKeyCacheKeysToSave(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getExpectedCompactedFileSize(Iterable[SSTableReader],OperationType).mjava,0,0,6,2,4,0.0555555559694767,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#isDigest(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getKeyValueParameters().mjava,0,2,16,0,3,0.032258063554763794,36,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#isSpinning().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#makeUpdates(FilteredPartition).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.MerkleTreesSerializer#serializedSize(MerkleTrees,int).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SyncTask#getCurrentStat().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getKeyspaceInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#SequentialWriter(File,int,BufferType).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#add(RangeTombstone).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,List[IndexExpression]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#removeParentRepairSession(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#validateData(CFMetaData).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairRangeAsync(String,String,String,boolean,Collection[String],Collection[String],boolean,String...).mjava,0,0,3,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#prepare(String,Types).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.CurrentFormatIterator#computeNext().mjava,0,0,2,0,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ParameterizedClass#equals(ParameterizedClass).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#fetchViews(String,Session,IPartitioner,Types).mjava,0,0,5,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setIndexRemoved(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#consumeNextToMerge().mjava,0,3,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#bytesRemaining().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#getReplayPosition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.AllTableMetricNameFactory#AllTableMetricNameFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver#mergeWithShortReadProtection(List[UnfilteredPartitionIterator],InetAddress[],DataLimits.Counter).mjava,0,0,12,3,1,0.27272728085517883,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#isStartInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#readRequiredLists(Collection[ByteBuffer],ClusteringIndexFilter,DataLimits,boolean,ConsistencyLevel).mjava,0,0,15,5,3,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\TruncateException#TruncateException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer.Header#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#bindAndGet(List[Term],QueryOptions).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#isShutdown().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,0,3,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#error(String,Object...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#inverse().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#getName().mjava,0,1,3,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateReplicationFactor(String).mjava,0,0,1,1,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#isLive().mjava,0,39,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#serve().mjava,0,0,13,0,2,0.4883720874786377,17,5,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,8,1,1,0.1666666716337204,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyCollectionsParameters(Map[ByteBuffer,#-extends-CollectionType]).mjava,0,0,11,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#bufferSize(long).mjava,0,0,4,1,2,0.2222222238779068,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#stopSession().mjava,0,23,8,0,4,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#resetVersion(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#copyArrays(RangeTombstoneList,RangeTombstoneList).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#Frame(Header,ByteBuf).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#list(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,10,4,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.Builder#Builder(Comparator[#-super-V]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#register(IndexRegistry).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serializedSubsetSize(Collection[ColumnDefinition],Columns).mjava,0,0,6,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#withExistingFiles().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#dumpTokens(String,BaseTokenInfo[#,#]).mjava,0,0,1,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#[T]_submit(Callable[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateKeyspaceMutation(KeyspaceMetadata,long).mjava,0,0,13,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithShortLength(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#resetLocalSchema().mjava,0,1,13,0,1,0.05263157933950424,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#isInvalidOrPartial().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#await(long,TimeUnit).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#toCQLLiteral(ByteBuffer,int,StringBuilder).mjava,0,0,16,3,3,0.06060606241226196,2,7,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#RowUpdater(AtomicBTreePartition,MemtableAllocator,OpOrder.Group,UpdateTransaction).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStateForEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#loadClassInternal(String).mjava,0,0,4,1,1,0.07692307978868484,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#StorageService().mjava,0,0,55,0,1,2.9166667461395264,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Logger#applyToStatic(Row).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.PostFlush#run().mjava,0,0,5,0,0,0.5555555820465088,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchUDFs(String,Types).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#numberOfExtraBytesToRead(int).mjava,0,0,1,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isLocal(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StartupChecks#verify().mjava,0,1,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InMarker#InMarker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getDouble(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#reBufferMmap().mjava,0,0,32,0,6,0.11627907305955887,6,3,32,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#updateNextClean().mjava,0,2,2,0,3,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateAggregateMutation(KeyspaceMetadata,UDAggregate,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#AutoSavingCache(ICache[K,V],CacheService.CacheType,CacheSerializer[K,V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionPurger#shouldPurge(DeletionTime).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#storePreparedStatement(String,String,ParsedStatement.Prepared,boolean).mjava,0,0,7,4,3,0.15789473056793213,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#validate().mjava,0,4,19,0,2,0.07692307978868484,288,10,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#getText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#constructRangeToEndpointMap(String,List[Range[Token]]).mjava,0,0,5,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(CachingParams).mjava,0,0,4,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#compareIntegers(ByteBuffer,ByteBuffer).mjava,0,0,12,2,8,0.38235294818878174,120,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SimpleSelection#newSelectors().mjava,0,0,0,0,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitMaximal(ColumnFamilyStore,int,boolean).mjava,0,0,9,3,3,0.1304347813129425,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#clustering(CFMetaData).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#SingleColumnRelation(ColumnIdentifier.Raw,Term.Raw,Operator,Term.Raw,List[Term.Raw]).mjava,0,0,0,5,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#selectionSerializedSize(int).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceAddress().mjava,0,13,6,0,0,0.0,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\GrantRoleStatement#GrantRoleStatement(RoleName,RoleName).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#dropSSTables(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getToken(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener#columns(List[UnfilteredRowIterator]).mjava,0,0,3,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readVInt().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#RangeCommandIterator(RangeIterator,PartitionRangeReadCommand,int,Keyspace,ConsistencyLevel).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#GossipingPropertyFileSnitch(int).mjava,0,0,7,1,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#staticRow(Holder,ColumnFilter,boolean).mjava,0,0,6,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#discardSegment(CommitLogSegment,boolean).mjava,0,0,3,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_invokeAny(Collection[#-extends-Callable[T]],long,TimeUnit).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata#CompactionMetadata(ICardinality).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultList#iterator().mjava,0,0,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#writePartition(PartitionUpdate).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables.Builder#build().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isEQ().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#response(MessageIn[T]).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#announceMigration(boolean).mjava,0,0,21,1,4,0.021276595070958138,24,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isDatacenterLocal().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#getFunctions().mjava,0,2,6,0,0,0.0,8,3,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#next().mjava,0,1,5,0,0,0.0,1,0,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeFloat(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateRowCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#fetchAsync().mjava,0,2,16,0,5,0.5714285969734192,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setTombstoneFailureThreshold(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBasePartitionIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#create(Descriptor,Long,Long,CFMetaData,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,3,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#overrideReadMeter(RestorableMeter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#createQueryThread(int,UUID).mjava,0,0,30,2,21,0.03333333507180214,34,6,46,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#fromJSONObject(Object).mjava,0,0,10,1,1,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#DateType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getDirectory(File).mjava,0,0,6,1,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#AbstractSSTableIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry,ColumnFilter,boolean).mjava,0,0,20,6,4,0.2068965584039688,2,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#startKey().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\SSTableIntervalTree#SSTableIntervalTree(Collection[Interval[PartitionPosition,SSTableReader]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerConnection#validateNewMessage(Message.Type,int,int).mjava,0,0,3,3,0,0.05000000074505806,15,4,15,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#collectCounterMarks().mjava,0,1,8,0,1,0.13333334028720856,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#checkNeedsFiltering(StatementRestrictions).mjava,0,0,4,1,0,0.6666666865348816,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options.FileType#fromOption(String).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.AndThen#AndThen(Runnable,Runnable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#RestorableMeter().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#hashCode(Object[]).mjava,0,0,2,1,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#PartitionMerger(UnfilteredRowIterator,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream.Reader#Reader(InputStream,CompressionInfo,BlockingQueue[byte[]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#toString().mjava,0,0,16,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#simpleMapping(Iterable[ColumnDefinition]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#create(long,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#doPostCleanup(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#close().mjava,0,12,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#newReadRepairDecision().mjava,0,1,2,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#list(ClientState,IResource).mjava,0,0,4,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getTruncateTask(long).mjava,0,0,1,1,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Conflicts#resolveRegular(long,boolean,int,ByteBuffer,long,boolean,int,ByteBuffer).mjava,0,0,1,8,1,0.0833333358168602,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#evaluateImprovement(CandidateInfo[Unit],double,double).mjava,0,0,7,3,9,0.25,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#available().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#CreateTypeStatement(UTName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjTargetClassLoader#addClass(String,byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#setComplexDeletionTime(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxCounter#getCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#hasLowerBound().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readKeyspace(String).mjava,0,0,10,1,7,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#getLastReadableBoundary().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#appendDirect(ByteBuffer,boolean).mjava,0,0,13,2,3,0.0,2,1,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\SSLTransportFactory#openTransport(String,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#updateWithCurrentValue(PartitionUpdate.CounterMark,ClockAndCount,ColumnFamilyStore).mjava,0,0,14,3,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElementAtOffset(ByteBuffer,int,CounterId,long,long).mjava,0,0,7,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Setter#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,1,0.1428571492433548,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#skip(long).mjava,0,0,0,1,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getFiles().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StartupChecks#withTest(StartupCheck).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#mapEntryFor(Token).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#serializedSizeAsLegacyPartition(UnfilteredRowIterator,int).mjava,0,0,23,2,2,0.11428571492433548,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#intersects(AbstractBounds[T]).mjava,0,0,3,1,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#get().mjava,0,0,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#canSkipValue(ColumnDefinition).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#setPostFlushListener(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#readLocalDeletionTime(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#getLastColumn().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#isUsedBy(AbstractType[#]).mjava,0,0,15,1,2,0.0,18,8,21,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.GlobalPool#get().mjava,0,1,3,0,1,0.10000000149011612,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StatusThrift#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#primaryKeyLivenessInfo().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#list().mjava,0,11,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns.Builder#addAll(Iterable[ColumnDefinition]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage#StreamInitMessage(InetAddress,int,UUID,String,boolean,boolean,boolean).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeDropTableMutation(KeyspaceMetadata,CFMetaData,long).mjava,0,0,8,3,1,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#startGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairRepairedBlocking().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection.ShortReadRowProtection#moreContents().mjava,0,0,17,0,7,0.8999999761581421,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Marker#bind(QueryOptions).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#consumeNextWrapped().mjava,0,3,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#value(Cell).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#capacity().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#ceiling(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#shutdownBlocking().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#grant(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AllSignal#isSignalled().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector.State#State(double,double,State).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#isEmpty().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GoogleCloudSnitch#getRack(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#toJSONString(ByteBuffer,int).mjava,0,0,9,2,2,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#bytesForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.23076923191547394,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#doDelete(DecoratedKey,Clustering,DeletionTime,OpOrder.Group).mjava,0,0,5,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#remove(Object).mjava,0,0,3,1,2,0.1111111119389534,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revoke(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#commit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#sameDCPredicateFor(String).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#[C,D]_create(C,C).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#PartitionUpdate(CFMetaData,DecoratedKey,Holder,MutableDeletionInfo,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#stringifyFileSize(double).mjava,0,0,5,1,6,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#fullPartitionRead(CFMetaData,int,DecoratedKey).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#registerMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#isWrapAround().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#awaitTermination().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getWriteRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#acquired(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#mutate(Collection[#-extends-IMutation],ConsistencyLevel).mjava,0,0,23,2,6,0.015384615398943424,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicUpdateInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#removeView(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkBindValueSet(ByteBuffer,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getOutputCluster(String[],Configuration).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#file().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchViews(String,Types).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#execute(int,List[ByteBuffer]).mjava,0,0,10,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getSendingFiles().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#repairAsync(PrintStream,String,Map[String,String]).mjava,0,0,6,3,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#force(MappedByteBuffer).mjava,0,0,3,1,1,0.03999999910593033,5,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#discard(ByteBuf,long).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#announceMigration(boolean).mjava,0,0,12,1,3,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#toString(ByteBuffer).mjava,0,0,22,1,2,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#supports(BufferType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#hasAvailableDiskSpace(long,long).mjava,0,0,2,2,3,0.0714285746216774,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#fromJSONObject(Object).mjava,0,0,10,1,1,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#createMBeanName(String,String,String,String).mjava,0,0,13,4,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#maybeCompleted().mjava,0,3,6,0,1,0.04545454680919647,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#getReadCommandForTableSchema(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.CircularList#removeFrom(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#purge(DeletionPurger,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#toStringUTC(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRemovalStatus().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#remove(MetricName,MetricName).mjava,0,36,2,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#sendSingleReplayMutation(Mutation,long,Set[InetAddress]).mjava,0,0,20,3,5,0.03333333507180214,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(InetAddress,EndpointState).mjava,0,0,15,2,6,0.23333333432674408,10,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer.ThriftCASRequest#appliesTo(FilteredPartition).mjava,0,0,21,1,7,0.10000000149011612,48,7,4,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#isBoundary().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#tuple(List[CQL3Type.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Serializer#serialize(ColumnSubselection,DataOutputPlus,int).mjava,0,0,12,3,3,0.0,12,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#advanceAllocatingFrom(CommitLogSegment).mjava,0,0,11,1,2,0.45945945382118225,37,7,29,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#doneWithNonLocalSession(TraceState).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#clearAllLocal(ByteBuffer).mjava,0,0,23,1,5,0.11999999731779099,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#removeKeyspaceInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#timestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\SnapshotVerbHandler#doVerb(MessageIn[SnapshotCommand],int).mjava,0,0,7,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#assumeGCIsOldGen(GarbageCollectorMXBean).mjava,0,0,1,1,0,0.11764705926179886,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#close().mjava,0,1,2,0,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#AsciiType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableHistogram(String,String,Histogram).mjava,0,4,7,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#bytesReadForUnconsumedData().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#of(UserType...).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists#indexSpecOf(ColumnSpecification).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_byte(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#setOptions(Map[String,String]).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#hash(Range[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo#equals(Object).mjava,0,0,4,1,1,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#metadata().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#nameComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.FixedCoalescingStrategy#FixedCoalescingStrategy(int,Parker,Logger,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#isCleanerAvailable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#isNotNull().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readString(ByteBuf,int).mjava,0,0,6,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#applyToPartition(I).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#getSegment().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#getAsMap().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Locks#monitorExitUnsafe(Object).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validateIsSimpleIndexIfTargetColumnNotCollection(ColumnDefinition,IndexTarget).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepare().mjava,0,0,6,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#floor(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#inclusiveLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#estimateResultsPerRange(PartitionRangeReadCommand,Keyspace).mjava,0,0,9,2,3,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.Prepared#Prepared(CQLStatement,VariableSpecifications,Short[]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\SSLTransportFactory#supportedOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#UnfilteredRowIterators().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#equals(Object).mjava,0,0,0,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#add(CFMetaData,RangeTombstone).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Cloner#applyToMarker(RangeTombstoneMarker).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getPageSize(QueryOptions).mjava,0,0,2,1,1,0.5,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.CacheType#CacheType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBuckets(boolean).mjava,0,0,3,1,2,0.0,3,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#maybeSkipCache().mjava,0,1,4,0,1,0.4000000059604645,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setStreamThroughput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#createDeserializer().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setNativeTransportPortSSL(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#descendingSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#CounterColumnType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#classifyFiles(LogFile).mjava,0,0,19,1,2,0.4000000059604645,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#syncWriteToBatchlog(WriteResponseHandler[#],Batch,Collection[InetAddress]).mjava,0,0,8,3,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#KeyBound(Token,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.CollectionCellPath#CollectionCellPath(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#isNull(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysSearcher#queryDataFromIndex(DecoratedKey,RowIterator,ReadCommand,ReadOrderGroup).mjava,0,0,27,4,5,0.043478261679410934,16,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#close().mjava,0,0,2,0,0,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(String).mjava,0,0,12,1,4,0.09090909361839294,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#getOnlyElement(PartitionIterator,SinglePartitionReadCommand).mjava,0,0,10,2,2,0.3529411852359772,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#getRack(InetAddress).mjava,0,0,10,1,1,0.0,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#load(KeyspaceMetadata).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#IndexedEntry(long,DeletionTime,long,List[IndexHelper.IndexInfo]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#metadata().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#applyAddressConfig(Config).mjava,0,0,11,1,0,18.399999618530273,648,12,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#requestRanges(InetAddress,InetAddress,String,Collection[Range[Token]],String...).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\SyntaxException#SyntaxException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.CorruptTransactionLogException#CorruptTransactionLogException(String,LogFile).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getLiveTokenOwners().mjava,0,1,6,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ScriptBasedUDFunction#ScriptBasedUDFunction(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],AbstractType[#],boolean,String,String).mjava,0,0,7,7,2,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#isPaging().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#checkAndClear().mjava,0,0,3,0,0,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.PartiallyFlushBufferPoolTask#run().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit(String,String,String[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString(StringBuilder,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ParameterizedClass#ParameterizedClass(Map[String,#]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#digest(MessageDigest).mjava,0,0,7,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageOut,InetAddress,IAsyncCallback).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService.ParentRepairSession#getAndReferenceSSTables(UUID).mjava,0,0,12,1,5,0.0,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#BatchlogResponseHandler(AbstractWriteResponseHandler[T],int,BatchlogCleanup).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#boundsAsClustering(Bound,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#toString(Boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#collectionCondition(Term.Raw,Term.Raw,Operator).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#isSignalled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,0,3,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#equalsNativeFunction(FunctionName).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#withPartitioner(IPartitioner).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setStreamThroughputMbPerSec(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializeStaticRow(Row,SerializationHeader,DataOutputPlus,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#UpdatesCollector(Map[UUID,PartitionColumns],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#fromException(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamWriter#write(DataOutputStreamPlus).mjava,0,0,11,1,7,0.19354838132858276,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#isSupportedBy(CassandraVersion).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleStrategy#getReplicationFactor().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,ConsistencyLevel,QueryState).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#refreshAllNodeMinVersions().mjava,0,2,1,0,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#exitOrFail(int,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getQuery(QueryOptions,int).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#invalidateAllIndexesBlocking().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#injectApplicationState(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMinIndexInterval().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRangeCommand(QueryOptions,DataLimits,int).mjava,0,0,4,3,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#filePath().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CommitLogMetrics#attach(AbstractCommitLogService,CommitLogSegmentManager).mjava,0,0,9,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexPropDefs#validate().mjava,0,1,8,0,0,0.0,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#forPaging(int).mjava,0,0,0,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#columnFamily().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceViewDrop(String,String,boolean).mjava,0,0,8,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#add(PartitionUpdate).mjava,0,0,6,1,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getAvgColumnSetPerRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#serializeSelection(DataOutputPlus,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#blocksCount().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#onClose().mjava,0,0,9,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitBackground(ColumnFamilyStore).mjava,0,0,19,1,2,0.03703703731298447,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#bindInternal(QueryOptions).mjava,0,0,5,1,1,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#value().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readType(String,String).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#deserializeAll().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#changeEvent().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#[T]_getInstance(AbstractType[T],boolean).mjava,0,0,2,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#scheduleTimeout(int,long,TimeUnit).mjava,0,0,5,3,2,0.0555555559694767,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#update(DeletionTime).mjava,0,0,5,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getWriter(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\CassandraException#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#addTrees(Collection[MerkleTree]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getResizeIntervalInMinutes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getTimeToLive(QueryOptions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\ClusteringColumnIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#overrideLength(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBytes(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#format(Collection[Function]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#truncate(String).mjava,0,0,19,1,3,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#current(SSTableReader).mjava,0,0,6,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#mutateLevel(Descriptor,int).mjava,0,0,8,2,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation#requiresRead().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxLongTracker#min().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#Keyspaces(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.ColumnValue#prepare(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler(RequestSchedulerOptions).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.MultiSignal#isCancelled().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#set(CQL3Type.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#removeUnfinishedLeftovers(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneWithNewPartitioner(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,3,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getComparatorSerializedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#position().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ShortSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#deletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#makeEmptyParametersNull(List[ByteBuffer]).mjava,0,0,6,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithValues#InRestrictionWithValues(List[ColumnDefinition],List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#applyTo(UnfilteredPartitionIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_instanceOrConstruct(String,String).mjava,0,0,5,2,2,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.State#release(boolean).mjava,0,0,10,1,3,0.0,40,7,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#createSSLContext(EncryptionOptions,boolean).mjava,0,0,27,2,10,0.0,10,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#staticBuilder(CompositeType).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#ProgressEvent(ProgressEventType,int,int,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#getFields(Class[#]).mjava,0,0,14,1,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#doPrepare().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#subSet(V,boolean,V,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\OperationType#OperationType(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#builder().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\RoleName#hasName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copy(List[ColumnDefinition]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#isFullyCoveredBy(CachedPartition).mjava,0,0,9,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#verify(boolean,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeInet(InetSocketAddress,ByteBuf).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(File,String,String,int).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#clean(ByteBuffer).mjava,0,0,5,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#deserialize(Descriptor,EnumSet[MetadataType]).mjava,0,0,9,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#calculateSamplingLevel(int,int,long,int,int).mjava,0,0,4,5,2,1.7999999523162842,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#rowFilter().mjava,0,32,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#unescape(String).mjava,0,0,6,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#digestFlag(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#enableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedUpdate#prepareInternal(CFMetaData,VariableSpecifications,Conditions,Attributes).mjava,0,0,9,4,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#keyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#getUpdateInterval().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#received(SSTableMultiWriter).mjava,0,0,5,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#updateBytesRead().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#doCommit(Throwable).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#isCompatible().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#StreamingHistogram(int,Map[Double,Long]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#bytesPastMark(FileMark).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#doPrepare().mjava,0,0,10,0,1,0.1818181872367859,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#free(ByteBuffer,boolean).mjava,0,0,7,2,8,0.03448275849223137,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#workPermits(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Direction#extractFromVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#closeOpenedRange().mjava,0,2,14,0,2,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata.Codec#encode(ResultMetadata,ByteBuf,int).mjava,0,0,19,3,4,0.0,14,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceCompaction(boolean,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateKeyCacheForCf(Pair[String,String]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexMetadata().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#shouldRetry().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#HistogramBuilder(long[]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\MemoryMappedSegment#onDiskSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData.Builder#addCell(Cell).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#ColumnIdentifierValue(ColumnIdentifier).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Conflicts#resolveCounter(long,boolean,ByteBuffer,long,boolean,ByteBuffer).mjava,0,0,0,6,0,0.4285714328289032,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats#format(long,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#prepare(String,ColumnSpecification).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#sstables(SSTableSet,Predicate[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[K,V-extends-K]_slice(Object[],Comparator[#-super-K],K,K,Dir).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(byte[],ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer.ThriftCASRequest#ThriftCASRequest(List[LegacyLayout.LegacyCell],PartitionUpdate,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#verifyOrderingIsAllowed(StatementRestrictions).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\HostStat#ipOrDns().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#internalReadForView(DecoratedKey,int).mjava,0,0,5,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.SuperColumnsPartitionMerger#simpleCellsIterator(Row).mjava,0,0,7,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#estimateRowOverhead(int).mjava,0,0,11,1,5,0.0555555559694767,2,1,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoadConnectionFactory#BulkLoadConnectionFactory(int,int,EncryptionOptions.ServerEncryptionOptions,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setInt(long,int).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#isIN().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#includes(CellPath).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#interruptCompactionForCFs(Iterable[ColumnFamilyStore],boolean).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#setCompressor(FrameCompressor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#SSTableRewriter(LifecycleTransaction,long,boolean,long,boolean).mjava,0,0,4,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#LegacySchemaMigrator().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#requireFullClusteringKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#UpdateParameters(CFMetaData,PartitionColumns,QueryOptions,long,int,Map[DecoratedKey,Partition]).mjava,0,0,2,6,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables().mjava,0,1,42,0,6,0.0615384615957737,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredPartitions#FilteredPartitions(Filter,UnfilteredPartitions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#getBootstrapTokens(TokenMetadata,InetAddress).mjava,0,0,10,2,3,0.0625,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropViewStatement#DropViewStatement(CFName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#isReadyForBootstrap().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scheduleFlush().mjava,0,2,8,0,3,0.1034482792019844,4,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#forPaging(ClusteringComparator,Clustering,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#treeIndexOfBranchKey(Object[],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#validateCellValue(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#serialize(DataOutputPlus,CFMetaData).mjava,0,0,21,2,6,0.0,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cloneWithNewStart(DecoratedKey,Runnable).mjava,0,0,4,2,2,0.07692307978868484,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Deleter#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropView(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeIterator#computeNext().mjava,0,0,5,0,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#isMultiColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getString(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#getFirstColumn().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#progress().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#getLastReportedPhi().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\ScalarFunctionSelector#isAggregate().mjava,0,0,3,0,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndexBase#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,6,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#lastEOC(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#isInclusive(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InValue#fromSerialized(ByteBuffer,ListType,QueryOptions).mjava,0,0,12,3,3,0.1875,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getActiveSegmentNames().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#dropIndexFromSchemaMutation(CFMetaData,IndexMetadata,long,Mutation).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#replaceNextKey(Object).mjava,0,0,1,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#min().mjava,0,3,2,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#prepare(String,Types,boolean).mjava,0,0,14,3,0,0.08695652335882187,96,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getPreviousVersionString().mjava,0,1,14,0,2,0.3529411852359772,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#delete().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#authenticate(String,String).mjava,0,0,4,2,1,0.1428571492433548,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysSearcher#KeysSearcher(ReadCommand,RowFilter.Expression,CassandraIndex).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#serializedSize(CFMetaData).mjava,0,0,21,1,7,0.0,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPartitioner().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithLength(DataInput).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setCompactionThroughputMbPerSec(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering#selectBoundary(Op,int,int).mjava,0,0,0,3,0,0.3333333432674408,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithoutPerStatementVariables#WithoutPerStatementVariables(QueryOptions,List[Object]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Element#compareInclusionOf(CellPath).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openIndexReader().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#getHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getVersion(InetAddress).mjava,0,0,3,1,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateFilterClauses(CFMetaData,List[IndexExpression]).mjava,0,0,24,2,4,0.022727273404598236,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#timestampSerializedSize(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#correspondingMessagingVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#make(Clustering,Clustering).mjava,0,3,4,2,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#resolveAndAddColumns(Iterable[ColumnIdentifier],List[ColumnDefinition]...).mjava,0,0,4,2,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#isNative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#empty(ChannelProxy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#consumeNextRow().mjava,0,2,6,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#doPostCleanup(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.Renames#Renames(UTName,Map[ColumnIdentifier,ColumnIdentifier]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Value#fromSerialized(ByteBuffer,MapType,int).mjava,0,0,12,3,2,0.1428571492433548,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getInternal(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#currentBlockIdx().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#dataSize().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata#ValidationMetadata(String,double).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#mutateMV(ByteBuffer,Collection[Mutation],boolean,AtomicLong).mjava,0,0,39,4,13,0.13461539149284363,2,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata#PreparedMetadata(EnumSet[Flag],List[ColumnSpecification],Short[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#addAll(Collection[V]).mjava,0,0,8,1,0,0.1666666716337204,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#ringIterator(ArrayList[Token],Token,boolean).mjava,0,0,13,3,2,0.10000000149011612,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#LoadBroadcaster().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#pollFirst().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#isPaging().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#compareTo(Memtable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#forInternalCalls().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copyOpts(CFMetaData,CFMetaData).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#compareTo(PartitionPosition).mjava,0,0,7,1,2,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#getTokenValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#Bound(Kind,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#compareTo(ColumnDefinition).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hintedHandoffEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#serializedSize(int).mjava,0,0,6,1,2,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setBatchSizeFailureThreshold(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#LegacyHintsMigrator(File,long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceUpdate(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxLongTracker#MinMaxLongTracker(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#HintsStore(UUID,File,List[HintsDescriptor]).mjava,0,0,4,3,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#migrate().mjava,0,1,11,0,1,0.3529411852359772,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#announceMigration(boolean).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#TraceState(InetAddress,UUID,Tracing.TraceType).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#shutdown(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#collectionInCondition(Term.Raw,List[Term.Raw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#createWriter(ColumnFamilyStore,File,long,long,SSTableReader,LifecycleTransaction).mjava,0,0,5,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#allowUseOfSecondaryIndices().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#[E]_checkContainsOnly(List[E],List[E],String).mjava,0,0,3,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#contains(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getBootstrapState().mjava,0,4,8,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpointSnitchInfoProxy().mjava,0,6,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#SerializationHeader(boolean,AbstractType[#],List[AbstractType[#]],PartitionColumns,EncodingStats,Map[ByteBuffer,AbstractType[#]]).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getDirectories().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#obsolete(SSTableReader).mjava,0,0,8,1,0,0.2222222238779068,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Tidier#Tidier(State).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#tailOffset(Memory).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#read(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#forceConviction(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#supportsFreezing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#execute(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#getColumnDefs().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#localId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#checkPermissionOnResourceChain(Permission,IResource).mjava,0,0,5,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile.Builder#complete(ChannelProxy,int,long).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#IndexMetadata(String,Map[String,String],Kind).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readStringToStringListMap(ByteBuf).mjava,0,0,5,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#DelayedValue(List[Term]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStore(UUID).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serializedSize(GossipDigest,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#prepare(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#setError(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions).mjava,0,0,7,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#removeShutdownHook().mjava,0,1,5,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(String,String,AbstractType[#],AbstractType[#],List[ColumnDef]).mjava,0,0,3,5,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#resume().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getThriftFramedTransportSize(Configuration).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#Deletion(DeletionTime,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#processPartitionKeyRestrictions(boolean).mjava,0,0,15,1,0,0.23076923191547394,3,6,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#indexCfsMetadata(CFMetaData,IndexMetadata).mjava,0,0,13,2,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#isMinimum().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.ExistCondition#ExistCondition(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#getSpecifiedTokens(TokenMetadata,Collection[String]).mjava,0,0,6,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#waitForStarted().mjava,0,1,6,0,1,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#metadataBuilder().mjava,0,2,27,0,5,0.12903225421905518,40,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getColumnFamilyMetric(String,String,String).mjava,0,0,8,3,2,0.0,42,1,48,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#describeOwnership(List[Token]).mjava,0,0,26,1,10,0.4399999976158142,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#getLimits(int,boolean,SlicePredicate).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#clusteringDef(CFMetaData,ByteBuffer,AbstractType[#],int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#delete(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#of(Iterable[CFMetaData]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#minValue().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#parseType(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#builder().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.DroppedColumn#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#frozenSet(String,Set[#]).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#populateTokenMetadata().mjava,0,2,12,0,1,0.0833333358168602,3,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#AtomicBTreePartition(CFMetaData,DecoratedKey,MemtableAllocator).mjava,0,0,0,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#forPaging(ClusteringComparator,Clustering,boolean).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#permitCompacting(Iterable[SSTableReader]).mjava,0,0,3,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnData(CFMetaData,ByteBuffer,Column).mjava,0,0,14,3,1,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#deletionTimeSerializedSize(DeletionTime).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#supportsThresholdParams(Class[#-extends-AbstractCompactionStrategy]).mjava,0,0,3,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#get(long,TimeUnit).mjava,0,0,1,2,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getCollectionsParameters().mjava,0,1,15,0,4,0.02777777798473835,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#apply().mjava,0,15,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Move#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#isRootLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doValidationCompaction(ColumnFamilyStore,Validator).mjava,0,0,50,2,14,0.1875,96,11,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createDroppedColumnFromRow(UntypedResultSet.Row).mjava,0,0,7,1,4,0.7142857313156128,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\StreamStateStore#onSuccess(StreamState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#create(boolean,Map[String,String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#build().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#putLongByByte(long,long).mjava,0,0,16,2,0,0.0,2,1,19,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#isCompatibleWith(AbstractType[#]).mjava,0,0,6,1,3,0.05882352963089943,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#removeSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#setIterator(Slice).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#ArrayBackedSlices(ClusteringComparator,Slice[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#deserialize(DataInputPlus,int).mjava,0,0,11,2,8,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFExecutorService#beforeExecute(Thread,Runnable).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#partitionOrdering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#references(AbstractType[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#inOrderTester(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_snitch().mjava,0,0,7,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#readStaticRow(SSTableReader,FileDataInput,SerializationHelper,Columns,boolean,UnfilteredDeserializer).mjava,0,0,12,6,0,0.3333333432674408,20,5,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#setKeyspace(String).mjava,0,0,1,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,6,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPath(CFMetaData,ColumnPath).mjava,0,0,5,2,0,0.0,20,6,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#bigForString(String,int).mjava,0,0,6,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionPosition.Kind#fromOrdinal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#readAtom().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#decorateKey(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#deserialize(DataInputPlus,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#validate(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getGossipMessagePendingTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getCQLQueryHandler().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableOfflineRelevel.Relevel#relevel(boolean).mjava,0,0,34,1,8,0.0,336,11,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyType#LegacyType(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#doStatusCheck().mjava,0,1,35,0,6,0.12280701845884323,336,11,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#DatacenterWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#toRangeSet(TokenRestriction,QueryOptions).mjava,0,0,32,2,5,0.0,6,4,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#Refs().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#getPartitionUpdates().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(int,int).mjava,0,0,2,2,5,0.14814814925193787,32,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool#MemtablePool(long,long,float,Runnable).mjava,0,0,4,4,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeNamesCommand(SinglePartitionReadCommand,DataOutputPlus).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removingNonlocal(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#validate(ClusteringPrefix).mjava,0,0,4,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#updatedRows().mjava,0,1,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#map(ChannelProxy,CompressionMetadata).mjava,0,0,0,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#equalsIgnoringCompression(CommitLogDescriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#from(Collection[ColumnDefinition]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#validateOptions().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(CFMetaData,Iterator[LegacyLayout.LegacyCell],boolean,boolean,boolean).mjava,0,0,8,5,2,0.095238097012043,5,4,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#initCache(LoadingCache[RoleResource,Set[RoleResource]]).mjava,0,0,18,1,2,0.0,8,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#needsTaskCommit(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.KeySerializer#serializedSize(RowCacheKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStreamingSocketTimeout().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#toString().mjava,0,0,5,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchTriggers(String,String).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#toString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#DataType(int,AbstractType,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#string(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#fromIterator(UnfilteredRowIterator).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#minValueIfSet(long,long,long).mjava,0,0,1,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher.Transform#onClose().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#MessagingService(boolean).mjava,0,0,17,1,5,0.0,16,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage#HintMessage(UUID,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#readStatic(ByteBuffer).mjava,0,0,4,1,1,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Serializer#deserialize(DataInputPlus).mjava,0,0,3,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#release(Collection[T]).mjava,0,0,6,1,4,0.0,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readUnsignedShort().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\LocalSyncTask#handleStreamEvent(StreamEvent).mjava,0,0,3,1,3,0.0,24,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(Object[],LivenessInfo,DeletionTime).mjava,0,0,6,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#announceMigration(boolean).mjava,0,0,4,1,2,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.LogFilesByName#list(File).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupInfo#GroupInfo(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_builder(Comparator[#-super-V],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#includes(ClusteringComparator,Bound).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#getUpdateInterval().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getRandomToken().mjava,0,0,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#wrap(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSnapshotSSTableReader(String).mjava,0,0,23,1,4,0.1875,5,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getLength().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#typeHashCode(AbstractType[#]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeReadConnectionTimeout(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#selectOrderIterator().mjava,0,2,6,0,0,0.2222222238779068,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#markDataSynced(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#closeAll().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#partitionLevelDeletion().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K,V]_create(Comparator[K],Comparator[V]).mjava,0,0,3,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#getExistingFiles(String).mjava,0,0,9,1,2,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns.Builder#build().mjava,0,16,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#chunkLength().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#CreateTableStatement(CFName,TableParams,boolean,Set[ColumnIdentifier]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#getIndexSerializer(CFMetaData,Version,SerializationHeader).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isValidFile(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#eventSerializedSize(int).mjava,0,0,21,1,1,0.0,15,6,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setCounterWriteRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#legacyAtomComparator(CFMetaData).mjava,0,0,29,1,11,0.3137255012989044,56,8,39,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeys(QueryOptions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClientMetrics#addCounter(String,Callable[Integer]).mjava,0,0,3,2,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#executeMutation(Mutation).mjava,0,0,3,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOnHeapOf(ByteBuffer).mjava,0,0,6,1,0,0.2857142984867096,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#reloadConfiguration(boolean).mjava,0,0,37,1,9,0.015625,72,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#getId().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#allocate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#metadata().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.Builder#addAll(Collection[V]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getHostIdToEndpoint().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#mutable(UnfilteredPartitionIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#left(Collection[Token],long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#absolutePath().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#send(Event).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#values().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputPartitioner(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#send(Event).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator.Negotiator#getAuthenticatedUser().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerConnection#applyStateTransition(Message.Type,Message.Type).mjava,0,0,0,2,0,0.07692307978868484,17,5,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#histogram(MetricName).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#warn(long,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionBuilder#build().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revokeAllFrom(RoleResource).mjava,0,0,21,1,2,0.0,1,0,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getUDTValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#create(List[UnfilteredRowIterator],int,MergeListener).mjava,0,0,9,3,0,0.0,1,0,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#getDroppableTombstonesBefore(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCrcCheckChance().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(String,List[ByteBuffer],ConsistencyLevel).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#nextInternal().mjava,0,0,1,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#hashCode().mjava,0,0,12,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#UserDefined(String,UserType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.Literal#validateAssignableTo(String,ColumnSpecification).mjava,0,0,10,2,4,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#metadata().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#invalidateCachedPartition(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#nodeDown(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#count().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\SessionFailedMessage#SessionFailedMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#parseDouble(Map[String,String],String,double).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#setAppliesTo(SetType,Iterator[Cell],Set[ByteBuffer],Operator).mjava,0,0,7,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchUDAs(String,Functions,Types).mjava,0,0,6,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#execute(Message.Request).mjava,0,0,3,1,1,0.0,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#resolve(Resolver).mjava,0,0,3,1,2,0.0,4,3,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#isRestricted(ColumnDefinition).mjava,0,0,9,1,0,0.0,8,3,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#rowsOnRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#prepare(String,ColumnDefinition).mjava,0,0,15,2,4,0.0,44,3,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#staticGrouper(CFMetaData,SerializationHelper).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering.Reversed#compareAsymmetric(T1,T2).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getScanners(Collection[SSTableReader],Range[Token]).mjava,0,0,5,2,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.Builder#add(UserType).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#getString(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#randomLevel().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#getParentChunk(ByteBuffer).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WriteResponse.Serializer#deserialize(DataInputPlus,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.Codec#encode(ResultSet,ByteBuf,int).mjava,0,0,5,3,0,0.2222222238779068,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getList(int,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#isExistingRole(RoleResource).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#untrackNew(SSTable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#get().mjava,0,1,5,0,2,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Tester#includedBySubselection(CellPath).mjava,0,0,3,1,1,0.2142857164144516,9,4,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#doAuthSetup().mjava,0,2,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.MultiSignal#cancel().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#sortSampledKeys(List[DecoratedKey],Range[Token]).mjava,0,0,13,2,2,0.1304347813129425,3,2,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#isEmpty().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.StrongLeakDetector#run().mjava,0,0,8,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#prepareKeyspace(ClientState).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#beginCompaction(CompactionInfo.Holder).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getUnreachableNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#create(Message.Type,int,int,EnumSet[Header.Flag],ByteBuf).mjava,0,0,0,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllInternodeAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Status#printNodesHeader(boolean,boolean).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getByte(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#oldestUnrepairedTombstone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#executeInternal(ReadOrderGroup).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.Page#buffersIterator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#parseIdentifiers(String,String).mjava,0,0,3,2,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Type#fromString(String).mjava,0,0,5,1,0,0.0,32,5,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#isInclusive(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateKeyspace(String,KeyspaceParams).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#writeDeletionTime(DeletionTime,DataOutputPlus).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#openSSTables(Map[InetAddress,Collection[Range[Token]]]).mjava,0,0,40,1,13,0.09836065769195557,128,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getStorageMetric(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#getStatus().mjava,0,1,2,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#hashCode().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#concat(UnfilteredRowIterator,UnfilteredRowIterator).mjava,0,0,18,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getUnrestrictedClusteringColumns().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#replace(ViewDefinition,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInternodeAuthenticator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#keyspaceMap(String).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#Group().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBufferFixed#doFlush().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(Throwable,String,FileOpType,DiscreteAction[#-extends-IOException]...).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#reduceScopeForLimitedSpace().mjava,0,1,9,0,1,0.30000001192092896,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#make(CFMetaData,Collection[SSTableReader]).mjava,0,0,13,2,2,0.6666666865348816,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#selectsKey(DecoratedKey).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#enqueue(StreamMessage).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#resetLocalSchema().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setShort(long,short).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,CompressionMetadata.Chunk).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FsyncWritersTask#run().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CorruptSSTableException#CorruptSSTableException(Exception,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#CompressedRandomAccessReader(Builder).mjava,0,0,6,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata.CompactionMetadataSerializer#serializedSize(Version,CompactionMetadata).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Serializer[GossipDigestAck2]#serializedSize(GossipDigestAck2,int).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter.InvalidateKeys#InvalidateKeys(SSTableReader,Collection[DecoratedKey]).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#CQL3CasRequest(CFMetaData,DecoratedKey,boolean,PartitionColumns,boolean,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Logger#applyToMarker(RangeTombstoneMarker).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationState(ApplicationState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FilterFactory#deserialize(DataInput,boolean,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#run().mjava,0,1,8,0,1,0.0,2,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#response(MessageIn[ReadResponse]).mjava,0,0,11,1,2,0.11764705926179886,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#listAppliesTo(ListType,Iterator[Cell],List[ByteBuffer],Operator).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#getConnectionFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(long[],long[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\RMIServerSocketFactoryImpl#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#columnFamily().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#onMergedRangeTombstoneMarkers(RangeTombstoneMarker,RangeTombstoneMarker[]).mjava,0,0,11,2,3,0.05882352963089943,5,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#startBatchlogReplay().mjava,0,2,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#LocalPool().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#readPosition(DataInputPlus,Version).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateWithShort(MessageDigest,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#minIndexInterval(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildWith(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy.Target#Target(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#setRow(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#loggingIterator(UnfilteredPartitionIterator,String,boolean).mjava,0,0,2,3,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#statToString(SummaryStatistics).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#BloomSpecification(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#create(String,String,boolean,boolean,boolean,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack.MoreContentsHolder#MoreContentsHolder(MoreContents,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#register(String,String,Metric).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#passiveAnnounce(UUID).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#updateCompactionHistory(String,String,long[],long,long).mjava,0,0,6,5,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#deserialize(DataInputPlus,int,List[AbstractType[#]]).mjava,0,0,4,3,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#subtractContained(Range[T]).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#execute(ReadQuery,QueryOptions,QueryState,int).mjava,0,0,4,4,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleSessionPrepared(StreamSession).mjava,0,0,10,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse#createRemoteDataResponse(UnfilteredPartitionIterator,ColumnFilter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#createReader().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#reset(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#endDeletionTime().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#start().mjava,0,2,13,0,11,0.1139240488409996,74,8,2,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#buildBlocking().mjava,0,1,14,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readFunctions(String).mjava,0,0,13,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#asyncRemoveFromBatchlog(Collection[InetAddress],UUID).mjava,0,0,7,2,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#newAllocator().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#createColumnsFromColumnRows(UntypedResultSet,String,String,AbstractType[#],AbstractType[#],boolean,boolean,boolean,boolean).mjava,0,0,3,9,1,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#read().mjava,0,0,2,0,1,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.INRaw#makeInReceiver(ColumnSpecification).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#toString().mjava,0,1,9,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AnySignal#isSignalled().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#viewClustering(TemporalRow,TemporalRow.Resolver).mjava,0,0,8,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#execute(QueryState).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,12,3,6,0.13636364042758942,24,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#submitMigrationTask(InetAddress).mjava,0,0,2,1,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#onClose().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#ReadCallback(ResponseResolver,ConsistencyLevel,ReadCommand,List[InetAddress]).mjava,0,0,5,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback.AsyncRepairRunner#AsyncRepairRunner(TraceState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.EndpointFilter#isValid(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#incrCounter(Enum[#],long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionManagerProxy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputInitialAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#filenameFor(Component).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#startOfComplexColumn(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredRows#FilteredRows(Filter,UnfilteredRows).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#isShadowed(LegacyLayout.LegacyAtom).mjava,0,0,10,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#rowsPerPartitionFromString(String).mjava,0,0,5,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getRandomToken(Random).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#onMergedPartitionLevelDeletion(DeletionTime,DeletionTime[]).mjava,0,0,3,2,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#diff(Tables).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#restoreReplicaCount(InetAddress,InetAddress).mjava,0,0,27,2,10,0.02222222276031971,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeNamesFilter(ReadCommand,ClusteringIndexNamesFilter,DataOutputPlus).mjava,0,0,20,3,3,0.125,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#join(String...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#deserialize(DataInputPlus,int).mjava,0,0,16,2,12,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrateLegacyHints(UUID,Iterator[UntypedResultSet.Row],ByteBuffer).mjava,0,0,2,3,0,0.2857142984867096,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#assureSufficientLiveNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#getResult().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#filterCipherSuites(String[],String[]).mjava,0,0,10,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcListenBacklog().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewType(UserType,boolean).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableCleanerThread#MemtableCleanerThread(P,Runnable).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#PartitionRangeReadCommand(CFMetaData,int,ColumnFilter,RowFilter,DataLimits,DataRange,Optional[IndexMetadata]).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\SSTableIntervalTree#buildIntervals(Iterable[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#prepareKeyspace(ClientState).mjava,0,0,3,1,0,0.5,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#setup().mjava,0,0,5,0,0,0.1428571492433548,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\FloatSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokenMetadata().mjava,0,45,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#EmptyBaseRowIterator(PartitionColumns,CFMetaData,DecoratedKey,boolean,Row).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#unregister(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getRestorePointInTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCompactionThroughputMbPerSec().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readBytesMap(ByteBuf).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#createView(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadRepairVerbHandler#doVerb(MessageIn[Mutation],int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setUserDefinedFunctionFailTimeout(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#isUnreadable(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTable(String,String).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#flushBuffer().mjava,0,2,5,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OverlapIterator#update(I).mjava,0,0,10,1,0,0.5,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdown().mjava,0,3,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#prepare().mjava,0,0,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#LogTransaction(OperationType,Tracker).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairParallelism#fromName(String).mjava,0,0,4,1,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#validateSecondaryIndexSelections(boolean).mjava,0,0,3,1,0,0.800000011920929,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CacheCleanupExecutor#CacheCleanupExecutor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#getRow().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#drain(InputStream,long).mjava,0,0,3,2,2,0.0714285746216774,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#maybeSync().mjava,0,0,1,0,0,0.1818181872367859,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager.Pager#Pager(DataLimits,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeUpdateRowCache(DecoratedKey).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getUser().mjava,0,22,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#seekToCurrentRangeStart().mjava,0,1,14,0,3,0.0357142873108387,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#isMinimum().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#isCompatibleWith(AbstractType[#]).mjava,0,0,6,1,3,0.23529411852359772,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeBoolean(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.FixedCoalescingStrategy#[C-extends-Coalescable]_coalesceInternal(BlockingQueue[C],List[C],int).mjava,0,0,6,3,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#finalizeMetadata().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#addAllElementsToAll(List[List[ByteBuffer]]).mjava,0,0,15,1,3,0.0,4,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#hotKeyIterator(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheKeysToSave().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#dataSize().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#hasAllPKColumnsRestrictedByEqualities().mjava,0,1,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Full#Full(ColumnFamilyStore,Collection[Range[Token]],int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#validate().mjava,0,4,0,0,2,0.05000000074505806,9,5,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#getPager(SinglePartitionReadCommand,PagingState,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#includesAllColumns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyAliasesParameters(Map[Byte,AbstractType[#]]).mjava,0,0,20,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfArray(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#get(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Blocker#ask().mjava,0,0,3,0,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performScrub(ColumnFamilyStore,boolean,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#abort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#makeBoundary(boolean,Slice.Bound,Slice.Bound,DeletionTime,DeletionTime).mjava,0,0,11,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#IncomingMessageHandler(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#Builder(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getDirectoryForNewSSTables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#reclaimed(long).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableTimer(String,Timer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#SSTableReader(Descriptor,Set[Component],CFMetaData,long,StatsMetadata,OpenReason,SerializationHeader).mjava,0,0,2,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#writePartitionHeader(UnfilteredRowIterator).mjava,0,0,8,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#output(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#toString(BigDecimal).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Literal#Literal(List[Pair[Term.Raw,Term.Raw]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#getColumnNames().mjava,0,0,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#getRow(Clustering).mjava,0,0,5,1,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#set(long,byte).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#unsafeAssassinateEndpoint(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WindowsFailedSnapshotTracker#resetForTests().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#getAllRangesWithStrictSourcesFor(String,Collection[Range[Token]]).mjava,0,0,31,2,10,0.1621621549129486,24,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataComponent#compareTo(MetadataComponent).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#get(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#createBroken(FunctionName,List[AbstractType[#]],AbstractType[#],ByteBuffer,InvalidRequestException).mjava,0,0,2,5,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\EmptySerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#splitName(ByteBuffer).mjava,0,0,6,1,2,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#trim(int).mjava,0,0,3,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#trySwapRegion(Region,int).mjava,0,0,9,2,3,0.4375,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRemoteDataResponse#LegacyRemoteDataResponse(List[ImmutableBTreePartition]).mjava,0,0,0,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#requireAuthentication().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#threadLocalMD5Digest().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService.ParentRepairSession#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionController#ValidationCompactionController(ColumnFamilyStore,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#startNativeTransport().mjava,0,0,2,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isCQLTable().mjava,0,8,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#logOpenException(Descriptor,IOException).mjava,0,0,3,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#isWildcard().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#AbstractRangeTombstoneMarker(RangeTombstone.Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#updateAffectsView(AbstractBTreePartition).mjava,0,0,17,1,1,0.125,128,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#[C-extends-Comparable[#-super-C],D,I-extends-Interval[C,D]]_emptyTree().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#updateAllTimestamp(long).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SimpleSelection#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCounterCacheSavePeriod().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\WriteCallbackInfo#shouldHint(boolean,MessageOut,ConsistencyLevel).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#generateMapCQLLiteral(ByteBuffer,int,StringBuilder,int).mjava,0,0,10,4,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause#containsCustomExpressions().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#getMutation(CFMetaData,DecoratedKey,ConsistencyLevel).mjava,0,0,9,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#toString().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#always().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildWith(List[ByteBuffer]).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#collectRoles(Role,Set[RoleResource],boolean).mjava,0,0,5,3,1,0.0,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#fileName().mjava,0,16,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#readChunkOffsets(DataInput).mjava,0,0,6,1,4,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxIntTracker#min().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Downsampling#getOriginalIndexes(int).mjava,0,0,6,1,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#computeId(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#CommitLogSegmentManager(CommitLog).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#serializedSizeWithVIntLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#[V]_compareUpperBound(Comparator[V],Object,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IfExistsCondition#isIfExists().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompactionParameters(Map[String,String]).mjava,0,0,5,1,1,0.07692307978868484,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#deserialize(DataInputPlus,int).mjava,0,0,9,2,7,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#addAllWithSizeDelta(PartitionUpdate,OpOrder.Group,UpdateTransaction).mjava,0,0,43,3,11,0.0,340,11,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#queryMemtableAndDiskInternal(ColumnFamilyStore,boolean).mjava,0,0,80,2,16,0.3047619163990021,3584,14,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#estimateCompactionGain(Set[SSTableReader]).mjava,0,0,11,1,4,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#dumpMemtable().mjava,0,2,2,0,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\SSTableListChangedNotification#SSTableListChangedNotification(Collection[SSTableReader],Collection[SSTableReader],OperationType).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getFalsePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateView(ViewDefinition,boolean).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event#Event(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSnapshotDetails().mjava,0,0,14,0,2,0.0,4,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#addDefaultCQLMetadata(Collection[ColumnDefinition],String,String,AbstractType[#],AbstractType[#],AbstractType[#],AbstractType[#]).mjava,0,0,24,7,3,0.03333333507180214,8,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#toString(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#extractTypes(List[ColumnDefinition]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager.ResampleEntry#ResampleEntry(SSTableReader,long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getString(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#validate(ClientState).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#fromString(String).mjava,0,0,24,1,1,0.0,24,5,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#flushAllIndexesBlocking().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#filterForQuery(Keyspace,List[InetAddress],ReadRepairDecision).mjava,0,0,18,3,3,0.4137931168079376,64,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#triggers(Triggers).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#hintMutations(Collection[#-extends-IMutation]).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#getScanner(RateLimiter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#reset().mjava,0,1,1,0,0,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#recordColumnDrop(ColumnDefinition).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\HeapAllocator#HeapAllocator().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#addDefinitionForUpgrade(List[ColumnDefinition],String,String,boolean,boolean,AbstractType[#],AbstractType[#],AbstractType[#]).mjava,0,0,13,8,1,0.125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.TreeRangeIterator#nextIterator().mjava,0,1,5,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\LongSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#validateLogin().mjava,0,2,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions.Builder#add(ColumnCondition).mjava,0,0,4,1,1,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#metadata().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#freeze().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#isUnwritable(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_transformAndFilter(Object[],Function[#-super-V,#-extends-V]).mjava,0,0,10,2,5,0.23076923191547394,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#dataSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator#SSTableIterator(SSTableReader,DecoratedKey,ColumnFilter,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#applyUnsafe().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#DiscarderByIndex(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#selectsClustering(DecoratedKey,Clustering).mjava,0,0,8,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#acquire(LocalPool).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBatchSizeFailThresholdInKB(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isNameValid(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#datacenter(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#read(ByteBuffer,long).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy#CleanupStrategy(Collection[Range[Token]],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#merge(ResultSet,ResultSet).mjava,0,0,14,2,4,0.0,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#currentRow(int,Clustering).mjava,0,0,2,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath#hashCode().mjava,0,0,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor.BackgroundActivityReporter#run().mjava,0,0,8,0,2,0.10526315867900848,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getResultMetadata(boolean).mjava,0,0,2,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#estimatedKeysForRange(Range[Token]).mjava,0,0,4,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#newInstances().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#CQLLimits(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#get(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator#isReverseOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#recover(File[]).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllInternodeAuthenticator#authenticate(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForWrite(String).mjava,0,0,0,1,0,0.0,4,1,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#setSkipStatic().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StatusGossip#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\EncodedHintMessage.Serializer#serializedSize(EncodedHintMessage,int).mjava,0,0,4,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateSizeEstimates(String,String,Map[Range[Token],Pair[Long,Long]]).mjava,0,0,17,3,6,0.1111111119389534,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read(byte[],int,int).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#makeLegacyDefaultValidator().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getActiveContentSize().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#build().mjava,0,1,6,0,5,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#changeEvent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#isEmpty().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#getSerializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#HintsBuffer(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ParameterizedClass#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Value#fromSerialized(ByteBuffer,SetType,int).mjava,0,0,7,3,2,0.1428571492433548,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#baseTableMetadata().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMaxTTL().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#open().mjava,0,0,7,0,0,0.0,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#createIndexesFromColumnRows(CFMetaData,UntypedResultSet,String,String,AbstractType[#],AbstractType[#],boolean,boolean,boolean,boolean).mjava,0,0,13,10,5,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_prepared_cql_query(int,List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOnHeapExcludingData(ByteBuffer[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#onWireCellstoUnfilteredRowIterator(CFMetaData,DecoratedKey,LegacyDeletionInfo,Iterator[LegacyCell],boolean,SerializationHelper).mjava,0,0,6,6,1,0.6000000238418579,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelSorted(int,Comparator[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#recordLatency(TableMetrics,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#remainingCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#put(RowCacheKey,IRowCacheEntry).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#ConcurrentBiMap(Map[K,V],Map[V,K]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#log().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_version().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_submit(Callable[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#getCompactionInfo().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#checkAccess(ClientState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#compress(ByteBuffer,ByteBuffer).mjava,0,0,6,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHintsForEndpoint(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter.FilterNotIndexed#applyToStatic(Row).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#HintsDescriptor(UUID,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionDetails#compareTo(PermissionDetails).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ClientState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#values().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#isStopped().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#prepare(CFMetaData).mjava,0,0,9,1,2,0.1428571492433548,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#toHeader(CFMetaData).mjava,0,0,11,1,3,0.3888888955116272,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#all().mjava,0,9,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#mergeLazily(List[#-extends-UnfilteredPartitionIterator],int).mjava,0,0,17,2,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#executeUserDefined(int,List[ByteBuffer]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read(byte[],int,int).mjava,0,0,1,3,1,0.10526315867900848,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#logSystemInfo().mjava,0,1,20,0,0,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#validate(PartitionUpdate).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#Accumulator(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#createSlice(QueryOptions).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#DynamicCompositeType(Map[Byte,AbstractType[#]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getTimeToNextResize(TimeUnit).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#startOrderGroup().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#AbstractWriteResponseHandler(Keyspace,Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Runnable,WriteType).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#serializedSize(ClusteringPrefix,int,List[AbstractType[#]]).mjava,0,0,4,3,0,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#start().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#realMarkAlive(InetAddress,EndpointState).mjava,0,0,12,2,0,0.06666667014360428,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#Operator(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#serializedSize(SyncRequest,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#collectMarkerSpecification(VariableSpecifications).mjava,0,0,3,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PaxosState#propose(Commit).mjava,0,0,19,1,3,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getHollowDirectByteBuffer().mjava,0,4,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#hasMissingElements().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Status#getFormat(boolean,boolean).mjava,0,0,11,2,2,0.40909090638160706,9,4,17,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator.MergeReducer#reduce(int,Unfiltered).mjava,0,0,3,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#replaceFlushed(Memtable,Collection[SSTableReader]).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SnapshotMessage.SnapshotMessageSerializer#serializedSize(SnapshotMessage,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#transfer(HintsCatalog,Supplier[UUID]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredRows#filter(UnfilteredRowIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#isEmpty().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#toRestriction(CFMetaData,VariableSpecifications).mjava,0,0,10,2,0,0.0,21,1,21,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#asMap().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#mergeWith(Restriction).mjava,0,0,5,1,0,0.125,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrubDataDirectories(CFMetaData).mjava,0,0,34,1,8,0.125,32,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#preferredBufferType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getDataCenters().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#announceMigration(boolean).mjava,0,0,14,1,4,0.0,26,6,27,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#Topology(Topology).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#Rows().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\MemoryMappedSegment#internalClose().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#perPartitionCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#ReadOrderGroup(OpOrder.Group,OpOrder.Group,OpOrder.Group).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#apply(Function[View,View],Throwable).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler.BatchlogCleanup#run().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#deserialize(DataInputPlus,int).mjava,0,0,17,2,11,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createIndexMetadataFromRow(UntypedResultSet.Row).mjava,0,0,5,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isRPCServerRunning().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#serializeEvent(ByteBuf,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#intersecting(Collection[SSTableReader],Range[Token]).mjava,0,0,4,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#get(K).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#addToTotalBytesCompacted(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#fromString(String).mjava,0,0,3,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.AndThen#run().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Terminal#containsBindMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#toCQLString(CFMetaData).mjava,0,0,17,1,3,0.0,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#builder().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#createSSTableMultiWriter(Descriptor,long,long,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#EventNotifier(Server).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#sort().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#attachTo(BasePartitions).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintsDeliveryThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#columns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#[T]_getInstance(AbstractType[T],boolean).mjava,0,0,2,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand.Deserializer#deserialize(DataInputPlus,int,boolean,int,boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits,Optional[IndexMetadata]).mjava,0,0,1,11,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#shouldBeEnabled().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesToSend().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#finishWriteFor(Allocation).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#queryStorage(ColumnFamilyStore,ReadOrderGroup).mjava,0,0,41,2,4,0.0833333358168602,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#CQLCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serialize(TruncateResponse,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#compareTo(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJob#sendValidationRequest(Collection[InetAddress]).mjava,0,0,13,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readLong().mjava,0,2,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#init(UUID,String,Collection[StreamEventHandler],StreamCoordinator).mjava,0,0,6,4,1,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeClustering(CFMetaData,ByteBuffer).mjava,0,0,10,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#size().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#isWrapAround().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#compile(String,String).mjava,0,0,16,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#fetchedRegularColumns(SerializationHeader).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#printUsage(Options).mjava,0,0,4,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableExpiredBlockers#formatForExpiryTracing(Iterable[SSTableReader]).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\ContextAllocator#clone(ByteBuffer).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#addProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter#flushData().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#setSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLeavingNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V,long).mjava,0,0,2,3,1,0.5,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isInitialized().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitFailurePolicy(Config.CommitFailurePolicy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback.AsyncRepairRunner#run().mjava,0,0,13,0,3,0.13636364042758942,4,2,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#put(K,V).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#selectionSerializedSize(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#toString().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#getPager(PagingState,int).mjava,0,0,1,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#add(ColumnDefinition,Operator,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#stopReadingDisk().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#addSize(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#fromString(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#singleRowUpdate(CFMetaData,ByteBuffer,Row).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#formatResults(List[RoleResource]).mjava,0,0,13,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete#success().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#asCQL3Type().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#serializedSize(int).mjava,0,0,13,1,2,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#get().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#BootStrapper(InetAddress,Collection[Token],TokenMetadata).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#register(Timer.Context).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#isMultiCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getId().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#needsCleaning().mjava,0,3,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#getCell(Row,ColumnDefinition,CellPath).mjava,0,0,1,3,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#AbstractReadCommandBuilder(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#growToFree(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#dropSSTables().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultSet#one().mjava,0,0,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#KeyspaceParams(boolean,ReplicationParams).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#ReverseReader(FileDataInput,boolean,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#checkAccess(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#createSSTableAndLengthPairs(Iterable[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.IndexGCTransaction#IndexGCTransaction(DecoratedKey,int,int,Index...).mjava,0,0,0,4,0,0.1428571492433548,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableBinary#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Appender#doAppend(Term.Terminal,ColumnDefinition,UpdateParameters).mjava,0,0,8,3,1,0.15789473056793213,3,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#forceCompaction(Collection[Descriptor]).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#dumpTimings(String).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#makeNode().mjava,0,1,4,0,3,1.2727272510528564,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#SystemKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setViewRemoved(String,String).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#EstimatedHistogramReservoir(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#onPartitionClose().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseRemoving(InetAddress,UUID,UUID).mjava,0,0,18,3,2,0.25,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#unregisterMBean().mjava,0,2,3,0,0,0.09090909361839294,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.MultiTableColumnsBuilder#build().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_newTaskFor(Runnable,T,TraceState).mjava,0,0,0,3,0,0.0,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRowFilter(QueryOptions).mjava,0,0,5,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#isSecuredThread().mjava,0,5,6,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int,String,String).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#gatherQueriedColumns().mjava,0,1,9,0,1,0.20000000298023224,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#withId(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#CBUtil().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#Filter(boolean,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#addReplicas(List[File]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createMutations(AbstractBTreePartition,TemporalRow.Set,boolean).mjava,0,0,13,3,5,0.1388888955116272,192,10,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#getStage().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Config#getOutboundBindAny().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#convertToRows(CellGrouper,PeekingIterator[LegacyAtom]).mjava,0,0,3,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#toString().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#[T]_getInstance(TypeSerializer[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#getSyncPoint().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables.Builder#add(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_waitOnFutures(Iterable[#-extends-Future[#-extends-T]]).mjava,0,0,4,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#partitionKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#rangeToBytes(Range[Token]).mjava,0,0,2,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableCounter(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readBytes(ByteBuf).mjava,0,0,2,1,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#dispatch(HintsStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#deserialize(DataInputPlus,int).mjava,0,0,8,2,8,0.0476190485060215,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#without(ColumnDefinition).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#nowInSec().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#SharedCloseableImpl(SharedCloseableImpl).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#parent(int).mjava,0,0,2,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#cleanup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#prepare(List[ColumnSpecification]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataType#MetadataType(IMetadataComponentSerializer[MetadataComponent]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\Bound#Bound(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader.Builder#Builder(File,File).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Putter#doPut(Term.Terminal,ColumnDefinition,UpdateParameters).mjava,0,0,9,3,1,0.05882352963089943,3,3,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object...).mjava,0,0,2,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#getComponent(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.ConnectionTracker#addConnection(Channel,Connection).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit(String,String,long,String[]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFExecutorService#UDFExecutorService(NamedThreadFactory,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#executeLocally(ReadOrderGroup).mjava,0,0,20,1,6,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doAntiCompaction(ColumnFamilyStore,Collection[Range[Token]],LifecycleTransaction,long).mjava,0,0,11,4,4,0.13333334028720856,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#exclusiveCloseInclusiveOpen(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#build().mjava,0,1,13,0,3,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators#row(CFMetaData,DecoratedKey,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toLegacyDeletion(CFMetaData,ByteBuffer,ByteBuffer,long,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#selects(ClusteringComparator,Clustering).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#mergeStats(List[UnfilteredRowIterator]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#diff(ByteBuffer,ByteBuffer).mjava,0,0,15,2,8,0.18309858441352844,375,20,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\CommitVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_compare(Comparator[V],Object,Object).mjava,0,0,1,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#count().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputPlus#readUnsignedVInt().mjava,0,52,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#close().mjava,0,2,2,0,1,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#collectColumnMappings(CFMetaData,List[RawSelector],SelectorFactories).mjava,0,0,6,3,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#getEventExecutor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getMutation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#hashCode().mjava,0,0,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#getCfId().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Pair#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getMaxSSTableBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#updatesAffectView(Collection[#-extends-IMutation],boolean).mjava,0,0,8,2,0,0.0,8,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#invalids().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PaxosState#commit(Commit).mjava,0,0,17,1,2,0.380952388048172,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#isSatisfiedBy(CFMetaData,DecoratedKey,Row).mjava,0,0,14,3,4,0.10000000149011612,4,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.RawDelayedColumnValue#RawDelayedColumnValue(PreparedMarker,ColumnDefinition).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchTypes(String).mjava,0,0,8,1,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#info(String,Object...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(int,String,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\MemoryMappedSegment#MemoryMappedSegment(CommitLog).mjava,0,0,3,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#newestBucket(List[List[SSTableReader]],int,int,long,long,SizeTieredCompactionStrategyOptions).mjava,0,0,9,6,3,0.2142857164144516,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#sortWriteableCandidates(List[DataDirectoryCandidate],long).mjava,0,0,2,2,0,0.4000000059604645,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#close().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\LockedDynamicList#size().mjava,0,0,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.Literal#Literal(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#deserializeLegacyPartition(DataInputPlus,int,SerializationHelper.Flag,ByteBuffer).mjava,0,0,7,4,6,0.0833333358168602,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#add(E).mjava,0,0,3,1,3,0.2857142984867096,20,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawType#RawType(CQL3Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#toString().mjava,0,1,5,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#isCounter().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getTotalSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftExpression#isSatisfiedBy(CFMetaData,DecoratedKey,Row).mjava,0,0,7,3,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setKeyCacheSavePeriodInSeconds(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets#valueSpecOf(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.UDFClassLoader#findResource(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#setComplexDeletionTimeForOverwrite(ColumnDefinition).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FilterFactory#serialize(IFilter,DataOutputPlus).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\LegacyMetadataSerializer#deserialize(Descriptor,EnumSet[MetadataType]).mjava,0,0,33,2,17,0.015625,2,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ExecuteImplVisitor#ExecuteImplVisitor(Set[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#fullPartitionRead(CFMetaData,int,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#toInt(String,String,Integer).mjava,0,0,2,3,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#root().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#remove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType[#]]).mjava,0,0,3,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder.ReadableBoundary#ReadableBoundary(DecoratedKey,long,long,int,long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#inCondition(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#addRow(Map[String,Object]).mjava,0,0,7,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#currentSession().mjava,0,1,3,0,3,0.07692307978868484,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMemtableAllocatorPool().mjava,0,1,1,0,2,0.095238097012043,13,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSeverity(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#hasParent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,1,2,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#exclusiveOpen(boolean,ByteBuffer[],DeletionTime).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#partitionLevelDeletion().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#announceMigration(boolean).mjava,0,0,34,1,7,0.02380952425301075,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isEnabled().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#encodeCellName(CFMetaData,ClusteringPrefix,ByteBuffer,ByteBuffer).mjava,0,0,11,4,5,0.10000000149011612,60,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#create(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#putIntByByte(long,int).mjava,0,0,8,2,0,0.0,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#startRpc().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,int,long,Object).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupVisitor#visitedAll().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#decompose(int,Object).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#forThrift(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#updateCounterFor(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#TombstoneTracker(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#close().mjava,0,0,5,0,1,0.20000000298023224,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#counter(MetricName).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compare(ByteBuffer,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#headSet(V,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#MessageHandler(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readBoolean().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readUTF().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyCounterSuperColumns(CFMetaData,Iterator[LegacyLayout.LegacyCell],boolean).mjava,0,0,13,3,4,0.1111111119389534,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#add(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#UseStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#fromJSONObject(Object).mjava,0,0,7,1,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#begin(String,InetAddress,Map[String,String]).mjava,0,0,6,3,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#collectStats(EncodingStats.Collector).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#nextPageReadCommand(int).mjava,0,0,21,1,5,0.11538461595773697,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#encode(QueryOptions,ByteBuf,int).mjava,0,0,21,3,1,0.20000000298023224,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#CassandraDaemon().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateWithLong(MessageDigest,long).mjava,0,0,8,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#build().mjava,0,3,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Setter#execute(DecoratedKey,UpdateParameters).mjava,0,0,4,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#filter(ColumnFilter,DeletionTime,CFMetaData.DroppedColumn).mjava,0,0,8,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#announceMigration(boolean).mjava,0,0,6,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object,Object).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getNextBackgroundSSTables(int).mjava,0,0,18,1,4,0.10526315867900848,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#getTransferSections(CompressionMetadata.Chunk[]).mjava,0,0,5,1,2,0.07692307978868484,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#insertFrom(int,Slice.Bound,Slice.Bound,long,int).mjava,0,0,31,5,5,0.3243243098258972,39,13,56,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,10,3,10,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#roundUp(int,int).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromAddressList(Configuration,String[],int).mjava,0,0,6,3,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#hasNext().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#mergeSchema(Collection[Mutation]).mjava,0,0,43,1,4,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitUserDefined(ColumnFamilyStore,Collection[Descriptor],int).mjava,0,0,13,3,4,0.0810810774564743,8,4,18,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#resetAndTruncate().mjava,0,1,1,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_construct(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#list(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#prepare(Types).mjava,0,0,70,1,10,0.15596330165863037,3182592,28,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isKnownEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#deleteRow(CFMetaData,long,Object,Object...).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getWriteRpcTimeout().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#isCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#decommission().mjava,0,0,26,0,2,0.027027027681469917,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#dataSize().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#TruncateResponseHandler(int).mjava,0,0,1,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildBoundWith(ByteBuffer,boolean,boolean).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addHash(RowHash).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshot(String,Predicate[SSTableReader],boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#klass().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropColumnFamily(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\ClusteringColumnIndex#ClusteringColumnIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#equals(Object).mjava,0,0,2,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#Builder(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#Raw(Term.Raw,List[Term.Raw],AbstractMarker.INRaw,Term.Raw,Operator).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doCleanupOne(ColumnFamilyStore,LifecycleTransaction,CleanupStrategy,Collection[Range[Token]],boolean).mjava,0,0,47,5,12,0.01666666753590107,288,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#incrCreatedHints(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#MemtableAllocator(SubAllocator,SubAllocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DiscarderByIndex#execute(DecoratedKey,UpdateParameters).mjava,0,0,13,2,4,0.0,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#checkAccess(ClientState).mjava,0,0,9,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#awaitTermination().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#next().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getMaxDataAge(Collection[SSTableReader]).mjava,0,0,0,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#getFileDescriptor().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AbstractIterator#endOfData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Type#toString().mjava,0,2,0,0,0,0.0,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#distributeRemainingSpace(List[ResampleEntry],long).mjava,0,0,13,2,4,0.10000000149011612,3,2,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#BTreeRow(Clustering,Object[],int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnCoordinator(CounterMutation,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#nonCustomIndexInExpression(IndexName).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isSlice().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\GetVersion#main(String[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\AnticompactionRequest.AnticompactionRequestSerializer#deserialize(DataInputPlus,int).mjava,0,0,5,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamWriter#write(RandomAccessReader,ChecksumValidator,int,long,long).mjava,0,0,8,5,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitLogCompression(ParameterizedClass).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#updateTaskPermits(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDate(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#getPartitionUpdate(CFMetaData,DecoratedKey,ConsistencyLevel).mjava,0,0,4,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewBuilder#stop().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#recover(File,boolean).mjava,0,0,34,2,13,0.03846153989434242,11600,16,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions,InetAddress,int,InetAddress,int).mjava,0,0,7,5,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#setPrev(int,Node[E]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTruncateRpcTimeout().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#split(ByteBuffer).mjava,0,0,9,1,3,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#verify(PrintStream,boolean,String,String...).mjava,0,0,2,4,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#hasTombstonedExisting().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#iterator().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#getReceivingStream(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#validate().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#mergeCardinalities(Collection[ICardinality]).mjava,0,0,4,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSSLKeystorePath(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#register().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#UTName(ColumnIdentifier,ColumnIdentifier).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#reloadTriggerClasses().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#reset().mjava,0,2,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopRPCServer().mjava,0,2,1,0,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#containsValue(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#nowInSeconds().mjava,0,66,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#get(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(CFMetaData,int,ByteBuffer,Slices).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#comparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector#testAssignment(String,ColumnSpecification).mjava,0,0,10,2,1,0.1666666716337204,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#staticOperations().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#makeColumnFilter(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,21,3,5,0.0,5,5,32,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareUnsigned(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Terminal#bind(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#poll().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#maybeFail(Throwable).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#mean().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#mergeTo(PartitionColumns).mjava,0,0,2,1,2,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#isFailed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_paged_slice(String,KeyRange,ByteBuffer,ConsistencyLevel).mjava,0,0,41,4,16,0.011627906933426857,8,3,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#iterator(DecoratedKey,ColumnFilter,boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.CompositeComparator#CompositeComparator(List[Comparator[ByteBuffer]],List[Integer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#columnDefinitionsToThrift(CFMetaData,Collection[ColumnDefinition]).mjava,0,0,6,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#renameIdentifier(ColumnIdentifier.Raw,ColumnIdentifier.Raw).mjava,0,0,7,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onDropFunctionInternal(String,String,List[AbstractType[#]]).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy#get(ColumnFamilyStore,Collection[Range[Token]],int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#announceMigration(boolean).mjava,0,0,110,1,27,0.06403940916061401,768,35,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#restoreUpdatedOriginals().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.RowIterator#computeNext().mjava,0,0,14,0,2,0.07407407462596893,4,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#executeInternalWithPaging(String,int,Object...).mjava,0,0,6,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier.VerifyController#VerifyController(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#isEOF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter.TransactionalProxy#doAbort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\RMIServerSocketFactoryImpl#equals(Object).mjava,0,0,3,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#innerList().mjava,0,1,21,0,0,0.3571428656578064,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_newTaskFor(Runnable,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,14,2,4,0.7857142686843872,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#getLimits(int,boolean,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#doAddEndpoint(InetAddress,String,String).mjava,0,0,8,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#deserialize(DataInputPlus,int,Comparator[C]).mjava,0,0,6,3,5,0.0,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#newEQRestriction(CFMetaData,VariableSpecifications).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#beginViewBuild(String,String,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#runOnClose(int).mjava,0,0,2,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#next().mjava,0,0,10,0,1,0.0476190485060215,96,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getBloomFilter().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableExpiredBlockers#checkForExpiredSSTableBlockers(Iterable[SSTableReader],int).mjava,0,0,7,2,1,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.Flush#Flush(boolean).mjava,0,0,11,1,4,0.875,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Logger#applyToRow(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#cleanupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#readFrom(DataInput).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AbstractSignal#await().mjava,0,0,4,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#addChunk(Chunk).mjava,0,0,6,1,1,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#forPaging(ClusteringComparator,Clustering,boolean).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#StreamTransferTask(StreamSession,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#add(Slice.Bound,Slice.Bound,long,int).mjava,0,0,8,4,2,0.1111111119389534,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#partitionLevelDeletion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#reBuffer().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#getReplicationFactor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#sstables(SSTableSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskOptimizationPageCrossChance().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterator(Object[],int,int,Dir).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isSnapshotBeforeCompaction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#addRecord(LogRecord).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#[T]_submit(Runnable,T).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isCounterUpdate().mjava,0,2,3,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#EndpointState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#awaitTermination(long,TimeUnit).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#setCrcCheckChance(double).mjava,0,0,1,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetCompactionThreshold#execute(NodeProbe).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCompressionMetadata().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#shouldInclude(SSTableReader).mjava,0,0,4,1,3,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#compressBuffer(ByteBuffer,ByteBuffer).mjava,0,0,16,2,6,0.03999999910593033,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#slice(byte[],int,int).mjava,0,0,5,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver#isDataPresent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#BTreeRange(BTreeRange[V],BTreeRange[V]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\PartitionKeyIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,3,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabPool#newAllocator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#bounds(Bound,QueryOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#build().mjava,0,0,3,0,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#addInput(int,ResultSetBuilder).mjava,0,0,1,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#read(byte[],int,int).mjava,0,0,8,3,4,0.03999999910593033,16,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#getOtherOptions().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#Substraction(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#isEmpty().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openDataReader().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch.ReplayWriteResponseHandler#response(MessageIn[T]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#BufferCell(ColumnDefinition,long,int,int,ByteBuffer,CellPath).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#getMetadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter.SyncException#SyncException(IOException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isOpen(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#deserializeNextBound().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getTopology().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#process(PartitionIterator,QueryOptions,int).mjava,0,0,7,3,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(ChannelProxy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#appliesToStaticColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getBytesRead().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#rangeTombstoneWithNewBounds(int,Slice.Bound,Slice.Bound).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#scrub(boolean,boolean,boolean,String,String...).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_isEmpty(Boundary[T],Boundary[T]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(long).mjava,0,0,0,1,3,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#oneSerializedSize(Pair[T,Object],int).mjava,0,0,1,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#addPartitionDeletion(DeletionTime).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getToken(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#setRepairedAt(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#getReadQuery().mjava,0,5,5,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#iterator().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#upgradeSSTables(String,boolean,String...).mjava,0,0,2,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#beforeInvoke(Message).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#finish().mjava,0,9,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Downsampling#getSamplingPattern(int).mjava,0,0,6,1,5,0.095238097012043,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#getFilePointer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#partitionKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#addAll(Refs[T]).mjava,0,0,10,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Value#getElements().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint.Serializer#serialize(Hint,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#ThriftCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getEffectiveIndexInterval().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#mergeAndFilter(List[UnfilteredPartitionIterator],int,MergeListener).mjava,0,0,2,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\RegularColumnIndex#RegularColumnIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#apply(Mutation,boolean,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable#WrappedSharedCloseable(WrappedSharedCloseable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#validateCompatility(CFMetaData).mjava,0,0,11,1,0,0.06666667014360428,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#startParentRepair(UUID,String,String[],Collection[Range[Token]]).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#sendAll(GossipDigest,Map[InetAddress,EndpointState],int).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.HintsIterator#computeNext().mjava,0,0,5,0,2,0.095238097012043,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2Snitch#awsApiCall(String).mjava,0,0,8,1,4,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[K,V]_getMap(int,Class[K],Class[V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#equals(Object).mjava,0,0,5,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#withoutPerStatementVariables(QueryOptions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElement(CounterId,long,long,boolean,boolean).mjava,0,0,9,5,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#toString().mjava,0,0,16,0,1,0.0,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#append(E,int).mjava,0,0,7,2,4,0.0,18,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.ThreadIdAndCpuTime#setup().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#maybeMarkUnwritable(File).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addCounter(ColumnDefinition,long).mjava,0,0,4,2,0,2.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getMinimalKey(DecoratedKey).mjava,0,0,9,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#compile(String,String,String).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.exceptions.UnavailableException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#trimToThresholdWithHotness(List[SSTableReader],int).mjava,0,0,10,2,3,0.20000000298023224,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#defaultNameGenerator(Set[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidate(boolean).mjava,0,0,10,1,0,0.09090909361839294,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader#main(String[]).mjava,0,0,46,1,10,0.0555555559694767,128,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#prepare().mjava,0,0,7,0,0,0.1666666716337204,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromPager#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCachedPartition(RowCacheKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#query(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits,DecoratedKey,ClusteringIndexFilter).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#LocalStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#NativeSSTableLoaderClient(Collection[InetAddress],int,String,String,SSLOptions).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupVisitor#add(GroupInfo).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTupleValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaxSizeFile(Iterable[SSTableReader]).mjava,0,0,2,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#announceMigration(boolean).mjava,0,0,13,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getFunctions().mjava,0,2,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#ThriftLimits(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#create(ConsistencyLevel,List[ByteBuffer],boolean,int,PagingState,ConsistencyLevel).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#getSerializer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#finished().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#ConnectionHandler(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativePort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#add(CustomIndexExpression).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#fromJSONObject(Object).mjava,0,0,10,1,1,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(SSTableReader,RandomAccessReader,DecoratedKey).mjava,0,0,6,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeFunction#NativeFunction(String,AbstractType[#],AbstractType[#]...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#Directories(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.TimedSignal#checkAndClear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DataResponse#makeIterator(CFMetaData,ReadCommand).mjava,0,0,3,2,0,0.0714285746216774,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getIndexByName(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\WriteCallbackInfo#mutation().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#reclaimingRatio().mjava,0,2,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#equals(CommitLogDescriptor).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#columnDefinitionComparator(ColumnDefinition.Kind,boolean,AbstractType[#],AbstractType[#]).mjava,0,0,0,4,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#interpret(InetAddress).mjava,0,0,21,1,4,0.0,144,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexPropDefs#getRawOptions().mjava,0,3,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateTopology(InetAddress).mjava,0,0,7,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#changeEvent().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#closeInternal().mjava,0,4,1,0,0,0.2857142984867096,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#renameColumn(ColumnIdentifier,ColumnIdentifier).mjava,0,0,13,2,5,0.0833333358168602,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Upgrader#Upgrader(ColumnFamilyStore,LifecycleTransaction,OutputHandler).mjava,0,0,12,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering.Serializer#serializedSize(Clustering,int,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#hasEmptyCompactValue(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator.RaceAllocated#stash(Region).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#getType().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#abortTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getCQLSupportedVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#internalClose().mjava,0,0,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#inverse().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#isColumnRange().mjava,0,3,6,0,1,0.800000011920929,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#validate(ClientState).mjava,0,0,7,1,0,0.09090909361839294,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#compareTo(PartitionPosition).mjava,0,0,3,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRemoteDataResponse#isDigestResponse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#next().mjava,0,2,1,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeDropAggregateMutation(KeyspaceMetadata,UDAggregate,long).mjava,0,0,4,3,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#calculateSchemaDigest().mjava,0,1,11,0,2,0.0,3,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#handlePreSliceData().mjava,0,1,6,0,1,0.6428571343421936,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#getNameAsString().mjava,0,9,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationTask#runMayThrow().mjava,0,0,8,0,2,0.09090909361839294,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#snapshot(String,String).mjava,0,0,3,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputCQLPageRowSize(Configuration,String).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#MetricName(String,String,String,String,String).mjava,0,0,0,5,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#CollectionValueIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#reBuffer().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\AsyncOneResponse#response(MessageIn[T]).mjava,0,0,1,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewBuilder#ViewBuilder(ColumnFamilyStore,View).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#rowCount().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#AbstractReadExecutor(Keyspace,ReadCommand,ConsistencyLevel,List[InetAddress]).mjava,0,0,6,4,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#decompose(int,Object).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#DeleteStatement(int,CFMetaData,Operations,StatementRestrictions,Conditions,Attributes).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDSerializer#serializedSize(UUID,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setCoreValidationThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.AlwaysSpeculatingReadExecutor#executeAsync().mjava,0,0,8,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#applyImplicitDefaults(org.apache.cassandra.thrift.CfDef).mjava,0,0,30,1,0,0.06896551698446274,1536,11,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCacheMetric(String,String).mjava,0,0,4,2,0,0.0,11,1,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#finish(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String,boolean).mjava,0,0,3,3,1,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#deleteFilesForRecordsOfType(Type).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPage(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#replayFailedBatches().mjava,0,0,17,0,8,0.2380952388048172,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#incrCounter(String,String,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#makeIndexClustering(ByteBuffer,Clustering).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#RangeClient(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateUserType(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#uncompressedChecksumType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#allocateDirectAligned(int).mjava,0,0,8,1,5,0.15789473056793213,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager.Role#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection#WithFieldSelection(Selectable,ColumnIdentifier).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#LegacyDeletionInfo(MutableDeletionInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#createBuffer(CommitLog).mjava,0,0,5,1,1,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#parseArgs(String[]).mjava,0,0,17,1,5,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Locks#monitorEnterUnsafe(Object).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#invalidate().mjava,0,1,7,0,1,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#finished().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#getOutput(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#compareTo(RoleResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getFileMessages().mjava,0,1,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#resetUnsafe(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#acquireLockFor(ByteBuffer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#clone(Slice.Bound,AbstractAllocator).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableOfflineRelevel.Relevel#Relevel(Set[SSTableReader]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyJoined(InetAddress).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#filter(UnfilteredRowIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#skip(DataInputPlus,Version).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#ExpiringLivenessInfo(long,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.ColumnDataReducer#onKeyChange().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifyDeleting(SSTableReader).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#path().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CallbackInfo#shouldHint().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#AlterKeyspaceStatement(String,KeyspaceAttributes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#resultSetBuilder(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCreationTimeFor(Component).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#headerLength().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage#createMessageOut().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#addTransferFile(Ref[SSTableReader],long,List[Pair[Long,Long]],long).mjava,0,0,7,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getCompactionAwareWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#withNewViewPrimaryKey(java.util.Set[ColumnIdentifier]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#getVersion().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#setNewLocalCompactionStrategy(CompactionParams).mjava,0,0,6,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#doPostCleanup(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#write(Memory,long,long).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#getString(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getValidColumnFamilies(boolean,boolean,String,String...).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#mergeAll(Iterable[V],int).mjava,0,0,5,2,2,0.2777777910232544,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\LockedDynamicList#get(int).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#appliesToStaticColumns().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#lastIndexOf(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#ResultSetBuilder(boolean).mjava,0,0,7,1,0,0.09090909361839294,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\GrantRoleStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#startDispatch().mjava,0,1,2,0,1,0.2857142984867096,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#nextIsStatic().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#asNativeFunction().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#allocate(int,int,int).mjava,0,0,4,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#rescheduleFailedDeletions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Literal#prepare(String,ColumnSpecification).mjava,0,0,8,2,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#containsStaticColumns().mjava,0,2,4,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getLong(long).mjava,0,0,3,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#getCompactionController(Set[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AbstractIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#getDeprecatedCrcCheckChance(Map[String,String]).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#isAggregate().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\UnauthorizedException#UnauthorizedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListUsersStatement#formatResults(List[RoleResource]).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#Dispatcher().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#withSwapped(KeyspaceParams).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Marker#bind(QueryOptions).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#StreamPlan(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxCounter#JmxCounter(Counter,ObjectName).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportMaxFrameSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculatingReadExecutor#executeAsync().mjava,0,0,15,0,1,0.46666666865348816,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger#ThriftResultsMerger(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#exec(ProcessBuilder).mjava,0,0,14,1,5,0.0,5,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getSampleIndexesForRanges(IndexSummary,Collection[Range[Token]]).mjava,0,0,10,2,5,0.24137930572032928,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#addNotExist(Clustering).mjava,0,0,1,1,1,0.09090909361839294,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getOutputCql(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPartitionerName().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMinTTL().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#redistributeSummaries().mjava,0,0,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#createSSTableAndMinTimestampPairs(Iterable[SSTableReader]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#fromIndexTargets(CFMetaData,List[IndexTarget],String,Kind,Map[String,String]).mjava,0,0,6,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#cassandraTriggerDir().mjava,0,1,7,0,2,0.0,4,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.CustomReplayFilter#filter(Mutation).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause.Builder#build().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getOperationMode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getPath().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#toMultiColumnRestriction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#hintMutation(Mutation).mjava,0,0,16,1,5,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#cellsInLegacyOrder(CFMetaData,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#SystemOutput(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalHints().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#fromJSONObject(Object).mjava,0,0,6,1,0,0.0,4,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#checkAccess(ClientState).mjava,0,0,6,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getInt(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#trueSnapshotsSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getStoredPreparedStatement(String,String,boolean).mjava,0,0,5,3,4,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamException#StreamException(StreamState,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toInternalFilter(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,11,3,3,0.04878048598766327,4,4,26,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#CounterMutation(Mutation,ConsistencyLevel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#loadSaved().mjava,0,0,47,0,15,0.1428571492433548,158,10,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#iterator().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Serializer#serialize(RowFilter,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getPosition(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#signal().mjava,0,2,3,0,1,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.NativeRingCache#getEndpoints(TokenRange).mjava,0,0,4,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCounterCacheKeysToSave().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getTokenBound(Bound,QueryOptions,IPartitioner).mjava,0,0,7,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#checkpoint(Throwable).mjava,0,0,21,1,2,0.4117647111415863,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_higherIndex(Object[],Comparator[#-super-V],V).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#Mutation(PartitionUpdate).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#writeSnapshotManifest(JSONArray,String).mjava,0,0,9,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#digestFor(ChecksumType).mjava,0,0,0,1,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#append(LogRecord).mjava,0,0,4,1,1,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#BasePartitions(I).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Tidier#tidy().mjava,0,0,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#grantPermissionsToCreator(QueryState).mjava,0,0,14,1,3,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#isSorted().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#computeNext().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#serialize(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#submitHint(Mutation,Collection[InetAddress],AbstractWriteResponseHandler[IMutation]).mjava,0,0,8,3,1,0.06666667014360428,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#checkOutputSpecs(Configuration).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#transferHints(Supplier[UUID]).mjava,0,0,8,1,2,0.125,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableMetadataViewer#printHistograms(StatsMetadata,PrintStream).mjava,0,0,7,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#isRepaired().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#receiveTiming(InetAddress,long).mjava,0,0,3,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#getSliceInternal(String,ByteBuffer,ColumnParent,int,SlicePredicate,ConsistencyLevel,ClientState).mjava,0,0,3,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionDetails#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#serializedSize(MerkleTree,int).mjava,0,0,8,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isOnToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterRoleStatement#execute(ClientState).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processStatement(CQLStatement,QueryState,QueryOptions).mjava,0,0,6,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputStreamPlus#newDefaultChannel().mjava,0,1,21,0,5,0.0,12,4,28,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#isCallableWrtNullable(List[ByteBuffer]).mjava,0,0,4,1,0,0.0,4,3,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.Marker#prepareAndCollectMarkers(CFMetaData,Collection[ColumnDefinition],VariableSpecifications).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#length().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#announceMigration(boolean).mjava,0,0,8,1,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#open(File).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubCounter(CFMetaData,LegacyLayout.LegacyCell).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[K,V]_getMap(int,TypeToken[K],TypeToken[V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getInt(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableBufferAllocator#allocator(OpOrder.Group).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#referencesUserType(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#fullPartitionDelete(CFMetaData,DecoratedKey,long,int).mjava,0,0,1,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#referencesUserType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler.BatchlogCleanup#BatchlogCleanup(int,BatchlogCleanupCallback).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithConfirm(File,File).mjava,0,0,12,2,0,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#cancel(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation.MutationSerializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#txnProxy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setNativeTransportMaxConcurrentConnectionsPerIp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#RolesCache(IRoleManager).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\WindowsTimer#endTimerPeriod(int).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#getFormat().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#IndexWriter(long,SequentialWriter).mjava,0,0,12,2,0,0.05000000074505806,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cloneAndReplace(DecoratedKey,OpenReason,IndexSummary).mjava,0,0,6,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getTimestamp(long).mjava,0,0,4,1,3,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#getAllReplicationOptions().mjava,0,4,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#start().mjava,0,2,11,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#build().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategyOptions#validateOptions(Map[String,String],Map[String,String]).mjava,0,0,19,2,4,0.0,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedNamesCommandSize(SinglePartitionReadCommand).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendRRWithFailure(MessageOut,InetAddress,IAsyncCallbackWithFailure).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#free(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serialize(ReadCommand,DataOutputPlus,int).mjava,0,0,19,3,2,0.05882352963089943,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#serialize(BigDecimal).mjava,0,0,7,1,4,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#descendingSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#rename(Descriptor,Descriptor,Set[Component]).mjava,0,0,11,3,0,0.25,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#SelectionWithProcessing(CFMetaData,List[ColumnDefinition],SelectionColumnMapping,SelectorFactories).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeSlices(DataOutputPlus,Slices,boolean,boolean,CFMetaData).mjava,0,0,8,5,0,0.11764705926179886,5,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#doInsert(ConsistencyLevel,List[#-extends-IMutation],boolean).mjava,0,0,11,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredPartitionIterator#EmptyUnfilteredPartitionIterator(CFMetaData,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#channelRead0(ChannelHandlerContext,Request).mjava,0,0,28,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V]_of(Comparator[#-super-V],V).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#addColumnOrSuperColumn(List[LegacyLayout.LegacyCell],CFMetaData,ColumnOrSuperColumn,int).mjava,0,0,9,4,0,0.03703703731298447,8,3,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftClientState#getQueryState().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#calculatePageSize(ColumnFamilyStore).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceFunctionDrop(UDFunction,boolean).mjava,0,0,9,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.Builder#add(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RepairException#RepairException(RepairJobDesc,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#buildSummary(boolean,SegmentedFile.Builder,SegmentedFile.Builder,boolean,int).mjava,0,0,21,5,8,0.07894736528396606,72,7,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Serializer#serialize(DataLimits,DataOutputPlus,int).mjava,0,0,12,3,3,0.0,16,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#closeBound(RangeTombstone).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#select(Function[View,Iterable[SSTableReader]]).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputCql(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AsciiSerializer#AsciiSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.SecureInitializer#initChannel(Channel).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#describeLocalRing(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#apply(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#CustomTThreadPoolServer(TThreadPoolServer.Args,ExecutorService).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner.BigIntegerToken#getHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#initCounterCache().mjava,0,1,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions.Builder#build().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#validate(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#create(ColumnFamilyStore,String,long,long,SerializationHeader).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#newThread(Runnable).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getResetInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager.PagersIterator#computeNext().mjava,0,0,8,0,1,0.0714285746216774,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#shutdownBlocking().mjava,0,0,2,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#testAssignment(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#getTableMetadata(String).mjava,0,0,6,1,2,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#defaultTimeToLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getColumns().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#adjustForCrossDatacenterClashes(TokenMetadata,StrategyAdapter,Collection[Token]).mjava,0,0,8,3,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#close(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#addConditions(Clustering,Collection[ColumnCondition],QueryOptions).mjava,0,0,3,3,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#Custom(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object,Object).mjava,0,0,2,3,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#Merger(int,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnOrSuperColumn(CFMetaData,ColumnOrSuperColumn).mjava,0,0,16,2,2,0.0,2592,13,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc.RepairJobDescSerializer#serialize(RepairJobDesc,DataOutputPlus,int).mjava,0,0,9,3,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#merge(ByteBuffer,ByteBuffer).mjava,0,0,32,2,9,0.02380952425301075,15600,22,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.DropPageCache#DropPageCache(SegmentedFile,long,SegmentedFile,long,Runnable).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#announceMigration(boolean).mjava,0,0,14,1,1,0.0,33,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#updateColumnSetPerRow(long).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_build(Iterable[K],UpdateFunction[K,V]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#toString(byte[]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(File,String,boolean).mjava,0,0,36,3,11,0.18867924809455872,72,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#fireProgressEvent(String,ProgressEvent).mjava,0,0,1,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#ClusteringComparator(List[AbstractType[#]]).mjava,0,0,5,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StatusBackup#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#TCustomNonblockingServerSocket(InetSocketAddress,boolean,Integer,Integer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#quarantineEndpoint(InetAddress,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateSchemaVersion(UUID).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#indexNotFound(IndexName,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCachedPartition(DecoratedKey).mjava,0,0,2,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String).mjava,0,0,5,1,3,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#DataInputBuffer(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#alterRole(AuthenticatedUser,RoleResource,RoleOptions).mjava,0,0,13,3,1,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getRole(String).mjava,0,0,3,1,0,0.25,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Literal#validateAssignableTo(String,ColumnSpecification).mjava,0,0,7,2,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#listener().mjava,0,1,11,0,5,0.1818181872367859,8,3,30,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask.AnticompactionCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SimpleSelection#SimpleSelection(CFMetaData,List[ColumnDefinition],SelectionColumnMapping,boolean).mjava,0,0,0,4,0,1.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#create(File,RateLimiter,UUID,UUID,AtomicBoolean).mjava,0,0,4,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#builder().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#serializedSize(ValidationRequest,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#joinTokenRing(int).mjava,0,0,89,1,6,0.13750000298023224,1168,20,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#fixOptionalSliceParameters(org.apache.cassandra.thrift.ColumnSlice).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getSliceCommands(QueryOptions,DataLimits,int).mjava,0,0,10,3,5,0.11764705926179886,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCurrentGenerationNumber().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMaxThreads().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serializeSubset(Collection[ColumnDefinition],Columns,DataOutputPlus).mjava,0,0,6,3,2,0.75,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeString(String,ByteBuf).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#install().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ByteSerializer#serialize(Byte).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablePath(File,Version,SSTableFormat.Type).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#maybeExecuteImmediately(Runnable).mjava,0,0,6,1,1,0.15789473056793213,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#keyIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#tablesAndViews().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\LockedDynamicList#LockedDynamicList(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#applyToStatic(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isContains().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#newUpdateTransaction(PartitionUpdate,OpOrder.Group,int).mjava,0,0,10,3,1,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(CFMetaData,OperationType,long,long,UUID).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#ClusteringIndexSliceFilter(Slices,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\TokenSerializer#serialize(IPartitioner,Collection[Token],DataOutput).mjava,0,0,6,3,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.Type#Type(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#build(RowIterator,DeletionInfo,boolean,int).mjava,0,0,13,4,8,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputCluster(String[],Configuration).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#hex(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#isNativeTransportRunning().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#list().mjava,0,2,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#metadata().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#SerializingCache(long,Weigher[RefCountedMemory],ISerializer[V]).mjava,0,0,6,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#startup().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#SerializationHeader(boolean,CFMetaData,PartitionColumns,EncodingStats).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#EstimatedHistogramReservoir().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#createInstance(IndexMetadata).mjava,0,0,7,1,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setBytes(long,ByteBuffer).mjava,0,0,13,2,0,0.0,16,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Extend#moreContents().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[T]_getList(String,AbstractType[T]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#connect(boolean).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#Keyspace(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\ScalarFunctionSelector#addInput(int,ResultSetBuilder).mjava,0,0,3,2,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#hashCode().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#counter(MetricName,MetricName).mjava,0,24,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.CustomConstructor#createDefaultSet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#rebuildSecondaryIndex(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#getBytesRead().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyPartition(RowIterator,boolean,boolean,int).mjava,0,0,12,4,3,0.1111111119389534,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#isWellFormed().mjava,0,0,11,0,1,0.0,27,7,17,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#roundUp(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory.MemoryTidy#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#Scrubber(ColumnFamilyStore,LifecycleTransaction,boolean,boolean,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo.Serializer#serializedSize(IndexInfo).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropUserType(UserType).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#AlterViewStatement(CFName,TableAttributes).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#getQueryOrIdList().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#freeze().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#isWriting().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.DelayedColumnValue#DelayedColumnValue(PreparedMarker,ColumnDefinition).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#CompactTables().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#completeTree().mjava,0,1,4,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getAllEndpoints().mjava,0,4,6,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getAndAppendComparator(int,ByteBuffer,StringBuilder).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#execute(DecoratedKey,UpdateParameters).mjava,0,0,16,2,6,0.06896551698446274,80,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#ColumnFamilyStore(Keyspace,String,int,CFMetaData,Directories,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#create().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.GlobalPool#allocateMoreChunks().mjava,0,1,9,0,3,0.03999999910593033,15,5,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serialize(VersionedValue,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_ceil(Object[],Comparator[#-super-V],V).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#stats().mjava,0,0,3,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Setter#execute(DecoratedKey,UpdateParameters).mjava,0,0,4,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#ChecksummedDataInput(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#computeNext().mjava,0,0,7,0,1,0.20000000298023224,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnParent(CFMetaData,ColumnParent).mjava,0,0,3,2,0,0.0,6,3,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#build().mjava,0,0,10,0,3,0.0,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Decoder#Decoder(Connection.Factory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo.Direction#fromByte(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#constructKeepingOriginals(LifecycleTransaction,boolean,long,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#getFunctions().mjava,0,0,7,0,1,0.0,12,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncBatchWindow().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\AbstractAllocator.CloningBTreeRowBuilder#newRow(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#update(LivenessInfo).mjava,0,0,8,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SingleRangeResponse#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#forceNewerGeneration().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#register(IEndpointLifecycleSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(ComplexColumnData).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(CFMetaData,ColumnDefinition).mjava,0,0,16,2,4,0.40740740299224854,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#setupDefaultRole().mjava,0,1,8,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy.Cleanup#tidy().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateTypeMutation(KeyspaceMetadata,UserType,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#restoreState(DecoratedKey,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SnapshotDeletingTask#addFailedSnapshot(File).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\SplittingSizeTieredCompactionWriter#switchCompactionLocation(Directories.DataDirectory).mjava,0,0,9,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int,int).mjava,0,1,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#asCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[K,V]_getMap(String,Class[K],Class[V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Bound#compareWithOperator(Operator,AbstractType[#],ByteBuffer,ByteBuffer).mjava,0,0,2,4,0,0.0476190485060215,20,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL.Raw#prepare(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#exists().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#available().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#filterForEachQuorum(Keyspace,List[InetAddress],ReadRepairDecision).mjava,0,0,19,3,5,0.043478261679410934,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#withGeneration(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#language().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#prepareKeyspace(ClientState).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#allViewsCfs().mjava,0,4,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#add(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#extractComponent(ByteBuffer,int).mjava,0,0,5,2,2,0.0714285746216774,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#mapAppliesTo(MapType,Iterator[Cell],Map[ByteBuffer,ByteBuffer],Operator).mjava,0,0,18,4,4,0.15789473056793213,18,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isValueCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#trace_next_query().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isCounter().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.Builder#add(UserType...).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.SimpleInBound#appliesTo(Row).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getDroppedMessages().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getBatchlogEndpoints(String,ConsistencyLevel).mjava,0,0,13,2,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\RemoveNode#execute(NodeProbe).mjava,0,0,6,1,0,0.0,11,1,11,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#invoke(Method,Object,Object...).mjava,0,0,2,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#serializeSelection(DataOutputPlus,int).mjava,0,0,7,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#getSerialConsistency().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#traceRepair(String,Object...).mjava,0,0,2,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedMarker#bind(QueryOptions).mjava,0,0,5,1,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateTokens(Collection[Token]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#setSSTableFormatType(SSTableFormat.Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#exclusiveEndOf(ByteBuffer...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#digest(MessageDigest).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#serialize(MerkleTree,DataOutputPlus,int).mjava,0,0,9,3,0,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#includes(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#getSnapshot().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\ReceivedMessage#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getPaxosParticipants(CFMetaData,DecoratedKey,ConsistencyLevel).mjava,0,0,24,3,8,0.21739129722118378,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#ErrorMessage(TransportException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#startRPCServer().mjava,0,0,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeForQuery#RangeForQuery(AbstractBounds[PartitionPosition],List[InetAddress],List[InetAddress]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropViewStatement#announceMigration(boolean).mjava,0,0,3,1,0,1.307692289352417,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#removeNotificationListener(NotificationListener,NotificationFilter,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.Flush#run().mjava,0,0,18,0,2,0.2142857164144516,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#CqlBulkRecordWriter(TaskAttemptContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#getClockAndCountOf(ByteBuffer,CounterId).mjava,0,0,4,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\DefaultConnectionFactory#createConnection(InetAddress).mjava,0,0,8,1,3,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#allocate(Mutation,int).mjava,0,0,3,2,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTypeTimestamp(String,String).mjava,0,0,14,2,6,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#addMerkleTree(int,Range[Token]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDFromMicros(long).mjava,0,0,1,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getDirtyCFIDs().mjava,0,3,12,0,4,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#makeClusteringIndexFilter(QueryOptions).mjava,0,0,7,1,2,0.5,6,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#applyToPartition(UnfilteredRowIterator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#getPendingTasks().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ExceptionCode#ExceptionCode(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#throwDuringPrepare(boolean).mjava,0,0,0,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLiveNaturalEndpoints(Keyspace,RingPosition).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#create(UnfilteredRowIterator,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readUnsignedVInt().mjava,0,3,10,0,5,0.2777777910232544,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.TraceSessionFutureTask#TraceSessionFutureTask(Runnable,T,TraceState).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#AsyncRepairCallback(DataResolver,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#newJobContext(Configuration,JobID).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#hasNext().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#containsWritetimeSelectorFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeUTF(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#stop().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#getCmdLineOptions().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#newContainsRestriction(CFMetaData,VariableSpecifications,boolean).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#isEnabled(Map[String,String]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Status#execute(NodeProbe).mjava,0,0,42,1,9,0.056603774428367615,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#allowNewUpdates().mjava,0,1,1,0,0,0.4285714328289032,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#markBlocking().mjava,0,1,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#fromUnixTimestamp(long,long).mjava,0,3,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#sessionFailed().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getCount().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DefaultValue#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,String,String).mjava,0,0,6,3,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosCommit(Commit).mjava,0,0,9,1,1,0.1818181872367859,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#live(CFMetaData,ColumnDefinition,long,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#position().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#offline(OperationType).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#toString(CFMetaData).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#shutdown().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#DropAggregateStatement(FunctionName,List[CQL3Type.Raw],boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#update(Object).mjava,0,0,20,1,9,0.2804878056049347,40,13,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#params(TableParams).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropAggregateStatement#prepareKeyspace(ClientState).mjava,0,0,5,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getStartToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#getFilePointer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#forceStaticInitialization().mjava,0,2,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#copyChildren(int).mjava,0,0,2,1,1,0.09090909361839294,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#histogramOfRowSizePerLeaf().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.TraceSessionFutureTask#TraceSessionFutureTask(Callable[T],TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#dropSSTablesIfInvalid(Throwable).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits#SuperColumnCountingLimits(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#fsyncWriter().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#next(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#serialize(ReadCommand,DataOutputPlus,int).mjava,0,0,26,3,0,0.06666667014360428,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toLegacyDeletion(CFMetaData,ByteBuffer,long,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#setLastProcessedMessageAt(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#RawStatement(CFName,Parameters,List[RawSelector],WhereClause,Term.Raw).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateUserType(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentReaders().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ColumnParent,Iterable[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Response#getWarnings().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#create().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createComplexTombstone(TemporalRow,DecoratedKey,ColumnDefinition,DeletionTime,TemporalRow.Resolver,int).mjava,0,0,6,6,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getAllSSTables().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addRegularColumn(ColumnIdentifier,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSolinger(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UTF8Serializer#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TypeSerializer#toCQLLiteral(ByteBuffer,StringBuilder).mjava,0,0,5,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#DropIndexStatement(IndexName,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#trackNew(SSTable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#handleCorruptSSTable(CorruptSSTableException).mjava,0,0,5,1,0,0.0,8,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#validateForIndexing().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher.Callback#await().mjava,0,1,4,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getNativeTransportMaxConcurrentConnections().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter.FilterNotIndexed#isDoneForPartition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#getLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#pendingRangeChanges(InetAddress).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.BaseTokenInfo#prevInRing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#advance().mjava,0,0,3,0,1,0.875,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#builder(DeletionTime,ClusteringComparator,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#submitRepairSession(UUID,Collection[Range[Token]],String,RepairParallelism,Set[InetAddress],long,ListeningExecutorService,String...).mjava,0,0,13,8,1,0.2380952388048172,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#hashCode().mjava,0,0,19,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#getReplicationFactor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#AbstractJmxClient(String,Integer,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Element#comparisonPath().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheSizeInMB().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#fromJSONObject(Object).mjava,0,0,5,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#addDroppedColumns(CFMetaData,AbstractType[#],Map[String,Long]).mjava,0,0,12,3,6,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#UTF8Type().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLocations().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#equalsWithoutName(IndexMetadata).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#response(MessageIn[T]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#testAssignment(String,ColumnSpecification).mjava,0,0,5,2,1,0.20000000298023224,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#isHintFileName(Path).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serialize(BloomFilter,DataOutputPlus).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#fullPartitionDelete(CFMetaData,ByteBuffer,long,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#relationsToWhereClause(List[Relation]).mjava,0,0,30,1,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo.Serializer#Serializer(CFMetaData,Version,SerializationHeader).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#openIsInclusive(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#writeChecksum().mjava,0,1,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#disableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#reBuffer().mjava,0,0,5,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#avoidReservedValues(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validate(ClientState).mjava,0,0,34,1,5,0.13725490868091583,4096,13,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithLength(byte[],DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#getPackageName().mjava,0,0,3,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#getClustering(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#getSocket().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.MovingAverageCoalescingStrategy#logSample(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ConnectionLimitHandler#channelActive(ChannelHandlerContext).mjava,0,0,14,1,6,0.07894736528396606,4,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#SharedCloseableImpl(RefCounted.Tidy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#getIndex(ColumnFamilyStore).mjava,0,0,6,1,1,0.4166666567325592,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#ViewDefinition(String,String,UUID,String,boolean,SelectStatement.RawStatement,String,CFMetaData).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CQLFilter.IsSatisfiedFilter#applyToRow(Row).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_invokeAll(Collection[#-extends-Callable[T]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy.ScannerList#ScannerList(List[ISSTableScanner]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#recordLatency(TableMetrics,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Mx4jTool#maybeLoad().mjava,0,1,22,0,7,0.0,1,0,22,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getInt(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#freeze().mjava,0,0,4,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask#run().mjava,0,1,10,0,2,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#deserialize(DataInputPlus,int,CFMetaData,SerializationHelper.Flag,Header).mjava,0,0,6,5,3,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#meter(MetricName).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#rowHash(UnfilteredRowIterator).mjava,0,0,5,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#columnFilter().mjava,0,53,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.ViewWriteMetricsWrapped#ViewWriteMetricsWrapped(AbstractWriteResponseHandler[IMutation],int,BatchlogCleanup).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#thriftToString(TBase).mjava,0,0,2,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#clusteringOrder().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#applyFromCommitLog(Mutation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\PartitionKeyIndex#isStale(Row,ByteBuffer,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#size().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#digest(MessageDigest).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#csMetadataEndpoint().mjava,0,1,3,0,1,0.0,2,1,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#deserialize(DataInputPlus,ColumnFamilyStore).mjava,0,0,16,2,6,0.3181818127632141,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\ProgressInfoCompositeData#fromCompositeData(CompositeData).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#attachTo(BaseRows).mjava,0,0,5,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#PartitionUpdate(CFMetaData,DecoratedKey,PartitionColumns,MutableDeletionInfo,int,boolean).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#areAllNodesAtLeast30().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#startDeletionTime().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#hash(Collection[InetAddress]).mjava,0,0,4,1,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#allocateOversize(int).mjava,0,0,3,1,2,0.25,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator.Region#allocate(int).mjava,0,0,7,1,1,0.3076923191547394,5,3,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftFilter.IsSatisfiedThriftFilter#applyToPartition(UnfilteredRowIterator).mjava,0,0,10,1,2,0.5,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#getInterned(String,boolean).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#addLeavingEndpoint(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#clear().mjava,0,3,2,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.SimpleInBound#SimpleInBound(ColumnCondition,QueryOptions).mjava,0,0,5,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestResolver#isDataPresent().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#root().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#existingIndexNames(String).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#register().mjava,0,10,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.CellReducer#CellReducer(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#isCompatibleWith(AbstractType[#]).mjava,0,0,13,1,1,0.1428571492433548,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getLiveMembers().mjava,0,8,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#columnOffset(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.Close#onPartitionClose().mjava,0,0,2,0,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_floor(Object[],Comparator[#-super-V],V).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#compactionFromRow(UntypedResultSet.Row).mjava,0,0,16,1,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata.Codec#encodedSize(ResultMetadata,int).mjava,0,0,16,2,5,0.0,14,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#loadConfig().mjava,0,2,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#create(List[Map[String,ByteBuffer]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#write(Object,List[ByteBuffer]).mjava,0,0,4,2,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#estimateTotalResults(ColumnFamilyStore).mjava,0,0,4,1,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#BTreeDescRange(BTreeRange[V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#logFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#add(SharedCloseableImpl).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#incrementDroppedMessages(DroppedMessages,boolean).mjava,0,0,3,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies#maybeSleep(int,long,long,Parker).mjava,0,0,1,4,1,0.4444444477558136,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#setKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#buffer().mjava,0,8,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get98thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_minRight(Boundary[T],Boundary[T]).mjava,0,0,1,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSolinger(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#CollectionType(ComparisonType,Kind).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#buildWithChannel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#onKeyChange().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#log(Level,long,Object...).mjava,0,0,4,3,0,0.0,24,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#DynamicEndpointSnitch(IEndpointSnitch,String).mjava,0,0,5,2,2,0.08695652335882187,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#rowsPerPartitionToCache().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#toString(CFMetaData).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#defaultTombstoneDropTimeHistogram().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getUUID(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#copy(long).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress,Map[InetAddress,Double]).mjava,0,0,6,4,2,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#includeRow(Object...).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#QueryMessage(String,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRangeSliceReplySerializer#serializedSize(ReadResponse,int).mjava,0,0,8,2,1,0.11764705926179886,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#intersection(List[InetAddress],List[InetAddress]).mjava,0,0,1,2,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#buildBoundWith(List[ByteBuffer],boolean,boolean).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#hasColumnFamilyStore(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateFunction(UDFunction).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setReadRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#RepairRunner(PrintStream,StorageServiceMBean,String,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#keyRange().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#fromJSONObject(Object).mjava,0,0,7,1,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#maybeGossipToUnreachableMember(MessageOut[GossipDigestSyn]).mjava,0,0,5,1,4,1.600000023841858,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableMetricNameFactory#TableMetricNameFactory(ColumnFamilyStore,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#isSufficientLiveNodes(Keyspace,Iterable[InetAddress]).mjava,0,0,11,2,0,0.08695652335882187,13,3,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#get(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.DelayedColumnValue#containsBindMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(RandomAccessFile,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#onSuccess(StreamState).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator#SSTableIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry,ColumnFilter,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setIndexAccessMode(Config.DiskAccessMode).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#stats().mjava,0,0,3,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#keysFromString(String).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.CustomConstructor#createDefaultList(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#maybeInit().mjava,0,4,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#update(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#copy(Object,long,Object,long,long).mjava,0,0,1,5,1,0.1111111119389534,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats.OptionFilter#isColumnFamilyIncluded(String,String).mjava,0,0,6,2,1,0.4545454680919647,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getScanner().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#dumpInterArrivalTimes().mjava,0,0,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#columns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getCurrentKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getMovingEndpoints().mjava,0,2,5,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.RawDelayedColumnValue#prepare(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#addColumnForOrdering(ColumnDefinition).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrateLegacyHints(UUID,ByteBuffer).mjava,0,0,4,2,2,0.30000001192092896,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#bootstrapInProgress().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestMismatchException#DigestMismatchException(DecoratedKey,ByteBuffer,ByteBuffer).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData.Builder#newColumn(ColumnDefinition).mjava,0,0,4,1,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SimpleSelection#isWildcard().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.TransactionTidier#run().mjava,0,1,15,0,2,0.043478261679410934,12,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Adder#Adder(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestValidationException#RequestValidationException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#withSwapped(Views).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#tombstone(CFMetaData,ByteBuffer,ByteBuffer,long,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#bufferSize(Descriptor,IndexSummary).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#ContainsRestriction(ColumnDefinition,Term,Term).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Addition#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#appendRange(StringBuilder,long[],int).mjava,0,0,8,3,0,0.125,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#getAllocator().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#validate(ClientState).mjava,0,0,0,1,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.TreeRangeIterator#TreeRangeIterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#doMergeWith(Restriction).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#finish().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#splitHelper(Hashable,Token,Token,byte,Token).mjava,0,0,10,5,2,0.3888888955116272,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#removeInvalidPreparedStatements(String,String).mjava,0,0,9,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#createNonInRelation(List[ColumnIdentifier.Raw],Operator,Term.MultiColumnRaw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputColumnFamily(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyKeySlices(PartitionIterator,ColumnParent,int).mjava,0,0,7,3,2,0.0,2,1,10,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#unsharedHeapSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#prepare().mjava,0,0,19,0,5,0.0,36,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#evaluateResponse(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#serializedSize().mjava,0,0,9,0,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#inclusiveOpen(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_invokeAll(Collection[#-extends-Callable[T]],long,TimeUnit).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.ThreadIdAndCpuTime#ThreadIdAndCpuTime().mjava,0,0,1,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#deserialize30(DataInputPlus,int,SerializationHelper.Flag).mjava,0,0,16,3,6,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#unsortedBuilder(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isFrozenCollection().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#forPaging(int,ByteBuffer,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#size().mjava,0,3,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#forShortReadRetry(int).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#ListSerializer(TypeSerializer[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculatingReadExecutor#maybeTryAdditionalReplicas().mjava,0,0,15,0,3,0.1111111119389534,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#affectedColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#addLookupEntry(IResource,RoleResource).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getSnapshotDirectory(File,String).mjava,0,0,6,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options#parseArgs(String[]).mjava,0,0,17,1,8,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithPerStatementVariables#prepareStatement(int,List[ColumnSpecification]).mjava,0,0,5,2,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#split(ByteBuffer).mjava,0,0,7,1,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#mergeTo(Columns).mjava,0,0,4,1,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#getWaiting().mjava,0,0,5,0,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#payloadSize(int).mjava,0,0,2,1,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.SingletonPartitionIterator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#gossiperStarting().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#prepare(String,String).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#toCompositeData(UUID,SessionInfo).mjava,0,0,22,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.EQRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#close(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\SSTableIntervalTree#empty().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#fromHex(String).mjava,0,0,3,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getPendingMessages().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#next().mjava,0,0,4,0,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#isLastRecordValidWithType(Type).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#close().mjava,0,0,2,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getScanner(ColumnFilter,DataRange,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WriteResponse#createMessage().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommandVerbHandler#serializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairParallelism#RepairParallelism(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#JavaBasedUDFunction(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],AbstractType[#],boolean,String).mjava,0,0,57,6,24,0.0833333358168602,2100,11,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\EmptySerializer#deserialize(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#validate(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#beforeExecute(Thread,Runnable).mjava,0,0,1,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#resumeBootstrap().mjava,0,0,19,0,4,0.13953489065170288,2,1,27,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getSuccessor(Token).mjava,0,0,6,1,2,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#toString().mjava,0,0,2,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#hasIfNotExistCondition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#sharedCopy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#addComponents(Collection[Component]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamState#StreamState(UUID,String,Set[SessionInfo]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#readLegacyAtom(CFMetaData,DataInputPlus,boolean).mjava,0,0,8,3,2,0.2631579041481018,3,2,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#slice(Dir).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#hashCode().mjava,0,0,1,0,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#[C-extends-Comparable[#-super-C],D,I-extends-Interval[C,D]]_serializer(ISerializer[C],ISerializer[D],Constructor[I]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitLogSyncBatchWindow(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#put(long,Memory,long,long).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawType#supportsFreezing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onCreateFunction(String,String,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithValues#getValues(QueryOptions).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Validator#validate(Unfiltered).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#filter(UnfilteredPartitionIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#grow(int[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getEstimatedRemainingTasks().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter.NamesDeserializer#deserialize(DataInputPlus,int,CFMetaData,boolean).mjava,0,0,6,4,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch#createRemote(UUID,long,Collection[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,RepairOption).mjava,0,0,8,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#signal().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#delete(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#asRangeTombstone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamEvent#StreamEvent(Type,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#[T-extends-Enum[T]]_readEnumValue(Class[T],ByteBuf).mjava,0,0,5,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#compareTo(ColumnIdentifier).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#prepareStatement(int,List[ColumnSpecification]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#createTokenInfos(Map[Unit,UnitInfo[Unit]],GroupInfo).mjava,0,0,6,2,6,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#maybeLogLargePartitionWarning(DecoratedKey,long).mjava,0,0,5,2,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#deserialize(Version,DataInputPlus).mjava,0,0,7,2,6,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,51,3,15,0.06976744532585144,24,7,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#pause().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#ReversedType(AbstractType[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#without(FunctionName,List[AbstractType[#]]).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#isInclusive(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#applyToStatic(Row).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(KsDef,CFMetaData...).mjava,0,0,8,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#mutateRepairedAt(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#MultiPartitionPager(SinglePartitionReadCommand.Group,PagingState,int).mjava,0,0,15,3,1,0.21052631735801697,16,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.DelayedColumnValue#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#switchMemtable(Memtable).mjava,0,0,6,1,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchTable(String,String,Types).mjava,0,0,23,3,13,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#SSTableRewriter(LifecycleTransaction,long,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#DateTieredCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,4,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#maybeBuild().mjava,0,5,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#rebuild(String).mjava,0,0,17,1,2,0.10810811072587967,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#onPartitionClose().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#getComplexIdx().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getScanners(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#ColumnFilter(boolean,CFMetaData,PartitionColumns,SortedSetMultimap[ColumnIdentifier,ColumnSubselection]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#id().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#[Unit]_getGroup(Unit,Map[Object,GroupInfo],ReplicationStrategy[Unit]).mjava,0,0,3,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#trace(String,Object).mjava,0,0,2,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#Builder(UnfilteredRowIterator,SequentialWriter,SerializationHeader,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#fetchPageInternal(int,ReadOrderGroup).mjava,0,0,8,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTracetypeQueryTTL().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#allData(IPartitioner,ClusteringIndexFilter).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#pauseDispatch().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#ClusteringComparator(AbstractType[#]...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#validate(ByteBuffer).mjava,0,0,12,1,3,0.15789473056793213,34,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#signal().mjava,0,0,2,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isSuper().mjava,0,44,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#DropTriggerStatement(CFName,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#findFirstComplexIdx(Object[]).mjava,0,0,6,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getThriftFramedTransportSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#ResultSet(ResultMetadata,List[List[ByteBuffer]]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#add(Row).mjava,0,0,16,1,1,0.2222222238779068,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.InstanceTidier#setup(SSTableReader,boolean).mjava,0,0,3,2,0,0.09090909361839294,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\SupportedMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#computeUnsignedVIntSize(long).mjava,0,0,1,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#onlyPurgeRepairedTombstones().mjava,0,5,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#getCassandraServer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#validate(ClientState).mjava,0,0,11,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#beginLocalSampling(String,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(InetAddress,WriteType,Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedLiteral#getRawTermForColumn(ColumnDefinition).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,5,3,5,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#headerOffset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#Chunk(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#skipShortLength(DataInputPlus).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#write(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onRemove(InetAddress).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#create(SelectStatement,QueryPager,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(AbstractType...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#initSocket().mjava,0,3,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#clone(ByteBuffer).mjava,0,0,13,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isNativeTransportRunning().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultList#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Slice#toString().mjava,0,0,7,0,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serializedSize(TruncateResponse,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#selectsAllPartition().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#processSilent(String,String...).mjava,0,0,4,2,1,0.0,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#create(String,long,long,SerializationHeader,LifecycleTransaction).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TFramedTransportFactory#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#[T]_getBuckets(Collection[Pair[T,Long]],long,int,long).mjava,0,0,23,4,5,0.0810810774564743,13,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#[T-extends-Number]_createTableGauge(String,Gauge[T]).mjava,0,0,4,2,1,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthChallenge#AuthChallenge(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeUUID(UUID,ByteBuf).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getLastFlushOffset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#getPrimaryRole().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getIntByByte(long).mjava,0,0,8,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#getCurrentState().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.SingleColumnComparator#compare(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\PauseHandoff#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#toCQLLiteral(ByteBuffer,int,StringBuilder).mjava,0,0,19,3,2,0.1304347813129425,3,4,34,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#getParent().mjava,0,0,2,0,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTimeout(MessagingService.Verb).mjava,0,0,6,1,0,0.0,20,1,20,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#TCustomServerSocket(ServerSocket,boolean,Integer,Integer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#submit(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#AbstractReplicationStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,1,4,0,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#getFilename().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary#toString().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StatusHandoff#execute(NodeProbe).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfStringMap(Map[String,String]).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getHintedHandoffThrottleInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#toCQLLiteral(ByteBuffer,StringBuilder).mjava,0,0,5,2,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#add(V).mjava,0,0,3,1,4,0.0,12,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#sendNextRequests().mjava,0,1,10,0,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#add(long).mjava,0,0,2,1,1,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#markCounterLocalToBeCleared().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAutoSnapshot().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#equals(Object).mjava,0,0,0,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#offerLast(HintsDescriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#createTableMetadata(String,Session,IPartitioner,boolean,Row,String,Types).mjava,0,0,12,7,8,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#terminationFuture().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommand#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#apply(PartitionIterator,Transformation[#-super-RowIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#includes(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#FunctionResource(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#getFunctions().mjava,0,2,4,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTimestamp(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyBound#getAsClustering(CFMetaData).mjava,0,0,5,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cloneAndReplace(DecoratedKey,OpenReason).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#appendAndSync(File,String...).mjava,0,0,5,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#toString().mjava,0,0,19,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#PropertyFileSnitch().mjava,0,0,5,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_orIn(Collection[T]...).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#isPreviouslyReturnedPartition(DecoratedKey).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isIN().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputCql(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#ceiling(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#serializedSize(ReadCommand,int).mjava,0,0,51,2,8,0.04444444552063942,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#AbstractCompositeType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#enableUserDefinedFunctions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,6,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#fullRange(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedLiteral#PreparedLiteral(Map[ColumnIdentifier,Term]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_prepared_cql3_query(int,List[ByteBuffer],ConsistencyLevel).mjava,0,0,20,3,2,0.027027027681469917,4,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#addCompressionRatio(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputPartitioner(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#toCQLString().mjava,0,2,14,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#countRow(Row).mjava,0,0,3,1,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getByte(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#execute(QueryState).mjava,0,0,17,1,2,0.0,48,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#free().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#execute(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getTotalBytes(Iterable[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.PartiallyFlushBufferPoolTask#PartiallyFlushBufferPoolTask(HintsBufferPool,Iterable[HintsStore]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTableCountPerLevel().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#TraceSessionWrapper(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#valuesAsClustering(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#skipStaticRow(DataInputPlus,SerializationHeader,SerializationHelper).mjava,0,0,7,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#doMergeWith(Restriction).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#ResultMetadata(EnumSet[Flag],List[ColumnSpecification],int,PagingState).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(String,boolean,Throwable).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Serializer#serializedSize(DataLimits,int).mjava,0,0,12,2,4,0.0,18,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#newAggregate().mjava,0,0,15,0,5,0.02222222276031971,6,3,28,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#getInterned(ByteBuffer,AbstractType[#]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#toString().mjava,0,0,24,0,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#getSimpleIdxAndIncrement().mjava,0,2,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#flagsToStrings(Set[Flag]).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#noRowMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredRowIterator#stats().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views.Builder#add(ViewDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#deserialize(DataInputPlus).mjava,0,0,3,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#trySkipCache(int,long,long,String).mjava,0,0,3,4,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\AbstractAllocator.CloningBTreeRowBuilder#addCell(Cell).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#add(int,V).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateCounterCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#truncate(String,String).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#sharedCopy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#throwIfFatal(Throwable).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Compressor#encode(ChannelHandlerContext,Frame,List[Object]).mjava,0,0,9,3,2,0.0625,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#deserialize(DataInputPlus,int).mjava,0,0,23,2,18,0.08695652335882187,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCasContentionTimeout().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#collectMarkerSpecification(VariableSpecifications).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#empty().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool#getCleaner(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#txnProxy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readPrimitiveSlowly(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#inclusiveClose(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#twoHourRate().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotDetailsTabularData#from(String,String,String,Map.Entry[String,Pair[Long,Long]],TabularDataSupport).mjava,0,0,5,5,2,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#clearState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#abort(Throwable).mjava,0,0,4,1,0,0.0476190485060215,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#updateDigest(MessageDigest).mjava,0,0,16,1,1,0.0,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#exciseStore(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger#maybeWrap(UnfilteredRowIterator,int).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#getCell(ColumnDefinition,CellPath).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeCellName(CFMetaData,ByteBuffer,boolean).mjava,0,0,21,3,4,0.2857142984867096,120,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#getLocalId().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.AddOrAlter#doAdd(UserType).mjava,0,0,15,1,3,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#cachingFromTrhfit(String).mjava,0,0,2,1,0,0.0,11,1,11,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getSSTableCountPerLevel().mjava,0,1,4,0,3,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\LongSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#closeDeletionTime(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#close().mjava,0,11,3,0,1,0.0476190485060215,7,5,14,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#open(String,Schema,boolean).mjava,0,0,3,3,1,0.1875,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#HintsWriter(File,HintsDescriptor,File,FileChannel,int,CRC32).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamState#hasFailedSession().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotWithoutFlush(String,Predicate[SSTableReader],boolean).mjava,0,0,15,3,3,0.043478261679410934,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#createResponse(UnfilteredPartitionIterator,ColumnFilter).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#AbstractSSTableSimpleWriter(File,CFMetaData,PartitionColumns).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#releaseBuffer().mjava,0,1,1,0,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportMaxConcurrentConnectionsPerIp().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#putIntByByte(long,int).mjava,0,0,8,2,0,0.0,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#totalRows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression.Serializer#serialize(Expression,DataOutputPlus,int).mjava,0,0,15,3,1,0.11764705926179886,48,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#acceptImpl().mjava,0,0,11,0,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#getName().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#getPath().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#write(Map[String,ByteBuffer],List[ByteBuffer]).mjava,0,0,17,2,4,0.1428571492433548,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#mark().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#DelayedValue(TupleType,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#relativeFilenameFor(Component).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onTopologyChange(InetAddress,Event.TopologyChange).mjava,0,0,6,2,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#isKeys().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#isBoundary().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDiskAccessMode(Config.DiskAccessMode).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEventNotifierSupport#addProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getScope().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setHintedHandoffEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#getExpressions().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover(File...).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#next().mjava,0,0,4,0,0,0.0,14,2,14,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getRoleFromTable(String,SelectStatement,Function[UntypedResultSet.Row,Role]).mjava,0,0,10,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(Cell).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#ChannelProxy(File).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createEphemeralSnapshotMarkerFile(String).mjava,0,0,13,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer.SingleDatacenterFilter#shouldInclude(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#hasExtendedFlags(Row).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#fetchedStaticColumns(SerializationHeader).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcAddress().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cloneWithRestoredStart(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#cacheKeys().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#createRole(AuthenticatedUser,RoleResource,RoleOptions).mjava,0,0,23,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#sizeofColumnsWithTypes(Map[ByteBuffer,AbstractType[#]]).mjava,0,0,7,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#maxKeyBound().mjava,0,13,2,0,0,1.399999976158142,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PermissionsManagementStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#hasOpenTombstones().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#BaseRows(I).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#SchemaAlteringStatement().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#isRoot().mjava,0,3,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#appendCQLWhereClause(StringBuilder).mjava,0,0,14,1,0,0.07692307978868484,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#isTimestampSet().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#isInclusive().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager.InternalPager#fetchPage(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#allocate(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#addReplica(File).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyPagedRangeCommandSerializer#serializedSize(ReadCommand,int).mjava,0,0,46,2,8,0.24137930572032928,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.NullOutputHandler#warn(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#canDoLocalRequest(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,7,3,2,0.0714285746216774,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Debug#register(Chunk).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#setIndexes(long,long,int,long,long[]).mjava,0,0,1,5,1,0.0,4,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createAllDirectories().mjava,0,2,7,0,0,0.0,16,4,19,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#logDistribution().mjava,0,2,8,0,0,0.0,4,3,7,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPhiConvictThreshold().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#localExpirationTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#create(File,HintsDescriptor).mjava,0,0,9,2,5,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#setConnectionFactory(StreamConnectionFactory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#requestExtraSync().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_keyspace(String).mjava,0,0,8,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategyOptions#DateTieredCompactionStrategyOptions(Map[String,String]).mjava,0,0,12,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchView(String,String,Types).mjava,0,0,19,3,13,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#columns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#disableAutoCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getLocalAddress().mjava,0,14,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#execute(String,ConsistencyLevel,QueryState,Object...).mjava,0,0,4,4,2,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage.Type#Type(int,int,Serializer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrateLegacyHintsInternal(UUID,Iterator[UntypedResultSet.Row],ByteBuffer).mjava,0,0,9,3,2,0.0,5,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options#getCmdLineOptions().mjava,0,1,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#getStatement(Logger,String,long,TimeUnit).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\LongSerializer#serialize(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#toString().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#add(Transformation).mjava,0,0,3,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#convertLegacyHint(UntypedResultSet.Row).mjava,0,0,8,1,5,0.10000000149011612,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#read().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch.ReplayWriteResponseHandler#totalBlockFor().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.Literal#prepareAndCollectMarkers(CFMetaData,Collection[ColumnDefinition],VariableSpecifications).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#runOnClose(int).mjava,0,0,2,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#writeChunkSize(int).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getKeyspace().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#findCorrectRange(Token).mjava,0,0,4,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#handleMajorStateChange(InetAddress,EndpointState).mjava,0,0,15,2,1,0.06896551698446274,48,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#execute(QueryState).mjava,0,0,33,1,3,0.0,288,9,34,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#last().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#getIndexValue().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#getStrategy(TokenMetadata,AbstractReplicationStrategy,InetAddress).mjava,0,0,4,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getRack().mjava,0,1,7,0,2,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#stateType().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#indexes(PartitionColumns).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier.VerifyController#maxPurgeableTimestamp(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheKeysToSave().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#release().mjava,0,0,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#getColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#unsharedHeapSize().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientFromInputAddressList(Configuration).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#fetchPageInternal(int,ReadOrderGroup).mjava,0,0,5,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#addValue(Selection.ResultSetBuilder,ColumnDefinition,Row,int,int).mjava,0,0,10,5,1,0.06666667014360428,3,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\OperationType#fromFileName(String).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#MetadataCollector(Iterable[SSTableReader],ClusteringComparator,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#getValidity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.LocalMutationRunnable#run().mjava,0,0,9,0,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.UnexpectedChannelExceptionHandler#apply(Throwable).mjava,0,0,5,1,1,0.18518517911434174,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getRanges().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#timeStringToLong(String).mjava,0,0,7,1,1,0.0833333358168602,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogService#PeriodicCommitLogService(CommitLog).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(UUID).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#warn(long,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#getScrubInfo().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#isDone().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#getAndClearOpenMarker().mjava,0,2,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#incrManualSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#setValue(ByteBuffer).mjava,0,0,1,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_indexed_slices(ColumnParent,IndexClause,SlicePredicate,ConsistencyLevel).mjava,0,0,34,4,12,0.0,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getRack(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#prepareRestrictions(CFMetaData,VariableSpecifications,Selection,boolean).mjava,0,0,4,4,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isKeyCacheEnabled().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#opType().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#createConnection().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getUnleveledSSTables().mjava,0,1,2,0,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#markCounterLocalToBeCleared().mjava,0,0,5,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#invalidate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#deserialize(Descriptor,FileDataInput,EnumSet[MetadataType]).mjava,0,0,10,3,6,0.095238097012043,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#seek(long).mjava,0,0,11,1,0,0.0833333358168602,24,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangeToEndpointMap(String).mjava,0,0,7,1,1,9.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Slice#compareInclusionOf(CellPath).mjava,0,0,3,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#usePessimisticLocking().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#close(Throwable).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#recordLast(DecoratedKey,Row).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#CloudstackSnitch().mjava,0,0,3,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction#newSelectorFactory(CFMetaData,List[ColumnDefinition]).mjava,0,0,10,2,2,0.13333334028720856,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getString(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#tryParseInt(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(short).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#localDeletionTimeSerializedSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isStarting().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#applyToPartition(UnfilteredRowIterator).mjava,0,0,8,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.PureJavaOperations#compare(byte[],int,int,byte[],int,int).mjava,0,0,0,6,4,0.0625,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#newAuthenticator(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#mutable(UnfilteredRowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#merge(ContextState,ContextState,ContextState).mjava,0,0,24,3,2,0.0731707289814949,32,7,20,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#stopUnsafe(boolean).mjava,0,0,11,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#SetElement(Term.Raw,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setTableSchema(Configuration,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeWithoutConditions(Collection[#-extends-IMutation],ConsistencyLevel).mjava,0,0,8,2,2,0.07692307978868484,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#allDataRead(CFMetaData,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicResetInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getNonSystemKeyspaces().mjava,0,16,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesToReceive().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#getNextGeneration(File,String).mjava,0,0,6,2,4,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#init(String).mjava,0,0,28,1,8,0.03999999910593033,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#rebuildIndex(String,String,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Hex#wrapCharArray(char[]).mjava,0,0,6,1,2,0.09090909361839294,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessBound#getListItem(Iterator[Cell],int).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#without(Expression).mjava,0,0,6,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#inclusiveEndOf(ClusteringPrefix).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#addCell(Cell,boolean).mjava,0,0,7,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeFromMoving(InetAddress).mjava,0,0,7,1,0,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#connectAllStreamSessions().mjava,0,1,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkContainsNoDuplicates(List[#],String).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#markWritten().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#validate(ClientState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#progress(String,ProgressEvent).mjava,0,0,8,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshot(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#maybeIncrementallyBackup(Iterable[SSTableReader]).mjava,0,0,4,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\WriteCallbackInfo#shouldHint().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Hex#hexToBytes(String).mjava,0,0,4,1,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEventNotifierSupport#removeProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#toIdentifiers(Collection[ColumnDefinition]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Value#equals(MapType,Value).mjava,0,0,17,2,4,0.0714285746216774,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#reference().mjava,0,2,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#create(String,String,boolean,boolean,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#create(CFMetaData,Descriptor,long,long,int,SerializationHeader).mjava,0,0,3,6,3,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event#serializedSize(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#unsharedHeapSizeExcludingData().mjava,0,0,2,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUTF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.ComponentOfSlice#fromSlice(int,Slice).mjava,0,0,10,2,4,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\AlreadyExistsException#AlreadyExistsException(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,ConsistencyLevel,List[ByteBuffer]).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#FunctionResource().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#isFullyCoveredBy(CachedPartition).mjava,0,0,6,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateUserType(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#getCompacting().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#OptionsMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.UDFClassLoader#findClass(String).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#filter(SliceableUnfilteredRowIterator).mjava,0,0,1,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#drain().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#stats().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputPlus#position().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AggregateFcts#makeMaxFunction(AbstractType[#]).mjava,0,0,3,1,1,0.0,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyDrop(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#keyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#isMarkedCompacted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#unsafeInitialize().mjava,0,0,10,0,0,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Type#fromOpcode(int,Direction).mjava,0,0,3,2,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#needsTaskCommit(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinition(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#toBytes(PartitionUpdate,int).mjava,0,0,4,2,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#write(UUID,Hint).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionDetails#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#verify(boolean,String,String...).mjava,0,0,2,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\Resources#fromName(String).mjava,0,0,13,1,0,0.0,8,3,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition.Serializer#deserialize(DataInputPlus).mjava,0,0,9,1,9,0.25,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#recordLast(DecoratedKey,Row).mjava,0,0,3,2,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#apply(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#indexesDiff(Indexes,Indexes).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#offHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#isEmpty().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getSpProxy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doSort(List[GossipDigest]).mjava,0,0,17,1,7,0.8888888955116272,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#fromJSONObject(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#allocated(long).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage#ResultMessage(Kind).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#fromName(String).mjava,0,0,8,1,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#BTreeSearchIterator(Object[],Comparator[#-super-K],BTree.Dir,int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Decommission#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#prefixComparison(ByteBuffer).mjava,0,0,3,1,3,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getBoolean(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#isBuilt().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#announceMigration(boolean).mjava,0,0,25,1,8,0.12195122241973877,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#getOutputRow(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\OutgoingFileMessage#serialize(DataOutputStreamPlus,int,StreamSession).mjava,0,0,3,3,2,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata#toString().mjava,0,0,15,0,1,0.0,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#prepare(Collection[StreamRequest],Collection[StreamSummary]).mjava,0,0,10,2,1,0.25,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#cancel(SSTableReader).mjava,0,0,10,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#create(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#deserialize(ByteBuffer,int).mjava,0,0,11,2,3,0.125,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#start().mjava,0,2,17,0,5,0.10169491171836853,23,7,39,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType.CollectionPathSerializer#serialize(CellPath,DataOutputPlus).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.RangeSliceSerializer#serialize(ReadCommand,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedStaticSliceSize(CFMetaData).mjava,0,0,7,1,2,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#state().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isInclusive(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#finish().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#holder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#lastRestriction().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_classForName(String,String).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#sharedCopy().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CQLFilter#filter(UnfilteredPartitionIterator,int).mjava,0,0,7,2,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#builder().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#mayOverlapsWith(SSTableReader).mjava,0,0,8,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#LeveledCompactionTask(ColumnFamilyStore,LifecycleTransaction,int,int,long,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#setValue(ColumnDefinition,CellPath,ByteBuffer).mjava,0,0,5,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#tryRecycle().mjava,0,2,3,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#isViewBuilt(String,String).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#toString().mjava,0,0,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateExpectedOptions().mjava,0,2,6,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#localExpirationTime().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator#create(CFMetaData,DataInputPlus,SerializationHeader,SerializationHelper,DeletionTime).mjava,0,0,0,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPredecessor(Token).mjava,0,0,5,1,2,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#numberOfValues().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#construct().mjava,0,1,5,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#mark().mjava,0,0,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#getFileName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DescribeCluster#execute(NodeProbe).mjava,0,0,15,1,1,0.1666666716337204,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCasContentionTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#updateAllTimestamp(long).mjava,0,0,10,1,2,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#getBoundVariables().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ByteSerializer#validate(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#toString(boolean).mjava,0,0,12,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#next(Long,Row).mjava,0,0,3,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyBound#LegacyBound(Slice.Bound,boolean,ColumnDefinition).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\EchoVerbHandler#doVerb(MessageIn[EchoMessage],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Substracter#Substracter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#addCellPerPartitionCount(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.IndexGCTransaction#commit().mjava,0,0,5,0,1,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#getMax().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setHintedHandoffEnabled(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#maxCompactionThreshold().mjava,0,6,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateKeyCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ToJsonFct#getInstance(List[AbstractType[#]]).mjava,0,0,6,1,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#keyspace().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#clusteringIndexFilter(DecoratedKey).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,2,2,2,0.013698630034923553,200,9,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#inclusiveOpen(boolean,ByteBuffer[],DeletionTime).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector#isAggregate().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSessionResult#RepairSessionResult(UUID,String,Collection[Range[Token]],Collection[RepairResult]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#of(CFMetaData...).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#columns(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#trySkipCache(String,long,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateSlicePredicate(CFMetaData,ByteBuffer,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Serializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators.Serializer#serialize(UnfilteredPartitionIterator,ColumnFilter,DataOutputPlus,int).mjava,0,0,7,4,0,0.07692307978868484,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.ColumnDataReducer#reduce(int,ColumnData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#SigarLibrary().mjava,0,0,6,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getNextBackgroundSSTables(int).mjava,0,0,18,1,6,0.1428571492433548,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#find(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#apply(PartitionUpdate,UpdateTransaction,OpOrder.Group,ReplayPosition).mjava,0,0,12,4,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#updateNextToMerge().mjava,0,2,13,0,1,0.1818181872367859,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculatingReadExecutor#SpeculatingReadExecutor(Keyspace,ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#DifferencingCounter(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#runMayThrow().mjava,0,0,110,0,29,0.0625,64,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#StreamMessage(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#allocate(long).mjava,0,0,0,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#hashCode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.SingleColumnComparator#SingleColumnComparator(int,Comparator[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#open(Descriptor).mjava,0,0,11,1,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BooleanSerializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#compose(DataType[],int,int,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#closeAndDeleteSegmentUnsafe(CommitLogSegment,boolean).mjava,0,0,1,2,0,0.1111111119389534,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#toJSONString(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ReplayBatchlog#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawType#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#globalIndex().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#skipPromotedIndex(DataInputPlus,Version).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Serializer#serialize(Slices,DataOutputPlus,int).mjava,0,0,5,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#writeFullChecksum(Descriptor).mjava,0,0,7,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateFunction(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#baseReadOpOrderGroup().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DroppedMessageMetrics#DroppedMessageMetrics(MessagingService.Verb).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation.CounterMutationSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setLong(long,long).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchFunctions(String,Types).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthenticateMessage#AuthenticateMessage(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#newPartition().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeDouble(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#regions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#validate(ClientState).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#hotKeyIterator(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#remove(SSTableReader).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\ScalarFunctionSelector#ScalarFunctionSelector(Function,List[Selector]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager#forInternalQuery(QueryPager,ReadOrderGroup).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#createInRelation(ColumnIdentifier.Raw,List[Term.Raw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#uncompressedLength().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#serialize(Boolean).mjava,0,0,0,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#RangeTombstoneList(ClusteringComparator,Slice.Bound[],Slice.Bound[],long[],int[],long,int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithValues#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#create(CFMetaData,long,int).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#extractResultMetadata(CQLStatement).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#toCQLString(CFMetaData).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#isDropped(Cell,boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionSliceBuilder#build().mjava,0,3,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#blockForWrites().mjava,0,2,19,0,1,0.1666666716337204,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readFunctionMetadata(String,String,List[String]).mjava,0,0,17,3,9,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#readOne(SinglePartitionReadCommand,ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#MetricName(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#get(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\AbstractAllocator#clone(ByteBuffer).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#fromJSONObject(Object).mjava,0,0,10,1,1,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.ReferenceReaper#run().mjava,0,0,3,0,1,0.0,3,2,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get95thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#getServers().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceCleanup().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#run().mjava,0,0,16,0,2,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#getMainTypeName().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#setConfigs().mjava,0,3,12,0,1,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#promotedSize(IndexHelper.IndexInfo.Serializer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeExcessSlow().mjava,0,1,9,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy.SplittingCompactionTask#getCompactionAwareWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata.StatsMetadataSerializer#deserialize(Version,DataInputPlus).mjava,0,0,29,2,19,0.02083333395421505,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#setRepairedAt(long).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID().mjava,0,25,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#maybeGossipToSeed(MessageOut[GossipDigestSyn]).mjava,0,0,10,1,3,0.6428571343421936,5,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#updateEstimatedCompactionsByTasks(List[List[SSTableReader]]).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#columnFamily().mjava,0,52,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter.FilterSerializer#serialize(ClusteringIndexFilter,DataOutputPlus,int).mjava,0,0,6,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeTcpNodelay(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getGCWarnThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionStrategyManager().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.RandomAccessReaderWithOwnChannel#RandomAccessReaderWithOwnChannel(Builder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flush(Iterator[ByteBuffer],HintsStore).mjava,0,0,3,2,0,0.2222222238779068,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#partitionOrdering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#removeValue(V).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\DefaultCompactionWriter#DefaultCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#equals(Object).mjava,0,0,8,1,1,0.0,12,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#serializedSize(Leaf,int).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionEntryIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.ColumnValue#ColumnValue(Term).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#TemporalCell(ByteBuffer,long,int,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#put(List[ByteBuffer]).mjava,0,0,1,1,0,0.0,5,3,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#mutable(PartitionIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#getOptions().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#initReceivingSide(int,UUID,String,InetAddress,Socket,boolean,int,boolean,boolean).mjava,0,0,5,9,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceMajorCompaction(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AggregateFcts#makeMinFunction(AbstractType[#]).mjava,0,0,3,1,1,0.0,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#all().mjava,0,3,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputCompressionClass(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse.PrepareResponseSerializer#serialize(PrepareResponse,DataOutputPlus,int).mjava,0,0,5,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#copyTo(ContextState).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_concatUniq(Set[T]...).mjava,0,0,8,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.InForwardOrderTester#includes(Clustering).mjava,0,0,4,1,1,0.10526315867900848,11,5,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#equalComparators(Comparator[#],Comparator[#]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#encodeZigZag64(long).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#toString().mjava,0,0,6,0,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.SliceableIterator#computeNext().mjava,0,0,4,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fromJSONObject(Object).mjava,0,0,21,1,5,0.02777777798473835,36,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#CompressedSegmentedFile(ChannelProxy,int,CompressionMetadata,MmappedRegions).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#applyToRow(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#[R-extends-RingPosition[R]]_upperBound(Class[R]).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceTerminateAllRepairSessions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#processResults(PartitionIterator,QueryOptions,int).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredPartitions#FilteredPartitions(PartitionIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\LocalSyncTask#onFailure(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#finalizeMetadata(String,double,long,SerializationHeader).mjava,0,0,14,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#maybeQuote(String).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#serializedSize(RepairMessage,int).mjava,0,0,1,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markClean(UUID,ReplayPosition).mjava,0,0,3,2,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#treeIndexOfLeafKey(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#isEmpty(long,int).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram#merge(StreamingHistogram).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#valuesOf(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Type#hasFile().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#gossiperStarting().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#hasKeyspace().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(LivenessInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultList#one().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#findSuitableEndpoint(String,DecoratedKey,String,ConsistencyLevel).mjava,0,0,16,4,4,0.09090909361839294,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#copy().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#prepareInternal(String,Types).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#force(FileChannel,boolean).mjava,0,0,3,2,0,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#UnfilteredRowMergeIterator(CFMetaData,List[UnfilteredRowIterator],PartitionColumns,DeletionTime,int,boolean,MergeListener).mjava,0,0,7,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get999thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRpcaddress(InetAddress).mjava,0,0,9,1,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#CommitLogSegment(CommitLog).mjava,0,0,10,1,0,0.05000000074505806,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateAggregate(UDAggregate).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#createTime(long).mjava,0,0,0,1,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#search(Clustering).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isCompound().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#hash3_x64_128(ByteBuffer,int,int,long,long[]).mjava,0,0,25,5,9,0.1666666716337204,78,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportPortSSL().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_multi_slice(MultiSliceRequest).mjava,0,0,57,1,15,0.0,20,5,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#getTimeout().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#postProcessorFor(ReadCommand).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#current().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingStreamingConnection#close().mjava,0,1,4,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#getElementCount(Map[K,V]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#apply(Function[View,View]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#CachingParams(boolean,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#isEmpty().mjava,0,6,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator#close().mjava,0,0,2,0,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#with(Function).mjava,0,0,10,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#waitActivity(long).mjava,0,0,1,1,0,0.0,4,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewUtils#ViewUtils().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#epoch(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget#IndexTarget(ColumnIdentifier,Type).mjava,0,0,3,2,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#initServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#Indexes(Builder).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#BufferedSegmentedFile(ChannelProxy,int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.TransactionalProxy#doAbort(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#klass().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#validateLogin().mjava,0,6,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#checkPermission(Permission).mjava,0,0,2,1,0,0.2857142984867096,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getCluster(String[],Configuration,int).mjava,0,0,26,3,8,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#simpleInCondition(AbstractMarker.INRaw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#wrap(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTupleValue(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\RegularColumnIndex#isStale(Row,ByteBuffer,int).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#isReverseOrder().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#newRoleManager(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#createAndRegister(UUID,String,StreamCoordinator).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#prepare_cql3_query(ByteBuffer,Compression).mjava,0,0,9,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isEQ().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#appendTOC(Descriptor,Collection[Component]).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#setDiscarded().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#resetLocalSchema().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#isCompatibleWith(AbstractType[#]).mjava,0,0,5,1,2,0.0833333358168602,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#onDiskLength().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Pair#Pair(T1,T2).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#getfd(FileChannel).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getSamplingLevel().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferRanges(InetAddress,InetAddress,String,Collection[Range[Token]]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#isTableLevel().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#onToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#get(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#resetAndTruncate().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DiskAwareRunnable#getWriteDirectory(long).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#quarantineEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\RegularColumnIndex#decodeEntry(DecoratedKey,Row).mjava,0,0,10,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#allViews().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Truncation#Truncation(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#inCondition(ColumnDefinition,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#releaseVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncRequest#SyncRequest(RepairJobDesc,InetAddress,InetAddress,InetAddress,Collection[Range[Token]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#mean().mjava,0,8,4,0,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#isCounter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#tryGetMoreContents().mjava,0,0,7,0,5,0.19230769574642181,9,4,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(String,String,CompressionParams,MetadataCollector).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder.ComplexColumnDeletion#ComplexColumnDeletion(ColumnDefinition,DeletionTime).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setOutputCql(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#setBoundVariables(List[ColumnIdentifier]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#hasBound(Bound).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#executeOnceInternal(String,Object...).mjava,0,0,9,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#reallocate(long).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#collectionInCondition(Term.Raw,AbstractMarker.INRaw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch#createLocal(UUID,long,Collection[Mutation]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#received(UUID,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#serialize(NodePair,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#getParent().mjava,0,0,2,0,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#streamsNeeded().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.CustomConstructor#CustomConstructor(Class[#]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#sharedCopy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#toString().mjava,0,0,11,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#getSessionInfo().mjava,0,2,8,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#prepare(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,14,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithNames#OptionsWithNames(DefaultQueryOptions,List[String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#SetType(AbstractType[T],boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ResponseResolver#ResponseResolver(Keyspace,ReadCommand,ConsistencyLevel,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#stopCompaction(String).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#chunkStart(long).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection.ShortReadRowProtection#ShortReadRowProtection(CFMetaData,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#resume().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#obsoleteOriginals().mjava,0,3,6,0,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,5,3,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#announceMigration(boolean).mjava,0,0,8,1,2,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#update(DeletionTime).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getColumnIndexSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#validate(ClientState).mjava,0,0,9,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isGossipRunning().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#describeOwnership(List[Token]).mjava,0,0,20,1,10,0.5652173757553101,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#ContainsRestriction(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#copy(AbstractAllocator).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#calculatePendingRanges(AbstractReplicationStrategy,String).mjava,0,0,40,2,10,0.2884615361690521,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#mayModify(DeletionInfo).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TypeCast#testAssignment(String,ColumnSpecification).mjava,0,0,4,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#getOrderingComparator(CFMetaData,Selection,StatementRestrictions).mjava,0,0,11,3,5,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#merge(List[Mutation]).mjava,0,0,17,1,6,0.0,32,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#prepare(String,Types).mjava,0,0,9,2,1,0.10526315867900848,12,4,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FromJsonFct#execute(int,List[ByteBuffer]).mjava,0,0,13,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.BuffersIterator#computeNextInternal().mjava,0,1,5,0,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#partialCompactionsAcceptable().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#newMapping().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer.CustomFrameBuffer#CustomFrameBuffer(TNonblockingTransport,SelectionKey,AbstractSelectThread).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#reverseIterator(Slice).mjava,0,0,26,1,6,0.23333333432674408,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Visitor#visit(Object).mjava,0,0,10,1,1,0.0,4,2,17,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#getAge(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#reset().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#size().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#acceptResult(CompilationResult).mjava,0,0,6,1,2,0.0,3,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.ElementDiscarder#ElementDiscarder(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#MmappedRegions(ChannelProxy,CompressionMetadata,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,4,2,1,0.1666666716337204,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#maxTimeUUID(long).mjava,0,0,2,1,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTombstoneFailureThreshold().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#getLocalCount(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#lookupSizeMap(Object[],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokens().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#forceBlockingFlush().mjava,0,1,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#hasUpperBound().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetEndpoints#execute(NodeProbe).mjava,0,0,8,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#getThroughCache(ColumnFamilyStore,OpOrder.Group).mjava,0,0,57,2,11,0.27142858505249023,45,7,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#hasScope().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#write(DataOutputStreamPlus).mjava,0,0,9,1,8,0.17391304671764374,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits#newCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#messagingVersion().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PermissionsManagementStatement#validate(ClientState).mjava,0,0,10,1,0,0.23076923191547394,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewKeyspace(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#reverse().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#size().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#QueryOptionsWrapper(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#initializeCurrentBuffer().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#metricPercentilesAsArray(CassandraMetricsRegistry.JmxHistogramMBean).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#computeChecksum().mjava,0,3,10,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readInt().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#SSTableSimpleWriter(File,CFMetaData,PartitionColumns).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#close(Throwable).mjava,0,0,7,1,0,0.38461539149284363,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\WriteTimeoutException#WriteTimeoutException(WriteType,ConsistencyLevel,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#TrivialOneToOne(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#getInstance(TypeParser).mjava,0,0,9,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator.Negotiator#isComplete().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#fromString(String).mjava,0,0,4,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#DataInputBuffer(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#enableAutoCompaction().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(File...).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toLegacyCells(CFMetaData,List[Column],int).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#ReducingKeyIterator(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#buildSelectStatement(String,Collection[ColumnDefinition],String).mjava,0,0,14,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#requireNetworkTopologyStrategy(String).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\RoleName#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#columns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#syntaxError(BaseRecognizer,String[],RecognitionException).mjava,0,0,8,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#[V]_of(BiFunction[V,V,V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#typesOf(List[ColumnDefinition]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AllSignal#AllSignal(Signal...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ResumeHandoff#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#ChannelProxy(String,FileChannel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#getUncompacting().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDisableSTCSInL0().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#[T]_toArray(T[],int).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#has(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#defaultBloomFilterFbChance().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#livenessInfoString().mjava,0,2,11,0,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#serializedSize().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#isSatisfiedBy(AbstractType[#],ByteBuffer,ByteBuffer).mjava,0,0,36,3,5,0.04878048598766327,26,3,33,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOnHeapExcludingData(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#toString().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXConfigurableThreadPoolExecutor#JMXConfigurableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#sendGossip(MessageOut[GossipDigestSyn],Set[InetAddress]).mjava,0,0,9,2,4,1.7999999523162842,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#makeKey(CFMetaData,Object...).mjava,0,0,4,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithOutConfirm(String,String).mjava,0,0,5,2,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.RowUpdate#RowUpdate(Clustering,ModificationStatement,QueryOptions,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeReuseAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#execute().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableGossip#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithPerStatementVariables#isPreparedStatement(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isStatic().mjava,0,30,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputPlus.DataInputStreamPlus#DataInputStreamPlus(InputStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#composeMethod(Class[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#put(UUID,int).mjava,0,0,3,2,1,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#hasKind(UntypedResultSet,ColumnDefinition.Kind).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#fifteenMinuteRate().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\GrantPermissionsStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.CustomReplayFilter#CustomReplayFilter(Multimap[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata#equals(Object).mjava,0,0,2,1,0,0.2857142984867096,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#getFiles(Path,BiFunction[File,Directories.FileType,Boolean],Directories.OnTxnErr).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#add(Memory).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flushBufferPool(HintsBufferPool,Iterable[HintsStore]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isContains().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getMemoryPoolCapacityInMB().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#getDelegate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#filter(UnfilteredPartitionIterator,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#min(ByteBuffer,ByteBuffer,AbstractType[#]).mjava,0,0,1,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\PrepareMessage.PrepareMessageSerializer#serializedSize(PrepareMessage,int).mjava,0,0,10,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#addRow(List[Object]).mjava,0,0,9,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(String,File,String,String,int,SSTableFormat.Type).mjava,0,0,3,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#Work().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#load(File).mjava,0,0,6,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#readTOC(Descriptor).mjava,0,0,11,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanColumns().mjava,0,6,5,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#deserializeTokens(Collection[String]).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getStatements().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#order(ByteOrder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setBytes(long,byte[],int,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.db.ConsistencyLevel).mjava,0,0,0,1,0,0.0,23,1,23,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#CQLLimits(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.TokenInfo#TokenInfo(Token,UnitInfo[Unit]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component.Type#Type(String...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#userTypeUpdated(String,String).mjava,0,0,11,2,6,0.0,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#create(ColumnFamilyStore,Descriptor,long,long,int,SerializationHeader).mjava,0,0,2,6,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#diff(RowDiffListener,Row,Row...).mjava,0,0,68,3,15,0.03191489353775978,80,18,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#parse(Map[String,String],IPartitioner).mjava,0,0,45,2,21,0.07999999821186066,864,12,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#streamHints().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#DropTableStatement(CFName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#rangeTombstone(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#updateEndpoint(InetAddress,IEndpointSnitch).mjava,0,0,7,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo.Serializer#deserialize(DataInputPlus).mjava,0,0,9,1,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#serializedSize(NodePair,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#defaultNameGenerator(Iterable[ColumnDefinition]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#buildIndexBlocking(Index).mjava,0,0,7,1,0,0.0,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropFunction(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#BTreeRange(Object[],Comparator[#-super-V],V,boolean,V,boolean).mjava,0,0,5,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCounterCacheSizeInMB().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#equals(Object).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#SelectionColumnMapping().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#folderSize(File).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#loadNewSSTables(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#AbstractBounds(T,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputInitialAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.DroppedColumn#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#DataResource(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedSliceCommandSize(SinglePartitionReadCommand).mjava,0,0,15,1,5,0.10000000149011612,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#serializedSizeForMessaging(SerializationHeader,ColumnFilter,boolean).mjava,0,0,7,3,1,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openDataReader(RateLimiter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#merge(List[#-extends-UnfilteredPartitionIterator],int,MergeListener).mjava,0,0,22,3,4,0.0535714291036129,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#consumeOpenRange().mjava,0,1,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputRpcPort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#retainAll(Collection[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#isNative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#nowInSec().mjava,0,54,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeReceiveBufferSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher.Callback#response(MessageIn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#unsharedHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#removeProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#snappy(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#recordLast(DecoratedKey,Row).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#equals(Object).mjava,0,0,21,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setCoreCompactorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#closeBound(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#start().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#abortEarly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_rangeSet(Range[T]...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#buildAllViews().mjava,0,0,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#handleNotificationLost(long,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.Page#Page(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#FunctionName(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#needsPostQueryOrdering().mjava,0,2,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#getSimple(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\RawSelector#processesSelection().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#estimateMeanPartitionSize(Collection[SSTableReader]).mjava,0,0,4,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#jnaMemoryLockable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#CompressedSegmentedFile(CompressedSegmentedFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#TupleType(List[AbstractType[#]]).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer.FailureDetectorSourceFilter#FailureDetectorSourceFilter(IFailureDetector).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBroadcastRpcAddress(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSSLTruststorePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.CollectionCellPath#unsharedHeapSizeExcludingData().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getToken(ByteBuffer,long[]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(SegmentedFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ByteSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#doInitialQueries().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#enableAutoCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#putIfAbsent(RowCacheKey,IRowCacheEntry).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#clear().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#applyOwnershipAdjustment(BaseTokenInfo[Unit,#],UnitInfo[Unit],Token,Token,double,UnitAdjustmentTracker[Unit]).mjava,0,0,5,6,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#prepareType(String,CQL3Type.Raw).mjava,0,0,6,2,1,0.25,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#isEndOfPartition(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isIdentifierChar(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#scrub(PrintStream,boolean,boolean,boolean,String,String...).mjava,0,0,2,6,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintsFileSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PaxosState#PaxosState(Commit,Commit,Commit).mjava,0,0,10,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#[C-extends-Comparable[#-super-C],V]_minOrdering().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#onPartitionDeletion(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Pair#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#setCoreThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#writeEndOfPartition(DataOutputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#dropTriggerFromSchemaMutation(CFMetaData,TriggerMetadata,long,Mutation).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#validateIndexedColumns().mjava,0,2,6,0,0,0.0,1,0,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropAggregate(UDAggregate).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(RequestFailureException).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasRepairedAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#isLocalDC(InetAddress).mjava,0,0,6,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#withValidation(UnfilteredRowIterator,String).mjava,0,0,6,2,0,0.0,1,0,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier#main(String[]).mjava,0,0,38,1,10,0.06060606241226196,16,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#invalids().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addRangeTombstone(RangeTombstone).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#emptySet().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#fromJSONObject(Object).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#isAffectedByMeteredFlusher().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#get(int).mjava,0,0,0,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#fromInternalRow(CFMetaData,DecoratedKey,org.apache.cassandra.db.rows.Row).mjava,0,0,22,3,5,0.0,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#CurrentDeserializer(CFMetaData,DataInputPlus,SerializationHeader,SerializationHelper).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#size().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getNaturalEndpoints(String,RingPosition).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#prepareToCommit().mjava,0,11,3,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPermissionsUpdateInterval(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#getInterned(ByteBuffer,String).mjava,0,0,2,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#addCallback(IAsyncCallback,MessageOut[#],InetAddress,long,ConsistencyLevel,boolean).mjava,0,0,4,6,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation.MutationSerializer#serialize(Mutation,DataOutputPlus,int).mjava,0,0,11,3,1,6.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.KeySerializer#deserialize(ByteBuffer).mjava,0,0,5,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCollection().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(OperationType,long,long,String,UUID).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#sendReplays(List[Mutation],long,Set[InetAddress]).mjava,0,0,3,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#hasFiles().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#resumeBootstrap(PrintStream).mjava,0,0,9,1,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int,double).mjava,0,0,1,2,3,0.1818181872367859,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getIgnoreHosts(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#open(Descriptor,Set[Component],CFMetaData).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#setReplaced(Iterable[SSTableReader],Throwable).mjava,0,0,2,2,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#OldNetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#addColumnDefinition(ColumnDefinition).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#toThriftResult().mjava,0,1,16,0,9,0.06666667014360428,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#taskCompleted(StreamTransferTask).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\HeapPool#HeapPool(long,float,Runnable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#forTable(UUID).mjava,0,0,2,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#appliesTo(Row).mjava,0,0,13,1,4,0.05714285746216774,120,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#replaceFlushed(Memtable,Collection[SSTableReader]).mjava,0,0,15,2,1,0.23529411852359772,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,CompressionMetadata.Chunk,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.InstanceTidier#releaseSummary().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeUpdateTableMutation(KeyspaceMetadata,CFMetaData,CFMetaData,long,boolean).mjava,0,0,49,5,5,0.3333333432674408,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitIndexBuild(SecondaryIndexBuilder).mjava,0,0,6,1,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyLeft(InetAddress).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLoadMap().mjava,0,0,11,0,1,0.1111111119389534,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.CleanupGCTransaction#onPartitionDeletion(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#serializedSize(ReadCommand,int).mjava,0,0,15,2,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndex#CollectionKeyIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#RefCountedMemory(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedSize(ReadCommand,int).mjava,0,0,15,2,4,0.05882352963089943,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#BlacklistedDirectories().mjava,0,0,4,0,1,0.1666666716337204,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces.Builder#add(Iterable[KeyspaceMetadata]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#listEndpointsPendingHints().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#inCondition(ColumnDefinition,Term,List[Term]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#getOperations().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#hasPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getByte(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stopById(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.LifeCycle#transition(LifeCycle).mjava,0,0,0,1,0,0.0,9,1,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setNativeTransportPort(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#removeChunkLength(Map[String,String]).mjava,0,0,10,1,0,0.0,9,4,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getHintsDirectory().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#reload().mjava,0,3,14,0,1,0.04545454680919647,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#serialize(IRowCacheEntry,DataOutputPlus).mjava,0,0,3,2,1,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#initialCondition().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#BatchMessage(BatchStatement.Type,List[Object],List[List[ByteBuffer]],QueryOptions).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#incrementDroppedMessages(Verb,boolean).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#getTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#getColumnSelectionForSlice(boolean,int,CFMetaData).mjava,0,0,7,3,1,0.5,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher.Flusher#run().mjava,0,0,14,0,2,0.02777777798473835,8,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#queryIndex(DecoratedKey,ReadCommand,ReadOrderGroup).mjava,0,0,8,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#deserializeSliceCommand(DataInputPlus,boolean,CFMetaData,DecoratedKey,int,int).mjava,0,0,7,6,8,0.1764705926179886,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#getReadChannel(Socket).mjava,0,0,3,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#getRoles().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager.Pager#applyToPartition(RowIterator).mjava,0,0,8,1,1,0.3125,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#getTimeout().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#reset().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchTrigger#isScheduled(HintsStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#compactLegacyHints().mjava,0,1,6,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#none().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#commitTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\WriteCallbackInfo#WriteCallbackInfo(InetAddress,IAsyncCallback,MessageOut,IVersionedSerializer[#],ConsistencyLevel,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Truncation#createMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WriteResponse.Serializer#serialize(WriteResponse,DataOutputPlus,int).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLong().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator.Purger#onEmptyPartitionPostPurge(DecoratedKey).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.PureJavaOperations#compare(ByteBuffer,byte[],int,int).mjava,0,0,8,4,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#Views(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#getMerkleTree(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#readCurrentBlock(boolean).mjava,0,0,11,1,5,0.5,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Config#setOutboundBindAny(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#convict(InetAddress,double).mjava,0,0,8,2,1,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#awaitTermination(long,TimeUnit).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifyAdded(Iterable[SSTableReader],Throwable).mjava,0,0,2,2,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getBackingFiles().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#decompress(Frame).mjava,0,0,11,1,3,0.0476190485060215,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#DataInputBuffer(ByteBuffer,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Header#Header(int,int,int,Message.Type).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.Type#fromByte(byte).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#validateNonOverlapping(MerkleTree).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#updateKeyspace(String,KeyspaceMetadata,KeyspaceMetadata).mjava,0,0,83,3,9,0.13513512909412384,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#getFilter().mjava,0,3,11,0,3,0.28205129504203796,23,7,31,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addTable(CFMetaData).mjava,0,0,9,1,0,0.1818181872367859,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Scrub#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#validateForNativeProtocol(ByteBuffer,int).mjava,0,0,5,2,2,0.0,4,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator#MergeIterator(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#updateDigest(MessageDigest,ByteBuffer).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#verifyFullPermissions(File,String).mjava,0,0,9,2,0,0.0,16,4,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#updateIndexKey().mjava,0,2,8,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#SliceRestriction(ColumnDefinition,Bound,boolean,Term).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#getElement(ByteBuffer,int).mjava,0,0,6,2,3,0.0,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression.Serializer#serializedSize(Expression,int).mjava,0,0,13,2,2,0.06896551698446274,32,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams.Serializer#serialize(CompressionParams,DataOutputPlus,int).mjava,0,0,12,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#end().mjava,0,43,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#update(Cell).mjava,0,0,10,1,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection.ShortReadRowProtection#applyToRow(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#unbootstrap(Runnable).mjava,0,0,21,1,5,0.0810810774564743,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#counter(LegacyCellName,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InValue#InValue(List[List[ByteBuffer]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#[T]_checkNotNull(T,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#start().mjava,0,40,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#getFirstColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isThriftServerRunning().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#describeOwnership(List[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#compareUnsigned(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#boundKind(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeRangeTombstone(ClusteringComparator,Clustering).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#PagingState(ByteBuffer,RowMark,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#StartupMessage(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.BackgroundCompactionCandidate#BackgroundCompactionCandidate(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCompactionLargePartitionWarningThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultSet#metadata().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Serializer#makeHeaderByte(ColumnFilter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.StatsCollector#beginCompaction(CompactionInfo.Holder).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#queue(Thread,String,long).mjava,0,0,4,3,1,0.05000000074505806,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#validateCellValue(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#isEmpty().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#next().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#getStringTypeName().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#keysOf(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#getLastColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,long,Mutation).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#toRowIterator(CFMetaData,DecoratedKey,Iterator[LegacyCell],int).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#RepairSession(UUID,UUID,Collection[Range[Token]],String,RepairParallelism,Set[InetAddress],long,String...).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator.Negotiator#evaluateResponse(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#runMayThrow().mjava,0,0,14,0,0,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getLong(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#addPartitionSizeInBytes(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz3(long).mjava,0,0,0,1,2,0.4000000059604645,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractUnfilteredPartitionIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators.Logging#applyToPartition(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#disableHintedHandoff().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Appender#Appender(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#values().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#serializedValues(Iterator[Cell]).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceDrop(String,boolean).mjava,0,0,7,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getOutputCluster(String,Configuration).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#getSerializer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete#ValidationComplete(RepairJobDesc,MerkleTrees).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredRowIterator#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrateLegacyHints().mjava,0,1,7,0,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isIndex().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#equals(Object).mjava,0,0,3,1,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#UnfilteredPartitionIterators().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#sendMessages(Collection[#-extends-StreamMessage]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#supersedes(LivenessInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#histogram(MetricName,MetricName).mjava,0,7,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#execute(Collection[#-extends-IMutation]).mjava,0,0,7,1,4,0.0,32,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#sizeOnRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#upgradeSSTables(String,boolean,String...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes.Builder#add(IndexMetadata).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#iterator(boolean).mjava,0,0,4,1,0,0.0,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#unloadCf(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#authenticate(Socket).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#sync(FileDescriptor).mjava,0,0,7,1,2,0.0,9,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter.RestorableEWMA#RestorableEWMA(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#compare(Clustering,Clustering,ColumnFamilyStore).mjava,0,0,2,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#convertLegacyData().mjava,0,0,35,0,8,0.0,2,1,23,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceMajorCompaction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithLength(ByteBuffer,DataOutputPlus).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getCounterCacheSavePeriodInSeconds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#isDelete().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#decodeEntry(DecoratedKey,Row).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Slice#comparisonPath().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#ExecuteMessage(MD5Digest,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBufferFixed#DataOutputBufferFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#CompressionParams(ICompressor,Integer,Map[String,String]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#isReverseOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\client\RingCache#getRange(ByteBuffer).mjava,0,0,3,1,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#tryRef(T).mjava,0,0,3,1,1,0.1111111119389534,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#toJSONString(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#deleteOldCacheFiles().mjava,0,0,16,0,3,0.0416666679084301,7,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#start().mjava,0,1,12,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#indexReadOpOrderGroup().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ToJsonFct#execute(int,List[ByteBuffer]).mjava,0,0,7,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#getReplicationStrategyClass().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#serializeForNativeProtocol(ColumnDefinition,Iterator[Cell],int).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#equals(Object).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getPosition(PartitionPosition,Operator,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#AbstractFunction(FunctionName,List[AbstractType[#]],AbstractType[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InMarker#bind(QueryOptions).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#copy().mjava,0,0,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputPartitioner(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addFunction(UDFunction).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#FunctionResource(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#hostIds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableFormat.Type#Type(String,SSTableFormat).mjava,0,0,1,2,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getPosition().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#TokenRestriction(CFMetaData,List[ColumnDefinition]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#partitionCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.Boundary#Boundary(T,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#currentlyRepairing(UUID,UUID).mjava,0,0,6,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#inclusiveClose(boolean,ByteBuffer[],DeletionTime).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#mergeStaticRows(List[UnfilteredRowIterator],Columns,int,MergeListener,DeletionTime).mjava,0,0,14,5,2,0.0,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#withNewKind(Kind).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedMarker#PreparedMarker(int,Collection[ColumnDefinition]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfConsistencyLevel(ConsistencyLevel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#rawAddRow(List[ByteBuffer]).mjava,0,0,16,1,5,0.14814814925193787,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.StreamSessionConnector#StreamSessionConnector(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter.TransactionalProxy#doPrepare().mjava,0,0,4,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#finishCompaction(CompactionInfo.Holder).mjava,0,0,6,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#build(TableParams.Builder).mjava,0,0,53,1,2,0.05128205195069313,24576,15,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options.FileType#FileType(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner.StringToken#getPartitioner().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#isCompatibleWith(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\AbstractAllocator#cloningBTreeRowBuilder().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#SelectorFactories(List[Selectable],CFMetaData,List[ColumnDefinition]).mjava,0,0,6,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#stopCompactionById(String).mjava,0,0,6,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#reverseIterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#legacyAuthenticate(Map[String,String]).mjava,0,0,5,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getUserTypeParameters().mjava,0,1,23,0,6,0.02777777798473835,10,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#deserialize(DataInputPlus,int,SerializationHelper.Flag,DecoratedKey).mjava,0,0,3,4,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateLocalDeletionTime(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#collectStats(Row,PartitionStatisticsCollector).mjava,0,0,14,2,3,0.0,2,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfReferenceArray(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#getFunctions().mjava,0,0,3,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService.ParentRepairSession#getRepairedAt().mjava,0,2,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#compareComponent(int,ByteBuffer,ByteBuffer).mjava,0,0,2,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeConnected(QueuedMessage,boolean).mjava,0,0,25,2,7,0.07547169923782349,30,7,37,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(PartitionUpdate,long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getLongByByte(long).mjava,0,0,16,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.CleanupGCTransaction#CleanupGCTransaction(DecoratedKey,int,Index...).mjava,0,0,0,3,0,0.1666666716337204,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#PartitionUpdate(CFMetaData,ByteBuffer,PartitionColumns,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata#PreparedMetadata(List[ColumnSpecification],Short[]).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Value#get(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#isTimestampSet().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#listen().mjava,0,0,2,0,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#current().mjava,0,2,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#EQRestriction(List[ColumnDefinition],Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AbstractFunctionSelector#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getChildEnd(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablePath(File,SSTableFormat.Type).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.BackgroundCompactionCandidate#run().mjava,0,0,12,0,2,0.0,4,2,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#purge(DeletionPurger,int).mjava,0,0,4,2,0,0.6666666865348816,5,3,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#NoSpamLogStatement(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#IntervalTree(Collection[I]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#maybeAddTable(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getAdditionalWhereClauses().mjava,0,1,2,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSReadError#FSReadError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StatusLogger#log().mjava,0,2,54,0,7,0.0784313753247261,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#truncateBlocking(long).mjava,0,0,3,1,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getString(ByteBuffer).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitValidation(ColumnFamilyStore,Validator).mjava,0,0,3,2,1,0.05263157933950424,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#reset(boolean).mjava,0,0,5,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_keyspace(KsDef).mjava,0,0,13,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isEmpty().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#setError(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentFalsePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isNotNull().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#toString(CFMetaData,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncComplete#SyncComplete(RepairJobDesc,NodePair,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getNormalAndBootstrappingTokenToEndpointMap().mjava,0,2,8,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_build(Iterable[K],int,UpdateFunction[K,V]).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput.Builder#build().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#equals(Object).mjava,0,0,1,1,1,0.2222222238779068,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#serialize(DataType,int,Object).mjava,0,0,9,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#[K,V]_create(long,ISerializer[V]).mjava,0,0,2,2,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\GuidGenerator#convertToStandardFormat(String).mjava,0,0,16,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#createNotification(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[T-extends-Throwable]_merge(T,T).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Literal#getText().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#compareNextTo(Slice.Bound).mjava,0,0,8,1,1,0.06666667014360428,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#findBaseTable(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#stop().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#getPriority().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#protectedResources().mjava,0,0,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#takeFromPool(int,boolean).mjava,0,0,5,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#isLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#capacity().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializedSlicesSize(Slices,boolean,CFMetaData).mjava,0,0,9,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputPlus#hasPosition().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#allFilesPresent(LogFile,Map[LogRecord,Set[File]],Map[LogRecord,Set[File]]).mjava,0,0,14,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(InetAddress,MessagingService.Verb,T,IVersionedSerializer[T],Map[String,byte[]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#updatePeerInfo(InetAddress).mjava,0,0,19,1,1,0.0,19,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata.Codec#decode(ByteBuf,int).mjava,0,0,17,2,12,0.0714285746216774,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestScheduler().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#deserializeNamesSelectionAndFilter(DataInputPlus,CFMetaData).mjava,0,0,15,2,6,0.3214285671710968,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#OneToOne(List[#-extends-Iterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.Serializer#serialize(ReadResponse,DataOutputPlus,int).mjava,0,0,14,3,3,0.032258063554763794,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Response#setWarnings(List[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#supportedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#discardUnusedTail().mjava,0,3,5,0,2,0.3333333432674408,5,3,15,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#mergedMarkers().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.State#log(State).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#write(Memory,long,long).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#getStatement(String,long).mjava,0,0,2,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#update(Collection[SSTableReader],boolean).mjava,0,0,1,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#checkOutputSpecs(JobContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompress(ByteBuffer,ByteBuffer).mjava,0,0,16,2,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#register(Event.Type,Channel).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader.Builder#Builder(ChannelProxy,CompressionMetadata).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator.RaceAllocated#poll().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Setter#Setter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getPendingTasks().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#search(Interval[C,D]).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#constructParametersString(CommitLogDescriptor).mjava,0,0,3,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getInitializationTask().mjava,0,0,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#maybeRefreshOverlaps().mjava,0,1,2,0,0,0.0,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#Builder(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#eventSerializedSize(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Decoder#decode(ChannelHandlerContext,ByteBuf,List[Object]).mjava,0,0,32,3,11,0.09375,288,9,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.ReplayFilter#create().mjava,0,1,10,0,4,0.05263157933950424,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getScanners(Collection[SSTableReader],Range[Token]).mjava,0,0,16,2,4,0.1190476194024086,2,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#values(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,QueryState,QueryOptions).mjava,0,0,9,3,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#grow(long[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessBound#appliesTo(Row).mjava,0,0,25,1,8,0.032258063554763794,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#Scrubber(ColumnFamilyStore,LifecycleTransaction,boolean,OutputHandler,boolean,boolean).mjava,0,0,20,6,2,0.20000000298023224,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#ReplayingBatch(UUID,int,List[ByteBuffer]).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc#RepairJobDesc(UUID,UUID,String,String,Collection[Range[Token]]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#NIODataInputStream(ReadableByteChannel,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getPath().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#commit().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.INRaw#prepare(String,List[#-extends-ColumnSpecification]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#findDesc(int,Iterable[SSTableReader]).mjava,0,0,0,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.EndpointFilter#EndpointFilter(String,Multimap[String,InetAddress]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#remove(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSplitSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#abort().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#ensureReleased().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#isOpen().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getComponents().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#assureSufficientLiveNodes().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#isShuttingDown().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#resetCrc().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#removeNode(String).mjava,0,0,29,1,7,0.22727273404598236,256,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#subscribe(INotificationConsumer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#get(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferRanges(InetAddress,String,Collection[Range[Token]],String...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#deserialize(DataInputPlus,CFMetaData).mjava,0,0,10,2,4,0.1666666716337204,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#delete(HintsDescriptor).mjava,0,0,8,1,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readStringMap(ByteBuf).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#open(Descriptor,Set[Component],CFMetaData,boolean,boolean).mjava,0,0,38,5,8,0.13953489065170288,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeAggregateFunction#NativeAggregateFunction(String,AbstractType[#],AbstractType[#]...).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#intersect(OpenBitSet).mjava,0,0,1,1,6,0.125,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#replicatedOwnershipStats(TokenMetadata,AbstractReplicationStrategy,InetAddress).mjava,0,0,10,3,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getRawVersion(InetAddress).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reBuffer().mjava,0,1,6,0,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#makeBounds(SSTableReader,DataRange).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#truncateAllHints().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getComparator().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativePool#NativePool(long,long,float,Runnable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#removeInvalidPreparedStatements(Iterator[ParsedStatement.Prepared],String,String).mjava,0,0,4,3,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#cloneWithHigherVersion(VersionedValue).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets#Sets().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getByte(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_cluster_name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.NullLiteral#prepare(String,ColumnSpecification).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#bind(QueryOptions).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\SplittingSizeTieredCompactionWriter#realAppend(UnfilteredRowIterator).mjava,0,0,7,1,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#loadFromDisk(Slice.Bound,Slice.Bound,boolean).mjava,0,0,21,3,4,0.13513512909412384,80,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.NullLiteral#getText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#disableAutoCompaction().mjava,0,3,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#toString(CFMetaData,boolean).mjava,0,0,55,2,7,0.0,18,7,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#updateOpenMarker(RangeTombstoneMarker).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#oldestUnrepairedTombstone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#[T]_newTaskFor(Callable[T]).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableHistogram#update(long).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#getFunctions().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#serialize(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#deserializeOne().mjava,0,2,6,0,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readShortLength(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#generateArguments(Class[#][],List[ColumnIdentifier]).mjava,0,0,18,2,1,1.5714285373687744,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validateNotFullIndex(IndexTarget).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setIncrementalBackupsEnabled(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AggregateFcts#isCountRows(Function).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#scrubOne(ColumnFamilyStore,LifecycleTransaction,boolean,boolean,boolean).mjava,0,0,4,5,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#StreamSession(InetAddress,InetAddress,StreamConnectionFactory,int,boolean,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#readRecords(Set[LogRecord]).mjava,0,0,37,1,7,0.0746268630027771,257,10,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#fsyncWritersBlockingly(Iterable[HintsStore]).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.ValueSerializer#serializedSize(IRowCacheEntry).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#getMessageType().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#getUpdateFor(DecoratedKey).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrate().mjava,0,1,8,0,0,0.3636363744735718,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#readAndCompute().mjava,0,2,7,0,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateKeyspace(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable.Tidy#Tidy(AutoCloseable[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultList#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#applyToRow(Row).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#shutdownClientServers().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#isReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#[K,V]_getInstance(AbstractType[K],AbstractType[V],boolean).mjava,0,0,3,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns.Builder#addAll(PartitionColumns).mjava,0,0,8,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateTTL(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addCell(ColumnDefinition,CellPath,ByteBuffer).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isCompatible().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#addLatency(InetAddress,long).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#isWritetimeSelectorFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ParameterizedClass#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#Merger(int,DeletionTime,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isAlive(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getInt(String,Integer).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#createWriterForAntiCompaction(ColumnFamilyStore,File,int,long,Collection[SSTableReader],LifecycleTransaction).mjava,0,0,7,6,1,0.1428571492433548,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getReplicationStrategy().mjava,0,43,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.InstanceTidier#InstanceTidier(Descriptor,CFMetaData).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#frozenMap(String,Map[#,#]).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\OverloadedException#OverloadedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.INRaw#INRaw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isStatic().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokenToEndpointMap().mjava,0,1,8,0,3,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getMetricName().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#removeInternal(int).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllSettled().mjava,0,1,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionController#maxPurgeableTimestamp(DecoratedKey).mjava,0,0,0,1,0,3.6666667461395264,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#simpleIndexOn(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#getMessagingVersion().mjava,0,2,0,0,0,0.0,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#isForThrift(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#withHost(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropRoleStatement#execute(ClientState).mjava,0,0,9,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#Prepend(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#RepairRunnable(StorageService,int,RepairOption,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getEndpointInfo(InetAddress).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.CurrentFormatIterator#CurrentFormatIterator(CFMetaData,DataInputPlus,SerializationHeader,SerializationHelper).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.RowIterator#RowIterator().mjava,0,0,17,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#forPaging(AbstractBounds[PartitionPosition],ClusteringComparator,Clustering,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,26,3,4,0.0,22,5,64,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#count().mjava,0,8,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#ownershipRatio().mjava,0,12,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples#Tuples().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#create(ColumnFamilyStore,int,Iterable[SSTableReader],SizeTieredCompactionStrategyOptions).mjava,0,0,3,4,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getSSTableReadMeter(String,String,int).mjava,0,0,6,3,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintResponse#HintResponse().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#openEarly().mjava,0,0,9,0,6,0.1764705926179886,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isNativeTransportRunning().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#forThrift(int,List[ColumnSpecification]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getSimpleStates().mjava,0,0,10,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setTraceProbability(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader#reBufferMmap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#finish(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#checkAccess(ClientState).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#announceMigration(boolean).mjava,0,0,1,1,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#get(int).mjava,0,0,3,1,2,0.1428571492433548,8,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitInfo#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#makeSliceIterator(SliceableUnfilteredRowIterator).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#getClientAddress().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#setSize(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#hash32(ByteBuffer,int,int,int).mjava,0,0,7,4,8,0.022727273404598236,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\HeapPool#needToCopyOnHeap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#commit().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#writeOne(Pair[T,Object],ByteBuf,int).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#complexColumns().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#fromRowIterator(RowIterator).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,Charset).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#throwIfCannotContinue(DecoratedKey,Throwable).mjava,0,0,4,2,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#getUnfilteredRowIterator(ColumnFilter,Partition).mjava,0,0,13,2,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#fromUnfilteredRowIterator(UnfilteredRowIterator).mjava,0,0,20,1,10,0.3499999940395355,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokens(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#put(K,V).mjava,0,0,4,2,2,0.05882352963089943,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#stateFunction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\BytesConversionFcts#all().mjava,0,1,9,0,1,0.1428571492433548,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#build().mjava,0,9,6,0,3,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeScalarFunction#NativeScalarFunction(String,AbstractType[#],AbstractType[#]...).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#streamRanges(Map[String,Multimap[Range[Token],InetAddress]]).mjava,0,0,20,1,13,0.05263157933950424,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#compareNextTo(Slice.Bound).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#apply(Mutation,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#compressionParametersFromThrift(Map[String,String]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeSliceVerbHandler#serializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isAutoBootstrap().mjava,0,4,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#totalBlockFor().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#replaceKiller(Killer).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#updateLimitForQuery(int,Slices).mjava,0,0,6,2,0,0.1428571492433548,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#getFunctions().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#fromString(String).mjava,0,0,26,1,10,0.02222222276031971,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#[T-extends-Metric]_register(MetricName,T).mjava,0,0,7,2,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#serializedSizeWithLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#SetSerializer(TypeSerializer[T],Comparator[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#driverTypes(List[AbstractType[#]]).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder#RawBuilder(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LocalDataResponse#LocalDataResponse(UnfilteredPartitionIterator,ColumnFilter).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#exclusiveClose(boolean,ByteBuffer[],DeletionTime).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#ColumnDefinition(CFMetaData,ByteBuffer,AbstractType[#],int,Kind).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getDirectories().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[],byte[]).mjava,0,2,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#isRunning().mjava,0,1,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#successfulParentRepair(UUID,Collection[Range[Token]]).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#getUpdateFor(DecoratedKey).mjava,0,0,2,1,0,0.1666666716337204,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables.DefaultNames#defaultCompactValueName().mjava,0,5,1,0,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#abortObsoletion(List[LogTransaction.Obsoletion],Throwable).mjava,0,0,3,2,0,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#ComplexColumnData(ColumnDefinition,Object[],DeletionTime).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.SSTableTidier#abort().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#prepare(String,ClientState,boolean).mjava,0,0,8,3,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MaxSSTableSizeWriter#realAppend(UnfilteredRowIterator).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#pickWriteableDirectory(List[DataDirectoryCandidate]).mjava,0,0,3,1,1,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#without(String).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientTransportFactory(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#Connection(Channel,int,Tracker).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#StatementRestrictions(StatementType,CFMetaData,WhereClause,VariableSpecifications,boolean,boolean,boolean,boolean).mjava,0,0,37,8,5,0.38461539149284363,6480,15,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(String,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.HintRunnable#run().mjava,0,0,5,0,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(short).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#trimTrailingZeros().mjava,0,0,0,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftFilter#withNewExpressions(List[Expression]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CachedHashDecoratedKey#filterHash(long[]).mjava,0,0,0,1,0,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#parseComparator(int,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#isPartitionKeyRestrictionsOnToken().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRangeRpcTimeout().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.Operator.GreaterThanOrEqualTo#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#cellPathComparator().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommand#createMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#equals(Object).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#BloomFilter(int,IBitSet,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionPurger#shouldPurge(LivenessInfo,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[T]_toArray(T[],int).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#PartitionerDefinedOrder(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setWriteConsistencyLevel(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#reset().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#copy().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SnapshotMessage#SnapshotMessage(RepairJobDesc).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getString(Collection[ByteBuffer]).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setRangeRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator.MergeReducer#trivialReduceIsTrivial().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\GuidGenerator#guid().mjava,0,0,9,0,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#planId().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#openDeletionTime(boolean).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onDropKeyspace(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearEphemeralSnapshots(Directories).mjava,0,0,4,1,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#computeVIntSize(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#doAbort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#addRow(TemporalRow).mjava,0,0,9,1,3,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.ColumnValue#getText().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkFalse(boolean,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftClientState#getSchedulingValue().mjava,0,1,2,0,0,0.0,3,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#totalBlockFor().mjava,0,0,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#disable().mjava,0,3,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#CqlBulkRecordWriter(Configuration).mjava,0,0,9,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#nonExpiringLiveCells().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getReplayPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Serializer#serializedSize(ColumnFilter,int).mjava,0,0,6,2,1,0.06666667014360428,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#currentChunk().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#getId(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#isCancelled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#ignoreOptionalProblems().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#groupSSTablesForAntiCompaction(Collection[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getLocalHostId().mjava,0,2,10,0,3,0.2222222238779068,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalToken(Token,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#replace(File,String...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#[T2]_read(DataInputPlus,int,int).mjava,0,0,19,3,11,0.02631578966975212,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#forceShutdown(Throwable).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getConnectionPool(InetAddress).mjava,0,0,4,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getReadPoolingOptions(Configuration).mjava,0,0,13,1,4,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#expandUserTypes(List[AbstractType[#]]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#getReturnTypes().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#fromString(String).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#prepare(String,ColumnSpecification).mjava,0,0,8,2,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger#maybeWrap(UnfilteredPartitionIterator,CFMetaData,int).mjava,0,0,3,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#serialize(DataOutput).mjava,0,0,12,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#addConditionsTo(CQL3CasRequest,Clustering,QueryOptions).mjava,0,0,4,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#allocated(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#triggersDiff(Triggers,Triggers).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.CompositeComponent#CompositeComponent(ByteBuffer,byte).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#setPhiConvictThreshold(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#response(MessageIn[PrepareResponse]).mjava,0,0,9,1,1,0.2631579041481018,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadHostIds().mjava,0,1,5,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#checkPackageAccess(String).mjava,0,0,4,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.Factory#buildTServer(Args).mjava,0,0,23,1,8,0.021739130839705467,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexScanPositionFromBinarySearchResult(int,IndexSummary).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rpcReady(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#addOffset(long).mjava,0,0,3,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator.Region#Region(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#isEmpty().mjava,0,23,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#LongType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\KeyCacheKey#equals(Object).mjava,0,0,5,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats.OptionFilter#verifyKeyspaces(List[String]).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#enable().mjava,0,3,2,0,0,0.1428571492433548,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setRowCacheSavePeriodInSeconds(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.TraceSessionFutureTask#run().mjava,0,0,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#getValuesType().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#HintsCatalog(File,Map[UUID,List[HintsDescriptor]]).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getExpireTimeForEndpoint(InetAddress).mjava,0,0,2,1,1,5.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#toString().mjava,0,0,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\ExpiredTraceState#elapsed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#create(CFMetaData,Descriptor,long,long,int,SerializationHeader,LifecycleTransaction).mjava,0,0,2,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithMarker#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#checkNeedsUpgrade(UntypedResultSet,boolean,boolean).mjava,0,0,4,3,0,0.3333333432674408,6,3,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#uncompress(ByteBuffer,Compression).mjava,0,0,13,2,6,0.02083333395421505,21,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#addChunkFromGlobalPool().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.Prepared#Prepared(CQLStatement).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#populateTokenInfo(BaseTokenInfo[Unit,#],GroupInfo).mjava,0,0,5,2,5,0.25925925374031067,36,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#clone(DecoratedKey,OpOrder.Group).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedUpdate#ParsedUpdate(CFName,Attributes.Raw,List[Pair[ColumnIdentifier.Raw,Operation.RawUpdate]],WhereClause,List[Pair[ColumnIdentifier.Raw,ColumnCondition.Raw]],boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#ErrorMessage(TransportException,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\KeyspaceMetrics#createKeyspaceGauge(String,MetricValue).mjava,0,0,5,2,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getOrCreateHostData(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#GossipDigest(InetAddress,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#allViews().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#contains(Range[T]).mjava,0,0,7,1,2,0.25,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#beginAndRepairPaxos(long,DecoratedKey,CFMetaData,List[InetAddress],int,ConsistencyLevel,ConsistencyLevel,boolean,ClientState).mjava,0,0,32,9,11,0.3050847351551056,21,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#tree().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#CommitLogDescriptor(int,long,ParameterizedClass).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#isEmptyValueMeaningless().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#addComplexDeletion(ColumnDefinition,DeletionTime).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getEphemeralSnapshotMarkerFile(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSSLTruststorePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#getPermissions(IResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#supportsExpression(ColumnDefinition,Operator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#removeSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OverlapIterator#overlaps().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#addInternal(int,Slice.Bound,Slice.Bound,long,int).mjava,0,0,4,5,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#unfilteredIterator(ColumnFilter,Slices,boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator.Table#Table(long,CFMetaData).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getAdjustedTimestamp(UUID).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#startup().mjava,0,2,5,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getBlockingFlushTask().mjava,0,0,1,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#lz4(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.IndexSummarySerializer#serialize(IndexSummary,DataOutputPlus,boolean).mjava,0,0,11,3,2,0.3684210479259491,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_column_family(CfDef).mjava,0,0,19,1,2,0.0,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#AbstractUnfilteredRowIterator(CFMetaData,DecoratedKey,DeletionTime,PartitionColumns,Row,boolean,EncodingStats).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer.Allocation#write(Iterable[UUID],Hint).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#clearSelf().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxGauge#JmxGauge(Gauge[#],ObjectName).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#getColumns().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#getColumnDefs().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#of(Function...).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#get(long).mjava,0,0,1,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\RMIServerSocketFactoryImpl#createServerSocket(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getTotalTimeouts().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#createUnitInfos(Map[Object,GroupInfo]).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#addOrReplaceColumnDefinition(ColumnDefinition).mjava,0,0,16,1,2,0.1111111119389534,20,3,21,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#getEntities().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#getCurrentPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#createTriggerFromTriggerRow(UntypedResultSet.Row).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#next().mjava,0,2,1,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.RangeSliceSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#writeUnsignedVInt(long,DataOutput).mjava,0,0,4,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#serialize(DeletionTime,DataOutputPlus).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateVersion().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetCompactionThroughput#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#getHelper(Hashable,Token,Token,byte,Token).mjava,0,0,5,5,1,0.4000000059604645,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isJoined().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setCacheKeysToSave(int,int,int).mjava,0,0,4,3,2,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#resultify(String,RowIterator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toInternalFilter(CFMetaData,ColumnParent,SliceRange).mjava,0,0,5,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateLeaving(InetAddress).mjava,0,0,12,1,1,0.2777777910232544,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#toPrimaryKeyRestriction(Restriction).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#updateSnitch(String,Boolean,Integer,Integer,Double).mjava,0,0,12,5,2,0.07407407462596893,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#delete(File).mjava,0,0,6,1,0,0.0,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeValue(ByteBuffer,ByteBuf).mjava,0,0,5,2,1,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#dcLocalReadRepairChance(double).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getFilesOfType(NavigableSet[File],Type).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBasePartitionIterator#EmptyBasePartitionIterator().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readAggregateTimestamp(String,String,List[String]).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#supportsOperator(ColumnDefinition,Operator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#getTransaction(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportMaxConcurrentConnections().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterRoleStatement#checkAccess(ClientState).mjava,0,0,17,1,2,0.1304347813129425,24,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#doAbort(Throwable).mjava,0,0,2,1,0,0.3333333432674408,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ResponseResolver#getMessages().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#isRunning().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#serialize(T).mjava,0,0,3,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#seek(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Value#Value(List[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkTrue(boolean,String,Object...).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter#isSSTableLargerEnough(SSTableReader,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#updateWithCurrentValuesFromCache(List[PartitionUpdate.CounterMark],ColumnFamilyStore).mjava,0,0,11,2,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#isCopy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#writeLocalDeletionTime(int,DataOutputPlus).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedMarker#getValue(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#deletionInfo().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stopGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#unsharedHeapSizeExcludingData().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#QueryState(ClientState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.ReaderFactory#open(Descriptor,Set[Component],CFMetaData,Long,StatsMetadata,SSTableReader.OpenReason,SerializationHeader).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#discard(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromPager#FromPager(SelectStatement,QueryPager,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#tokens(Collection[Token]).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#CassandraAuthorizer().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRolesCacheMaxEntries().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(List[AbstractType[#]]).mjava,0,0,3,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getFullyExpiredSSTables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#preventSystemKSSchemaModification(String,DataResource,Permission).mjava,0,0,7,3,0,0.4166666567325592,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#isCompacting(Iterable[ColumnFamilyStore]).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#View(List[Memtable],List[Memtable],Map[SSTableReader,SSTableReader],Map[SSTableReader,SSTableReader],SSTableIntervalTree).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#newSaslNegotiator(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#CompactionController(ColumnFamilyStore,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readByte().mjava,0,3,4,0,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEffectiveIndexIntervalAfterIndex(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#openBound(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#RegisterMessage(List[Event.Type]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#doPreCleanup(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator#isReverseOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer#UnfilteredDeserializer(CFMetaData,DataInputPlus,SerializationHelper).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Serializers#indexEntryClusteringPrefixSerializer(Version,SerializationHeader).mjava,0,0,24,2,5,0.1428571492433548,13,5,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#markDispatchOffset(HintsDescriptor,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#toString().mjava,0,0,43,0,2,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateView(ViewDefinition).mjava,0,0,10,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue#versionString(String...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService.PendingRangeTask#run().mjava,0,0,10,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexSummarySamplingLevel().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#addHash(byte[],long).mjava,0,0,1,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#queryMemtableAndSSTablesInTimestampOrder(ColumnFamilyStore,boolean,ClusteringIndexNamesFilter).mjava,0,0,79,3,8,4.300000190734863,640,10,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#SubPool(long,float).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getMeanRate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#create(String,long,long,int,SerializationHeader,LifecycleTransaction).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#validateCRC(int,int).mjava,0,0,0,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revoke(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Mx4jTool#getPort().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#CreateIndexStatement(CFName,IndexName,List[IndexTarget.Raw],IndexPropDefs,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#insert(ByteBuffer,Clustering,Cell,LivenessInfo,OpOrder.Group).mjava,0,0,7,5,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#name().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MarshalException#MarshalException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#redistributeSummaries(List[SSTableReader],Map[UUID,LifecycleTransaction],long).mjava,0,0,30,3,9,0.05882352963089943,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.SuperColumnsPartitionMerger#SuperColumnsPartitionMerger(UnfilteredRowIterator,int).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#build().mjava,0,6,8,0,0,0.0,4,2,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#addCmdOption(String,String,boolean,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#readRow(LegacyLayout.LegacyAtom).mjava,0,0,9,1,1,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#getSSTableFormat().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#abort().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.SecureInitializer#initChannel(Channel).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#params().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement.Prepared#Prepared(CQLStatement,List[ColumnSpecification],Short[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#findUpdatedReplicationStart(TokenInfo[Unit],CandidateInfo[Unit]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRemoteDataResponse#makeIterator(CFMetaData,ReadCommand).mjava,0,0,28,2,7,0.10869564861059189,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#root().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#repairedNodes().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata.Codec#encode(PreparedMetadata,ByteBuf,int).mjava,0,0,18,3,1,0.03030303120613098,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#containsOnlyStaticColumns().mjava,0,1,5,0,0,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\MoreRows#extend(RowIterator,MoreRows[#-super-RowIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Serializer#serialize(DataRange,DataOutputPlus,int,CFMetaData).mjava,0,0,6,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#compareTo(CounterId).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getTimestamp().mjava,0,1,3,0,3,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#getLogger(Logger,long,TimeUnit).mjava,0,0,2,3,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#maybeExecuteImmediately(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\EventMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#commit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#compareTo(CassandraVersion).mjava,0,0,2,1,1,0.0,128,7,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#globalBranchIndex().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#serialize(SyncRequest,DataOutputPlus,int).mjava,0,0,8,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#reversed().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#initialize(InputSplit,TaskAttemptContext).mjava,0,0,25,2,2,0.20512820780277252,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#column().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#setMemoryPoolCapacityInMB(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#bloomFilterFpChance(double).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#eventSerializedSize(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.SimpleExpression#isSatisfiedBy(CFMetaData,DecoratedKey,Row).mjava,0,0,36,3,9,0.06756756454706192,44,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#LogRecord(Type,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getRemoteAddress().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#finalFunction().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#doCommit(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams.Option#toString().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#bb(Object,AbstractType[#]).mjava,0,0,5,2,0,0.0833333358168602,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.InstanceTidier#tidy().mjava,0,0,11,0,2,0.03125,256,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#setOpenResult(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#Options(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTombstoneWarnThreshold().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#saveOutOfOrderRow(DecoratedKey,DecoratedKey,UnfilteredRowIterator).mjava,0,0,4,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#MultiCBuilder(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#path().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier#UDFByteCodeVerifier().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#getMean().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger#applyToPartition(UnfilteredRowIterator).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspaces().mjava,0,0,6,0,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CommitLogMetrics#CommitLogMetrics().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#list(CQL3Type.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#get(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.MerkleTreesSerializer#deserialize(DataInputPlus,int).mjava,0,0,5,2,4,0.0,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getPartitionUpdates().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionInBound#appliesTo(Row).mjava,0,0,7,1,2,0.03448275849223137,3,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#Literal(Type,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionEntryIndex#isStale(Row,ByteBuffer,int).mjava,0,0,8,3,6,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getLong(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRolesValidity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexFunctions#getIndexedValueType(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setByte(long,byte).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#release().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#fail(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getCompletedMesssages().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#compareMaps(AbstractType[#],AbstractType[#],ByteBuffer,ByteBuffer).mjava,0,0,15,4,10,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createEndpointSnitch(String).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#sendMessage(StreamMessage).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getTargetVersion().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getCounterCacheKeysToSave().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#toJSONString(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#maybeGetIndexCfs(ColumnFamilyStore,ReadCommand).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck#getGossipDigestList().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager.StreamRateLimiter#StreamRateLimiter(InetAddress).mjava,0,0,10,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#findFunction(FunctionName,List[AbstractType[#]]).mjava,0,0,5,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#truncateHints().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator.Type#Type(long,UserType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#getConnectedClients().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#rollepoch(long,long,long).mjava,0,0,4,3,1,0.190476194024086,2,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#isFrozen().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getGossipStatus(EndpointState).mjava,0,0,3,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeAuthProvider(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#getConnectedClients().mjava,0,1,2,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.MovingAverageCoalescingStrategy#[C-extends-Coalescable]_coalesceInternal(BlockingQueue[C],List[C],int).mjava,0,0,15,3,1,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#escape(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#getFunctions().mjava,0,0,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitCacheWrite(AutoSavingCache.Writer).mjava,0,0,13,1,1,0.0,4,2,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessInBound#appliesTo(Row).mjava,0,0,23,1,10,0.0,24,12,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getHintedHandoffEnabled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#ratio(float,float).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterators#digest(RowIterator,MessageDigest).mjava,0,0,13,2,0,0.25,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#split(String).mjava,0,0,10,1,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredPartitions#metadata().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#MerkleTrees(IPartitioner,Collection[MerkleTree]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceBlockingFlush().mjava,0,11,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#addClassPath(File).mjava,0,0,15,1,3,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#getKeyTypes(CFMetaData).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#addSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#[T]_toArray(T[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UseStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,1,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.SizeComparator#compare(SSTableReader,SSTableReader).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_notIn(Set[T]...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#copy(Object,long,ByteBuffer,int,int).mjava,0,0,6,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Bound#getCollectionElementValue().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#copy(AbstractAllocator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#grabCounterLocks(Keyspace,List[Lock]).mjava,0,0,14,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#selectsAllPartition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#partitionColumns().mjava,0,31,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Deleter#Deleter(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#execute(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#RowMark(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateCounterCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCompacting(int).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#indexDefsFromThrift(CFMetaData,String,String,AbstractType[#],AbstractType[#],List[ColumnDef]).mjava,0,0,17,6,6,0.03999999910593033,18,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getPartitionKeyToken().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFProperties#setOrdering(ColumnIdentifier,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#applyToMarker(RangeTombstoneMarker).mjava,0,0,9,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#ResultSet(List[ColumnSpecification]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumWriter#ChecksumWriter(DataOutput).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Literal#prepare(String,ColumnSpecification).mjava,0,0,11,2,5,0.10526315867900848,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\IndexEntry#IndexEntry(DecoratedKey,Clustering,long,ByteBuffer,Clustering).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithConfirm(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#enqueue(MessageOut[#],int).mjava,0,0,3,2,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#toString().mjava,0,0,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#remove(RowCacheKey).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#describeRing(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#removeColumnDefinition(ColumnDefinition).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#referencesUserType(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getStringSetting(String,Configuration).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#deserializeForNativeProtocol(ByteBuffer,int).mjava,0,0,8,2,4,0.0357142873108387,6,3,19,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#addLocalApplicationStates(List[Pair[ApplicationState,VersionedValue]]).mjava,0,0,3,1,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#deconstruct(ByteBuffer).mjava,0,0,6,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#close(Closeable...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#setCustomPayload(Map[String,ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#makeCell(ColumnDefinition,ByteBuffer,CellPath).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#convertSchemaToMutations(Map[DecoratedKey,Mutation],String).mjava,0,0,12,2,3,0.0,5,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#getCompressor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#getUnfilteredRowIterator(ColumnFilter,Partition).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes.Builder#build().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RemoteSyncTask#RemoteSyncTask(RepairJobDesc,TreeResponse,TreeResponse).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[T-extends-Throwable]_failIfCanCast(Throwable,Class[T]).mjava,0,0,2,2,0,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamEvent.ProgressEvent#ProgressEvent(UUID,ProgressInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#setForSlice(Slice).mjava,0,0,4,1,0,0.5,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#withUpdatedTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getApplicationStateValue(InetAddress,ApplicationState).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#isPrimaryRange().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputColumnFamily(Configuration,String,String,boolean).mjava,0,0,4,4,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#makeRowRange(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#ColumnFamilyStoreMBeanIterator(MBeanServerConnection).mjava,0,0,17,1,5,0.23076923191547394,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#compareTo(DeletionTime).mjava,0,0,8,1,0,0.0,16,4,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getAndAppendComparator(int,ByteBuffer,StringBuilder).mjava,0,0,9,3,2,0.0,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#isPreviouslyReturnedPartition(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator.PlainTextSaslAuthenticator#getAuthenticatedUser().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#ColumnCondition(ColumnDefinition,Term,Term,List[Term],Operator).mjava,0,0,0,5,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#updateProgress().mjava,0,3,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#getPartitioner().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewUtils#getViewNaturalEndpoint(String,Token,Token).mjava,0,0,28,3,5,0.27272728085517883,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter#txnProxy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#run().mjava,0,0,11,0,2,0.032258063554763794,8,4,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet(long).mjava,0,0,1,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getScanner(Range[Token],RateLimiter).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#CqlBulkRecordWriter(Configuration,Progressable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#CreateTriggerStatement(CFName,String,String,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.AbstractBean#objectName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isStatus(InetAddress,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#doMergeWith(Restriction).mjava,0,0,24,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#clustering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StopDaemon#execute(NodeProbe).mjava,0,0,3,1,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeDropViewMutation(KeyspaceMetadata,ViewDefinition,long).mjava,0,0,6,3,2,0.10000000149011612,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#next().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#writeTimestamp(long,DataOutputPlus).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#toCQLString(Iterator[ColumnDefinition]).mjava,0,0,8,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#description().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#AbstractCell(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommandSerializer[SnapshotCommand]#serialize(SnapshotCommand,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher#filterStaleEntries(UnfilteredRowIterator,ByteBuffer,List[IndexEntry],OpOrder.Group,int).mjava,0,0,18,5,6,0.19565217196941376,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isNotNull().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ExceptionCode#fromValue(int).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#simpleColumns().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#list(DirectoryStream[Path]).mjava,0,0,8,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isShutdown(InetAddress).mjava,0,0,5,1,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#CassandraIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPhiConvictThreshold(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics#getJmxMetric(MBeanServerConnection,String,String,String).mjava,0,0,6,4,2,0.0,20,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#beforeAppend(DecoratedKey).mjava,0,0,3,1,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#serializeValuesWithoutSize(ClusteringPrefix,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,8,4,4,0.3125,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#deserializeToken(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\RebuildIndex#execute(NodeProbe).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#VariableSpecifications(List[ColumnIdentifier]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#ImmutableBTreePartition(CFMetaData,DecoratedKey,PartitionColumns,Row,Object[],DeletionInfo,EncodingStats).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#isIndexBuilt(String,String).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#sendHint(Hint).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#make(ClusteringComparator,Object...).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#compareListOrSet(AbstractType[#],ByteBuffer,ByteBuffer).mjava,0,0,12,3,7,0.05882352963089943,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSReadError#FSReadError(Throwable,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse#makeDigest(UnfilteredPartitionIterator,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#tombstone(ColumnDefinition,long,int,CellPath).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType.CollectionPathSerializer#deserialize(DataInputPlus).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#isInterestedIn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#serializeValues(List[T]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#MetricName(Class[#],String,String).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getLengthInBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions#newBuilder().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.SlicesIterator#computeNext().mjava,0,0,7,0,1,0.0,7,4,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,String,String,List[IndexExpression]).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#MapEqualityExpression(ColumnDefinition,ByteBuffer,Operator,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService#calculatePendingRanges(AbstractReplicationStrategy,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#prepareTracingSession(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#tryMlockall().mjava,0,1,12,0,0,0.07692307978868484,8,3,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#getIdxOfField(UserType,ColumnIdentifier).mjava,0,0,3,2,0,0.0,3,2,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#abs(long).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#collectStats(Cell,PartitionStatisticsCollector).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables.DefaultNames#defaultClusteringName().mjava,0,4,1,0,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#add(Slice.Bound,Slice.Bound).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getOutputCommitter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfLongString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getContext().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#addTransferFiles(Collection[SSTableStreamingSections]).mjava,0,0,11,1,5,0.0833333358168602,7,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#toByteArray().mjava,0,0,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#SchemaChange(Change,Target,String,String,List[String]).mjava,0,0,0,5,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Config#setClientMode(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\RawSelector#RawSelector(Selectable.Raw,ColumnIdentifier).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#supportedOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#reloadIndexMetadataProperties(CFMetaData).mjava,0,0,9,1,1,0.1818181872367859,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Type#isFinal().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#create(UserType).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#tryModify(Iterable[SSTableReader],OperationType).mjava,0,0,5,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#preferredBufferType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#cachedOnlyTokenMap().mjava,0,2,4,0,1,0.07692307978868484,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.CoalescingStrategy#[C-extends-Coalescable]_coalesce(BlockingQueue[C],List[C],int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#isDone().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#isInclusive(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\CustomIndexExpression#prepareValue(CFMetaData,AbstractType[#],VariableSpecifications).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component.Type#Type(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#setForSlice(Slice).mjava,0,0,17,1,1,0.13333334028720856,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateFunction(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#isSelect().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,8,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#unsubscribe(INotificationConsumer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\OutgoingFileMessage#OutgoingFileMessage(Ref[SSTableReader],int,long,List[Pair[Long,Long]],long,boolean).mjava,0,0,6,6,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#[T]_getInstance(TypeSerializer[T],Comparator[ByteBuffer]).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String,int).mjava,0,0,1,2,0,0.800000011920929,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#isOutgoingConnected().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher.Transform#findEntry(Clustering).mjava,0,0,5,1,2,0.4285714328289032,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MajorLeveledCompactionWriter#realAppend(UnfilteredRowIterator).mjava,0,0,11,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#updateTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#defaultStatsMetadata().mjava,0,2,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#toString(CFMetaData).mjava,0,0,7,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\PrepareMessage#toString().mjava,0,0,8,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#compile(String,String,String).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getMemoryPoolSizeInMB().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#stats().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.IndexSummarySerializer#deserialize(DataInputStream,IPartitioner,boolean,int,int).mjava,0,0,22,5,7,0.11627907305955887,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#estimateKeys().mjava,0,2,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationExecutor#ValidationExecutor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractUnfilteredPartitionIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setMode(Mode,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.NullOutputHandler#debug(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\KeyCacheKey#hashCode().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#load(Iterable[KeyspaceMetadata]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#ColumnIdentifier(ByteBuffer,String,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFiles(Collection[StreamSummary]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#readLines(File).mjava,0,0,3,1,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openNoValidation(Descriptor,Set[Component],ColumnFamilyStore).mjava,0,0,1,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#onSuccess(StreamState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.TransferHintsTask#TransferHintsTask(HintsCatalog,Supplier[UUID]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setStreamThroughputOutboundMegabitsPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#isLatestVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setLocalHostId(UUID).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#uuid(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#asCQL3Type().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.RetriedQueuedMessage#shouldRetry().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceUpdate(KeyspaceMetadata,boolean).mjava,0,0,8,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#exclusiveCloseInclusiveOpen(boolean,ByteBuffer[],DeletionTime,DeletionTime).mjava,0,0,1,4,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#bulkLoadAsync(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getRack(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#construct(CommitLog).mjava,0,0,17,1,8,0.24242424964904785,4,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#validate(ClientState).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#getTotalCompressedBytesRead().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#selectionBuilder().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher#exceptionCaught(ChannelHandlerContext,Throwable).mjava,0,0,7,2,2,0.06666667014360428,3,2,9,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#verify(boolean).mjava,0,0,52,1,11,0.037383176386356354,72,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getFilePaths().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService.ParentRepairSession#ParentRepairSession(List[ColumnFamilyStore],Collection[Range[Token]],boolean,long,boolean).mjava,0,0,1,5,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#mergeWith(Restriction).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasCompactionAncestors().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.CellReducer#reduce(int,Cell).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getBytes(long,byte[],int,int).mjava,0,0,2,4,0,0.0,8,3,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#isEndInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#checkOnItem().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#create(CFMetaData,long,int,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.ResponseHandler#channelRead0(ChannelHandlerContext,Message.Response).mjava,0,0,2,2,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMember(InetAddress).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexSummaryOffHeapSize().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#timestamp().mjava,0,29,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isInclusive(Bound).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#accepts(OpOrder.Group,ReplayPosition).mjava,0,0,5,2,2,0.42105263471603394,72,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#getNullable(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOptions(Configuration,Set[String]).mjava,0,0,2,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#markFlushing(Memtable).mjava,0,0,16,1,3,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(ByteBuffer).mjava,0,0,5,1,2,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#offer(HintsBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#append(LogRecord).mjava,0,0,11,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamException#StreamException(StreamState,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#builder(Clustering).mjava,0,0,2,1,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon.NativeAccess#isAvailable().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isSlice().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#limit(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetAndTruncate(FileMark).mjava,0,0,9,1,2,0.190476194024086,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeInternalWithConditions(BatchQueryOptions,QueryState).mjava,0,0,4,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThreshold(String,String,int,int).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[E-extends-Exception]_perform(Stream[DiscreteAction[#-extends-E]]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#ClockAndCount(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#hasBallot(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\AnticompactionRequest.AnticompactionRequestSerializer#serialize(AnticompactionRequest,DataOutputPlus,int).mjava,0,0,5,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#confirmCandidate(CandidateInfo[Unit]).mjava,0,0,10,1,5,0.40909090638160706,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#hasBound(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toCounterLegacyCell(CFMetaData,CounterColumn).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator.CountingDigest#engineUpdate(byte).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#addRow(List[ByteBuffer]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#addAll(Collection[#-extends-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#selectOrderIterator().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ensureHasPermission(Permission,Function).mjava,0,0,7,2,0,0.2222222238779068,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#add(Operation).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_maxLeft(Boundary[T],Boundary[T]).mjava,0,0,1,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#runMayThrow().mjava,0,0,72,0,21,0.1744185984134674,576,10,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Encoder#encode(ChannelHandlerContext,Frame,List[Object]).mjava,0,0,12,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getAllFilePaths().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.ReplicationVisitor#setPrevSeen(GroupInfo,GroupInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#endPoint().mjava,0,17,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#submitHint(Mutation,InetAddress,AbstractWriteResponseHandler[IMutation]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#columns().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getHostId(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#validateComparator(int,ByteBuffer).mjava,0,0,11,2,4,0.1111111119389534,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableBinary#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\BufferType#typeOf(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncComplete#SyncComplete(RepairJobDesc,InetAddress,InetAddress,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getKeyspaceName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputIsWide(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#formBoundary(LegacyLayout.LegacyRangeTombstone,LegacyLayout.LegacyRangeTombstone).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#putIfAbsent(K,V).mjava,0,0,4,2,2,0.1111111119389534,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#deleteStaleEntry(DecoratedKey,Clustering,DeletionTime,OpOrder.Group).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement.Parsed#prepareInternal(CFMetaData,VariableSpecifications,Conditions,Attributes).mjava,0,0,12,4,5,0.07407407462596893,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getRack(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CacheMetrics#CacheMetrics(String,ICache).mjava,0,0,33,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#map(String,Map[#,#]).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#ModificationStatement(StatementType,int,CFMetaData,Operations,StatementRestrictions,Conditions,Attributes).mjava,0,0,21,7,5,0.17142857611179352,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.CollectionCellPath#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,int,String,BlockingQueue[Runnable]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onRestart(InetAddress,EndpointState).mjava,0,0,2,2,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#checkOutputSpecs(JobContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#allocated(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateUserType(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#addColumnSpecifications(QueryOptions,List[ColumnSpecification]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#builder().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#replace(K,V,V).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getHash(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropUserType(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#sync().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#writeValue(ByteBuffer,DataOutputPlus).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#value().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#compose(int,int,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setHintedHandoffThrottleInKB(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFExecutorService#afterExecute(Runnable,Throwable).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInterDCStreamThroughputOutboundMegabitsPerSec().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isIN().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.IndexGCTransaction#start().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AssignmentTestable.TestResult#testAll(String,ColumnSpecification,Collection[#-extends-AssignmentTestable]).mjava,0,0,1,3,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#compute(byte[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.TransactionalProxy#doCommit(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_buildInternal(Iterable[K],int,UpdateFunction[K,V]).mjava,0,0,7,3,5,0.04545454680919647,6,3,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRangesMM(String).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#metadata().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readDouble().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addFunctionToSchemaMutation(UDFunction,long,Mutation).mjava,0,0,21,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#live(CFMetaData,ColumnDefinition,long,ByteBuffer,CellPath).mjava,0,0,2,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#emptyCommit(DecoratedKey,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serialize(Token,DataOutputPlus,int).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.FileDigestValidator#validate().mjava,0,1,4,0,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#serializedSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPrimaryRangeFor(Token).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#has(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#toString(ClusteringComparator).mjava,0,0,18,1,1,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#calculateStreamAndFetchRanges(Collection[Range[Token]],Collection[Range[Token]]).mjava,0,0,9,2,4,0.10810811072587967,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readInt().mjava,0,11,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#columnsIndex().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#verifyBatchSize(Iterable[PartitionUpdate]).mjava,0,0,14,1,5,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#deserializeCells(CFMetaData,DataInput,SerializationHelper.Flag,int).mjava,0,0,5,4,0,0.14814814925193787,4,2,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\SecurityThreadGroup#initializeThread().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#toCQLString(CFMetaData).mjava,0,0,17,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#getCell(Row,ColumnDefinition).mjava,0,0,1,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#toString().mjava,0,0,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UuidFcts#all().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#AbstractTextSerializer(Charset).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#getSSTableSectionsForRanges(Collection[Range[Token]],Collection[ColumnFamilyStore],long).mjava,0,0,21,3,5,0.1627907007932663,8,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits#newCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher.Transform#applyToRow(Row).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#getInstance(TypeParser).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#close().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getVarint(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#authorize(AuthenticatedUser,IResource).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#Builder(ClusteringComparator,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#receivers(CFMetaData).mjava,0,0,12,1,3,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes.Builder#add(Iterable[IndexMetadata]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#MmappedRegions(MmappedRegions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#INRestriction(List[ColumnDefinition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#hasParent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#MapType(AbstractType[K],AbstractType[V],boolean).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#validateTypes(String,Function,List[#-extends-AssignmentTestable],String,String).mjava,0,0,16,5,2,0.1538461595773697,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropAggregate(UDAggregate).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#serialize(Leaf,DataOutputPlus,int).mjava,0,0,5,3,0,0.0,3,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#setupTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeKeepAlive(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#initCf(UUID,String,boolean).mjava,0,0,5,3,3,0.4000000059604645,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#getParentRepairSession(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#describeOwnership(List[Token]).mjava,0,0,16,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#checkForDuplicateNames(UserType).mjava,0,0,8,1,1,0.0,4,3,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#close(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(Socket).mjava,0,0,7,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flush(HintsBuffer).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#legacyAuthenticate(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits#forPaging(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete#ValidationComplete(RepairJobDesc).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#getCurrentPosition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#smallestGCGS().mjava,0,4,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#makeBuffer(int).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#executeAsync(int,List[ByteBuffer]).mjava,0,0,30,2,8,0.05882352963089943,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#serialize(ReadCommand,DataOutputPlus,int).mjava,0,0,57,3,9,0.25531914830207825,4,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#reloadConfiguration(boolean).mjava,0,0,14,1,4,0.0,14,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#messagingVersion(int).mjava,0,0,0,1,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#sendMessage(DataOutputStreamPlus,StreamMessage).mjava,0,0,5,2,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#getAllocatedDirectMemory().mjava,0,1,2,0,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState#visible(SSTableReader,Predicate[SSTableReader],Collection[SSTableReader]...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_closeableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#bb(Object,AbstractType[#]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#sampleKeyRange().mjava,0,0,11,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#appendCQLWhereClause(StringBuilder).mjava,0,0,22,1,1,0.10000000149011612,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputPlus#writeVInt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(Map[InetAddress,EndpointState]).mjava,0,0,4,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQLFragmentParser#[R]_parseAnyUnhandled(CQLParserFunction[R],String).mjava,0,0,4,2,6,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#Serializer(ISerializer[C],ISerializer[D],Constructor[I]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxLongTracker#MinMaxLongTracker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#build(UnfilteredRowIterator,int).mjava,0,0,17,2,6,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#copy().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetLoggingLevel#execute(NodeProbe).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#multigetSliceInternal(String,List[ByteBuffer],ColumnParent,int,SlicePredicate,ConsistencyLevel,ClientState).mjava,0,0,18,7,7,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#newQueryPlan(String,Statement).mjava,0,0,9,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RoleManagementStatement#validate(ClientState).mjava,0,0,9,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#MmappedSegmentedFile(ChannelProxy,int,long,MmappedRegions).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#addBootstrapTokens(Collection[Token],InetAddress).mjava,0,0,11,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#[T-extends-Enum[T]]_writeEnumValue(T,ByteBuf).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthMigrationListener#onDropKeyspace(String).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getObject(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#TreeDifference(Token,Token,byte).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serializedSize(BloomFilter).mjava,0,0,2,1,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#countAllBatches().mjava,0,0,5,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause.Builder#add(CustomIndexExpression).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getRangeBatchSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#createValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#setTemporary(LogFile,Collection[Set[File]],Collection[Set[File]]).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(Stage).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[K,V]_getFrozenMap(String,AbstractType[K],AbstractType[V]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#snapshotExists(String).mjava,0,0,7,1,1,0.0,4,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#unsharedHeapSize().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#SizeEstimatesRecorder().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#bind(QueryOptions).mjava,0,0,5,1,2,0.05882352963089943,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterRoleStatement#AlterRoleStatement(RoleName,RoleOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrub(boolean,boolean,boolean,boolean).mjava,0,1,4,4,0,0.0714285746216774,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AnySignal#AnySignal(Signal...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ParameterizedClass#ParameterizedClass(String,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#canAssign(boolean).mjava,0,0,1,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SharedExecutorPool#schedule(Work).mjava,0,0,6,1,1,0.5,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isClusteringColumn().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#RowAndDeletionMergeIterator(CFMetaData,DecoratedKey,DeletionTime,ColumnFilter,Row,boolean,EncodingStats,Iterator[Row],Iterator[RangeTombstone],boolean).mjava,0,0,2,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AbstractSignal#awaitUninterruptibly().mjava,0,0,6,0,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#toString().mjava,0,0,10,0,2,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#MapSerializer(TypeSerializer[K],TypeSerializer[V],Comparator[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performMaximal(ColumnFamilyStore,boolean).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#execute(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#Bound(Kind,ByteBuffer[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Substraction#prepare(String,ColumnDefinition).mjava,0,0,11,2,1,0.0416666679084301,40,4,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#get(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\ClusteringColumnIndex#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,12,3,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#getNeighbors(String,Range[Token],Collection[String],Collection[String]).mjava,0,0,31,4,11,0.0,96,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#storeRows().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber#checkManifest(CompactionStrategyManager,ColumnFamilyStore,Collection[SSTableReader]).mjava,0,0,19,3,6,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#throwIfFatal(Throwable).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.InstanceTidier#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#ColumnToCollectionType(Map[ByteBuffer,CollectionType]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readAggregate(Functions,String,String,List[String]).mjava,0,0,2,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#lastIndexOf(ByteBuffer,byte,int).mjava,0,0,5,3,0,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(PartitionUpdate,long,int,int,Mutation).mjava,0,0,3,5,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#size().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPermissionsCacheMaxEntries().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.IntervalNode#IntervalNode(Collection[I]).mjava,0,0,38,1,6,0.07999999821186066,2,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createHardLink(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#higher(V).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#CompactionTask(ColumnFamilyStore,LifecycleTransaction,int,boolean,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter#SSTableSplitter(ColumnFamilyStore,LifecycleTransaction,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#bulkLoadInternal(String).mjava,0,0,9,1,3,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#inOrderTester(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#compareTo(Token).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getClusteringColumns(QueryOptions).mjava,0,0,3,1,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#asMaterializedMap(PartitionIterator).mjava,0,0,5,1,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#beforeChange(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,0,4,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getMaxEndpointStateVersion(EndpointState).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#updateHasLegacyCounterShards(boolean).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#[K,V]_getInstance(TypeSerializer[K],TypeSerializer[V],Comparator[ByteBuffer]).mjava,0,0,3,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#addEndpoint(InetAddress).mjava,0,0,8,1,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#Client(String,int,int,ClientEncryptionOptions).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#capacity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\HostStat#HostStat(String,InetAddress,boolean,Float).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#close(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#makeLegacyComparator(CFMetaData).mjava,0,0,22,1,4,0.0,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRangesForEndpoint(String,InetAddress).mjava,0,0,10,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.AlwaysSpeculatingReadExecutor#maybeTryAdditionalReplicas().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.CounterCacheSerializer#deserialize(DataInputPlus,ColumnFamilyStore).mjava,0,0,31,2,12,0.04651162773370743,16,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#length().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#forValues(AbstractType[#]).mjava,0,0,2,1,1,0.0,6,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#hasNext().mjava,0,4,10,0,0,0.18518517911434174,18,5,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\FloatSerializer#serialize(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#toString().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#leftBoundary().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRowCacheSizeInMB(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#usesSecondaryIndexing().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#getRpcAddress(InetAddress).mjava,0,0,4,1,1,0.5,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompactionParametersJson(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getCacheDataPath(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#percentile(double).mjava,0,0,5,1,3,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.AbstractIterator#AbstractIterator(ColumnFilter,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#computeNext().mjava,0,0,10,0,0,0.05882352963089943,10,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector.State#State().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#SetKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#getFilePointer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#response(MessageIn).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDiskFailurePolicy(Config.DiskFailurePolicy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#createType().mjava,0,1,9,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Marker#bind(QueryOptions).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#size().mjava,0,52,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#ackCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#setEventHandler(EventHandler).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#available().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#copy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#reloadClasses().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.INRaw#prepare(String,ColumnSpecification).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#create(UnfilteredRowIterator,int,int).mjava,0,0,8,3,6,0.0,12,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateCounterCacheForCf(Pair[String,String]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#partitioner().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#getProgress().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onJoinCluster(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#run().mjava,0,0,8,0,0,0.0,10,4,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#WritetimeOrTTLSelector(String,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#checkOutputSpecs(Configuration).mjava,0,0,3,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TruncateHints#execute(NodeProbe).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\LockedDynamicList#remove(Node[E]).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#[T-extends-CQLStatement]_getStatement(String,Class[T],String).mjava,0,0,8,3,3,0.0,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithShortLength(ByteBuffer,DataOutputPlus).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#getTransportFactory().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getOnDiskFilePointer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#stringForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.1818181872367859,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#sendHintsAndAwait(HintsReader.Page).mjava,0,0,7,1,2,0.5833333134651184,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropRoleStatement#validate(ClientState).mjava,0,0,9,1,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputColumnFamily(Configuration).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#hasBound(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDecimal(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#makeStartSessionMutation(ByteBuffer,InetAddress,Map[String,String],String,long,String,int).mjava,0,0,13,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.CandidateInfo#prevInRing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#serialize(Object,DataOutputPlus,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getDroppedMessages().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#any(Signal...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#componentsCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.WriterFactory#open(Descriptor,long,long,CFMetaData,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#select(SSTableSet,AbstractBounds[PartitionPosition]).mjava,0,0,1,2,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#getComplexIdxAndIncrement().mjava,0,2,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#compaction(CompactionParams).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\BufferPoolMetrics#BufferPoolMetrics().mjava,0,0,5,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#setStrategy(CompactionParams).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#process(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#LegacyCell(Kind,LegacyCellName,ByteBuffer,long,int,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getOutputNativePort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serializeLargeSubsetSize(Collection[ColumnDefinition],int,Columns,int).mjava,0,0,9,4,4,0.1071428582072258,3,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#newSession().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredPartitions#FilteredPartitions(UnfilteredPartitionIterator,Filter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#atomic_batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,18,2,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#handleConnectionFailed(long,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getDroppedColumnDefinition(ByteBuffer).mjava,0,0,2,1,2,0.4285714328289032,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#assertNotBuilt().mjava,0,3,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchStoreVerbHandler#doVerb(MessageIn[Batch],int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#SingleColumnRelation(ColumnIdentifier.Raw,Operator,Term.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getFileName(File).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#doRemoveEndpoint(InetAddress,Pair[String,String]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setTraceProbability(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#truncateHints(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ReadyMessage#ReadyMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#CreateFunctionStatement(FunctionName,String,String,List[ColumnIdentifier],List[CQL3Type.Raw],CQL3Type.Raw,boolean,boolean,boolean).mjava,0,0,0,9,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,int,Collection[String],Collection[String],boolean,boolean,String...).mjava,0,0,30,7,2,0.0476190485060215,160,8,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ReadFailureException#ReadFailureException(ConsistencyLevel,int,int,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#hasNextInternal().mjava,0,1,3,0,1,0.07692307978868484,48,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#fromTimeInMillis(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStore(String).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#deserializeKind(String).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateTable(CFMetaData).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#startRepairs(UUID,UUID,String,String[],Collection[Range[Token]],Iterable[InetAddress]).mjava,0,0,14,6,4,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#getText().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables.DefaultNames#DefaultNames(Set[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#cleanupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabPool#needToCopyOnHeap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUnsafe(long,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#prepareKeyspace(ClientState).mjava,0,0,5,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\Resources#toString(List[Object]).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isStarting().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Region#top().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#addIndexBlock().mjava,0,2,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V]_wrap(Object[],Comparator[V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ListSerializer#toString(List[T]).mjava,0,0,6,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairRepairedBackground().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#stop().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#holder().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget#asCqlString(CFMetaData).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#clone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#await(long,TimeUnit).mjava,0,0,9,2,3,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#sendBackToL0(SSTableReader).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateHostId(UUID,InetAddress).mjava,0,0,13,2,2,0.0,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#numberOfEntries().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#UserType(String,ByteBuffer,List[ByteBuffer],List[AbstractType[#]]).mjava,0,0,6,4,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#skipNext().mjava,0,1,6,0,0,0.0,5,3,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#indexColumnFamilyName(IndexMetadata).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.NodeEvent#nodeAddress().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#builder().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.CustomConstructor#createDefaultMap().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#checkAccess(ClientState).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Cloner#applyToStatic(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flushData().mjava,0,1,5,0,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#submitHint(HintRunnable).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#shouldCompressConnection().mjava,0,2,4,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#FunctionResolver().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#execute(QueryState,BatchQueryOptions,boolean,long).mjava,0,0,6,4,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#makeClockSeqAndNode().mjava,0,1,3,0,2,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#copy().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#Set(ColumnFamilyStore,java.util.Set[ColumnIdentifier],ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#combine(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#ReplayPosition(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_idIn(Map[T,T]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStates().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#chooseGroup(String,Class[#]).mjava,0,0,4,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#validate(Collection[Mutation]).mjava,0,0,5,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTableName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AbstractFunctionSelector#getType().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#serialize(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTimestamp(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#doPrepare().mjava,0,0,7,0,1,0.15789473056793213,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#fromString(String).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#readRegular(SinglePartitionReadCommand.Group,ConsistencyLevel).mjava,0,0,14,2,3,0.09375,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#isContains().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#appendColumnDef(StringBuilder,ColumnDefinition).mjava,0,0,7,2,2,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_ceilIndex(Object[],Comparator[#-super-V],V).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#ageSortedSSTables(Collection[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#isLeaf().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#index(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#currentClustering().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#buildSeedsList().mjava,0,3,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_bounds(T,boolean,T,boolean).mjava,0,0,0,4,0,0.0,8,3,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#copyArrays(LegacyRangeTombstoneList,LegacyRangeTombstoneList).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#contains(Type,SSTable).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announce(Collection[Mutation]).mjava,0,0,11,1,1,0.05882352963089943,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#[T]_getBuckets(Collection[Pair[T,Long]],double,double,long).mjava,0,0,13,4,8,0.17142857611179352,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterable(Object[],int,int,Dir).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Unfiltered#isRangeTombstoneMarker().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeIterator#rangeCount().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#BatchStatement(int,Type,List[ModificationStatement],Attributes).mjava,0,0,10,4,5,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterator(Object[],Dir).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getDroppedColumns().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#isCleanAfter(ReplayPosition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getProxyMetric(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessInBound#ElementAccessInBound(ColumnCondition,QueryOptions).mjava,0,0,6,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#hasLowerBound().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#readLegacyCell(CFMetaData,DataInput,SerializationHelper.Flag).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#completeDispatchBlockingly(HintsStore).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxName().mjava,0,12,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#serialize(RowIndexEntry[IndexHelper.IndexInfo],DataOutputPlus).mjava,0,0,23,2,5,0.1388888955116272,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#unsharedHeapSize().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasOldBfHashOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#memtableFlushPeriodInMs(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#validate(ClientState).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.ElementDiscarder#execute(DecoratedKey,UpdateParameters).mjava,0,0,6,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#mergeMutations(Iterable[Mutation]).mjava,0,0,11,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Upgrader#createCompactionWriter(long).mjava,0,0,8,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AbstractSignal#checkInterrupted().mjava,0,2,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#removeUnfinishedLeftovers(List[File]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readRawBytes(ByteBuf).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeCellName(CFMetaData,ByteBuffer,ByteBuffer).mjava,0,0,3,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#fromBytes(ByteBuffer,int,DecoratedKey).mjava,0,0,1,3,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#MigrationManager().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_int(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#WriteTimeTransaction(Index.Indexer...).mjava,0,0,0,1,0,0.25,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#closeBound(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#debug(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#activeSegments().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getNonSystemKeyspaces().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#available().mjava,0,0,5,0,2,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,0,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#Functions(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(Range[Token]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter.RestorableEWMA#update(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#complexIdx(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#removeEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#addSSTables(Iterable[SSTableReader]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#setRows(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#[T]_getWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Runnable,WriteType).mjava,0,0,4,5,0,0.09090909361839294,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter#isReversed().mjava,0,18,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#dispatch(HintsStore,UUID).mjava,0,0,2,2,0,3.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Adder#doAdd(Term.Terminal,ColumnDefinition,UpdateParameters).mjava,0,0,6,3,0,0.05000000074505806,5,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\MorePartitions#extend(PartitionIterator,MorePartitions[#-super-PartitionIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#get(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch#Batch(UUID,long,Collection[Mutation],Collection[ByteBuffer]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterators.Log#applyToStatic(Row).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#TimeUUIDType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#isStale(Row,ByteBuffer,int).mjava,0,0,4,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#validatePartitioner(Collection[#-extends-AbstractBounds[#]]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyPartitionIterator#EmptyPartitionIterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#allocator(OpOrder.Group).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.Marker#Marker(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspacePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#shouldConvertNamesToSlice(CFMetaData,PartitionColumns).mjava,0,0,3,2,0,0.30000001192092896,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#split(T).mjava,0,0,5,1,2,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#isClosed().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#make(Bound,Bound).mjava,0,0,0,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#createCandidates(TokenInfo[Unit],UnitInfo[Unit],double).mjava,0,0,3,3,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState#equals(ReaderState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#reset().mjava,0,1,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyUnfilteredPartition#digest(CFMetaData,MessageDigest).mjava,0,0,21,2,0,0.13636364042758942,32,5,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.WriteResponseHandlerWrapper#WriteResponseHandlerWrapper(BatchlogResponseHandler[IMutation],Mutation).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#doPrepare().mjava,0,0,5,0,0,1.2000000476837158,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#isAfter(Commit).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#keyspace().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder#getCurrent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#hashCode().mjava,0,3,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterable(Object[],Dir).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#bounds(Bound,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaximumCompactionThreshold().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#markIndexRemoved(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#onFailure(Throwable).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateColumnFamily(String,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(CfDef).mjava,0,0,3,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#opId().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#maybeSwitchWriter(DecoratedKey).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#close().mjava,0,1,2,0,0,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#sliceIterator(ColumnFilter,Slice,boolean,Holder,Row).mjava,0,0,8,5,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStoragePort().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isSetupCompleted().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#ExternalClient(Set[InetAddress],int,String,String,int,int,EncryptionOptions.ServerEncryptionOptions,SSLOptions).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#errno(RuntimeException).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get50thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#clear(String,Schema).mjava,0,0,4,2,1,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.Weighted#Weighted(double,T).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysIndex#addIndexClusteringColumns(CFMetaData.Builder,CFMetaData,ColumnDefinition).mjava,0,0,0,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#acquireReference().mjava,0,1,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#secureResource(String).mjava,0,0,6,1,0,0.05882352963089943,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#Allocation(CommitLogSegment,OpOrder.Group,int,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#unloadLegacySchemaTables().mjava,0,2,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardIndexedReader#computeNext().mjava,0,0,9,0,1,0.3333333432674408,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#Group(Group).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#baseFilename().mjava,0,5,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#beforeChange(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,0,4,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getServerEncryptionOptions().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Kind#Kind(int,Message.Codec[ResultMessage]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#RestrictionSet(TreeMap[ColumnDefinition,Restriction]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangeToAddressMapInLocalDC(String).mjava,0,0,10,1,4,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits#forPaging(int).mjava,0,0,0,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateTokens(InetAddress,Collection[Token]).mjava,0,0,5,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_cql_query(ByteBuffer,Compression).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#rewind().mjava,0,0,1,0,0,0.09090909361839294,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#reloadIndex(IndexMetadata).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#hasUpperBound().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#getChannel(String).mjava,0,0,5,1,0,0.3636363744735718,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#intersects(Range[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#find(String).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#deserializeForMessaging(DataInputPlus,CFMetaData,ColumnFilter,boolean).mjava,0,0,10,4,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#LengthAvailableInputStream(InputStream,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\Resources#chain(IResource).mjava,0,0,3,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readBytes(DataInput,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#waitForDeletions().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#announceMigration(boolean).mjava,0,0,92,1,27,0.12230215966701508,25165824,25,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#decorateKey(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#format().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#size().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#doFlush().mjava,0,2,4,0,0,0.07692307978868484,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#Node(int,E).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#cqlLimits(int,int).mjava,0,7,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForCasCommit(String).mjava,0,0,1,1,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.UDFClassLoader#getResource(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Serializer#serializedSize(Slice,int,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getUnreachableTokenOwners().mjava,0,1,4,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch.Serializer#serializedSize(Batch,int).mjava,0,0,7,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.RangeSliceSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSchemaVersion().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#create(long,DeletionTime,ColumnIndex).mjava,0,0,1,3,0,0.375,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#nodeUp(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#toString().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#getFunctions().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#compareTo(ClusteringComparator,List[ByteBuffer]).mjava,0,0,11,2,1,0.6153846383094788,10,4,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.DisabledCoalescingStrategy#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#xor(byte[],byte[]).mjava,0,0,1,2,2,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#run().mjava,0,0,7,0,2,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#HintsReader(HintsDescriptor,File,ChecksummedDataInput,RateLimiter).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#refreshOverlaps().mjava,0,2,5,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.NodeEvent#NodeEvent(Type,InetSocketAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#serializedSize(RowIndexEntry[IndexHelper.IndexInfo]).mjava,0,0,14,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_replace(Set[T],Set[T],Iterable[T]).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.TrueFilesSizeVisitor#TrueFilesSizeVisitor().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsertJson#prepareInternal(CFMetaData,VariableSpecifications,Conditions,Attributes).mjava,0,0,15,4,9,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse#createDigestResponse(UnfilteredPartitionIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#getColumnDefinitions(CFMetaData).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Cleanup#tidy().mjava,0,0,4,0,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#summarize(ByteBuffer).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(CFMetaData,int,DecoratedKey,Slices).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(Map[Byte,AbstractType[#]]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#dropColumnFromSchemaMutation(CFMetaData,ColumnDefinition,long,Mutation).mjava,0,0,2,4,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#newSelectors().mjava,0,0,7,0,1,0.0,1,0,14,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#getMin().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#forPaging(int,ByteBuffer,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#toString().mjava,0,0,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#Refs(Map[T,Ref[T]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.Page#hintsIterator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#close().mjava,0,0,6,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTypeStatement#addDefinition(ColumnIdentifier,CQL3Type.Raw).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection#applyToPartition(UnfilteredRowIterator).mjava,0,0,5,1,1,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#write(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getMap(String).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#create(TupleType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getBytesRead().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#findIndexedTable(String).mjava,0,0,5,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#indexOf(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#OffHeapBitSet(long).mjava,0,0,3,1,2,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#headSet(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#allowNonPrimaryKeyInWhereClause().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection#newSelectorFactory(CFMetaData,List[ColumnDefinition]).mjava,0,0,11,2,3,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableCleanerThread#run().mjava,0,0,6,0,1,0.0,4,3,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#filterSuspectSSTables(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\KeyspaceMetrics.KeyspaceMetricNameFactory#KeyspaceMetricNameFactory(Keyspace).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#trySkipCache(int,long,int,String).mjava,0,0,10,4,1,0.0714285746216774,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#build().mjava,0,1,6,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions.Builder#add(Iterable[#-extends-Function]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#selects(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readChar().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#updatesStaticRow().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#values(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#RequestValidations().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#shouldBootstrap().mjava,0,3,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.ValueSerializer#serialize(IRowCacheEntry,ByteBuffer).mjava,0,0,3,2,1,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#countedInCurrentPartition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#forceRecycleAllSegments().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\KeyspaceElementName#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#getRawText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#getOrCreateWriter().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#JmxHistogram(Histogram,ObjectName).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#ViewManager(Keyspace).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#SpeculativeRetryParam(Kind,double).mjava,0,0,1,2,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokens(InetAddress).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#copy(InputStream,OutputStream,long).mjava,0,0,2,3,4,0.0555555559694767,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#MD5Digest(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getDroppableTombstonesBefore(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,16,2,8,0.0714285746216774,52,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#serializeEvent(ByteBuf,int).mjava,0,0,19,2,0,0.08888889104127884,9,6,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#validate(String).mjava,0,0,3,1,2,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#addSubSelection(ColumnSubselection).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangeToAddressMap(String,List[Token]).mjava,0,0,4,2,1,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#syncWriteBatchedMutations(List[WriteResponseHandlerWrapper],String,Stage).mjava,0,0,3,3,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTombstoneWarnThreshold().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#with(IndexMetadata).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#getCurrentStreams().mjava,0,0,7,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#onFailure(InetAddress).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(WritableByteChannel,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeLocal(CounterId,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#copy(long).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.MovingAverageCoalescingStrategy#MovingAverageCoalescingStrategy(int,Parker,Logger,String).mjava,0,0,1,4,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablesForKey(String).mjava,0,0,9,1,2,0.07692307978868484,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#currentBuffer().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getRegisteredCallbackAge(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#prepareInternal(String,Types).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#bounds(Bound,QueryOptions).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#addUpdateForKey(PartitionUpdate,Slice,UpdateParameters).mjava,0,0,7,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#prepare(String).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\ContextAllocator#ContextAllocator(OpOrder.Group,MemtableBufferAllocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_filterOut(Iterable[T],Set[T]...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#find(FunctionName,List[AbstractType[#]]).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#compressionParametersToThrift(CompressionParams).mjava,0,0,9,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isPartOfCellName(boolean,boolean).mjava,0,0,0,2,0,0.375,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setUserDefinedFunctionWarnTimeout(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toLegacyCell(CFMetaData,ByteBuffer,Column,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#BTreeRow(Clustering,LivenessInfo,Deletion,Object[],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#whereClauseToRelations(String).mjava,0,0,2,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#truncate().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#partitionLevelDeletion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setNativeTransportMaxConcurrentConnections(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyRpcChange(InetAddress,boolean).mjava,0,0,3,2,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewFunction(UDFunction,boolean).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getDataCenter().mjava,0,2,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#sizeOfValue(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#buildRow().mjava,0,5,1,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#asyncRemoveFromBatchlog(BatchlogEndpoints,UUID).mjava,0,0,4,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateMoving(InetAddress,String[]).mjava,0,0,6,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool#badUse(Exception).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#log(Logger,Level,long,TimeUnit,long,String,Object...).mjava,0,0,3,7,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#printPendingRanges().mjava,0,2,11,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#of(ColumnDefinition).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThroughput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#doPrepare().mjava,0,0,11,0,1,0.05263157933950424,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#remainingCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager.StreamRateLimiter#acquire(int).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#load(CFMetaData).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator.Function#Function(long,UDFunction).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CQLTypeParser#parseRaw(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setReadRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesRemaining().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeUTF(String,DataOutput).mjava,0,0,10,2,12,0.012658228166401386,80,14,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#isFinal().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexKeyFor(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSendBufferSize(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getOperationMode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDSerializer#serialize(UUID,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#readExtendedFlags(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthSuccess#AuthSuccess(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#onDiskSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats#EncodingStats(long,int,int).mjava,0,0,0,3,0,0.800000011920929,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#decodeEntry(DecoratedKey,Row).mjava,0,0,11,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getFloat(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setBytes(long,ByteBuffer).mjava,0,0,8,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#progress(Descriptor,ProgressInfo.Direction,long,long).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#convertNamesFilterToSliceFilter(ClusteringIndexNamesFilter,CFMetaData).mjava,0,0,10,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#nextIsRow().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#dataSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getKeyspaces().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#StatementRestrictions(StatementType,CFMetaData).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#measure(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound.Serializer#serializedSize(Slice.Bound,int,List[AbstractType[#]]).mjava,0,0,3,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#write(ByteBuffer).mjava,0,0,16,1,0,0.0,2,4,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchNonSystemKeyspaces().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(MetricNameFactory,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#addMutation(Mutation).mjava,0,0,5,1,0,0.0,4,2,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#getString(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#[C-extends-Comparable[#-super-C],D,I-extends-Interval[C,D]]_build(Collection[I]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceViewUpdate(ViewDefinition,boolean).mjava,0,0,10,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#openBoundOfBoundary(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#isExhausted().mjava,0,2,1,0,0,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ConstructorVisitor#visitInvokeDynamicInsn(String,String,Handle,Object...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#add(RangeTombstone,ClusteringComparator).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#addAll(Iterable[ColumnDefinition]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#isTokenValid(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMaxTimestamp().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamilyName().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#newRow(int).mjava,0,0,6,1,0,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#interruptCompactionFor(Iterable[CFMetaData],boolean).mjava,0,0,6,2,1,0.1818181872367859,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableHandoff#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#toString(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#getInstance(TypeParser).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#logError(LogRecord).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#hasRanges().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedSize(Unfiltered,SerializationHeader,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#reset().mjava,0,1,3,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#createCompressor(Class[#],Map[String,String]).mjava,0,0,21,2,3,0.0181818176060915,36,6,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onJoin(InetAddress,EndpointState).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#read(SinglePartitionReadCommand.Group,ConsistencyLevel).mjava,0,0,2,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#completed().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTime(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyDown(InetAddress).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#makeRequests(ReadCommand,Iterable[InetAddress]).mjava,0,0,14,2,2,0.043478261679410934,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncRequest#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#optimalTokenOwnership(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getEndpointForHostId(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addStaticColumn(ColumnIdentifier,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#registerDaemon(CassandraDaemon).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#lastColumn().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TypeCast#TypeCast(CQL3Type.Raw,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ExecuteImplVisitor#visitInsn(int).mjava,0,0,1,1,0,0.0,5,1,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,boolean,Collection[String],Collection[String],boolean,boolean,String...).mjava,0,0,3,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#isClose(boolean).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#asCQLTypeStringList(List[AbstractType[#]]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,13,2,11,0.1875,12,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager.ReadRateComparator#compare(SSTableReader,SSTableReader).mjava,0,0,3,2,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#CompactionController(ColumnFamilyStore,Set[SSTableReader],int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter#appendOrderByToCQLString(CFMetaData,StringBuilder).mjava,0,0,6,2,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#deserialize(DataType,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_idIn(Set[T]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#listen(InetAddress).mjava,0,0,5,1,1,0.10000000149011612,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#clearState().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#getIndexOperator(Bound).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask.AnticompactionCallback#onFailure(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset().mjava,0,1,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#parseOptionalKeyspace(List[String],NodeProbe,boolean).mjava,0,0,9,3,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#isEOF().mjava,0,11,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#shutdown().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#partitionKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#Topology().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#awaitUninterruptibly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#newRestrictions(CFMetaData,VariableSpecifications,Operations,WhereClause,Conditions).mjava,0,0,2,5,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#compareTo(MetricName).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#supportsFreezing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#forPaging(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#compareTo(FunctionResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#mark().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#putLongByByte(long,long).mjava,0,0,16,2,0,0.0,2,1,19,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedSize(Unfiltered,SerializationHeader,long,int).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#seek(long).mjava,0,0,2,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRoleManager().mjava,0,33,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#forceRecycleAll(Iterable[UUID]).mjava,0,0,17,1,6,0.25,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#ref().mjava,0,1,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangeToAddressMap(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(int).mjava,0,0,0,1,3,0.8333333134651184,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#expiring(ColumnDefinition,long,int,int,ByteBuffer,CellPath).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#SchemaChange(Change,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#setUpdateInterval(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#addNano(long).mjava,0,0,3,1,0,0.125,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateUserType(UserType).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#setupTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#dependsOn(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#putIfAbsent(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#free().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#isBoundary().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#BytesToken(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetCacheCapacity#execute(NodeProbe).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator.Purger#getMaxPurgeableTimestamp().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftFilter#ThriftFilter(List[Expression]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#set_cql_version(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#getFunctions().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#getMergedRowCounts().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator.Purger#Purger(boolean,CompactionController).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Truncation#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestValidationException#RequestValidationException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer.Header#Header(SerializationHeader,DecoratedKey,boolean,boolean,DeletionTime,Row,int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.PrecisionTime#getNext(long).mjava,0,0,3,1,2,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#load(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DescribeRing#execute(NodeProbe).mjava,0,0,5,1,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copy(PartitionColumns).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#hasUpperBound().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#switchMemtable().mjava,0,3,4,0,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#IncomingTcpConnection(int,boolean,Socket,Set[Closeable]).mjava,0,0,5,4,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#TemporalRow(ColumnFamilyStore,java.util.Set[ColumnIdentifier],ByteBuffer,Row,int,boolean).mjava,0,0,18,6,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#reload(CFMetaData).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#setSourceFrame(Frame).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#toString().mjava,0,0,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#grantRole(AuthenticatedUser,RoleResource,RoleResource).mjava,0,0,21,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#getLastColumn().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcSendBufferSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#thriftLimits(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#simpleColumnCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#serializedSize(Chunk,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#getRawValues().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.NeverSpeculatingReadExecutor#executeAsync().mjava,0,0,6,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables.DefaultNames#defaultPartitionKeyName().mjava,0,2,1,0,1,0.2222222238779068,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#parseOptionalKeyspace(List[String],NodeProbe).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#initializeFromMessage(MessageIn[#]).mjava,0,0,8,1,5,0.0416666679084301,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#isFullyRefused().mjava,0,1,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#markDead().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#updateNextRow().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#SSTableTxnWriter(LifecycleTransaction,SSTableMultiWriter).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isIncrementalBackupsEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#IndexHelper().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#rowFilterFromThrift(CFMetaData,List[IndexExpression]).mjava,0,0,6,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.InternalStateInstance#InternalStateInstance().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher#isMatchingEntry(DecoratedKey,IndexEntry,ReadCommand).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSnapshotCreationTime(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#deserializeRowFilter(DataInputPlus,CFMetaData).mjava,0,0,7,2,6,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#forceBlockingFlush(String).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXNotificationProgressListener#handleConnectionFailed(long,String).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getThreadLocalScratchBuffer().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidate().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#columns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#emptyDeletedRow(Clustering,Deletion).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerConnection#getSaslNegotiator(QueryState).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#newSocket(InetAddress).mjava,0,0,16,1,1,0.0625,3,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#IdentityCollection(Set[Tidy]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#doVerb(MessageIn[Truncation],int).mjava,0,0,13,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#report(InetAddress).mjava,0,0,9,1,2,0.0555555559694767,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getRecentBloomFilterTruePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#flags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serialize(RangeTombstoneMarker,SerializationHeader,DataOutputPlus,long,int).mjava,0,0,15,5,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#serializedSize(StreamInitMessage,int).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(String,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reBufferMmap().mjava,0,1,9,0,2,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#partitionLevelDeletion().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#seekToPosition(long).mjava,0,0,3,1,0,0.09090909361839294,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#isScheduled(HintsStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#consume(PartitionIterator).mjava,0,0,4,1,0,0.0,3,2,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats.OptionFilter#OptionFilter(boolean,List[String]).mjava,0,0,13,2,1,0.03999999910593033,3,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBytesUnsafe(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage.Serializer#serializedSize(HintMessage,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#maybeInit().mjava,0,7,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\InvalidRequestException#InvalidRequestException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#setKeyspaceMetadata(KeyspaceMetadata).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#cellValueType().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#partitionOrdering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#SafeMemoryWriter(SafeMemory).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareResponse#PrepareResponse(boolean,Commit,Commit).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#canLogin(RoleResource).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#openBound(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#isCounter().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#addToRow(TemporalRow,ColumnIdentifier,CellPath).mjava,0,0,2,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#newCompactionTransaction(DecoratedKey,PartitionColumns,int,int).mjava,0,0,5,4,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#parseComparator(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCachedCounter(ByteBuffer,Clustering,ColumnDefinition,CellPath).mjava,0,0,3,4,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#forProtocolVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#getBackwardsCompatibleException(ErrorMessage,int).mjava,0,0,2,2,2,0.0,10,2,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#addUpdates(UpdatesCollector,QueryOptions,boolean,long).mjava,0,0,21,4,9,0.02222222276031971,3,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getShort(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#rebuildIndexesBlocking(Collection[SSTableReader],Set[String]).mjava,0,0,19,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAckVerbHandler#doVerb(MessageIn[GossipDigestAck],int).mjava,0,0,26,2,8,2.0,144,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTracker().mjava,0,29,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#listIndexes().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removalCoordinator(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#newSelectorFactory(CFMetaData,List[ColumnDefinition]).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getUUID(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.MultiColumnRaw#MultiColumnRaw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz2(long).mjava,0,0,0,1,2,0.125,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions,InetAddress,int).mjava,0,0,7,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getEstimatedColumnCount().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\ProgressInfoCompositeData#toCompositeData(UUID,ProgressInfo).mjava,0,0,11,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getIndexName(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering#Clustering(ByteBuffer...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#LeveledCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,9,2,2,0.0,7,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#isSlice().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspaceUserName(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Value#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestResolver#preprocess(MessageIn[ReadResponse]).mjava,0,0,1,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#prepareKeyspace(ClientState).mjava,0,0,5,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.Operator.Equals#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound.Serializer#deserializeValues(DataInputPlus,Kind,int,List[AbstractType[#]]).mjava,0,0,4,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markClean(UUID,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableThrift#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#newSession(TraceType).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCounterCacheKeysToSave(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#viewPartitionKey(TemporalRow,TemporalRow.Resolver).mjava,0,0,7,2,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_isInRanges(T,Iterable[Range[T]]).mjava,0,0,1,2,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata.StatsMetadataSerializer#serializedSize(Version,StatsMetadata).mjava,0,0,10,2,1,0.3181818127632141,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamEvent.SessionCompleteEvent#SessionCompleteEvent(StreamSession).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#getInt(Option).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionMetric(String).mjava,0,0,4,1,0,0.0,10,1,14,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#deletes(Cell).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#writeHeader(DataOutput,long,int).mjava,0,0,17,3,0,0.10526315867900848,1,0,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ProxyHistograms#execute(NodeProbe).mjava,0,0,14,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getMaximalTasks(int,boolean).mjava,0,0,5,2,3,0.125,8,3,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#process(String,QueryState,QueryOptions,Map[String,ByteBuffer]).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#hasComponent(int).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getCompactionTask(LifecycleTransaction,int,long).mjava,0,0,5,3,1,0.0833333358168602,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#finish().mjava,0,1,6,0,1,0.09090909361839294,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#applicablePermissions().mjava,0,1,6,0,1,0.0,6,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#closeQuietly(Closeable).mjava,0,0,2,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexChannel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readFunction(String,String,List[String]).mjava,0,0,2,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCounterWriteRpcTimeout().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#toString().mjava,0,0,16,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#awaitManagementTasksCompletion().mjava,0,1,3,0,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfBytes(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#isSet().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getScanner(SSTableReader,ColumnFilter,DataRange,RateLimiter,boolean).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#TableMetrics(ColumnFamilyStore).mjava,0,0,186,1,34,0.02097902074456215,512,9,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#metadatas().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeByte(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addViewToSchemaMutation(ViewDefinition,long,boolean,Mutation).mjava,0,0,14,4,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultSet#FromResultSet(ResultSet).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes.Raw#timestampReceiver(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#Columns(Object[],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#equals(Object).mjava,0,0,1,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getWriteConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#close().mjava,0,0,5,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#add(String,Object).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AbstractFunctionSelector#AbstractFunctionSelector(T,List[Selector]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#getLiveDataSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#UDFunction(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],AbstractType[#],boolean,String,String).mjava,0,0,2,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getBuiltIndexes(String,Set[String]).mjava,0,0,8,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#markCounterLocalToBeCleared().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.TokenInfo#prevInRing().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CQLTypeParser#parse(String,String,Types).mjava,0,0,10,3,2,0.2222222238779068,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#RowHash(Token,byte[],long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager#state().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamStatus().mjava,0,1,4,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#hasReferenceTo(Function).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StartupChecks#withDefaultTests().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes(long,int).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.MultiColumnRaw#testAssignment(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#serializedSize(DeletionTime).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#maxRemaining().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#getClosingString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#maybeInitJmx().mjava,0,1,12,0,4,0.0476190485060215,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#checkForEndpointCollision().mjava,0,1,24,0,2,0.03846153989434242,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateType(UserType).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#ProgressEvent(ProgressEventType,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.InReverseOrderTester#includes(Clustering).mjava,0,0,4,1,1,0.10526315867900848,11,5,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#isPackage(char[][],char[]).mjava,0,0,9,2,2,0.0,16,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UTName#getUserTypeName().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#rawAddRow(ByteBuffer...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultSet#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopGossiping().mjava,0,1,2,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.StrongLeakDetector#removeExpected(Set[Tidy]).mjava,0,0,6,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#diff(Views).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#printUsage(CmdLineOptions).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compose(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#setTimeout(int).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#maxScore(List[InetAddress]).mjava,0,0,1,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#putCachedCounter(ByteBuffer,Clustering,ColumnDefinition,CellPath,ClockAndCount).mjava,0,0,3,5,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#serializePartitionKey(ClusteringPrefix).mjava,0,0,6,1,1,0.5,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.SecureInitializer#SecureInitializer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#maybeAwaitFullDataRead().mjava,0,1,7,0,1,0.2380952388048172,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#makeCommit(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#encode(Map[T,Object],int).mjava,0,0,13,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#toCQLString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setRangeBatchSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#calculateEnd(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesReceived().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.ShortReadProtection#ShortReadProtection(InetAddress,DataLimits.Counter).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#deserialize(DataInput).mjava,0,0,19,1,8,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.StreamSessionConnector#run().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#writeColumnsWithTypes(Map[ByteBuffer,AbstractType[#]],DataOutputPlus).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[T]_getSet(String,AbstractType[T]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#getOnDiskFilePointer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#taskCompleted(StreamReceiveTask).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\FailureDetectorInfo#execute(NodeProbe).mjava,0,0,9,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Serializer#serialize(EncodingStats,DataOutputPlus).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#Builder(CompressedSequentialWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions.Builder#build().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#validate(ClientState).mjava,0,0,10,1,1,0.2857142984867096,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cell#Cell(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#hashCode().mjava,0,0,2,0,1,0.2222222238779068,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#remove(RowCacheKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#shouldHint(InetAddress).mjava,0,0,14,1,3,0.0,12,4,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\InvalidateKeyCache#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,0,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,18,2,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#bind(QueryOptions).mjava,0,0,6,1,2,0.05882352963089943,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#append(UnfilteredRowIterator).mjava,0,0,6,1,3,0.05000000074505806,5,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#newProposal(UUID,PartitionUpdate).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#removeAlias(MetricName).mjava,0,0,2,1,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#isValueCompatibleWithFrozen(CollectionType[#]).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableHistograms#execute(NodeProbe).mjava,0,0,38,1,15,0.0555555559694767,6,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ConstructorVisitor#ConstructorVisitor(Set[String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#leaveRing().mjava,0,1,11,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompactionThresholds(int,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IndexName#getIdx().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#deserializeBounds(DataInput,Version).mjava,0,0,5,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#Parsed(CFName,StatementType,Attributes.Raw,List[Pair[ColumnIdentifier.Raw,ColumnCondition.Raw]],boolean,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateAggregate(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#hashCode().mjava,0,2,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#toString().mjava,0,0,7,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#SEPWorker(Long,Work,SharedExecutorPool).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#compareTo(ReplayPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#AbstractCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,12,2,1,6.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeEndpoint(InetAddress).mjava,0,0,11,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStreamThroughputOutboundMegabitsPerSec().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.CellReducer#setActiveDeletion(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#sendMessagesToNonlocalDC(MessageOut[#-extends-IMutation],Collection[InetAddress],AbstractWriteResponseHandler[IMutation]).mjava,0,0,17,3,5,0.1071428582072258,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#createReader(long).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#nextInternal().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSavedCachesLocation().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#ttl().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSync().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ToJsonFct#ToJsonFct(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#sizeofType(AbstractType[#]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Cleanup#tidy().mjava,0,0,3,0,1,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#output(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#create(UnfilteredRowIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCellName#encode(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#channel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reBufferStandard().mjava,0,1,10,0,5,0.15789473056793213,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Value#Value(ByteBuffer[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactions().mjava,0,0,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isFilterFullyCoveredBy(ClusteringIndexFilter,DataLimits,CachedPartition,int).mjava,0,0,5,4,0,2.4000000953674316,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableTimer#TableTimer(Timer,Timer,Timer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#write(Iterable[UUID],Hint).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.GlobalPool#reset().mjava,0,1,7,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getHintedHandoffDisabledDCs().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#elapsed().mjava,0,2,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#size().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\Int32Serializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#serializedSize(StreamSummary,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#merge(Row,Row,Row.Builder,int).mjava,0,0,41,4,21,0.0,36,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#create(String,KeyspaceParams,Tables,Views,Types,Functions).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#beforeChange(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,0,4,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#add(Mutation).mjava,0,0,18,1,5,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBytes(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#start().mjava,0,0,4,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addAggregate(UDAggregate).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#close().mjava,0,1,5,0,0,0.6666666865348816,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#applyToPartition(DecoratedKey,Row).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getFunctions(FunctionName).mjava,0,0,5,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#markAlive().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#NotNullRestriction(List[ColumnDefinition]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#reclaiming(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#atomicMoveWithFallback(Path,Path).mjava,0,0,3,2,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#equals(Object).mjava,0,0,17,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDouble(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#validationComplete(RepairJobDesc,InetAddress,MerkleTrees).mjava,0,0,9,3,2,0.1875,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#load(ViewDefinition).mjava,0,0,5,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#search(ReadOrderGroup).mjava,0,0,9,1,2,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReusablePartitionData#reset().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#indexPartition(UnfilteredRowIterator,OpOrder.Group,Set[Index],int).mjava,0,0,19,4,3,0.0,5,3,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#floor(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#next().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#preferredBufferType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateHintsDropped(InetAddress,UUID,int).mjava,0,0,2,3,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateKeyspace(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#isEmpty().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Upgrader.UpgradeController#UpgradeController(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#rescheduleFailedDeletions().mjava,0,1,3,0,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#updateSizeTracking(Iterable[SSTableReader],Iterable[SSTableReader],Throwable).mjava,0,0,14,3,2,0.02777777798473835,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#containsUnset().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,8,2,2,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.KeyScanningIterator#computeNext().mjava,0,0,29,0,1,0.13636364042758942,20,6,45,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getLong(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#submit(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#singleton(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#blockFor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Info#execute(NodeProbe).mjava,0,0,66,1,7,0.1388888955116272,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getCompactionParams().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#inDirectory(File).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSyn#getGossipDigests().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#log().mjava,0,0,9,0,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AssignmentTestable.TestResult#isAssignable().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flushInternal(Iterator[ByteBuffer],HintsStore).mjava,0,0,9,2,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#DataResource().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json#decodeJson(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupInfo#toString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#enableReserveSegmentCreation().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#totalBlockFor().mjava,0,0,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#setUpdateInterval(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskFailurePolicy().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter.FilterNotIndexed#applyToRow(Row).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#AuthenticatedUser(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractPrimaryKeyRestrictions#isEmpty().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_rangeSet(Range[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serialize(AbstractBounds[T],DataOutputPlus,int).mjava,0,0,6,3,0,0.5,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Request#isTracingRequested().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#getFiles().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#intersects(Iterable[Range[T]]).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#handleConnectionClosed(long,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#MessageDeliveryTask(MessageIn,int,long,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#findAll(String,String).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Serializer#serializedSize(CFMetaData,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getPartitioner().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#getText().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#keyspace().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getSeverity(InetAddress).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#changeEvent().mjava,0,1,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#deletionTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Discarder#Discarder(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getFunctions().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewBuilder#run().mjava,0,0,25,0,10,0.0,40,8,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#registerReceiving(StreamResultFuture).mjava,0,0,5,1,0,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#isEmpty().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropIndexStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputCoreConnections(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMaxIndexSummarySize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\Stage#jmxEnabledStages().mjava,0,2,3,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#ShortType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher.FlushItem#FlushItem(ChannelHandlerContext,Object,Frame).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopDaemon().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#createSuper(String,String,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#ensureChild().mjava,0,2,0,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#getReplayPosition(Iterable[#-extends-SSTableReader]).mjava,0,0,5,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogService#BatchCommitLogService(CommitLog).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering.Reversed#reverse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#insertChar(String,int,char).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#parseCompression(Map[#,#]).mjava,0,0,2,1,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#fsync().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#selection(PartitionColumns).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#writeHintsForUndeliveredEndpoints(int,Set[InetAddress]).mjava,0,0,10,2,3,0.0625,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#getTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#timeInMillisToDay(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#IncludingExcludingBounds(T,T).mjava,0,0,3,2,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#put(ByteBuffer,ByteBuffer).mjava,0,0,10,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#loadFromDisk().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#setQuickResolver(QuickResolver[V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#components(CFMetaData).mjava,0,0,7,1,1,0.10526315867900848,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactionHistory().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RepairException#getMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#creationTime().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#maybeClearCounterValue(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#BootstrapMonitor(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#updateOpenMarkers().mjava,0,1,3,0,1,0.1666666716337204,15,5,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#get().mjava,0,0,11,0,5,0.1111111119389534,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#indexSerializedSize(int).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DataResponse#isDigestResponse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#keyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DataResponse#digest(CFMetaData,ReadCommand).mjava,0,0,3,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#progress(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#lower(V).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#build(IPartitioner).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromPager#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#doCommit(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#nameOfRange(long[],int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getToken(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeShort(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#prepare(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#appliesOnlyToStaticColumns().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getPreparedForThrift(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createUpdatesForInserts(TemporalRow).mjava,0,0,23,1,6,0.09090909361839294,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#BytesToken(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#shutdownGracefully(long,long,TimeUnit).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#getPartitioner().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEffectiveIndexInterval().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceCleanup(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#descendingIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getKeyspace().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#equals(Object).mjava,0,0,0,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver#getData().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ConnectionLimitHandler#channelInactive(ChannelHandlerContext).mjava,0,0,8,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexComparator().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#getValues().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableBufferAllocator#rowBuilder(OpOrder.Group).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#ReplicationAwareTokenAllocator(NavigableMap[Token,Unit],ReplicationStrategy[Unit],IPartitioner).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#updateEstimatedCompactionsByTasks(List[List[SSTableReader]]).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#getTaskAttemptID(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#indexes(Indexes).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool.NodeToolCmd#parseOptionalTables(List[String]).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#getCounter(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.SetterByIndex#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#onFailure(Throwable).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetHostStat#add(String,String,Map[InetAddress,Float]).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSWriteError#FSWriteError(Throwable,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#isWindows().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifySSTablesChanged(Collection[SSTableReader],Collection[SSTableReader],OperationType,Throwable).mjava,0,0,2,4,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortedTokens().mjava,0,22,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#createFactoriesAndCollectColumnDefinitions(List[Selectable],CFMetaData,List[ColumnDefinition]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get99thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#toCQLString().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#shutdown().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.EndpointFilter#getRandomInt(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getUUID(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.Weighted#compareTo(Weighted[T]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#assign(Work,boolean).mjava,0,0,12,2,1,0.2631579041481018,17,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getCompactionTask(LifecycleTransaction,int,long).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#applyOne(BaseRowIterator[#],Transformation).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#midpoint(Token,Token).mjava,0,0,3,2,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#isView().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexSummaryIndexFromBinarySearchResult(int).mjava,0,0,0,1,1,0.1538461595773697,3,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setUserNameAndPassword(Configuration,String,String).mjava,0,0,5,3,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer.Allocation#Allocation(int,int,OpOrder.Group).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getResultMetadata().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#error().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#isSpinning().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#fetchedColumns().mjava,0,39,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Join#execute(NodeProbe).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.State#clear().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables(String,String).mjava,0,0,3,2,1,5.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#forColumns(CFMetaData,List[ColumnDefinition]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getCompactionStrategyFor(SSTableReader).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#toJSONString(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#newSliceRestriction(CFMetaData,VariableSpecifications,Bound,boolean).mjava,0,0,4,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLocalHostUUID().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#EmptySSTableScanner(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#isLive().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#stop().mjava,0,1,8,0,0,0.190476194024086,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#close().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#waitForDeletions().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound.Serializer#serialize(Slice.Bound,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,6,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool#main(String...).mjava,0,0,17,1,5,0.008196720853447914,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.ChunkSerializer#serialize(Chunk,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\TopKSampler.SamplerResult#SamplerResult(List[Counter[S]],long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#ReadCommand(Kind,boolean,int,boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits).mjava,0,0,0,9,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#with(UserType).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Header.Flag#deserialize(int).mjava,0,0,2,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#decodeJSONBytes(byte[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#write(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#deserialize(ByteBuffer).mjava,0,0,3,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputRpcPort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#resetFileIndexGenerator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getProtectedField(Class,String).mjava,0,0,2,2,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,byte[],int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#syncDataOnlyInternal().mjava,0,2,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat.NullOutputCommitter#setupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#addTableToKeyspace(KeyspaceMetadata,CFMetaData).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#startRow(Clustering).mjava,0,0,8,1,0,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#kind().mjava,0,22,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompress(byte[],int,int,byte[],int,int).mjava,0,0,5,6,1,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#onRangeTombstone(RangeTombstone).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyRange(CFMetaData,ByteBuffer,KeyRange).mjava,0,0,13,3,4,0.054054055362939835,112,9,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Serializer#serializedSize(DataRange,int,CFMetaData).mjava,0,0,4,3,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Hex#bytesToHex(byte...).mjava,0,0,1,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getScanners(Collection[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#addColumnValue(ByteBuffer).mjava,0,0,8,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TopPartitions#execute(NodeProbe).mjava,0,0,43,1,9,0.035087719559669495,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#applyToMarker(RangeTombstoneMarker).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#incrementCounter(Counter,long).mjava,0,0,1,2,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#searchIterator(ColumnFilter,boolean).mjava,0,0,14,2,4,0.1599999964237213,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#deletes(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getParentCfsName(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstToken(ArrayList[Token],Token).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#isOverflowed().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#[T-extends-SelfRefCounted[T]]_selfRefs(Iterable[T]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPreferredHintsStreamTarget().mjava,0,0,18,0,4,0.04545454680919647,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#ImmutableBTreePartition(CFMetaData,DecoratedKey,Holder).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#makeHeader(ClusteringPrefix,int,int).mjava,0,0,2,3,2,0.0833333358168602,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#resetToNewerVersion(int).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#abortEarly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.Codec#decode(ByteBuf,int).mjava,0,0,4,2,4,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#noCellLiveRow(Clustering,LivenessInfo).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Prepender#execute(DecoratedKey,UpdateParameters).mjava,0,0,10,2,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMinTimestamp().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.NullOutputHandler#output(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNetworkInterfaceAddress(String,String,boolean).mjava,0,0,5,3,4,0.125,36,6,21,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#onAdd(Host).mjava,0,0,4,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#toCQLString(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering#toCQLString(CFMetaData).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#markIndexSynced(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\AnticompactionRequest#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_count(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,38,4,14,0.03703703731298447,16,4,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.State#State(GlobalState,Ref,ReferenceQueue[#-super-Ref]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#hasNextInternal().mjava,0,0,5,0,1,0.4545454680919647,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getUUID(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#isCompatibleWith(ClusteringComparator).mjava,0,0,6,1,2,0.0714285746216774,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#asLegacyAtomIterator(Iterator[#-extends-LegacyAtom]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,5,2,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation.CounterMutationSerializer#serialize(CounterMutation,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getPositionInSummary(int).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#update(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getReadLoadBalancingPolicy(String[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getTruePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage.Type#Type(int,int,Serializer,Serializer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#discardSSTables(long).mjava,0,0,9,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\DefaultCompactionWriter#switchCompactionLocation(Directories.DataDirectory).mjava,0,0,8,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getLeavingEndpoints().mjava,0,4,5,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutationVerbHandler#doVerb(MessageIn[Mutation],int).mjava,0,0,12,2,3,0.0357142873108387,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#StreamingRepairTask(RepairJobDesc,SyncRequest,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#HintedHandOffManager().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#hasRegularColumns(UntypedResultSet).mjava,0,0,3,1,0,0.699999988079071,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#advance().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredRowIterator#EmptyUnfilteredRowIterator(PartitionColumns,CFMetaData,DecoratedKey,boolean,Row,DeletionTime).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.HintsIterator#HintsIterator(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getUDTValue(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetricNameFactory#createMetricName(String).mjava,0,0,13,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#containsSstableCompressionClass(Map[String,String]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#searchInternal(ClusteringPrefix,int,int).mjava,0,0,3,3,2,0.0625,4,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewAggregate(UDAggregate,boolean).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#fromIncl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.WithoutPurgeableTombstones#WithoutPurgeableTombstones().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#getHeartBeatState().mjava,0,38,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#forTokenRange(Range[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableMetadataViewer#main(String[]).mjava,0,0,35,1,6,0.0,18,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateAggregate(UDAggregate).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#getHeartBeatVersion().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#deserialize(DataInputPlus,SerializationHeader,SerializationHelper,Row.Builder).mjava,0,0,13,4,3,0.1111111119389534,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#viewClusteringTtl().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering.Reversed#compare(T1,T1).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#createConnection(Configuration,String,Integer).mjava,0,0,2,3,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#compareId(ByteBuffer,int,ByteBuffer,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isJoining().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#isEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank(String,int).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary#StreamSummary(UUID,int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.MovingAverageCoalescingStrategy#notifyOfSample(long).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#SetValue(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeToSend().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectoryCandidate#compareTo(DataDirectoryCandidate).mjava,0,0,3,1,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputBuffer#available().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#fromJSONObject(Object).mjava,0,0,13,1,2,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildCasResultSet(String,String,RowIterator,Iterable[ColumnDefinition],boolean,QueryOptions).mjava,0,0,6,6,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#validateForNativeProtocol(ByteBuffer,int).mjava,0,0,7,2,2,0.0,4,2,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Serializer#serializedSize(ColumnSubselection,int).mjava,0,0,9,2,4,0.05263157933950424,10,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintWindow(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Terms#asBytes(String,String,AbstractType).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getPendingAddressRanges(TokenMetadata,Collection[Token],InetAddress).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#stats().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#resultify(String,PartitionIterator).mjava,0,0,4,2,2,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#createMessage(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractPrimaryKeyRestrictions#size().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#WrappedDataOutputStreamPlus(OutputStream,WritableByteChannel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getTruncateRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfBytesMap(Map[String,ByteBuffer]).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#equals(Object[],Object[]).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch#size().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#contains(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isInitialized().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#hasUnrestrictedPartitionKeyComponents().mjava,0,4,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#unlink().mjava,0,2,1,0,4,0.1818181872367859,20,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager.Pager#applyToRow(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#hashCode().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#newMapContext(Configuration,TaskAttemptID,RecordReader,RecordWriter,OutputCommitter,StatusReporter,InputSplit).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamEvent.ProgressEvent#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#createSingleMarkerInRelation(List[ColumnIdentifier.Raw],Tuples.INRaw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter.FilterNotIndexed#applyToRow(Row).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#[T]_checkNull(T,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#isOnToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#deserialize(DataInputPlus,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#handleNotificationLost(long,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#CompressionParams(String,Integer,Map[String,String]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GoogleCloudSnitch#gceApiCall(String).mjava,0,0,9,1,4,0.095238097012043,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#startNativeTransport().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#builder().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#keyIterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#internodeCompression().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#setNext(int,Node[E]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#finish(long,long,boolean).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata#hashCode().mjava,0,0,2,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setBytes(long,long,long).mjava,0,0,1,3,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector.Killer#killCurrentJVM(Throwable,boolean).mjava,0,0,5,2,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#makeRangeTombstone(Slice).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#newSession(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#nonSystem().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#state(SSTableReader).mjava,0,0,11,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#SafeMemory(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon.NativeAccess#isMemoryLockable().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#makeMutationMessage().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#allocate(int).mjava,0,0,4,1,2,0.0833333358168602,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfArray(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#newCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCandidatesFor(int).mjava,0,0,62,1,12,0.31081080436706543,9615,16,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSError#findNested(Throwable).mjava,0,0,1,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest.ValidationRequestSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#setFreeSlots(long).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#serializedSize(IRowCacheEntry).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#get(K).mjava,0,0,4,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexSummaryKey(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#resumeHintsDelivery().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#LocalToken(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_invokeAny(Collection[#-extends-Callable[T]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#deliverHints(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#decompress(Frame).mjava,0,0,9,1,4,0.03999999910593033,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#contains(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#flushIndexesBlocking(Set[Index]).mjava,0,0,12,1,2,0.13333334028720856,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View.Columns#Columns(List[ColumnDefinition],List[ColumnDefinition],List[ColumnDefinition]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#sortAndMerge(CFMetaData,List[LegacyLayout.LegacyCell],int).mjava,0,0,22,3,7,0.17391304671764374,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#countedInCurrentPartition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#partitionKeyDef(CFMetaData,ByteBuffer,AbstractType[#],int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#isAggregate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#getCustomPayload().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#validateKey(ByteBuffer).mjava,0,0,3,1,0,0.07692307978868484,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithValues#toMultiColumnRestriction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#handleFailure(Throwable).mjava,0,0,4,1,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#add(Type,SSTable).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isRegular().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getTimestamp(long,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#receive(MessageIn,int,long,boolean).mjava,0,0,6,4,3,0.0833333358168602,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#open(File,RateLimiter).mjava,0,0,3,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#alterableOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setRpcReady(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(int,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#deserializeNamesCommand(DataInputPlus,boolean,CFMetaData,DecoratedKey,int,int).mjava,0,0,1,6,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#equals(Object).mjava,0,0,11,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#downsample(IndexSummary,int,int,IPartitioner).mjava,0,0,17,4,12,0.25,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#grantPermissionsToCreator(QueryState).mjava,0,0,8,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#isIN().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getEndpointSnitch().mjava,0,53,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setTruncateRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadPaxosState(DecoratedKey,CFMetaData).mjava,0,0,23,2,8,0.10526315867900848,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#createMessage(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#all(Signal...).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#DynamicParsedComparator(String).mjava,0,0,5,1,2,0.11999999731779099,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#subList(int,int).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#CredentialsMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedLowSignalStage(Stage,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnMetadata().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#getCellByIndex(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Dir#invert().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#bind(QueryOptions).mjava,0,0,0,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#unit().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.NullOutputHandler#warn(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#severity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#reallocate(long).mjava,0,0,9,1,4,0.0,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthMigrationListener#onDropFunction(String,String,List[AbstractType[#]]).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#apply(Row,Row).mjava,0,1,12,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getOrCreate(File,String...).mjava,0,0,7,2,1,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#make(Type,List[File],int,String).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#failRepairs(UUID,String,String[],Throwable).mjava,0,0,1,4,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#addAll(int,Collection[#-extends-V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#getIOWait().mjava,0,1,2,0,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#getMean().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#transformAndFilter(DeletionTime,Function[#-super-Cell,#-extends-Cell]).mjava,0,0,2,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#doOnChangeNotifications(InetAddress,ApplicationState,VersionedValue).mjava,0,0,1,3,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.CoalescingStrategy#debugTimestamp(long).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#[C-extends-Comparable[#-super-C],V]_maxOrdering().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Region#bottom().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokensFor(InetAddress).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#getCrcCheckChance().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#serializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidate(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#assumeGCIsPartiallyConcurrent(GarbageCollectorMXBean).mjava,0,0,1,1,0,0.23529411852359772,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#getByteBuffer(long,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#setForSlice(Slice).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#ArrivalWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasBoundaries().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropUserType(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#release().mjava,0,1,36,0,2,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Value#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DigestResponse#makeIterator(CFMetaData,ReadCommand).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil.Options.FileType#descr().mjava,0,1,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setReadConsistencyLevel(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdownNow().mjava,0,0,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\AbstractAllocator.CloningBTreeRowBuilder#CloningBTreeRowBuilder(AbstractAllocator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#makeCompactClustering(CFMetaData,ByteBuffer).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestFailureException#RequestFailureException(ExceptionCode,ConsistencyLevel,int,int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#sstableLister(OnTxnErr).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter.TransactionalProxy#doAbort(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#execute(QueryState,QueryOptions).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#isDoneForPartition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofWithShortLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOf(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicBadnessThreshold(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#txnFile().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getPostIndexQueryFilter(RowFilter).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#keysAsString().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer#THsHaDisruptorServer(Args).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#stream().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies#parkLoop(long).mjava,0,0,3,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#Memory(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#getPager(PagingState,int).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#getColumnDefs().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(Configuration).mjava,0,0,20,1,3,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputWhereClauses(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspaceUserNameAndPassword(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getEndpointToHostId().mjava,0,1,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#validateRows(Iterable[Row]).mjava,0,0,10,1,1,0.0,3,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#serializers().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#stream().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#openNew(LegacyLayout.LegacyRangeTombstone).mjava,0,0,12,1,2,0.27272728085517883,6,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputColumns(Configuration,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#deserialize(DataInputPlus).mjava,0,0,5,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#keysToTokens(Range[Token],List[DecoratedKey]).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXProgressSupport#JMXProgressSupport(NotificationBroadcasterSupport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#markFlushing(Memtable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#FunctionCall(ScalarFunction,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexBuilder#build().mjava,0,0,6,0,1,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#ttlSerializedSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#syncFolder(Throwable).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#forSelection(CFMetaData,Selection).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService.ParentRepairSession#addSSTables(UUID,Set[SSTableReader]).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#attachTo(BasePartitions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#IndexSummaryBuilder(long,int,int).mjava,0,0,8,3,2,0.1304347813129425,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#performWrite(IMutation,ConsistencyLevel,String,WritePerformer,Runnable,WriteType).mjava,0,0,12,6,6,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getShortByByte(long).mjava,0,0,4,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#useEpoll().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#[T-extends-RefCounted[T]]_ref(Iterable[T]).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#ackCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#Deserializer(ClusteringComparator,DataInputPlus,SerializationHeader).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getWriteableLocationAsFile(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#set(String,Set[#]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#hasIndexes().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createSSTableMultiWriter(Descriptor,long,long,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#announceMigration(boolean).mjava,0,0,2,1,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#seek(long).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo#CompressionInfo(CompressionMetadata.Chunk[],CompressionParams).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#Row(List[ColumnSpecification],List[ByteBuffer]).mjava,0,0,6,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEntriesLength().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#LocalPartitioner(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.RowCacheSerializer#serialize(RowCacheKey,DataOutputPlus,ColumnFamilyStore).mjava,0,0,3,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#allPriorOpsAreFinished().mjava,0,2,0,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#build().mjava,0,0,7,0,3,0.1538461595773697,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getName().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#apply(Mutation,boolean,boolean,boolean).mjava,0,0,49,4,8,0.034090910106897354,256,11,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPoolRef#release().mjava,0,0,1,0,0,0.0,3,2,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#TopologyChange(Change,InetSocketAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getMaximumCompactorThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#allColumns().mjava,0,18,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validateTargetColumnIsMapIfIndexInvolvesKeys(boolean,IndexTarget).mjava,0,0,1,2,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#consistencyForRole(String).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterable(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#containsAll(Collection[#]).mjava,0,0,1,1,0,0.1666666716337204,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#isTerminated().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#getIndexValue().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#MemoryOutputStream(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#apply(V,int).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.Builder#build().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#deserialize(Descriptor,MetadataType).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#deletes(LivenessInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Blocker#block(boolean).mjava,0,0,3,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#createRemote(CounterId,long,long).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#makeKeyBounds(PartitionPosition,boolean).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,16,3,6,0.01886792480945587,300,8,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readLine().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#metadata().mjava,0,77,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#unregisterMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\UpgradeSSTable#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.Serializer#deserialize(DataInputPlus,int).mjava,0,0,12,2,6,0.03125,18,5,20,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy.SplittingCompactionTask#SplittingCompactionTask(ColumnFamilyStore,LifecycleTransaction,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateUserType(UserType).mjava,0,0,7,1,0,0.20000000298023224,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredRows#isEmpty().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#SliceRestriction(CFMetaData,List[ColumnDefinition],Bound,boolean,Term).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#IntegerType().mjava,0,0,0,0,0,Infinity,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#iterator().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#MutableDeletionInfo(long,int).mjava,0,0,0,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isCounter().mjava,0,32,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#newIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#appendFileName(StringBuilder).mjava,0,0,10,1,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#newOffsets(int).mjava,0,0,1,1,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#build().mjava,0,0,5,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#isCompatibleWithFrozen(CollectionType[#]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getRequestedRows(QueryOptions).mjava,0,0,2,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterator#isEmpty().mjava,0,9,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#IndexSummary(IPartitioner,Memory,int,Memory,long,int,int,int).mjava,0,0,1,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#max().mjava,0,3,3,0,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setNativeTransportMaxConcurrentConnections(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#userType(UTName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#firstByteValueMask(int).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#seekToChunkStart().mjava,0,1,3,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#columns().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#isTerminated().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#deserializeHeader(CFMetaData,ColumnFilter,DataInputPlus,int,SerializationHelper.Flag).mjava,0,0,7,5,11,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionParametersJson().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#serialize(StreamMessage,DataOutputStreamPlus,int,StreamSession).mjava,0,0,5,4,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateKeyspaceStatement#changeEvent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#clusteringIndexFilter(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#LogFile(OperationType,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#cell(ColumnDefinition,CellPath).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#prepare_cql_query(ByteBuffer,Compression).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SchemaCheckVerbHandler#doVerb(MessageIn,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables.Builder#add(Iterable[CFMetaData]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#hashCode().mjava,0,0,0,0,1,0.625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#snapshotOnVersionChange().mjava,0,1,10,0,4,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Dir#desc(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WriteResponse.Serializer#serializedSize(WriteResponse,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#hasRoom().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#hasAcceptableAddressSpace().mjava,0,1,4,0,1,0.0476190485060215,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#maxTimestamp().mjava,0,1,14,0,2,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#none().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\PrepareMessage#execute(QueryState).mjava,0,0,15,1,2,0.0,8,3,20,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#execute(DecoratedKey,UpdateParameters).mjava,0,0,9,2,4,0.3571428656578064,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUID(long,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#next().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#info(long,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getIndexFilename().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#decompose(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredRows#add(Transformation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.EQRestriction#EQRestriction(CFMetaData,List[ColumnDefinition],Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#none().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager.Role#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#isLive(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#maybeTryAdditionalReplicas().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#nonPKRestrictedColumns(boolean).mjava,0,0,6,1,1,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators#unfilteredPartition(CFMetaData,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getOverlappingStarvedSSTables(int,Collection[SSTableReader]).mjava,0,0,14,2,6,0.1111111119389534,114,10,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#checkAvailableDiskSpace(long,long).mjava,0,0,4,2,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#withBufferSizeInMB(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#rebuild().mjava,0,3,13,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#reset().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#isSystemKeyspace(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#maybeResetTraceSessionWrapper(Runnable).mjava,0,0,1,1,1,0.2857142984867096,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyUnfilteredPartition#LegacyUnfilteredPartition(DeletionTime,LegacyRangeTombstoneList,List[LegacyCell]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#builder().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#getRack(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBatchSizeFailThresholdInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#validateOptions(Map[String,String],Map[String,String]).mjava,0,0,10,2,4,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#fromMap(Map[String,String]).mjava,0,0,11,1,4,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering.Serializer#deserialize(ByteBuffer,int,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#releaseSummary().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V]_empty(Comparator[#-super-V]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#respondError(Truncation,MessageIn).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchTrigger#schedule(HintsStore).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMinThreads().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#register(Ref.State).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofWithVIntLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions.Builder#Builder().mjava,0,0,4,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.TombstoneTracker#clearState().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#warn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager.InternalPager#InternalPager(QueryPager,ReadOrderGroup).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#getTableDirectory().mjava,0,1,6,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getReleaseVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\Bound#isStart().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#[T-extends-RingPosition[T]]_getRestrictedRanges(AbstractBounds[T]).mjava,0,0,16,1,7,0.5416666865348816,10,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#javaTypes(DataType[],boolean).mjava,0,0,1,2,2,0.03846153989434242,130,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.TimedSignal#cancel().mjava,0,0,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#newINRestriction(CFMetaData,VariableSpecifications).mjava,0,0,4,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_bounds(Boundary[T],Boundary[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.OldFormatIterator#computeNext().mjava,0,1,10,0,3,0.0,6,3,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#findDroppableSSTable(int).mjava,0,0,12,1,4,0.03846153989434242,9,4,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#equals(Object).mjava,0,0,10,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage.WrappedException#getStreamId().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isView().mjava,0,19,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#isCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Literal#Literal(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#doFsync().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#isSubDirectory(File,File).mjava,0,0,4,2,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#isDone().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#descriptor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json#parseJson(String,Collection[ColumnDefinition]).mjava,0,0,18,2,3,0.0,8,3,27,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#init().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#isEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.SSTableTidier#run().mjava,0,0,9,0,1,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setPartitionerUnsafe(IPartitioner).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readInet(ByteBuf).mjava,0,0,5,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#gatherFlags(QueryOptions).mjava,0,0,14,1,1,0.0,64,6,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DefaultNameFactory#createDefaultMBeanName(String,String,String).mjava,0,0,9,3,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#withNonStrictOperator().mjava,0,0,0,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readKeyspaceTimestamp(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#chooseType(String,Class[#]).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#findType(char[][]).mjava,0,0,4,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher.Flusher#Flusher(EventLoop).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#registerMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosProposal(Commit).mjava,0,0,9,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getSSLContext(String,String,String,String).mjava,0,0,17,4,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestResolver#getData().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#isFree().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangeToRpcaddressMap(String).mjava,0,0,10,1,2,14.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#update(String).mjava,0,0,7,1,2,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#allocated(long).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#ArrayBackedBuilder(ClusteringComparator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#forceRemoveCompletion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#byteBufferToRange(ByteBuffer,IPartitioner).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#put(Buffer).mjava,0,0,2,1,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner.LocalToken#compareTo(Token).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#supportsExpression(RowFilter.Expression).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper.StringSerializer#serializedSize(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#toJSONString(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#waitingFor(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,11,3,1,0.1111111119389534,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_deoverlap(List[Range[T]]).mjava,0,0,15,1,5,0.19354838132858276,20,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#clearSnapshot(String,List[File]).mjava,0,0,6,2,2,0.04545454680919647,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#build(int).mjava,0,0,8,1,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#compare(Clusterable,Clusterable).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager#Pager(QueryPager).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getCompactionController(Set[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#skipBytes(int).mjava,0,0,7,1,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#SerializationHelper(CFMetaData,int,Flag).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_submit(Runnable,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#sendReplicationNotification(InetAddress).mjava,0,0,7,1,3,0.1666666716337204,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getFullyExpiredSSTables(ColumnFamilyStore,Iterable[SSTableReader],Iterable[SSTableReader],int).mjava,0,0,20,4,4,0.1666666716337204,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.DroppedColumn#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#close().mjava,0,1,3,0,0,0.3333333432674408,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#protectedResources().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#prepareToCommit().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeSent().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#cas(String,String,DecoratedKey,CASRequest,ConsistencyLevel,ConsistencyLevel,ClientState).mjava,0,0,37,7,14,0.17391304671764374,10,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#capacity().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#delete(Throwable).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#PartitionRangeReadCommand(boolean,int,boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits,DataRange,Optional[IndexMetadata]).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#start().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCachedPosition(KeyCacheKey,boolean).mjava,0,0,7,2,1,0.0,4,3,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component.Type#fromRepresentation(String).mjava,0,0,1,1,0,0.0,2,1,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#executePrepared(byte[],List[ByteBuffer],ConsistencyLevel).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableMultiWriter#abortOrDie(SSTableMultiWriter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#currentValue().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#PartitionIterators().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#clustering().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#casInternal(CQL3CasRequest,QueryState).mjava,0,0,15,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateCompactionHistory(String,String,long,long,long,Map[Integer,Long]).mjava,0,0,6,6,1,0.07692307978868484,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onDropColumnFamily(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeBound(CFMetaData,ByteBuffer,boolean).mjava,0,0,28,3,6,0.05882352963089943,12,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategyOptions#SizeTieredCompactionStrategyOptions(Map[String,String]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#skipDeletionTime(DataInputPlus).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getBadnessThreshold().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Deserializer#deserializeNextClustering().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\TombstoneOverwhelmingException#makePKString(CFMetaData,ByteBuffer,ClusteringPrefix).mjava,0,0,19,3,4,0.03846153989434242,32,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#deleteAllHints().mjava,0,1,6,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples#tupleToString(List[#]).mjava,0,0,7,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#startOrderGroup().mjava,0,1,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getList(String,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#RestorableMeter(double,double).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Flush#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\InvalidateRowCache#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#close().mjava,0,0,4,0,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getKeyspace().mjava,0,30,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#getMapKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#run().mjava,0,0,15,0,4,0.043478261679410934,2,1,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#expiring(long,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Serializer#serializedSize(RowFilter,int).mjava,0,0,3,2,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#replace(K,V,V).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announce(Mutation,boolean).mjava,0,0,5,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#View(ViewDefinition,ColumnFamilyStore).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#applyToPartition(BaseRowIterator).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#CFStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getChildStart(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#size(Object[]).mjava,0,0,2,1,1,0.5,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(ConsistencyLevel).mjava,0,0,0,1,0,0.0,23,1,23,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#trueSnapshotsSize().mjava,0,0,5,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stopCassandraDaemon().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#indexes(FilterKey).mjava,0,0,4,1,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetStreamThroughput#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#with(TriggerMetadata).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#MerkleTree(IPartitioner,Range[Token],byte,long).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#ElementDeletion(ColumnIdentifier.Raw,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#SSTableLoader(File,Client,OutputHandler).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#seekToNextRow().mjava,0,2,6,0,0,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#snapshotCreationTime(String).mjava,0,0,3,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#serializedSize(Inner,int).mjava,0,0,7,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateChecksumInt(Checksum,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#copy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#PurgeFunction(boolean,int,int,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.BaseTokenInfo#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isSlice().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#fetchPage(int,ConsistencyLevel,ClientState).mjava,0,0,8,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#mergeWith(Restriction).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,38,2,9,0.13333334028720856,80,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#doMergeWith(Restriction).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#sliceableUnfilteredIterator().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#finishViewBuildStatus(String,String).mjava,0,0,5,2,0,0.8333333134651184,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionBuilder#SinglePartitionBuilder(ColumnFamilyStore,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\TokenFct#TokenFct(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#deserialize(DataInput).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\CustomIndexExpression#CustomIndexExpression(IndexName,Term.Raw).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#needsAdvance().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#parseStatement(String,QueryState).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction.Simple#apply(V,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#setDiscarded().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\SEPMetrics#release().mjava,0,1,12,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeSlice(DataOutputPlus,Slice,boolean,CFMetaData).mjava,0,0,8,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#isEmpty(List[IndexExpression]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#getRelativePath(String,String).mjava,0,0,9,2,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReusablePartitionData#build().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MigrationRequestVerbHandler#doVerb(MessageIn,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#isTimeToLiveSet().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getIndexIntervals().mjava,0,0,6,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier.Options#parseArgs(String[]).mjava,0,0,14,1,8,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#add(FilterKey).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBufferPoolUseHeapIfExhausted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#failedRepairJob(UUID,String,String,Throwable).mjava,0,0,7,4,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#readTimestamp(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getPath().mjava,0,18,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#pointInTimeExceeded(Mutation).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#bindAndGet(QueryOptions).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getNextId().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#get75thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#setPartial().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#isStatic(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#compareTo(Group).mjava,0,0,0,1,1,0.2222222238779068,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.CleanupGCTransaction#onRowDelete(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#hasCF(Pair[String,String]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fieldName(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#makeColumnFilter().mjava,0,3,6,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLoggingLevels().mjava,0,0,9,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#get(UUID).mjava,0,0,4,1,1,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#fromSchemaMetadata(String,Kind,Map[String,String]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#hasUnrestrictedClusteringColumns().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ReadyMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_construct(Class[T],String,String).mjava,0,0,6,3,0,0.05000000074505806,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#toString().mjava,0,0,8,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#write(Iterable[UUID],Hint).mjava,0,0,5,2,0,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#getSpecificOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#TermSlice(Term,boolean,Term,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#setMetadata(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#hasNextInternal().mjava,0,0,2,0,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#writePartition(StreamDeserializer,SSTableMultiWriter,ColumnFamilyStore).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#TreeRangeIterator(MerkleTree).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#validate(Set[String],Set[String]).mjava,0,0,5,2,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Terminal#collectMarkerSpecification(VariableSpecifications).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#digest(UnfilteredPartitionIterator,MessageDigest,int).mjava,0,0,3,3,0,0.0,2,1,7,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintsInProgress().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputStreamPlus#retrieveTemporaryBuffer(int).mjava,0,0,5,1,1,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#rangeIterator(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onJoin(InetAddress,EndpointState).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\CleanupMessage#CleanupMessage(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneOnlyTokenMap().mjava,0,16,6,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,long,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#dataRange().mjava,0,44,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#resetLimit().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flush().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#skipBytes(int).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyUserTypeParameters(String,ByteBuffer,List[ByteBuffer],List[AbstractType[#]]).mjava,0,0,16,4,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#ConnectionMetrics(InetAddress,OutboundTcpConnectionPool).mjava,0,0,31,2,0,0.014705882407724857,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,2,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#doCommit(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K-extends-Comparable[K],V-extends-Comparable[V]]_create(BiMultiValMap[K,V]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator.CountingDigest#engineReset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#hasNext().mjava,0,4,11,0,1,0.07692307978868484,6,4,15,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionSliceBuilder#SinglePartitionSliceBuilder(ColumnFamilyStore,DecoratedKey).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#hasKeyspace().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#toTerm(List[#-extends-ColumnSpecification],Raw,String,VariableSpecifications).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#applyToRow(Row).mjava,0,0,3,1,0,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#forCommand(ReadCommand).mjava,0,0,9,1,3,0.11764705926179886,2,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#compression(CompressionParams).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#listIterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableBufferAllocator#clone(DecoratedKey,OpOrder.Group).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#close().mjava,0,0,6,0,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#skipTTL(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#ceiling(V).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateChecksum(CRC32,ByteBuffer,int,int).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#decodeOne(ByteBuf,int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#thriftColumnNameType().mjava,0,5,5,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getConnection(MessageOut).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TriggerMetadata#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#forPaging(Clustering,int).mjava,0,0,13,2,0,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyDrop(String,String,boolean).mjava,0,0,8,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#getComplex(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#getFilePointer().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GoogleCloudSnitch#getDatacenter(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#isNotNull().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#effectiveOwnership(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getBuiltIndexNames().mjava,0,2,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#remove(UUID).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell.Serializer#skip(DataInputPlus,ColumnDefinition,SerializationHeader).mjava,0,0,9,3,6,0.0,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#dropPageCache(long).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#setDigestVersion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#root().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifySSTableRepairedStatusChanged(Collection[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getMinIndexInterval().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#OHCacheAdapter(OHCache[RowCacheKey,IRowCacheEntry]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#pageAggregateQuery(Pager,QueryOptions,int,int).mjava,0,0,14,4,1,0.0,12,4,8,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#function(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#cellComparator().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[K,V]_create(BiMultiValMap[K,V],Comparator[K],Comparator[V]).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#distinctLimits(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#toJSONString(ByteBuffer,int).mjava,0,0,16,2,3,0.05882352963089943,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#addTo(Ref.IdentityCollection).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.LogOutput#warn(String,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#makeEventMutation(ByteBuffer,String,int,String,int).mjava,0,0,9,5,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder#build().mjava,0,2,12,0,4,0.5555555820465088,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativePort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#serialize(Inner,DataOutputPlus,int).mjava,0,0,6,3,0,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#close().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#validateKeyspace(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#createCorrespondingCloseMarker(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#resultMessage(List[PermissionDetails]).mjava,0,0,11,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#addLocalApplicationStateInternal(ApplicationState,VersionedValue).mjava,0,0,8,2,2,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#removeInternal(int).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#forPaging(ClusteringComparator,Clustering,boolean,boolean).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces.Builder#add(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#areTokensValid(Token...).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#takeSnapshot(String,String,String...).mjava,0,0,2,3,0,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#diff(Keyspaces).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter.RestorableEWMA#rate().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#create(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#serializeBounds(DataOutput,Version).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\StreamStateStore#onFailure(Throwable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getCustomOptions(RoleResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\NoScheduler#queue(Thread,String,long).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#move(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\FilteredPartition#create(RowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#getDefinition(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#processBatchlogEntries(UntypedResultSet,int,RateLimiter).mjava,0,0,13,3,7,0.1621621549129486,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#staticBuilder().mjava,0,1,3,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#CompressionMetadata(String,long,ChecksumType).mjava,0,0,9,3,6,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#isSuper().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#scrub(boolean,boolean,boolean,String,String...).mjava,0,0,2,5,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#getResultSetIndex(ColumnDefinition).mjava,0,0,4,1,1,0.0,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask.SnapshotCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#releaseIfHolds(T).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#getUnwritableDirectories().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\QueryMessage#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#terminate().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_xor(long[],long[],int,int).mjava,0,0,7,4,27,0.12903225421905518,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#read(DataInput).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#serialize(ByteBuffer).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexFilter.Kind#Kind(InternalDeserializer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\UnavailableException#UnavailableException(String,ConsistencyLevel,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getToolsOutputDirectory().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#complete().mjava,0,1,3,0,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthKeyspace#compile(String,String,String).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#CommitLogDescriptor(long,ParameterizedClass).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#unixTimestamp(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier#verify(byte[]).mjava,0,0,16,1,3,0.0535714291036129,72,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\FilteredPartition#rowIterator().mjava,0,2,8,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#[V]_runWithCompactionsDisabled(Callable[V],boolean,boolean).mjava,0,0,17,3,1,0.1315789520740509,2,1,25,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#getFunctions().mjava,0,3,14,0,0,0.0,8,3,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#updatedColumns().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#fail().mjava,0,0,4,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSSLStoragePort().mjava,0,4,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#addRow(Row,boolean).mjava,0,0,6,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.State#contains(SSTableReader).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#regions(MmappedRegions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#partial().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#revokeRole(AuthenticatedUser,RoleResource,RoleResource).mjava,0,0,16,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable.Tidy#tidy().mjava,0,0,3,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#checkAccess(ClientState).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#HintsService().mjava,0,0,8,0,4,0.0625,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#Parsed(Type,Attributes.Raw,List[ModificationStatement.Parsed]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#enableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#hasLiveData(int).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#updateAllTimestamp(long).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#compareTo(GossipDigest).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#Paging(AbstractBounds[PartitionPosition],ClusteringIndexFilter,ClusteringComparator,Clustering,boolean).mjava,0,0,2,5,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#rethrow(RequestExecutionException).mjava,0,0,2,1,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSplits(String,String,Range[Token],int).mjava,0,0,10,4,8,0.09090909361839294,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#staticBound(CFMetaData,boolean).mjava,0,0,3,2,1,0.375,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#checkForExceptions().mjava,0,1,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#add(SharedCloseable).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering#copy(AbstractAllocator).mjava,0,0,4,1,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#requestedSlices().mjava,0,23,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#merge(Row,Row,int).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serializedSize(Token,int).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogAwareFileLister#LogAwareFileLister(Path,BiFunction[File,FileType,Boolean],OnTxnErr).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#addInput(int,ResultSetBuilder).mjava,0,0,2,2,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer.Allocation#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Value#getElements().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\KeyspaceNotDefinedException#KeyspaceNotDefinedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getGossipMessageDroppedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#state().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getId(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#getTargetIndex().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#getInValues().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Discarder#requiresRead().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#higher(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#close().mjava,0,1,4,0,0,0.1111111119389534,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#spliterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_partitioner().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#isClean().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#reloadSSTableMetadata().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(Throwable,Stream[#-extends-DiscreteAction[#]]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTraceProbability().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#clustering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#updateSSTableIterated(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#getCanonicalPath(File).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#reBufferStandard().mjava,0,0,32,0,2,0.07407407462596893,24,5,38,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#histogramOfRowCountPerLeaf().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewView(ViewDefinition,boolean).mjava,0,0,9,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#isInterned().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#applyToRow(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#adjustSamplingLevels(List[SSTableReader],Map[UUID,LifecycleTransaction],double,long).mjava,0,0,58,4,27,0.08163265138864517,64,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#taskPermits(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#rebuildOnFailedScrub(Throwable).mjava,0,0,10,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#scheduleWithFixedDelay(Runnable,long,long,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxType().mjava,0,9,0,0,0,0.0,17,1,17,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_intersectionOneWrapping(Range[T],Range[T]).mjava,0,0,6,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_token_map().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AbstractIterator#hasNext().mjava,0,0,1,0,0,0.0,11,2,11,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspace(String).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#CompositeType(List[AbstractType[#]]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#getToken().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,Set[Component],CFMetaData).mjava,0,0,1,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#getTimestamp(QueryState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyRangeSliceCommandSerializer#maybeConvertNamesToSlice(PartitionRangeReadCommand).mjava,0,0,18,1,4,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#create(Clustering,LivenessInfo,Deletion,Object[]).mjava,0,0,7,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#doAbort(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.DelayedValue#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateColumnSetPerRow(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Debug#log(String).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#options().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeReceiveBufferSize(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(File,String,String,int,SSTableFormat.Type).mjava,0,0,3,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#updateWithCurrentValuesFromCFS(List[PartitionUpdate.CounterMark],ColumnFamilyStore).mjava,0,0,26,2,6,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#names(Collection[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.Reader#hasNext().mjava,0,2,6,0,0,0.0,2,1,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredRows#stats().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier.VerifyInfo#VerifyInfo(RandomAccessReader,SSTableReader).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#RangeTombstoneBoundMarker(Slice.Bound,DeletionTime).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_minRight(Boundary[T],T,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MajorLeveledCompactionWriter#MajorLeveledCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],long,boolean,boolean).mjava,0,0,4,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyBoundComparator#compare(LegacyBound,LegacyBound).mjava,0,0,2,2,1,0.1875,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getRecentBloomFilterFalsePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeRestoreArchive().mjava,0,1,25,0,6,0.0,512,9,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetElement#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#calculatePageSize(ColumnFamilyStore).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionSliceBuilder#makeFilter().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#resetDataDirectoriesAfterTest().mjava,0,0,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getRateUnit().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getSnitchName().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#invalidRequest(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#toString(Map[#,#]).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Bounded#Bounded(ColumnFamilyStore,Collection[Range[Token]],int).mjava,0,0,2,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#CounterId(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState#ReaderState(Action,Action,SSTableReader,SSTableReader,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#setVersion(InetAddress,int).mjava,0,0,3,2,1,0.09090909361839294,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#local().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#awaitUntil(Date).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#PartitionUpdate(CFMetaData,DecoratedKey,PartitionColumns,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateTtl(Column).mjava,0,0,2,1,0,0.07692307978868484,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategyOptions#DateTieredCompactionStrategyOptions().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#skipRowBody(DataInputPlus).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#getNullable(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#keySamples(Range[Token]).mjava,0,0,5,1,2,0.0,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getDataChannel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#forInternalCalls().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#getInValues().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation.MutationSerializer#deserialize(DataInputPlus,int,SerializationHelper.Flag).mjava,0,0,12,3,5,0.0357142873108387,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#progress(String,ProgressEvent).mjava,0,0,8,2,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#make(Clustering).mjava,0,0,3,1,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#stop().mjava,0,3,12,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,long,int,Object).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#pollLast().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#closeDeletionTime(boolean).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#forSubRange(AbstractBounds[PartitionPosition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#evaluateComparisonWithOperator(int,Operator).mjava,0,0,0,2,0,0.05882352963089943,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection#column().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#onFailure(Throwable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#Builder(boolean,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairParallelism#getName().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#stopKey().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#[T-extends-Enum[T]]_sizeOfEnumValue(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#fromString(String).mjava,0,0,16,1,4,0.125,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getNaturalEndpoints(RingPosition).mjava,0,0,9,1,4,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#mockKS(KeyspaceMetadata).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Downsampling#getStartPoints(int,int).mjava,0,0,4,2,6,0.1666666716337204,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#signal().mjava,0,2,3,0,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#getTTL().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Serializer#serializedSize(EncodingStats).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#run().mjava,0,0,17,0,4,0.1538461595773697,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#finishShadowRound().mjava,0,1,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#without(ByteBuffer).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#DelayedValue(Comparator[ByteBuffer],Map[Term,Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeReuseAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ViewWriteMetrics#ViewWriteMetrics(String).mjava,0,0,10,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#columnFamily().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#unfilteredIterator(Holder,ColumnFilter,Slices,boolean).mjava,0,0,7,4,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#isEmpty(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setUserFunctionTimeoutPolicy(Config.UserFunctionTimeoutPolicy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyMoved(InetAddress).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetCacheKeysToSave#execute(NodeProbe).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#FileMessageHeader(UUID,int,Version,SSTableFormat.Type,long,List[Pair[Long,Long]],CompressionInfo,long,int,SerializationHeader.Component).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#canSkipValue(ColumnDefinition,CellPath).mjava,0,0,4,2,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#readCollectionSize(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readUnsignedByte().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#released(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#updateDefinition(CFMetaData,ColumnDefinition,String,ByteBuffer,UserType).mjava,0,0,3,5,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.DefaultQueryOptions#getConsistency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#setInternal(int,Slice.Bound,Slice.Bound,long,int).mjava,0,0,4,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compare(ByteBuffer,byte[],int,int).mjava,0,0,7,4,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#retry(UUID,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#activeDeletion().mjava,0,1,2,0,1,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#remainingCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isCounterCacheEnabled().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#unusedCapacity().mjava,0,0,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#select(SSTableSet,Iterable[SSTableReader]).mjava,0,0,5,2,0,0.0,9,1,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#clearState().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#freeze().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#saveSummary(SegmentedFile.Builder,SegmentedFile.Builder,IndexSummary).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DefaultValue#DefaultValue(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor.TraceSessionWrapper#TraceSessionWrapper(Callable[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#fetchKeys().mjava,0,1,9,0,1,0.2142857164144516,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\HeapAllocator#allocate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isReplacing().mjava,0,1,4,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#validate(PartitionUpdate).mjava,0,0,7,1,0,0.0,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[K,V-extends-K]_slice(Object[],Comparator[#-super-K],K,boolean,K,boolean,Dir).mjava,0,0,7,7,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#replaceSSTables(Collection[SSTableReader],Collection[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#serializeBounds(DataOutput,Version).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage.StreamInitMessageSerializer#serialize(StreamInitMessage,DataOutputPlus,int).mjava,0,0,7,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#prepare(String,QueryState).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setBytes(byte[],int,long,long).mjava,0,0,1,4,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#simpleIdx(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AsciiSerializer#validate(ByteBuffer).mjava,0,0,4,1,1,0.125,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#totalEndpoints().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#compare(ClusteringPrefix,ClusteringPrefix).mjava,0,0,11,2,4,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#queryStorage(ColumnFamilyStore,ReadOrderGroup).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#removedNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_boolean(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#write(ByteBuffer).mjava,0,0,10,1,0,0.0,2,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#limits().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getSSTables(String,String,String).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#hasStaticColumns().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#operator().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#bounds(Bound,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#length().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#clearSnapshot(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#getTimestamp().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#put(Thread,long).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#discardCompletedSegments(UUID,ReplayPosition).mjava,0,0,13,2,1,0.30000001192092896,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getUpdateInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofUnsignedVInt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxStreamingRetries().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#fromKeyIncl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndex#supportsOperator(ColumnDefinition,Operator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetHostStat#SetHostStat(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.NullLiteral#testAssignment(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#applyTo(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#contains(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#lcs(Map[String,String]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask.OnCompletionRunnable#OnCompletionRunnable(StreamReceiveTask).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#Version(SSTableFormat,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.DelayedColumnValue#bind(QueryOptions).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.LogFilesByName#removeUnfinishedLeftovers(String,List[File]).mjava,0,0,6,2,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#setValidity(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#deserialize(ByteBuffer).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#singleRowUpdate(CFMetaData,DecoratedKey,Row).mjava,0,0,8,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#addExist(Clustering).mjava,0,0,1,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamStateCompositeData#fromCompositeData(CompositeData).mjava,0,0,8,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getLargeMessagePendingTasks(InetAddress).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#takeMultipleTableSnapshot(String,String...).mjava,0,0,1,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#removeProgressListener(ProgressListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats#mergeWith(EncodingStats).mjava,0,0,3,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#forPaging(ClusteringComparator,Clustering,boolean,boolean).mjava,0,0,10,4,4,0.0,10,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#initializeNodeUnsafe(InetAddress,UUID,int).mjava,0,0,6,3,4,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#build().mjava,0,8,6,0,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.OptionalSecureInitializer#OptionalSecureInitializer(Server,EncryptionOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\LocalSyncTask#LocalSyncTask(RepairJobDesc,TreeResponse,TreeResponse,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#toString(Set[T]).mjava,0,0,6,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\QueryPagers#QueryPagers().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcServerType().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TriggerMetadata#create(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TServerCustomFactory#buildTServer(TServerFactory.Args).mjava,0,0,23,1,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\PreparedQueryNotFoundException#makeMsg(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fieldNames().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#tryAllocate(long).mjava,0,0,1,1,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#none().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#limits().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.BaseTokenInfo#BaseTokenInfo(Token,UnitInfo[Unit]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.ExternalClient#resolveHostAddresses(Configuration).mjava,0,0,4,1,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#excise(Collection[Token],InetAddress,long).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#close().mjava,0,2,2,0,0,0.5,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#finish().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getCFMetaData().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#counterWriteTask(IMutation,Iterable[InetAddress],AbstractWriteResponseHandler[IMutation],String).mjava,0,0,8,4,2,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#doMergeWith(Restriction).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#close().mjava,0,0,3,0,0,0.0,4,2,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#increaseSlightly().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#isIndexColumnFamily(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.MissingPropertiesChecker#getProperty(Class[#-extends-Object],String).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#comment(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#partitionLevelDeletion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#makeSlices(QueryOptions).mjava,0,0,20,1,9,0.07999999821186066,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#getLength(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#recycle().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Value#get(int).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#serialize(PartitionUpdate,DataOutputPlus,int).mjava,0,0,7,3,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchKeyspace(String).mjava,0,0,6,1,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#buildListQuery(IResource,RoleResource,boolean).mjava,0,0,13,3,5,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#onPartitionClose().mjava,0,0,1,0,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.RawDelayedColumnValue#testAssignment(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#canHaveOnlyOneValue().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#toUpdate().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#unitCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair.NodePairSerializer#deserialize(DataInputPlus,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfArray(int,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#GossipingPropertyFileSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepareConditions(CFMetaData,VariableSpecifications).mjava,0,0,4,2,0,0.11764705926179886,8,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\BatchlogResponseHandler#onFailure(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#getKeysType().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#ascendToRoot().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#allocate(int,OpOrder.Group).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#toTerms(List[#-extends-ColumnSpecification],List[#-extends-Term.Raw],String,VariableSpecifications).mjava,0,0,4,4,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPendingRangeToEndpointMap(String).mjava,0,0,9,1,2,0.1818181872367859,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithMarker#InRestrictionWithMarker(ColumnDefinition,AbstractMarker).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.ConnectionTracker#isRegistered(Event.Type,Channel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#updateWorkPermits(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies#newCoalescingStrategy(String,int,Parker,Logger,String).mjava,0,0,10,5,4,0.0,30,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TpStats#execute(NodeProbe).mjava,0,0,15,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createSSTableMultiWriter(Descriptor,long,long,int,SerializationHeader,LifecycleTransaction).mjava,0,0,2,6,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#Tuple(TupleType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCacheServiceMBean().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#MemoryInputStream(Memory).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointForHostId(UUID).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#executeInternal(String,Object...).mjava,0,0,5,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readFully(byte[],int,int).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#getNaturalEndpoints(RingPosition).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#keySamples(Iterable[ColumnFamilyStore],Range[Token]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRolesUpdateInterval().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer.ThriftCASRequest#makeUpdates(FilteredPartition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#get(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getTraceProbability().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#makeCollectionReceiver(ColumnSpecification,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#isLocalHost(Host).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(CharSequence).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\ScalarFunctionSelector#getOutput(int).mjava,0,0,6,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#acceptImpl().mjava,0,0,10,0,2,0.0,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata.Codec#encodedSize(PreparedMetadata,int).mjava,0,0,11,2,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#allocateTokens(TokenMetadata,AbstractReplicationStrategy,InetAddress,int).mjava,0,0,17,4,5,0.0555555559694767,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TypeCast#getText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#JmxTimer(Timer,ObjectName,TimeUnit,TimeUnit).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#RoundRobinScheduler(RequestSchedulerOptions).mjava,0,0,3,1,2,0.05263157933950424,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#subtract(Range[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#openChannel(File).mjava,0,0,9,1,1,0.0,2,1,19,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#createIterator().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TServerCustomFactory#TServerCustomFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#skipLocalDeletionTime(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftExpression#ThriftExpression(CFMetaData,ByteBuffer,Operator,ByteBuffer).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnWithName(CFMetaData,LegacyLayout.LegacyCell,ByteBuffer).mjava,0,0,6,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getHintsInProgress().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#[E]_resize(E[]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#tailSet(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#toString(BigInteger).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AbstractIterator#peek().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheSavePeriodInSeconds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#doAbort(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#apply(Predicate[View],Function[View,View]).mjava,0,0,5,2,2,0.0,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#SocketThread(ServerSocket,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#remove(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces.Builder#build().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#ErrorCollector(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#read().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#isClose(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Element#toString().mjava,0,0,5,0,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#selectsClustering(DecoratedKey,Clustering).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#shouldCleanupOldValue(Cell,Cell).mjava,0,0,5,2,0,3.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry#deletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#get(FunctionName).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#SafeMemoryWriter(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableHintsForDC#execute(NodeProbe).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#deserializePre30(DataInputPlus,int,SerializationHelper.Flag,ByteBuffer).mjava,0,0,2,4,0,0.1428571492433548,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#topbyte(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#dataSize().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#loadBloomFilter(boolean).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#doMergeWith(Restriction).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#ensureReleased(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\PartitionKeyIndex#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,6,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#add(long,long).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\client\RingCache#refreshEndpointMap().mjava,0,1,15,0,6,0.02857142873108387,1,0,22,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#recycleSegment(CommitLogSegment).mjava,0,0,5,1,1,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\WriteCallbackInfo#getMutation(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#get().mjava,0,3,7,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactionSummary().mjava,0,0,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#decommission().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSubsnitchClassName().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#abort().mjava,0,0,8,0,1,0.0,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#[C,D]_create(C,C,D).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#validateCollectionMember(ByteBuffer,ByteBuffer).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#isVersion2x().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\RegularColumnIndex#buildIndexClusteringPrefix(ByteBuffer,ClusteringPrefix,CellPath).mjava,0,0,6,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_intersectionBothWrapping(Range[T],Range[T]).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#speculativeRetry(SpeculativeRetryParam).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getChangedRangesForLeaving(String,InetAddress).mjava,0,0,25,2,6,0.4000000059604645,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\BytesConversionFcts#makeToBlobFunction(AbstractType[#]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.RowUpdate#applyUpdates(FilteredPartition,PartitionUpdate).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#copy().mjava,0,0,10,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#truncationAsMapEntry(ColumnFamilyStore,long,ReplayPosition).mjava,0,0,6,3,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#set(int,V).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DefaultValue#isModified().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage#deserialize(ReadableByteChannel,int,StreamSession).mjava,0,0,6,3,3,0.1111111119389534,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Response#setTracingId(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.TooDeep#TooDeep().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#doPostCleanup(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch.Serializer#decodeMutations(DataInputPlus,int).mjava,0,0,4,2,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#allowClusteringColumnSlices().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#isShadowedBy(LivenessInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#stop(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitInfo#UnitInfo(Unit,double,Map[Object,GroupInfo],ReplicationStrategy[Unit]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isMultiColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#getFilename().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeInternalWithCondition(QueryState,QueryOptions).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#getDefaultIndexName(String,String).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#bind(QueryOptions).mjava,0,0,12,1,3,0.03846153989434242,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#setStreamFactory(IStreamFactory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#removeEndpoint(InetAddress).mjava,0,0,15,1,0,0.1111111119389534,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#addMessageSink(IMessageSink).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#commit().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#regular(CFMetaData,ByteBuffer,ByteBuffer,ByteBuffer,long).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MaxSSTableSizeWriter#MaxSSTableSizeWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],long,int,boolean,boolean).mjava,0,0,6,8,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner.StringToken#getHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,9,2,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\THsHaDisruptorServer.Factory#buildTServer(Args).mjava,0,0,16,1,5,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.ColumnsConditions#ColumnsConditions(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeChars(String).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#ForStore().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\PrepareMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjTargetClassLoader#getPermissions(CodeSource).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getMaxSSTableBytes().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabPool#SlabPool(long,long,float,Runnable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#validateForIndexing().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getTypeParameters().mjava,0,7,9,0,2,0.03703703731298447,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#State(State).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#Interval(C,C,D).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setByteBuffer(ByteBuffer,long,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#deserialize(DataInputPlus,int).mjava,0,0,5,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#stopServer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#toString().mjava,0,0,15,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.RandomAccessReaderWithOwnChannel#close().mjava,0,2,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDecimal(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSSTableFormat().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getRandomToken().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#weightedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\StreamingMetrics#StreamingMetrics(InetAddress).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getColumnMapping().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#gossiperStarting().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation.CounterMutationSerializer#serializedSize(CounterMutation,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#offHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DigestResponse#DigestResponse(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy.Cleanup#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#toString().mjava,0,0,21,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#create(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],AbstractType[#],boolean,String,String).mjava,0,0,1,7,0,0.0,5,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#lookupSSTable(ColumnFamilyStore,Descriptor).mjava,0,0,2,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#readValue(ByteBuf,int).mjava,0,0,25,2,7,0.0,29,3,31,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#filter(Predicate[KeyspaceMetadata]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithScore(InetAddress,List[InetAddress]).mjava,0,0,2,2,1,0.4000000059604645,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#BigTableReader(Descriptor,Set[Component],CFMetaData,Long,StatsMetadata,OpenReason,SerializationHeader).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#closeQuietly(AutoCloseable).mjava,0,0,2,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WrappedSharedCloseable#WrappedSharedCloseable(AutoCloseable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDiskOptimizationPageCrossChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#equalValues(ClusteringPrefix,ClusteringPrefix,ClusteringComparator).mjava,0,0,6,3,0,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#LogTransaction(OperationType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#combineHistograms(Iterable[SSTableReader],GetHistogram).mjava,0,0,11,2,5,0.0,8,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#measure(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#equals(Object).mjava,0,0,8,1,1,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#uncompress(ByteBuffer,ByteBuffer).mjava,0,0,13,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#getDatacenter(InetAddress).mjava,0,0,9,1,1,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#forInternalCalls(ConsistencyLevel,List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#debug(String).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#create(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#sorted().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#filter(ColumnFilter,DeletionTime,boolean,CFMetaData).mjava,0,0,22,4,9,0.07407407462596893,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setIgnoreHosts(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\AsyncOneResponse#get(long,TimeUnit).mjava,0,0,5,2,2,0.0,6,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#setVersion(TemporalCell).mjava,0,0,2,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#isEndInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#fromException(Throwable,Predicate[Throwable]).mjava,0,0,5,2,2,0.1034482792019844,32,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#start().mjava,0,0,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#openFinalEarly().mjava,0,0,3,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#applyNewStates(InetAddress,EndpointState,EndpointState).mjava,0,0,22,3,3,0.11764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#isInsert().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#metadata().mjava,0,84,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#withoutStatics().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableHistogram#TableHistogram(Histogram,Histogram,Histogram).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#readHeader(DataInput).mjava,0,0,13,1,6,0.095238097012043,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#tmpFilenameFor(Component).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.TimedSignal#TimedSignal(Timer.Context).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#tailSet(V,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Value#bindAndGet(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#addExpireTimeIfFound(InetAddress,long).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#createFlushWriter(String,PartitionColumns,EncodingStats).mjava,0,0,6,3,2,0.095238097012043,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.TransactionalProxy#doPreCleanup(Throwable).mjava,0,0,2,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#adjustAllocated(long).mjava,0,0,1,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithValues#splitValues(QueryOptions).mjava,0,0,4,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#createDefinitionFromRow(Row,String,String,Types).mjava,0,0,13,4,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#processesSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onDropColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\StreamingRepairTask#handleStreamEvent(StreamEvent).mjava,0,0,0,1,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#RepairOption(RepairParallelism,boolean,boolean,boolean,int,Collection[Range[Token]]).mjava,0,0,5,6,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String,TypeParser).mjava,0,0,9,2,5,0.05000000074505806,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.ProtocolEncoder#encode(ChannelHandlerContext,Message,List).mjava,0,0,33,3,10,0.01315789483487606,145,12,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#local().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Raw#prepare(String,List[#-extends-ColumnSpecification]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#getRecordFiles(NavigableSet[File],LogRecord).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#ReplicationParams(Class[#-extends-AbstractReplicationStrategy],Map[String,String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#RowCacheSentinel(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#inOrderTester(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfValue(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingStreamingConnection#run().mjava,0,0,6,0,2,0.3333333432674408,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String).mjava,0,0,3,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setHintedHandoffThrottleInKB(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState.Action#get(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager.Role#Role(String,boolean,boolean,Set[String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.TransactionTidier#tidy().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token#minValue().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThriftForUpdate(CfDef,CFMetaData).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#toCQLString(CFMetaData).mjava,0,0,36,1,11,0.1846153885126114,76,13,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#removeUnfinishedLeftovers(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readChar().mjava,0,0,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#validate(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.State#ensureReleased(Throwable).mjava,0,0,3,1,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.CacheType#toString().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.CollectionCellPath#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy.Target#onTarget(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getSmallMessagePendingTasks().mjava,0,1,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_serialize(T,IVersionedSerializer[T],int).mjava,0,0,8,3,1,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LocalDataResponse#selection(ReadCommand).mjava,0,0,1,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithoutPerStatementVariables#forStatement(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#regularDef(String,String,String,AbstractType[#]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClearableHistogram#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getMetadata().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#deserializeSubset(Columns,DataInputPlus).mjava,0,0,8,2,3,0.0,4,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#buildIndex(Descriptor,IndexSummary,IndexSummaryBuilder.ReadableBoundary).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#newIsNotRestriction(CFMetaData,VariableSpecifications).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#[R]_applyToChannel(Function[WritableByteChannel,R]).mjava,0,0,2,1,0,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#getTraceType().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfInet(InetSocketAddress).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getPeers().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#pauseHintsDelivery(boolean).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#getLocalClockAndCount(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyBoundComparator#LegacyBoundComparator(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeFunction#isNative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#updateAllTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#indexPartition(DecoratedKey,ColumnFamilyStore,Set[Index]).mjava,0,0,11,3,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#signalAll().mjava,0,10,1,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getFilename().mjava,0,23,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serializedSize(EndpointState,int).mjava,0,0,10,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRepairRepairedBlocking().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#deserializeEvent(ByteBuf,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.LatestEvent#LatestEvent(Event.StatusChange.Status,Event.TopologyChange.Change).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Bound#Bound(ColumnDefinition,Operator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getStateForVersionBiggerThan(InetAddress,int).mjava,0,0,14,2,5,2.3333332538604736,16,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onDead(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getKeyCacheSizeInMB().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#toJSONString(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#allocateTokens(TokenMetadata,InetAddress,String,int).mjava,0,0,3,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#assassinateEndpoint(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#toString().mjava,0,0,4,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createUDFFromRow(UntypedResultSet.Row,Types).mjava,0,0,29,2,11,0.12820513546466827,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#validate().mjava,0,2,5,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#DeflateCompressor().mjava,0,0,0,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#onDiskSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#readIsStatic(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#getThriftColumnNameComparator(CFMetaData,ByteBuffer).mjava,0,0,4,2,0,0.1666666716337204,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#DropTypeStatement(UTName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#entrySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getJobThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#makeList(ByteBuffer[]).mjava,0,0,1,1,1,0.1111111119389534,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#supports(BufferType).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createInternal(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,4,5,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#inclusiveCloseExclusiveOpen(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Tidier#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#sendCommit(Commit,Iterable[InetAddress]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#getInputSplit().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#snappy().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#Ref(T,GlobalState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#deleteRowAt(CFMetaData,long,int,Object,Object...).mjava,0,0,6,5,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#findType(char[],char[][]).mjava,0,0,6,2,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.SlicesIterator#SlicesIterator(ColumnFilter,Slices,boolean,Holder,Row).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getColumnIndex(ColumnDefinition).mjava,0,0,3,1,0,0.0,3,2,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#validateCellValue(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#searchDeletionTime(Clustering).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#with(CFMetaData).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeSafe().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#clusteringIndexFilter(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V]_builder(Comparator[#-super-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getHeapMemoryUsage().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Status#printNode(String,Float,List[HostStat],boolean,boolean).mjava,0,0,17,5,2,0.0,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#withNewType(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#maxBytesForLevel(int,long).mjava,0,0,1,2,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#grant(AuthenticatedUser,Set[Permission],IResource,RoleResource).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#isLegalRelationForNonFrozenCollection().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb,T,IVersionedSerializer[T]).mjava,0,0,7,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.LogFilesByName#removeUnfinishedLeftovers().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#shutdownBlocking().mjava,0,1,2,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#validateSamePartition(UUID,DecoratedKey,PartitionUpdate).mjava,0,0,4,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionParameters().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#freeze().mjava,0,1,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#announceMigration(boolean).mjava,0,0,12,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getGensaltLogRounds().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#isBlocking().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#cacheType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.ConnectionTracker#addConnection(Channel,Connection).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader#seek(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#hasNext().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#getExistingFiles().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serialize(HeartBeatState,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadMap().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getUpEndpointCount().mjava,0,0,3,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#columnsIndex().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#OutboundTcpConnectionPool(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#deserializeIndexMetadata(DataInputPlus,int,CFMetaData).mjava,0,0,6,3,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator.OldFormatIterator#readStaticRow().mjava,0,0,10,0,3,0.22727273404598236,3,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[K,V]_slice(Object[],Comparator[#-super-K],Dir).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#select(SSTableSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#buildData(Descriptor,StatsMetadata).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#prepare(CFMetaData).mjava,0,0,3,1,3,0.625,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#onlyCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AggregateFunctionSelector#getOutput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(Cleanup,ChannelProxy,int,long,long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#forceShutdown().mjava,0,1,7,0,0,0.2631579041481018,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo#ProgressInfo(InetAddress,int,String,Direction,long,long).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.IndexedEntry#headerLength().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#registerVerbHandlers(Verb,IVerbHandler).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getRegularOperations().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSeeds().mjava,0,5,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SnapshotCommand#SnapshotCommand(String,String,String,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#isNull(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#createRepairTask(int,String,RepairOption).mjava,0,0,6,3,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateWithInt(MessageDigest,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getSet(String,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#prepare().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeLongString(String,ByteBuf).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#add(DeletionInfo).mjava,0,0,4,1,1,0.20000000298023224,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager.NormalPager#NormalPager(QueryPager,ConsistencyLevel,ClientState).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#rangeTombstoneWithNewEnd(int,Slice.Bound).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#close(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo.Builder#build().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#isWellFormed(Object[],Comparator[#-extends-Object]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_higher(Object[],Comparator[#-super-V],V).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSummary.StreamSummarySerializer#serialize(StreamSummary,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#partitionKey().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#shouldInclude(SSTableReader).mjava,0,0,5,1,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#addIndex(IndexMetadata).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#serialize(Version,Component,DataOutputPlus).mjava,0,0,7,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isFailed().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#groupSSTablesForAntiCompaction(Collection[SSTableReader]).mjava,0,0,6,1,4,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#safeAdvanceIntoBranchFromChild(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#buildIndexClustering(ByteBuffer,Clustering,Cell).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#skipWithVIntLength(DataInputPlus).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#deleteAllHintsForEndpoint(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FlushBufferTask#FlushBufferTask(HintsBuffer,HintsBufferPool).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthenticateMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearSnapshot(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getRingVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#validate(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getArchiveCommand().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer.Factory#buildTServer(Args).mjava,0,0,9,1,3,0.10000000149011612,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjTargetClassLoader#findClass(String).mjava,0,0,4,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createColumnFromRow(UntypedResultSet.Row,Types).mjava,0,0,15,2,7,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.AddOrAlter#makeUpdatedType(UserType).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#copyOptions(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,8,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#containsNull().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compareTo(Object,long,int,ByteBuffer).mjava,0,0,7,4,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider#create().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(int,ThreadFactory).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CounterCells#CounterCells().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#isListening().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MajorLeveledCompactionWriter#MajorLeveledCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\Ec2Snitch#Ec2Snitch().mjava,0,0,10,0,3,0.1818181872367859,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#resetWarnings().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,UUID,boolean,boolean,boolean,boolean,boolean,List[ColumnDefinition],List[ColumnDefinition],PartitionColumns,IPartitioner).mjava,0,0,16,12,3,0.02857142873108387,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#validate(ByteBuffer).mjava,0,0,14,1,3,0.15789473056793213,34,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#isLegacyBatchlogMutation(Mutation).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performCleanup(ColumnFamilyStore).mjava,0,0,13,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#TraceKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#maybeClean().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#keepSSTableLevel().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.LatestEvent#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#kind(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#updateBlock().mjava,0,1,9,0,2,0.10000000149011612,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#getRoles(RoleResource).mjava,0,0,2,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#getCompactionInfo().mjava,0,0,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#hasRemaining().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#setAttachment(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#[T]_fromArrayOfCompositeData(CompositeData[],Function[CompositeData,T]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#serializedSize(ValidationComplete,int).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Addition#Addition(Term.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#cancel(Iterable[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexFunctions#addIndexClusteringColumns(CFMetaData.Builder,CFMetaData,ColumnDefinition).mjava,0,0,2,3,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\Bound#isEnd().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#max(ByteBuffer,ByteBuffer,AbstractType[#]).mjava,0,0,1,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DefinitionsUpdateVerbHandler#doVerb(MessageIn[Collection[Mutation]],int).mjava,0,0,4,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams.Serializer#deserialize(DataInputPlus,int).mjava,0,0,6,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isExpiring().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrayBackedBoundedStats[FailureDetector]#getArrivalIntervals().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getSimple(String).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifyRenewed(Memtable).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ResourceWatcher#watch(String,Runnable,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#disableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#newRow(Clustering).mjava,0,0,0,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#leaving(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#killCurrentJVM(Throwable,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getTotalBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#map(FileChannel.MapMode,long,long).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#toString(Long).mjava,0,0,10,1,7,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#CompressedStreamReader(FileMessageHeader,StreamSession).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#digest(UnfilteredRowIterator,MessageDigest,int).mjava,0,0,18,3,1,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractCell#validate().mjava,0,0,14,0,0,0.07692307978868484,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#Memtable(ColumnFamilyStore).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionPosition.RowPositionSerializer#serializedSize(PartitionPosition,int).mjava,0,0,6,2,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL.Raw#processesSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(org.apache.cassandra.exceptions.AuthenticationException).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateHasLegacyCounterShards(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#getEstimatedDroppableTombstoneRatio(int).mjava,0,0,3,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#prepare(String,QueryState,Map[String,ByteBuffer]).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata.CompactionMetadataSerializer#deserialize(Version,DataInputPlus).mjava,0,0,7,2,2,0.1111111119389534,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering.Serializer#serialize(Clustering,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#signal().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#dcLocalReadRepairChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#withUpdatedValue(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getClock().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rpcaddress(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#path().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CachedHashDecoratedKey#CachedHashDecoratedKey(Token,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\RoleName#setName(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.DelayedColumnValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BootstrapMonitor#awaitCompletion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isBootstrapMode().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#read(ReadableByteChannel).mjava,0,0,17,1,8,0.0810810774564743,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupVisitor#clean().mjava,0,0,2,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#partitionKey().mjava,0,46,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#hasComplex().mjava,0,0,3,0,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.Holder#Holder(PartitionColumns,Object[],DeletionInfo,Row,EncodingStats).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#getSimpleIdx().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#getCompactionAwareWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#getHeapSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#addSourceFilter(ISourceFilter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#registerIndex(Index).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#forTable(String).mjava,0,0,6,1,1,0.08695652335882187,4,2,15,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCurrentlyBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getTime(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpointToHostIdMapForReading().mjava,0,2,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader#main(String[]).mjava,0,0,23,1,5,0.0357142873108387,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#setValue(CellPath,ByteBuffer).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintVerbHandler#reply(int,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Upgrader.UpgradeController#maxPurgeableTimestamp(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommandVerbHandler#doVerb(MessageIn[ReadCommand],int).mjava,0,0,9,2,3,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLiveNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#size(Token).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#JmxMeter(Metered,ObjectName,TimeUnit).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#loadSummary(SegmentedFile.Builder,SegmentedFile.Builder).mjava,0,0,18,2,2,0.06451612710952759,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#free().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#keyType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#executor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copy().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFProperties#getReversableType(ColumnIdentifier,AbstractType[#]).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#execute(ClientState).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getMaximalTask(int,boolean).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readSchema().mjava,0,1,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#getTable().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterator#isEmpty().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAliasParameters().mjava,0,1,19,0,4,0.02631578966975212,68,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#startLeaving().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#fromLegacyMetadata(CFMetaData,ColumnDefinition,String,Kind,Map[String,String]).mjava,0,0,9,5,2,0.0,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#checkAccess(Thread).mjava,0,0,1,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#Ref(T,Tidy).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#isClose(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRingDelay().mjava,0,1,3,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator.CountingDigest#CountingDigest(MessageDigest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#recordSizeEstimates(ColumnFamilyStore,Collection[Range[Token]]).mjava,0,0,12,2,5,0.1538461595773697,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#setMaxDataAge(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateRoleStatement#execute(ClientState).mjava,0,0,6,1,0,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#validateOptions().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Request#setTracingRequested().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#isEmpty().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#system().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder.RawUDT#prepare(String,Types).mjava,0,0,11,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#getMin().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeMerger#RangeMerger(Iterator[RangeForQuery],Keyspace,ConsistencyLevel).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#userFunctionTimeout(Throwable).mjava,0,0,6,1,0,0.0714285746216774,10,1,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#getDefinition().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#excise(Collection[Token],InetAddress).mjava,0,0,9,2,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#replace(Collection[SSTableReader],Collection[SSTableReader]).mjava,0,0,13,2,2,0.21052631735801697,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#replacedEndpoint(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#verifyRecordWithCorruptedLastRecord(LogRecord).mjava,0,0,3,1,0,0.1666666716337204,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setWriteRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#collectionSize(List[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getCompactionTask(LifecycleTransaction,int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexedValue(ByteBuffer,Clustering,Cell).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#sumArrays(int[],int[]).mjava,0,0,1,2,1,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#fresh().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#signalAll().mjava,0,7,6,0,5,0.17391304671764374,12,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncateResponse#createMessage().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#close(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaximalTask(int,boolean).mjava,0,0,7,2,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#response(MessageIn[T]).mjava,0,0,8,1,1,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#shouldClearLocal(ByteBuffer).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updatePreferredIP(InetAddress,InetAddress).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#sharedCopy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#allocate(int,OpOrder.Group).mjava,0,0,6,2,2,0.1428571492433548,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Terms#getFunctions(Iterable[Term]).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#CustomClassLoader(ClassLoader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#keyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogLocation().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy.ScannerList#close().mjava,0,2,4,0,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#resolveScalar(Functions,FunctionName,FunctionName,List[AbstractType[#]]).mjava,0,0,10,4,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#remainingTTL(Cell,int).mjava,0,0,2,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#clearKeyspaceMetadata(KeyspaceMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#removeUnit(Unit).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJob#sendDCAwareValidationRequest(Collection[InetAddress]).mjava,0,0,27,1,11,0.04444444552063942,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableLevelResetter#main(String[]).mjava,0,0,35,1,8,0.06666667014360428,48,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#newIsNotRestriction(CFMetaData,VariableSpecifications).mjava,0,0,2,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.ColumnValue#testAssignment(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#staticRow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#valueCount().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getColumnFamilyName().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processBatch(BatchStatement,QueryState,BatchQueryOptions,Map[String,ByteBuffer]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#serializedSize(Commit,int).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isBoundary().mjava,0,8,0,0,0,0.0,4,1,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#serialize(GossipDigestSyn,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#integer(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#setUserDefined(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewColumnFamily(CFMetaData,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#cloningIterator(UnfilteredRowIterator,AbstractAllocator).mjava,0,0,7,2,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#close().mjava,0,1,7,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#removeRegisteredCallback(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#nextId().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#clearSnapshot(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.TrueFilesSizeVisitor#getAllocatedSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#deleteAllHints().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#toReceivers(CFMetaData,List[ColumnDefinition]).mjava,0,0,16,2,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#asyncRemoveFromBatchlog(Collection[InetAddress],UUID).mjava,0,0,7,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#flushSSTables(Iterable[ColumnFamilyStore]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#canBeConvertedToMultiColumnRestriction().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#grow(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#stream().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask#run().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getSet(int,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#setDiscarded().mjava,0,2,3,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageOut,InetAddress,IAsyncCallback,long,boolean).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#appendKeyString(StringBuilder,AbstractType[#],ByteBuffer).mjava,0,0,8,3,2,0.0,3,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkFalse(boolean,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#finishCompactionsAndShutdown(long,TimeUnit).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#addAll(LegacyRangeTombstoneList).mjava,0,0,7,1,2,0.5757575631141663,12,7,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getRestoreCommand().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#type(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.MapEqualityExpression#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getReleaseVersion(InetAddress).mjava,0,0,9,1,2,0.10000000149011612,4,2,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCounterCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFStatement#keyspace().mjava,0,69,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#appliesTo(FilteredPartition).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#forceHighestPossibleVersionUnsafe().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#getMaxReadable().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#SizeTieredCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#toString(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\FilteredPartition#FilteredPartition(RowIterator).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#compressArray(byte[],int,int,byte[],int,int).mjava,0,0,7,6,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FilterFactory#getFilter(long,double,boolean,boolean).mjava,0,0,3,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#stats().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#maybeExecuteImmediately(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#serialize(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getProgress().mjava,0,0,1,0,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#toString().mjava,0,0,14,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#Validator(RepairJobDesc,InetAddress,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#withDigestComponent(Component).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#keysAndValuesOf(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#toString().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getColumnsWithConditions().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#toString().mjava,0,0,20,0,6,0.0,32,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintWindow().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#parseTimeStrictly(String).mjava,0,0,24,1,11,0.03773584961891174,90,10,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#close(org.apache.hadoop.mapred.Reporter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager#addView(ViewDefinition).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#readNextIdentifier().mjava,0,8,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#equals(Object).mjava,0,0,3,1,1,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#keyIterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#compareUnsigned(byte[],int,int,byte[],int,int).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#revokeAllOn(IResource).mjava,0,0,20,1,2,0.0,1,0,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#serialize(DataOutputPlus,int).mjava,0,0,15,2,1,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#close().mjava,0,1,4,0,0,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#registerParentRepairSession(UUID,List[ColumnFamilyStore],Collection[Range[Token]],boolean,long,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ResetLocalSchema#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compareTo(ByteBuffer,ByteBuffer).mjava,0,0,7,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#filterNotIndexed(ColumnFilter,UnfilteredRowIterator).mjava,0,0,9,2,0,0.125,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#with(ViewDefinition).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#sizeInBytes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#isExpired().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#log(Logger,Level,long,TimeUnit,String,Object...).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEventNotifierSupport#fireProgressEvent(String,ProgressEvent).mjava,0,0,1,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.CustomReplayFilter#includes(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#readTTL(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#getFunctions().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#remove(K).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#withEventLoopGroup(EventLoopGroup).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setRowCacheCapacityInMB(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#prepareToCommit().mjava,0,1,4,0,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_lowerIndex(Object[],Comparator[#-super-V],V).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#floor(V).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchKeyspacesOnly(Set[String]).mjava,0,0,7,1,2,0.5714285969734192,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#doMergeWith(Restriction).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#newFactory(UserType,int,Selector.Factory).mjava,0,0,8,3,0,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#toThriftResult().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#hasExistingRoles().mjava,0,1,8,0,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#Candidate(int,Iterator[#-extends-In],Comparator[#-super-In]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Value#fromSerialized(ByteBuffer,TupleType).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#clustering().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#canHaveShadowedData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#consume().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#isCollectionTombstone().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#convertLegacyData().mjava,0,1,22,0,3,0.0476190485060215,4,2,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#stats().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#unsharedHeapSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAck#GossipDigestAck(List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#adjust(long,OpOrder.Group).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#CompactionAwareWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],boolean,boolean).mjava,0,0,4,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ensureHasPermission(Permission,IResource).mjava,0,0,5,2,0,0.125,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#prepare(String,QueryState,Map[String,ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound.Serializer#serialize(RangeTombstone.Bound,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,6,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#isRunning().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#removeLookupEntry(IResource,RoleResource).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes#UserTypes().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#appliesToRegularColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#updateProgress(ProgressInfo).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#live().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.CoalescingStrategy#CoalescingStrategy(Parker,Logger,String).mjava,0,0,7,3,3,0.0,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#verifyRecord(LogRecord).mjava,0,0,9,1,0,0.260869562625885,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#minimalBufferFor(ByteBuffer).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.TransferHintsTask#run().mjava,0,0,9,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#prepare(String,Types).mjava,0,0,6,2,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#flush().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#toMultiColumnRestriction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#WeightedQueue(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BooleanSerializer#serialize(Boolean,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#execute(Runnable,TraceState).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#inclusiveStartOf(ByteBuffer...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#pause().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openForBatch(Descriptor,Set[Component],CFMetaData).mjava,0,0,25,3,7,0.13513512909412384,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RemoteSyncTask#syncComplete(boolean).mjava,0,0,3,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#serializedSizeInternal(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getCompactionThroughputMbPerSec().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#without(String).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#acquired(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getLiveSortedEndpoints(Keyspace,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#add(int,ColumnSpecification).mjava,0,0,1,2,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#countPerDCEndpoints(Keyspace,Iterable[InetAddress]).mjava,0,0,7,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_splits_ex(String,String,String,int).mjava,0,0,11,4,4,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#indexComparator(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#serialize(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleStrategy#recognizedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#newFactory(ColumnDefinition,int).mjava,0,0,3,2,0,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(WritableByteChannel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Putter#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#main(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#midpoint(Token,Token).mjava,0,0,5,2,6,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#SecondaryIndexManager(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#getPrefetchedRow(DecoratedKey,Clustering).mjava,0,0,5,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#RawTuple(List[CQL3Type.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#getSnippetFirstTokenIndex(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask#AnticompactionTask(UUID,InetAddress,Collection[Range[Token]]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getNow().mjava,0,1,7,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#TimeHorizonMovingAverageCoalescingStrategy(int,Parker,Logger,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#poll().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionDetails#PermissionDetails(String,IResource,Permission).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#unsharedHeapSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#VersionedValueFactory(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewColumnFamily(CFMetaData,boolean,boolean).mjava,0,0,9,3,1,0.10000000149011612,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativePool#newAllocator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#execute(QueryState,QueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#duplicateDirectByteBuffer(ByteBuffer,ByteBuffer).mjava,0,0,9,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#createTracingSession().mjava,0,5,2,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#MessageOut(MessagingService.Verb,T,IVersionedSerializer[T],Map[String,byte[]]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#inspectCommitLogThrowable(Throwable).mjava,0,0,6,1,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getMovingNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#writeTo(DataOutput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#contentSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onDropFunction(String,String,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse().mjava,0,4,7,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#get().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction.LogFilesByName#add(File).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.HintsIterator#readHint(int).mjava,0,0,14,1,1,0.03703703731298447,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#equals(Object).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#parseTarget(CFMetaData,IndexMetadata).mjava,0,0,19,2,4,0.3448275923728943,8,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#nextPageReadCommand(int).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#prepareLimit(VariableSpecifications).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#createReader(RateLimiter).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#normalize(long).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#offHeapSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#reportManualSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#toString().mjava,0,0,32,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#toByteBuffers(SortedSet[#-extends-ClusteringPrefix]).mjava,0,0,3,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.NotNullRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.ColumnsCollector#ColumnsCollector(PartitionColumns).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(RequestTimeoutException).mjava,0,0,4,1,2,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#createMessage().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#sliceableUnfilteredIterator(ColumnFilter,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getReleaseVersion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#filterWithRangeSet(RangeSet[Token],List[ByteBuffer]).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeConnectionTimeout(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Full#cleanup(UnfilteredRowIterator).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#apply(Row).mjava,0,0,8,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#prettyPrintMemory(long).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexBuilder#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil#main(String[]).mjava,0,0,13,1,3,0.032258063554763794,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#toJSONString(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#IndexSummary(IndexSummary).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.RawDelayedColumnValue#getText().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#mostInterestingBucket(List[List[SSTableReader]],int,int).mjava,0,0,7,3,3,0.07692307978868484,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#rangeCount().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setAutoSnapshot(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#generateClassName(FunctionName,char).mjava,0,0,17,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#prepare(String,ColumnDefinition).mjava,0,0,0,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\ContextAllocator#allocate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.Parsed#prepare().mjava,0,0,17,0,8,0.07407407462596893,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\RangeKeySample#execute(NodeProbe).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskOptimizationEstimatePercentile().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#wrap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#validateComparator(int,ByteBuffer).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand.CacheFilter#applyToPartition(BaseRowIterator).mjava,0,0,10,1,3,0.3636363744735718,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\EmbeddedCassandraService#start().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#filter().mjava,0,2,12,0,0,0.0,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#changeEvent().mjava,0,0,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionStrategy(String).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelCount().mjava,0,3,2,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#PartitionRangeBuilder(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Rows#copy(Row,Row.Builder).mjava,0,0,13,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeHeader(DataOutput,int,boolean).mjava,0,0,1,3,1,0.8571428656578064,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationComplete.ValidationCompleteSerializer#serialize(ValidationComplete,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readByte().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement.Parsed#Parsed(CFName,Attributes.Raw,List[Operation.RawDeletion],WhereClause,List[Pair[ColumnIdentifier.Raw,ColumnCondition.Raw]],boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_cql3_query(ByteBuffer,Compression,ConsistencyLevel).mjava,0,0,17,3,2,0.0,2,1,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#receive(IncomingFileMessage).mjava,0,0,6,1,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeReceived().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.SuperColumnsPartitionMerger#makeDynamicCell(Cell).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#exists().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Value#equals(SetType,Value).mjava,0,0,9,2,3,0.0,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getOwnership().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#logFlush().mjava,0,1,30,0,4,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#merge(TermSlice).mjava,0,0,11,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#rebuildSecondaryIndex(String,String,String...).mjava,0,0,9,3,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#addApplicationState(ApplicationState,VersionedValue).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputColumnFamily(Configuration,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Repair#execute(NodeProbe).mjava,0,0,30,1,4,0.023255813866853714,64,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#fromId(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getOffHeapSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#totalSize().mjava,0,2,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#ensureHashInitialised().mjava,0,1,0,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#authorize(IResource).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getBackupsDirectory(File).mjava,0,0,6,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#fmix(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#argsListFromString(String).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputMaxConnections(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#syncFolder().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#commitPaxos(Commit,ConsistencyLevel,boolean).mjava,0,0,20,3,8,0.0,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime.Serializer#deserialize(DataInputPlus).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#mergedClustering().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.Literal#Literal(Map[ColumnIdentifier,Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#deserialize(DataInputPlus,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#start(Socket,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#add(FilterKey).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_ring(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#values(QueryOptions).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#scheduleSchemaPull(InetAddress,EndpointState).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#UUIDGen().mjava,0,0,0,0,0,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#clusteringIndexFilter(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#makeRowBounds(Token,Token).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.AllSSTableOpStatus#AllSSTableOpStatus(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#queryNeitherCountersNorCollections().mjava,0,1,4,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#savePaxosPromise(Commit).mjava,0,0,8,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isEQ().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#allocate(Mutation,int).mjava,0,0,8,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#doAbort(Throwable).mjava,0,0,21,1,1,0.5,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#processPartition(RowIterator,QueryOptions,Selection.ResultSetBuilder,int).mjava,0,0,27,4,4,0.07999999821186066,154,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCellName#superColumnName().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#isEndInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#keyIsInRelation().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get999thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#readDeletionTime(DataInputPlus).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#response(ReadResponse).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#tailBuffer(Memory).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#MultiColumnRestriction(List[ColumnDefinition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#SliceRestriction(List[ColumnDefinition],TermSlice).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.Codec#encodedSize(ResultSet,int).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\AuthenticationException#AuthenticationException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#countNewlines(StringBuilder).mjava,0,0,2,1,1,0.0,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#switchMemtableIfCurrent(Memtable).mjava,0,0,4,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\Roles#hasSuperuserStatus(RoleResource).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#requiresRead().mjava,0,0,1,0,0,0.1666666716337204,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators.Close#onPartitionClose().mjava,0,0,2,0,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#connectionComplete(SocketAddress).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSReadError#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest.CompactionCandidate#CompactionCandidate(Collection[SSTableReader],int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#tryRef().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getSchemaVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeMerger#computeNext().mjava,0,0,13,0,4,0.6000000238418579,18,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#TreeIterator(IntervalNode).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#PartitionColumns(Columns,Columns).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.AllTableMetricNameFactory#createMetricName(String).mjava,0,0,8,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#getGeneration().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getAllRanges(List[Token]).mjava,0,0,12,1,4,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch.Serializer#serialize(Batch,DataOutputPlus,int).mjava,0,0,8,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#lower(V).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#minTimeUUID(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#isDone().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getKeyCacheHit().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#changeEvent().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getSet(String,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager.PagersIterator#close().mjava,0,0,2,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getClass(String).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#update(Cell).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#printUsage(CmdLineOptions).mjava,0,0,14,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPool#allocate(int,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#encodeBound(CFMetaData,Slice.Bound,boolean).mjava,0,0,17,3,3,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#counter(CFMetaData,ByteBuffer,ByteBuffer,long).mjava,0,0,4,4,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#next(K).mjava,0,0,6,1,5,0.0,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#computeNext().mjava,0,0,7,0,1,0.0714285746216774,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator.Aggregate#Aggregate(long,UDAggregate).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#toJSONString(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#hasProcFS().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ScriptBasedUDFunction#executor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#isValid().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#executeAllBlocking(Stream[Index],Function[Index,Callable[#]]).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serialize(ReplayPosition,DataOutputPlus).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#finish(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(InetAddress,WriteType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getCF(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#truncateAllIndexesBlocking(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#CompactionTask(ColumnFamilyStore,LifecycleTransaction,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#codecFor(DataType).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.CollectionCellPath#copy(AbstractAllocator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#worthDroppingTombstones(SSTableReader,int).mjava,0,0,22,2,7,0.2857142984867096,64,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SyncTask#run().mjava,0,0,14,0,2,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#effectiveOwnership(String).mjava,0,0,19,1,9,0.09090909361839294,10,6,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#checkPermission(Permission,Object).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#assertUdfsEnabled(String).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#asyncWriteBatchedMutations(List[WriteResponseHandlerWrapper],String,Stage).mjava,0,0,4,3,1,0.0,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspace(String).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getClientEncryptionOptions().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.MultiSignal#MultiSignal(Signal[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#apply(RowIterator,Transformation[#]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#QueuedMessage(MessageOut[#],int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#bool(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\NIODataInputStream#NIODataInputStream(ReadableByteChannel,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#expandUserTypes(AbstractType[#]).mjava,0,0,23,1,1,0.05000000074505806,128,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#BackgroundActivityMonitor().mjava,0,0,4,0,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#toJSONString(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition#condition(ColumnDefinition,Term,Term,Operator).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.AbstractSecureIntializer#createSslHandler().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.HintsIterator#computeNextInternal().mjava,0,1,5,0,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_newTaskFor(Callable[T]).mjava,0,0,2,1,0,0.0,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#isValueCompatibleWith(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#Native(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#prepare(String,String,String).mjava,0,0,3,3,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeToReceive().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceNewKeyspace(KeyspaceMetadata,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentCounterWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#isUnlimited().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IfNotExistsCondition#isIfNotExists().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder#newBarrier().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#size(Token).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#readSimpleColumn(ColumnDefinition,DataInputPlus,SerializationHeader,SerializationHelper,Row.Builder,LivenessInfo).mjava,0,0,5,6,1,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#createDense(String,String,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#applyToStatic(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseTokenRemoved(InetAddress,UUID).mjava,0,0,11,2,2,0.1818181872367859,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setPartitionerUnsafe(IPartitioner).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#ByteType().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#WrappedCloseableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\SSLTransportFactory#setOptions(Map[String,String]).mjava,0,0,13,1,0,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\BootStrapper#getRandomTokens(TokenMetadata,int).mjava,0,0,4,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#serializedValues(Iterator[Cell]).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#skipNext().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IndexName#setIndex(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Unfiltered#isRow().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#memRemaining().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#readTruncationRecords().mjava,0,1,12,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableBackup#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithValues#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#run().mjava,0,0,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#getValue(CFMetaData,DecoratedKey,Row).mjava,0,0,10,3,1,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#beforeChange(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,0,4,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#validateForSinglePartition(UUID,DecoratedKey,Collection[Mutation]).mjava,0,0,12,3,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#add(UnfilteredRowIterator,ImmutableBTreePartition,ClusteringIndexNamesFilter,boolean).mjava,0,0,13,4,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.RowCondition#RowCondition(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#legacyCellComparator(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#merge(List[PartitionUpdate]).mjava,0,0,7,1,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#compress(Frame).mjava,0,0,10,1,6,0.03846153989434242,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serializedSize(Hashable,int).mjava,0,0,3,2,0,0.0,4,2,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#fromSelectors(CFMetaData,List[RawSelector]).mjava,0,0,6,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredRows#UnfilteredRows(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#Writer(int).mjava,0,0,6,1,2,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Collection#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#CassandraServer().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\HeapPool#newAllocator().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\StartupException#StartupException(int,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesSent().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#containsKey(RowCacheKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.ReaderState#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#serialize(Commit,DataOutputPlus,int).mjava,0,0,5,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#parse(String).mjava,0,0,7,1,0,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#reBuffer().mjava,0,0,6,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#commit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.ColumnsConditions#appliesTo(FilteredPartition).mjava,0,0,4,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyType#fromPartitionFilterKind(ClusteringIndexFilter.Kind).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubColumn(CFMetaData,LegacyLayout.LegacyCell).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.ProtocolDecoder#decode(ChannelHandlerContext,Frame,List).mjava,0,0,20,3,10,0.024390242993831635,6,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#buildWithStdevRangesAroundMean().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#createLocal(long).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#intersects(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#dataSize().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#javaSourceName(Class[#]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#runMayThrow().mjava,0,0,6,0,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner.StringToken#StringToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionName#nativeFunction(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsert#prepareInternal(CFMetaData,VariableSpecifications,Conditions,Attributes).mjava,0,0,24,4,8,0.023255813866853714,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#cellFromColumn(CFMetaData,LegacyLayout.LegacyCellName,Column).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addListEntry(String,Object).mjava,0,0,11,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.INRaw#makeInReceiver(List[#-extends-ColumnSpecification]).mjava,0,0,14,1,5,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#viewClusteringLocalDeletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#append(File,String...).mjava,0,0,5,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#warn(String,Object...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadDcRackInfo().mjava,0,8,9,0,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#globalPartitioner().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(Version,File,String,String,int,SSTableFormat.Type,Component).mjava,0,0,5,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getScanner(SSTableReader,Collection[Range[Token]],RateLimiter).mjava,0,0,5,3,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setTombstoneWarnThreshold(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#AbstractBoundsSerializer(IPartitionerDependentSerializer[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#isStaticName(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#toCQLLiteral(ByteBuffer,int,StringBuilder).mjava,0,0,3,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#kind().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspace(Configuration,String).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#liveSSTables().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#rescheduleFailedDeletions().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isLive(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#gcBefore(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher.Callback#onFailure(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setNativeTransportMaxConcurrentConnectionsPerIp(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\KeyCacheKey#KeyCacheKey(Pair[String,String],Descriptor,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#time().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokens().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutationVerbHandler#doVerb(MessageIn[CounterMutation],int).mjava,0,0,8,2,2,0.5833333134651184,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#HintsDispatcher(HintsReader,UUID,InetAddress,int,AtomicBoolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream.Reader#runMayThrow().mjava,0,0,5,0,5,0.095238097012043,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Keyspace,String,boolean).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\TopKSampler#beginSampling(int).mjava,0,0,0,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#parallelAllSSTableOperation(ColumnFamilyStore,OneSSTableOperation,OperationType).mjava,0,0,19,3,5,0.0,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#throwFirstSyntaxError().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#copy(AbstractAllocator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#permitRedundantTransitions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#boundsAsClustering(Bound,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getReadRpcTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SingleRangeResponse#SingleRangeResponse(ReadCallback).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SelectionWithProcessing#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#trySync(int).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getActiveSegmentCompressionRatios().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Literal#validateAssignableTo(String,ColumnSpecification).mjava,0,0,8,2,1,0.1428571492433548,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#compareNextTo(Slice.Bound).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#getTotalBatchesReplayed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleStrategy#SimpleStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#LimitedLocalNodeFirstLocalBalancingPolicy(String[]).mjava,0,0,5,1,1,0.0,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getUptime().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#add(Restrictions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#loadClass(String).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#doFlush().mjava,0,7,4,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#close().mjava,0,2,2,0,0,0.1818181872367859,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#openIsInclusive(boolean).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,58,2,14,0.20000000298023224,5,6,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyTypeParameters(List[AbstractType[#]],boolean).mjava,0,0,7,2,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\SecurityThreadGroup#SecurityThreadGroup(String,Set[String],ThreadInitializer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#isIncremental().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#serialize(UnfilteredRowIterator,ColumnFilter,DataOutputPlus,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#create(String,KeyspaceParams,Tables).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#indexFlag(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\TruncationNotification#TruncationNotification(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Conflicts#Conflicts().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#filterNotIndexed(ColumnFilter,UnfilteredRowIterator).mjava,0,0,11,2,1,0.095238097012043,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#offHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir.HistogramSnapshot#getMin().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateTopology().mjava,0,1,7,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Status#findMaxAddressLength(Map[String,SetHostStat]).mjava,0,0,5,1,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxLongTracker#max().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.UserDefined#toCQLLiteral(ByteBuffer,int,StringBuilder).mjava,0,0,22,3,2,0.0625,2,7,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#frozen(CQL3Type.Raw).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#MetricName(Class[#],String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stringify(Iterable[InetAddress]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#RowCacheKey(Pair[String,String],DecoratedKey).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(NamedThreadFactory,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#paxosTtl(CFMetaData).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#attachTo(BaseRows).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionPosition.ForKey#get(ByteBuffer,IPartitioner).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#deserializeLegacyMutation(UntypedResultSet.Row).mjava,0,0,9,1,1,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#printDebugInfo().mjava,0,0,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator.MergeReducer#MergeReducer(int,boolean,int,MergeListener).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String,Charset).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#toString().mjava,0,0,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#readCommand(int).mjava,0,0,9,1,2,0.27272728085517883,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.DroppedColumn#DroppedColumn(String,AbstractType[#],long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#reorderTimestampBytes(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchRemoveVerbHandler#doVerb(MessageIn[UUID],int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#emptyGroup().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.RowCacheSerializer#deserialize(DataInputPlus,ColumnFamilyStore).mjava,0,0,15,2,5,0.15000000596046448,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthorizationStatement#maybeCorrectResource(IResource,ClientState).mjava,0,0,6,2,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter.RestorableEWMA#tick().mjava,0,2,1,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#LocalReadRunnable(ReadCommand,ReadCallback).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#Kind(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\KeyspaceElementName#hasKeyspace().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#ReporterWrapper(Reporter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleIterator#SSTableSimpleIterator(CFMetaData,DataInputPlus,SerializationHelper).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#hashToBigInteger(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#reconcile(Cell,Cell,int).mjava,0,0,30,3,4,0.07692307978868484,52,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#move(String).mjava,0,0,6,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateFunction(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo.Serializer#serialize(IndexInfo,DataOutputPlus).mjava,0,0,7,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#searchIterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#describeSchemaVersions().mjava,0,2,33,0,11,0.1090909093618393,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.Literal#getText().mjava,0,0,15,0,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#tryModify(SSTableReader,OperationType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#closeBoundOfBoundary(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputPartitioner(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader.Builder#createBuffer().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher.Callback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCompactionThroughputMbPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet#create(ResultSet).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering#reverse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\MemoryMappedSegment#write(int,int).mjava,0,0,8,2,0,0.3125,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#isMultiColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getOwnership().mjava,0,0,10,0,5,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateRowCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getBloomFilterTruePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#getSerializedMutations(int,Collection[Mutation]).mjava,0,0,4,2,0,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropFunction(UDFunction).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#withPartitioner(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flushBuffer(HintsBuffer,HintsBufferPool).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getSplits(List[Token],int,ColumnFamilyStore).mjava,0,0,9,3,6,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#getLastCharPositionInLine(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\SSTableIntervalTree#build(Iterable[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#get(int).mjava,0,0,1,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#gossiperStarting().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#abort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#serialize(StreamRequest,DataOutputPlus,int).mjava,0,0,10,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#hasPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.NeverSpeculatingReadExecutor#NeverSpeculatingReadExecutor(Keyspace,ReadCommand,ConsistencyLevel,List[InetAddress]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#clusteringColumns().mjava,0,38,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#beforeChange(InetAddress,EndpointState,ApplicationState,VersionedValue).mjava,0,0,0,4,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#clearMessageSinks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#addExtraChild(Object[],Object).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createRangeTombstoneForRow(TemporalRow).mjava,0,0,6,1,3,0.05263157933950424,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#contains(T).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#checkLimit(int).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(File).mjava,0,0,2,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#apply(UnfilteredRowIterator,Transformation[#]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyUpdate(CFMetaData,boolean,boolean).mjava,0,0,10,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#rewriteSSTableMetadata(Descriptor,Map[MetadataType,MetadataComponent]).mjava,0,0,8,2,1,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#addRange(CFMetaData,LegacyLayout.LegacyDeletionInfo,Slice.Bound,Slice.Bound,long,int).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#close(Iterable[#-extends-Closeable]).mjava,0,0,2,1,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#validate().mjava,0,2,16,0,5,0.0,1920,12,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#partitionKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fieldNameAsString(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#clearCallbacksUnsafe().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTableMetadata(String,String).mjava,0,0,8,2,6,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#metricPercentilesAsArray(CassandraMetricsRegistry.JmxTimerMBean).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#toIncl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats.OptionFilter#verifyColumnFamilies().mjava,0,1,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#serialize(EchoMessage,DataOutputPlus,int).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#readNext().mjava,0,0,6,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#serialize(DataOutputPlus).mjava,0,0,22,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing.TraceType#serialize(TraceType).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#isReadyToDieAt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getCacheCrcPath(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#isPastCurrentBlock().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createTempFile(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#diff(Types).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#toString(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#getKeyspace().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#MetadataCollector(ClusteringComparator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#syncComplete(RepairJobDesc,NodePair,boolean).mjava,0,0,6,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#addUnit(Unit,int).mjava,0,0,24,2,12,0.4545454680919647,56,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#decompose(Void).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#totalEndpoints().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#create(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#validateSummarySamplingLevel().mjava,0,1,10,0,6,0.12121212482452393,12,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#serializeValues(Set[T]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#serializationFlags().mjava,0,2,4,0,0,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getTimestampedSnapshotName(String).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSWriteError#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getLargeMessageDroppedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner.EmptySSTableScanner#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#[T-extends-Metric]_register(MetricName,MetricName,T).mjava,0,38,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService.RangeRelocator#RangeRelocator(Collection[Token],List[String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#makeUpdateParameters(Collection[ByteBuffer],NavigableSet[Clustering],QueryOptions,boolean,long).mjava,0,0,4,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#addLocalApplicationState(ApplicationState,VersionedValue).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#makeFilter().mjava,0,2,2,0,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement#grantPermissionsToCreator(QueryState).mjava,0,0,10,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceKeyspaceDrop(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serializedSize(HeartBeatState,int).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.InValue#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#autoEnforce().mjava,0,0,3,0,3,0.0,6,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#addCustomIndexExpression(CFMetaData,IndexMetadata,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#timestampMicros().mjava,0,30,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#simple(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.LastReplayPosition#LastReplayPosition(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#functionArgumentsList(AbstractFunction).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#fromJSONObject(Object).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateView(String,String,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#prepare().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask#SnapshotTask(RepairJobDesc,InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#LoaderOptions(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#prepare(String,List[#-extends-ColumnSpecification]).mjava,0,0,15,2,5,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Snapshot#execute(NodeProbe).mjava,0,0,31,1,1,0.025641025975346565,5,5,27,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#compareEndpointStartup(InetAddress,InetAddress).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#getKeyspaceName().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#withPagingLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\LocalSyncTask#startSync(List[Range[Token]]).mjava,0,0,13,1,6,0.15789473056793213,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getRecordWriter(FileSystem,JobConf,String,Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#getDatacenterEndpoints().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering.Serializer#deserialize(DataInputPlus,int,List[AbstractType[#]]).mjava,0,0,3,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#estimateRowsFromIndex(RandomAccessReader).mjava,0,0,10,1,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#setDescriptor(Descriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#functions().mjava,0,1,10,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogService#waitForSyncToCatchUp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#newAuthorizer(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#updateState(CompressionMetadata).mjava,0,0,4,1,4,0.08695652335882187,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#isOpen().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier.Options#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#split(T).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#selectsKey(DecoratedKey).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#isLocal().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#getArray(ByteBuffer).mjava,0,0,8,1,3,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintResponse.Serializer#serialize(HintResponse,DataOutputPlus,int).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get50thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#shouldDefragment().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBufferFixed#reallocate(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(ByteBuffer,byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#setDiscarding(OpOrder.Barrier,AtomicReference[ReplayPosition]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#fetchPage(int,ConsistencyLevel,ClientState).mjava,0,0,5,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.SliceableIterator#SliceableIterator(ColumnFilter,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#containsKey(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setMemory(long,long,byte).mjava,0,0,2,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_waitOnFuture(Future[T]).mjava,0,0,1,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#addOwnership(TokenMetadata,AbstractReplicationStrategy,Token,Token,Map[InetAddress,Double]).mjava,0,0,6,5,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#add(CFMetaData,LegacyRangeTombstone).mjava,0,0,17,2,0,0.5,32,7,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeTcpNodelay(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#decompose(DataType,int,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getStatement(String,ClientState).mjava,0,0,5,2,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateColumnFamily(String,String,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#dataSize().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#equals(Object).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getHosts().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#Verifier(ColumnFamilyStore,SSTableReader,OutputHandler,boolean).mjava,0,0,7,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#waitForModifications().mjava,0,2,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateAggregate(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#selects(Clustering).mjava,0,0,4,1,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#rotl64(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#subtype(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover().mjava,0,2,22,0,3,0.2222222238779068,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#complete(Throwable).mjava,0,0,4,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#onRemove(Host).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#abort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#newDefaultChannel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#checkAccess(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#fromString(String).mjava,0,0,8,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ListSnapshots#execute(NodeProbe).mjava,0,0,22,1,6,0.03333333507180214,2,1,22,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEntries().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#shouldBuildBlocking().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#convertSchemaToMutations().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#unload(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#applyToDeletion(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serializeLargeSubset(Collection[ColumnDefinition],int,Columns,int,DataOutputPlus).mjava,0,0,9,5,3,0.1111111119389534,3,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#create(String,KeyspaceParams).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredPartitions#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#deleteRow(CFMetaData,long,Mutation,Object...).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#createReader().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getDroppedMessages().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SingleRangeResponse#computeNext().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#handleProgress(ProgressInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction#mergeWith(Restriction).mjava,0,0,5,1,0,0.1428571492433548,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getBlob(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#State(ChannelProxy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager#maxRemaining().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#write(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#get().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Bounded#cleanup(UnfilteredRowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ByteType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFloat().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getShort(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#send(InetAddress,Event.NodeEvent).mjava,0,0,9,2,0,0.625,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#writeSortedContents(ReplayPosition,File).mjava,0,0,29,2,3,0.19512194395065308,32,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updateViewBuildStatus(String,String,Token).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#InstrumentingCache(String,ICache[K,V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#seenAnySeed().mjava,0,1,10,0,0,0.0,4,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#SerializationHelper(CFMetaData,int,Flag,ColumnFilter).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitInfo#UnitInfo(Unit,GroupInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setInterDCStreamThroughputOutboundMegabitsPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#lineIndex(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#getColumnSpecifications().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Paging#getLastReturned().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getHostIdMap().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#make(Type,SSTable).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#toString().mjava,0,0,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#removeSstableCompressionClass(Map[String,String]).mjava,0,0,10,1,1,0.0,10,4,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.NotExistCondition#appliesTo(FilteredPartition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#flushRunnable().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#hasBound(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#close().mjava,0,0,2,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#handleConnectionClosed(long,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#txnProxy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTotalCommitlogSpaceInMB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EchoMessage#EchoMessage().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndexBase#decodeEntry(DecoratedKey,Row).mjava,0,0,11,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBatchSizeWarnThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\SplittingSizeTieredCompactionWriter#SplittingSizeTieredCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#maybeTruncate(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#SchemaAlteringStatement(CFName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TruncateStatement#execute(QueryState,QueryOptions).mjava,0,0,7,2,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_replace(Map[T,T],Set[T],Iterable[T]).mjava,0,0,25,3,1,0.1818181872367859,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#main(String[]).mjava,0,0,8,1,4,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardIndexedReader#init().mjava,0,0,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\GrantPermissionsStatement#GrantPermissionsStatement(Set[Permission],IResource,RoleName).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#apply(CFMetaData).mjava,0,0,6,1,1,0.11764705926179886,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#Mutation(String,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRpcPort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#isStillAllocating().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getRack(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#toArray().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isRpcReady(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#tailSet(V,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.MultiSignal#checkAndClear().mjava,0,0,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#verifyNoHintsInProgress().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#onNewPartition(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.EmptyCellPath#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#usedRatio().mjava,0,2,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#makeCollectionReceiver(ColumnSpecification,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#rangeTombstoneWithNewStart(int,Slice.Bound).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask.SnapshotCallback#SnapshotCallback(SnapshotTask).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrayBackedBoundedStats[FailureDetector]#ArrayBackedBoundedStats(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithMarker#InRestrictionWithMarker(List[ColumnDefinition],AbstractMarker).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WriteResponse#WriteResponse().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputColumnFamily(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getNumWords().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#checkAccess(ClientState).mjava,0,0,21,1,1,0.1875,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#isValueCompatibleWithFrozen(CollectionType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCompressionRatio().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getName().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#initialCompressedBufferLength(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#add(long,InetAddress).mjava,0,0,4,2,1,0.1428571492433548,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering#strictnessOfLessThan(Op).mjava,0,0,0,1,0,0.6000000238418579,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamSummaryCompositeData#fromCompositeData(CompositeData).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.PopulateVisitor#prevSeen(GroupInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator.Region#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeReadConnectionTimeout(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#closeIsInclusive(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#CompressionMetadata(String,CompressionParams,SafeMemory,long,long,long,ChecksumType).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#isDummy().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Tuple#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ProgressInfo.Direction#Direction(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getHintedHandoffDisabledDCs().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_strictlyWrapsAround(T,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SnapshotMessage.SnapshotMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getList(String,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.PureJavaOperations#compare(ByteBuffer,ByteBuffer).mjava,0,0,8,2,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#markDirty(Mutation,int).mjava,0,0,3,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#close(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#compareToLast(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#isDoneForPartition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#toString().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serialize(Unfiltered,SerializationHeader,DataOutputPlus,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#truncate(String,String).mjava,0,0,1,2,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithPerStatementVariables#WithPerStatementVariables(QueryOptions,List[List[ByteBuffer]],List[Object]).mjava,0,0,2,3,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getHostIdMap().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#stop().mjava,0,0,3,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableGossip#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintWindow().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#updateLiveSet(Set[SSTableReader],Iterable[SSTableReader]).mjava,0,0,6,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#decode(ByteBuf,int).mjava,0,0,8,2,4,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#trueSnapshotsSize().mjava,0,1,4,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Cleanup#Cleanup(ChannelProxy,MmappedRegions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#isPaused().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairParallelism#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#isOffline().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#getInt(long).mjava,0,0,3,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addTypeToSchemaMutation(UserType,long,Mutation).mjava,0,0,16,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchTrigger#run().mjava,0,0,13,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#isLeaving(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndexSearcher#makeIndexBound(ByteBuffer,Slice.Bound).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata.Serializer#serialize(IndexMetadata,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(Slice.Bound[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#limits().mjava,0,51,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices#with(ClusteringComparator,Slice).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#prepareForRepair(UUID,Set[InetAddress],RepairOption,List[ColumnFamilyStore]).mjava,0,0,27,4,8,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ColumnData#column().mjava,0,63,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.NativeRingCache#getRange(ByteBuffer).mjava,0,0,6,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AssignmentTestable.TestResult#isExactMatch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getKeyspaceName().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#Literal(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSSLKeystorePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#isEmpty().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,5,2,5,0.10526315867900848,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#processesSelection(List[RawSelector]).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#getLastColumn().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#BaseIterator(I).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#toJSONString(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#put(RowCacheKey,IRowCacheEntry).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose(int,int,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#addMapping(ColumnSpecification,Iterable[ColumnDefinition]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#ConsistencyLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#ManyToOne(List[#-extends-Iterator[In]],Comparator[#-super-In],Reducer[In,Out]).mjava,0,0,3,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#addRowUpdate(Clustering,ModificationStatement,QueryOptions,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#generateRandomTokens(Unit,int).mjava,0,0,6,2,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RepairException#RepairException(RepairJobDesc,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateRange(CFMetaData,ColumnParent,SliceRange).mjava,0,0,10,3,3,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CQLFilter#withNewExpressions(List[Expression]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#containsBindMarker().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.CellReducer#getReduced().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\StatementType#isUpdate().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeUnsignedVInt(long).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPageCount().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#newINRestriction(CFMetaData,VariableSpecifications).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#toString(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#rowBuilder(OpOrder.Group).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#wrapBatchResponseHandler(Mutation,ConsistencyLevel,ConsistencyLevel,WriteType,BatchlogResponseHandler.BatchlogCleanup).mjava,0,0,11,5,8,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#RangeStreamer(TokenMetadata,Collection[Token],InetAddress,String,boolean,IEndpointSnitch,StreamStateStore).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#isExpiring().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#getFirstColumn().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#validate().mjava,0,2,20,0,0,0.0,28,5,18,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#udfs().mjava,0,6,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#merge(Iterator[Row],Iterator[RangeTombstone],ColumnFilter,boolean,Holder,Row).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceTypeUpdate(UserType,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetHintedHandoffThrottleInKB#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#validate().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#joinRing().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#decompose(Object...).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#StreamPlan(String,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BooleanType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setIgnoreHosts(Configuration,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Kind#Kind(SelectionDeserializer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#csQueryMetadata(String).mjava,0,0,8,1,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#parseChunkLength(String).mjava,0,0,2,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isLocalDC(InetAddress).mjava,0,0,6,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getReadQueryOptions(Configuration).mjava,0,0,8,1,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#filterOn(String,Operator,Object).mjava,0,0,6,3,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AggregateFunctionSelector#AggregateFunctionSelector(Function,List[Selector]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\CassandraException#CassandraException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#asymmetricCellPathComparator().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#decodeZigZag64(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#closeWriter(HintsStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#getAllRoles().mjava,0,0,8,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#toString().mjava,0,0,16,0,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#start(int,Map[ApplicationState,VersionedValue]).mjava,0,0,15,2,1,8.5,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#unfilteredIterator().mjava,0,8,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThriftCellsPerRow(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#initRowCache().mjava,0,1,11,0,6,0.0476190485060215,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#compareUnsigned(ByteBuffer,byte[],int,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#withSwapped(Tables).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#toUnfilteredRowIterator(CFMetaData,DecoratedKey,LegacyDeletionInfo,Iterator[LegacyCell]).mjava,0,0,1,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.PureJavaOperations#copy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,13,5,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Tester#Tester(boolean,Iterator[ColumnSubselection]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUpdateKeyspace(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#markAllReclaiming().mjava,0,2,2,0,2,0.0,3,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setByteBuffer(ByteBuffer,long,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getIndexes().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createTableParamsFromRow(UntypedResultSet.Row).mjava,0,0,36,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#getView().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#convict(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getParentCfs(ColumnFamilyStore).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#removeNotificationListener(NotificationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushWriters().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.Marker#makeReceiver(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits#CQLPagingLimits(int,int,boolean,ByteBuffer,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcRecvBufferSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addInitialDirectories(Directories.DataDirectory[]).mjava,0,0,6,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\TableStats#execute(NodeProbe).mjava,0,0,129,1,33,0.04729729890823364,25600,17,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,6,1,3,0.06666667014360428,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#version(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#getColumnFamilyStores(String,Collection[String]).mjava,0,0,7,2,1,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaxSSTableBytes().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(int,TypeCodec[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getBestIndexFor(ReadCommand).mjava,0,0,38,1,3,0.0731707289814949,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager#forDistributedQuery(QueryPager,ConsistencyLevel,ClientState).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getBranchKeyEnd(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,3,2,1,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Debug#print(String,StackTraceElement[]).mjava,0,0,6,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#preparedStatement(Session).mjava,0,0,3,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Serializer#serialize(ColumnFilter,DataOutputPlus,int).mjava,0,0,8,3,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getAndReferenceOverlappingSSTables(SSTableSet,Iterable[SSTableReader]).mjava,0,0,2,2,2,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#isRowDeletion(CFMetaData).mjava,0,0,8,1,0,0.0,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#validate().mjava,0,1,2,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#isTTLSelectorFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#drain().mjava,0,1,49,0,4,0.17741934955120087,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#softCloseSocket().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.WithoutPurgeableTombstones#getMaxPurgeableTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpoints(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\EventMessage#EventMessage(Event).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#empty(StatementType,CFMetaData).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#getPartitionKey(Map[String,ByteBuffer]).mjava,0,0,9,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#OutboundTcpConnection(OutboundTcpConnectionPool).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#sizeOfRange().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices#isEmpty().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#checkUnused().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#Builder(ChannelProxy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSplitter#main(String[]).mjava,0,0,63,1,16,0.027272727340459824,49152,16,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#makePartitionIterator(ColumnFilter,DataRange,boolean).mjava,0,0,13,3,9,0.05000000074505806,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#allocate(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#close().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#getTokenValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AnySignal#isSet().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#calculateOpenInterval(boolean).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getSSTableNames(Collection[SSTableReader]).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#createSegment(CommitLog).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#compare(ContextState,ContextState).mjava,0,0,22,2,4,0.11940298229455948,297,13,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getInet(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofVInt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getElementIndex().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#internalOpen(Descriptor,Set[Component],CFMetaData,Long,StatsMetadata,OpenReason,SerializationHeader).mjava,0,0,3,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRangeRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#shouldDefragment().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#isValid(ChannelProxy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getCfsProxy(String,String).mjava,0,0,9,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#fromFileName(String).mjava,0,0,8,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessBound#getListIndex(ByteBuffer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder.CellResolver#resolve(Object[],int,int).mjava,0,0,10,3,5,0.13636364042758942,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getPendingAddressRanges(TokenMetadata,Token,InetAddress).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeVerbHandler#doVerb(MessageIn[Commit],int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.PagesIterator#computeNext().mjava,0,0,9,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#removeIndex(String).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getFunctions().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#fromString(String).mjava,0,0,4,1,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onDropAggregate(String,String,List[AbstractType[#]]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#removeCleanFromDirty().mjava,0,2,12,0,5,0.05882352963089943,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#sharedCopy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#onDropColumnFamily(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#mbPerSec(long,long).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.EQRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#digest(MessageDigest).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\StatusBinary#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#isMultiCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo.Builder#Builder(DeletionTime,ClusteringComparator,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Response#getTracingId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SnapshotMessage.SnapshotMessageSerializer#serialize(SnapshotMessage,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#unsharedHeapSizeExcludingData().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#usedColumnNames().mjava,0,1,8,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#maybeAddEntry(DecoratedKey,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#trySyncDir(File).mjava,0,0,4,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#makeAbort(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#singletonIterator(RowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#append(ByteBuffer).mjava,0,0,9,1,0,0.23076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_local_ring(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_lower(Object[],Comparator[#-super-V],V).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#onRemove(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedStage(Stage,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#close(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#isSupportedBy(Index).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#connect().mjava,0,1,60,0,7,0.08421052992343903,578,11,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionStrategyInstance(ColumnFamilyStore,CompactionParams).mjava,0,0,4,2,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#containsTTLSelectorFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#flushBf().mjava,0,1,5,0,1,0.05882352963089943,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#StreamResultFuture(UUID,String,StreamCoordinator).mjava,0,0,4,3,0,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.AddOrAlter#doAlter(UserType).mjava,0,0,15,1,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#hasMultipleContains().mjava,0,1,5,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#setInitialized().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\notifications\SSTableDeletingNotification#SSTableDeletingNotification(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#setup().mjava,0,0,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#getMax().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#readValue(DataInputPlus).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int,Charset).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#notifyActivity().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#LogReplica(File,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toFloat(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.ComponentOfSlice#ComponentOfSlice(boolean,ByteBuffer,boolean,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Type#matches(LogRecord).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#buildAllIndexesBlocking(Collection[SSTableReader]).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#close(org.apache.hadoop.mapred.Reporter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getKeyspaces(Set[String]).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_range_slices(ColumnParent,SlicePredicate,KeyRange,ConsistencyLevel).mjava,0,0,43,4,16,0.0,4,2,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#isLive().mjava,0,14,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#finishStartup().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#hotKeyIterator(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#truncateBlocking().mjava,0,8,23,0,3,0.4545454680919647,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#run().mjava,0,0,8,0,0,0.125,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isSimple().mjava,0,20,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#markAndThrow().mjava,0,6,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#isTombstone().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#shouldDefragment().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setTombstoneFailureThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpoint().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#compareCollectionMembers(ByteBuffer,ByteBuffer,ByteBuffer).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMoving(InetAddress).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#Expression(ColumnDefinition,Operator,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetTraceProbability#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\KeyspaceMetrics#KeyspaceMetrics(Keyspace).mjava,0,0,46,1,0,0.023255813866853714,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#getScanner(ColumnFilter,DataRange,RateLimiter,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.ResultSetBuilder#rowToJson(List[ByteBuffer],int).mjava,0,0,19,2,4,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\CompleteMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#joinRing().mjava,0,0,10,0,0,0.0,4,2,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#addPermissionsForRole(Set[Permission],IResource,RoleResource).mjava,0,0,17,3,4,0.11764705926179886,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#pack(Collection[ByteBuffer],int,int).mjava,0,0,6,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardIndexedReader#setForSlice(Slice).mjava,0,0,15,1,1,0.4545454680919647,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#getLocalInetAddresses().mjava,0,1,9,0,0,0.0,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Tester#includes(CellPath).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition.RowUpdater#abort(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#createUDAFromRow(UntypedResultSet.Row,Functions,Types).mjava,0,0,21,3,9,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#mergeAll(int).mjava,0,0,7,1,11,0.1071428582072258,180,10,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#addCell(Cell).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#argNames().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateNormal(InetAddress).mjava,0,0,62,1,9,0.07000000029802322,640,13,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#removeUnreadableSSTables(File).mjava,0,0,3,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serialize(InetAddress,DataOutput).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#isAggregateSelectorFactory().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#getOpeningString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#isPreviouslyReturnedPartition(DecoratedKey).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#dirtyString().mjava,0,1,7,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#InetAddressType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\StreamingMetrics#get(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\WindowsTimer#startTimerPeriod(int).mjava,0,0,2,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamWriter#StreamWriter(SSTableReader,Collection[Pair[Long,Long]],StreamSession).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader#buildSSLOptions(EncryptionOptions.ClientEncryptionOptions).mjava,0,0,1,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#clear().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#start().mjava,0,0,30,0,3,0.05128205195069313,24,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#serializeInternal(DataOutputPlus,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#execute(ClientState).mjava,0,0,25,1,2,0.04545454680919647,3,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#getPrepared(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getViewBuildStatus(String,String).mjava,0,0,11,2,6,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#collectColumns(List[UnfilteredRowIterator]).mjava,0,0,7,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredRows#isEmpty().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#prepare(String,ColumnSpecification).mjava,0,0,23,2,4,0.09090909361839294,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#valueComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#unsharedHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeWithoutCondition(QueryState,QueryOptions).mjava,0,0,8,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#tickIfNecessary().mjava,0,3,5,0,5,0.0,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#doAuthenticate(String,String,SelectStatement).mjava,0,0,13,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#LegacyBatchlogMigrator().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#growToFree(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#deserialize(DataInputPlus).mjava,0,0,16,1,13,0.0,15,6,19,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#scheduleHintDelivery(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getTotalColumnsSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#completeSetup().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#MemtableUnfilteredPartitionIterator(ColumnFamilyStore,Iterator[Map.Entry[PartitionPosition,AtomicBTreePartition]],boolean,int,ColumnFilter,DataRange).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#isContains().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#decompose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BufferDecoratedKey#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#length().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getCachedPosition(DecoratedKey,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#validateIndexedValue(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSSTablePreempiveOpenIntervalInMB().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithNames#prepare(List[ColumnSpecification]).mjava,0,0,10,1,1,0.0,4,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#releaseBuffer().mjava,0,0,2,0,0,0.0555555559694767,4,2,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#updateTopology(InetAddress).mjava,0,0,4,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getClusterName().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#logDroppedMessages().mjava,0,0,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#getMap(Option).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getDeleteSourceOnSuccess(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getPartitioner().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#setOutput(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#knowsVersion(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getView(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#close().mjava,0,0,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#deserializeLargeSubset(DataInputPlus,Columns,int).mjava,0,0,12,3,9,0.0,3,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addCell(ColumnDefinition,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedSizeEndOfPartition().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#mergeRestrictions(TreeMap[ColumnDefinition,Restriction],Restriction).mjava,0,0,6,2,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#split(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Cleanup#name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CompactTables#isSuperColumnMapColumn(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector#inspectThrowable(Throwable).mjava,0,0,7,1,1,0.06666667014360428,72,7,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\CompactionStats#addLine(List[String[]],int[],String...).mjava,0,0,3,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#insertFrom(int,LegacyBound,LegacyBound,long,int).mjava,0,0,22,5,3,0.4556961953639984,187,15,60,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\FunctionExecutionException#FunctionExecutionException(FunctionName,List[String],String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateFunctionMutation(KeyspaceMetadata,UDFunction,long).mjava,0,0,2,3,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#BaseIterator(BaseIterator[#-extends-V,#-extends-I,#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaximalTask(int,boolean).mjava,0,0,6,2,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#staticRow().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getPreferredIP(InetAddress).mjava,0,0,7,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\PartitionKeyIndex#decodeEntry(DecoratedKey,Row).mjava,0,0,11,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#exitOrFail(int,String,Throwable).mjava,0,0,2,3,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#select(SSTableSet,Predicate[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFProperties#validate().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getFunctions().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getEndpointState(String).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#transferTo(long,long,WritableByteChannel).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onStatusChange(InetAddress,Event.StatusChange).mjava,0,0,6,2,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#isStatic().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#inclusiveRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableBufferAllocator#MemtableBufferAllocator(SubAllocator,SubAllocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#enable().mjava,0,2,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#setup().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputKeyspaceUserName(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#decodeTableMetadata(UntypedResultSet.Row,UntypedResultSet,UntypedResultSet).mjava,0,0,30,3,16,0.20967741310596466,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#SliceRestriction(List[ColumnDefinition],Bound,boolean,Term).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#updateTTL(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getCommitLogLocation().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Token.KeyBound#isMinimum().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#submitWrite(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#syncFolder(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.SuperColumnsPartitionMerger#applyToRow(Row).mjava,0,0,37,1,6,0.0,40,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#reuse(Comparator[#-super-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Setter#Setter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits.SuperColumnCountingCounter#SuperColumnCountingCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_update(Object[],Comparator[C],Iterable[K],int,UpdateFunction[K,V]).mjava,0,0,6,5,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#hasBound(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[T-extends-Throwable]_maybeFail(Throwable,Class[T]).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateIndexClauses(CFMetaData,IndexClause).mjava,0,0,2,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\StartupException#StartupException(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#add(String).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#makeStopSessionMutation(ByteBuffer,int,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#assassinateEndpoint(String).mjava,0,0,32,1,6,0.10000000149011612,2,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\BootstrapResume#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateDeletion(CFMetaData,Deletion).mjava,0,0,8,2,1,0.05263157933950424,32,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#toString(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#waitingFor(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#fromJSONObject(Object).mjava,0,0,7,1,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,CFMetaData).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeDropKeyspaceMutation(KeyspaceMetadata,long).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#add(ByteBuffer).mjava,0,0,4,1,0,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#create(Map[String,String]).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#openNoValidation(Descriptor,CFMetaData).mjava,0,0,2,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#create(Descriptor,long,long,CFMetaData,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,1,7,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#tryOpenDirectory(String).mjava,0,0,4,1,1,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#takeSnapshot(String,String...).mjava,0,0,6,2,2,0.043478261679410934,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getPhiConvictThreshold().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthorizer().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCompactionCandidates().mjava,0,1,38,0,9,0.6415094137191772,252,11,8,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#SSTableWriter(Descriptor,long,long,CFMetaData,MetadataCollector,SerializationHeader).mjava,0,0,3,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#areAllNodesAtLeast22().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#stores().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata.ValidationMetadataSerializer#deserialize(Version,DataInputPlus).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionInBound#CollectionInBound(ColumnCondition,QueryOptions).mjava,0,0,24,2,5,0.020408162847161293,13,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#finishParentSession(UUID,Set[InetAddress],Collection[Range[Token]]).mjava,0,0,6,3,2,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing.TraceType#deserialize(byte).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_emptySortedSet(Comparator[#-super-T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromPager#iterator().mjava,0,0,9,0,1,0.0,3,2,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.TransactionalProxy#doCommit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#parseStatement(String).mjava,0,0,8,1,0,0.0,1,0,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getBackingFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil#getFilter(Options).mjava,0,0,0,1,0,0.0,9,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#deleteAllHints(UUID).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#setNextSamplePosition(long).mjava,0,0,0,1,1,0.0,3,2,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#calculateRateUnit(TimeUnit).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CompactionMetrics#CompactionMetrics(ThreadPoolExecutor...).mjava,0,0,15,1,2,0.07407407462596893,1,0,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#validate(ClientState).mjava,0,0,23,1,1,0.2222222238779068,96,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Conflicts#mergeCounterValues(ByteBuffer,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#add(Object).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_selectFirst(T,Collection[T]...).mjava,0,0,1,2,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#addTo(Ref.IdentityCollection).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#storeKeyspaceInstance(Keyspace).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#withParameter(String,byte[]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler#initiate().mjava,0,1,10,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#reconcileComplex(ColumnDefinition,Iterator[Cell],Iterator[Cell],DeletionTime,Row.Builder,int).mjava,0,0,14,6,5,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#BTreeRange(Object[],Comparator[#-super-V],int,int).mjava,0,0,0,4,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#MessageIn(InetAddress,T,Map[String,byte[]],MessagingService.Verb,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getDirectories().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performAnticompaction(ColumnFamilyStore,Collection[Range[Token]],Refs[SSTableReader],LifecycleTransaction,long).mjava,0,0,38,5,8,0.0,18,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#close(Throwable,Iterable[#-extends-AutoCloseable]).mjava,0,0,2,2,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#populateCandidate(CandidateInfo[Unit]).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata#fileDigestValidator(Descriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#getWriteDirectory(long).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter#close().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredRows#partitionLevelDeletion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getTokenValidator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse#createDataResponse(UnfilteredPartitionIterator,ColumnFilter).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DecimalSerializer#deserialize(ByteBuffer).mjava,0,0,5,1,3,0.10000000149011612,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#complete(String,int,long).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubInfo#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubResult#ScrubResult(Scrubber).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#init(Cluster,Collection[Host]).mjava,0,0,5,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetricNameFactory#ThreadPoolMetricNameFactory(String,String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#builder().mjava,0,1,3,0,0,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.RangeSliceSerializer#serialize(ReadResponse,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\CustomClassLoader#CustomClassLoader(ClassLoader,File).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#freeze().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader.Builder#build().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#ListRolesStatement(RoleName,boolean).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.Operator.GreaterThan#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#append(UnfilteredRowIterator).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#UnbufferedDataOutputStreamPlus().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[E-extends-Exception]_perform(Stream[#-extends-DiscreteAction[#-extends-E]],DiscreteAction[#-extends-E]...).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CustomPayloadMirroringQueryHandler#processPrepared(CQLStatement,QueryState,QueryOptions,Map[String,ByteBuffer]).mjava,0,0,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask.AnticompactionCallback#AnticompactionCallback(AnticompactionTask).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchIndexes(String,String).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#dropSSTables(Predicate[SSTableReader],OperationType,Throwable).mjava,0,0,24,3,4,0.0882352963089943,2,1,24,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#isEmpty().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#getFailedHosts().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#isOpen(boolean).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#exclusiveStartOf(ByteBuffer...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData.Builder#build().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_replaceInSitu(Object[],Comparator[#-super-V],V,V).mjava,0,0,3,4,2,0.0,5,3,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#doRetry(FileMessageHeader,Throwable).mjava,0,0,5,2,0,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getTrueAllocatedSizeIn(File).mjava,0,0,5,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#setBufferSize().mjava,0,1,1,0,0,0.0833333358168602,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceColumnFamilyUpdate(CFMetaData,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#Prepared(MD5Digest,ParsedStatement.Prepared).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#tombstone(ColumnDefinition,long,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#isHostAlive().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#toString().mjava,0,2,20,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#inRowRangeTombstones().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#currentIndex().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addTableToSchemaMutation(CFMetaData,long,boolean,Mutation).mjava,0,0,16,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter#AbstractClusteringIndexFilter(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#setCapacity(long).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#remove(Object).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#fromKeyExcl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stopThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SizeEstimatesRecorder#estimatePartitionsCount(Collection[SSTableReader],Range[Token]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hintedHandoffDisabledDCs().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#AbstractCommitLogService(CommitLog,String,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getBits(int,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask.OnCompletionRunnable#run().mjava,0,0,26,0,5,0.13846154510974884,12,4,1,7,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.Flag#deserialize(int).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#prepareType(String,CQL3Type.Raw).mjava,0,0,6,2,1,0.25,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#shutdown().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#skipValue(DataInputPlus).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#rightBoundary().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(RequestValidationException).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTask#getSummary().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokenToEndpointMap().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Cleanup#Cleanup(ChannelProxy).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getNewEphemeralSnapshotMarkerFile(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String,int,ClassLoader,ThreadGroup).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager.StreamRateLimiter#mayUpdateThroughput(double,RateLimiter).mjava,0,0,2,2,0,0.1666666716337204,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithMarker#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#from(CQL3Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getTableForAlias(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#test().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#proposePaxos(Commit,List[InetAddress],int,boolean,ConsistencyLevel).mjava,0,0,7,5,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#averageGap().mjava,0,1,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBroadcastAddress(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#hasBound(Bound).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#startSessionIfRequested().mjava,0,19,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#markIndexBuilt(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#dropPageCache(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#getCFSMBeans(MBeanServerConnection,String).mjava,0,0,5,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#ProgressIndicator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RevokePermissionsStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(int).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#minDeletionTime(ColumnData).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(WritableByteChannel,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#componentsCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell.Serializer#serialize(Cell,DataOutputPlus,LivenessInfo,SerializationHeader).mjava,0,0,29,4,6,0.0,1024,10,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper.GossipTask#run().mjava,0,0,26,0,4,2.049999952316284,6,3,23,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithMarker#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#asMap().mjava,0,1,17,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter#close().mjava,0,2,12,0,1,0.0,16,6,22,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#validate(ClientState).mjava,0,0,10,1,2,0.1764705926179886,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#emptyUpdate(CFMetaData,DecoratedKey).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getRack(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#valuesEqual(InetAddress,InetAddress,ApplicationState).mjava,0,0,5,3,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#add(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#getRateLimiter(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#BigTableScanner(SSTableReader,ColumnFilter,DataRange,RateLimiter,boolean,Iterator[AbstractBounds[PartitionPosition]]).mjava,0,0,5,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#prepare(String,ColumnDefinition).mjava,0,0,3,2,1,0.0,28,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#[K-extends-IMeasurableMemory,V-extends-IMeasurableMemory]_create(long,EntryWeigher[K,V]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.KeyCacheSerializer#serialize(KeyCacheKey,DataOutputPlus,ColumnFamilyStore).mjava,0,0,9,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serialize(GossipDigest,DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompressBuffer(ByteBuffer,ByteBuffer).mjava,0,0,15,2,6,0.032258063554763794,6,3,23,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJob#RepairJob(RepairSession,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#closeWriter().mjava,0,1,4,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#tracksLegacyCounterShards().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeChar(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#maybeReopenEarly(DecoratedKey).mjava,0,0,12,1,2,0.0,3,3,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#maybeScheduleSchemaPull(UUID,InetAddress).mjava,0,0,20,2,4,0.11764705926179886,4,4,4,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLiveNaturalEndpoints(Keyspace,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#descendingSet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#inclusiveLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop(long).mjava,0,0,0,1,0,1.4444444179534912,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getReadConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#replayMutation(byte[],int,long,CommitLogDescriptor).mjava,0,0,44,4,7,0.125,768,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#setup().mjava,0,2,96,0,9,0.14772726595401764,7680,15,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#state().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#await().mjava,0,3,5,0,1,0.0,3,2,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#releaseAttachment(ByteBuffer).mjava,0,0,2,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#throwSyntaxError(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#builder().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#gcGraceSeconds(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#prepareToJoin().mjava,0,1,45,0,2,0.1599999964237213,169,10,42,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AggregateFunctionSelector#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#readCredentials(Iterator[String]).mjava,0,0,5,1,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#checksumFileName().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator.Region#Region(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setRowCacheKeysToSave(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataInputPlus#readVInt().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#getUncompacting(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MaxSSTableSizeWriter#MaxSSTableSizeWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],long,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#isIncremental().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#fromName(String).mjava,0,0,6,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#Work(SEPExecutor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#partitionKeyColumns().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\RequestExecutionException#RequestExecutionException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir.HistogramSnapshot#getValue(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition.Serializer#serialize(CachedPartition,DataOutputPlus).mjava,0,0,10,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#truncate(long).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#unregister(MigrationListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getTotalBytes().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer.SingleDatacenterFilter#SingleDatacenterFilter(IEndpointSnitch,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getPartitioner().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processPrepared(CQLStatement,QueryState,QueryOptions,Map[String,ByteBuffer]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Debug#deallocate().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#ensureAtleast(ConcurrentMap[UUID,AtomicInteger],UUID,int).mjava,0,0,4,3,3,0.0,15,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#write(DataOutput).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilter#sharedCopy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithBadness(InetAddress,List[InetAddress]).mjava,0,0,9,2,5,0.20000000298023224,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#MutableDeletionInfo(DeletionTime,RangeTombstoneList).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#udas().mjava,0,6,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeBytes(String).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#renameColumn(ColumnIdentifier,ColumnIdentifier).mjava,0,0,23,2,4,0.06896551698446274,48,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeSliceQueryPager#RangeSliceQueryPager(PartitionRangeReadCommand,PagingState,int).mjava,0,0,4,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#argListAsString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#markSuspect().mjava,0,13,4,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#addTo(Ref.IdentityCollection).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#verify().mjava,0,2,24,0,2,0.06060606241226196,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitFailurePolicy().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#newSliceRestriction(CFMetaData,VariableSpecifications,Bound,boolean).mjava,0,0,4,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyPagedRangeCommandSerializer#serialize(ReadCommand,DataOutputPlus,int).mjava,0,0,68,3,13,0.3478260934352875,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#execute(QueryState,BatchQueryOptions).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#fieldType(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#compareIdentifiers(String[],String[],int).mjava,0,0,4,3,4,0.0625,96,10,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getCachedEndpoints(Token).mjava,0,0,4,1,1,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#superColumnCountingLimits(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_contains(T,T,T).mjava,0,0,5,3,0,0.7692307829856873,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#of(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#applyToStatic(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#execute(int,List[ByteBuffer]).mjava,0,0,12,2,2,0.03846153989434242,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.RemoteDataResponse#selection(ReadCommand).mjava,0,0,1,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#getActiveSegments().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#updateProgress(ProgressInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#toString().mjava,0,0,16,0,2,0.0,3,3,22,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint#isLive().mjava,0,2,4,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceFlush(String,String...).mjava,0,0,3,2,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#getCanonicalPath(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#setStatus(TaskAttemptContext,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#includeBackups(boolean).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#flush().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#unmarkCompacting(Set[SSTableReader],Throwable).mjava,0,0,4,2,0,0.6000000238418579,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#custom(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#replaceFlushed(Memtable,Collection[SSTableReader]).mjava,0,0,10,2,2,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#legacyCellComparator(CFMetaData,boolean).mjava,0,0,3,2,4,0.10526315867900848,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairRangeAsync(String,String,String,boolean,boolean,boolean,String...).mjava,0,0,3,7,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#size().mjava,0,56,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#isReceiving().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSendBufferSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#doMergeWith(TokenRestriction).mjava,0,0,12,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#BasePartitions(BasePartitions[#,#-extends-I]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#createForDeletionInfo(TemporalRow.Set,AbstractBTreePartition).mjava,0,0,53,2,20,0.09090909361839294,9801,22,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#changeEvent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBufferFixed#DataOutputBufferFixed(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#toCQLLiteral(ByteBuffer,int,StringBuilder).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CLibrary#trySync(int).mjava,0,0,4,1,0,0.05882352963089943,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#loadSavedAsync().mjava,0,0,13,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#maybe(int).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#forSubRange(AbstractBounds[PartitionPosition]).mjava,0,0,10,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterators#RowIterators().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isEQ().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#captureWarnings().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(CFMetaData).mjava,0,0,55,1,1,0.027027027681469917,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogDescriptor#writeHeader(ByteBuffer,CommitLogDescriptor).mjava,0,0,14,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerError#code().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.AlwaysReplayFilter#filter(Mutation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#hashCode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#isStartInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\ThreadAwareSecurityManager#checkAccess(ThreadGroup).mjava,0,0,1,1,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#fetchTables(String,Session,IPartitioner,Types).mjava,0,0,5,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter#split().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#initKeyCache().mjava,0,1,7,0,4,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_keyspace(KsDef).mjava,0,0,24,1,2,0.06451612710952759,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.WriteTimeTransaction#onUpdated(Row,Row).mjava,0,0,18,2,5,0.03125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#builder(ColumnDefinition).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#skipNext().mjava,0,0,4,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#appendKeyWhereClauses(String).mjava,0,0,8,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#getString(Option).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#getNullable(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener#RepairMergeListener(InetAddress[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#maybeCreateReplica(File,String,Set[LogRecord]).mjava,0,0,6,3,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#validateCellValue(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#RowFilter(List[Expression]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getEstimatedKeyCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#floor(long).mjava,0,0,4,1,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,3,3,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#make(String,List[File]).mjava,0,0,7,2,4,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#indexerFor(DecoratedKey,int,OpOrder.Group,IndexTransaction.Type).mjava,0,0,70,4,3,0.0,6144,14,65,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#makeColumnFilter(CFMetaData,Slices).mjava,0,0,9,2,2,0.06666667014360428,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#ConsistencyLevel(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\UpdateFunction#[K]_noOp().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBytesUnsafe(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#getDouble(Option).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getObject(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateWithBoolean(MessageDigest,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#slice(Slice).mjava,0,0,6,1,0,0.0,2,1,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#openFinal(Descriptor,SSTableReader.OpenReason).mjava,0,0,9,2,5,0.04545454680919647,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getFrozenTextMap(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#asList().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RevokeRoleStatement#RevokeRoleStatement(RoleName,RoleName).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener#close().mjava,0,0,6,0,1,0.06666667014360428,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#viewClusteringTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getRandomToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#query(RangeForQuery).mjava,0,0,19,1,7,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#canSkipValue(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#sharedCopy().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#persistLocalMetadata().mjava,0,1,17,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#regularOperations().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexAccessMode().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#create(ClusteringComparator,boolean,boolean,Object...).mjava,0,0,4,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#delete(ByteBuffer,Clustering,Cell,OpOrder.Group,int).mjava,0,0,5,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#bigForBytes(byte[],int).mjava,0,0,1,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#updatePeerInfo(InetAddress,String,Object).mjava,0,0,4,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isInShadowRound().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#inclusiveRight().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortTokens().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#compareTo(IPartitioner,ByteBuffer,PartitionPosition).mjava,0,0,7,3,2,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\MorePartitions#extend(UnfilteredPartitionIterator,MorePartitions[#-super-UnfilteredPartitionIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\TopKSampler#addSample(T,long,int).mjava,0,0,4,3,1,0.07692307978868484,3,2,15,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\UnfilteredPartitions#UnfilteredPartitions(UnfilteredPartitionIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter#includes(Cell).mjava,0,0,7,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#CompactionIterator(OperationType,List[ISSTableScanner],CompactionController,int,UUID).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#free().mjava,0,4,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamStateCompositeData#toCompositeData(StreamState).mjava,0,0,20,1,8,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performVerify(ColumnFamilyStore,boolean).mjava,0,0,5,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#filter(ColumnFilter,CFMetaData).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getAuthProvider(Configuration).mjava,0,0,6,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#hasAccess(String,Permission,DataResource).mjava,0,0,7,3,0,0.0,12,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#clone(AbstractAllocator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PermissionsManagementStatement#PermissionsManagementStatement(Set[Permission],IResource,RoleName).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#isLive().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[T]_getFrozenList(String,AbstractType[T]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#allocatingFrom().mjava,0,4,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.DispatchHintsTask#dispatch(HintsDescriptor).mjava,0,0,19,1,2,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#exclusiveOpen(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getSnapshotDirectory(Descriptor,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#update(Collection[V]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#encodeBitmap(Collection[ColumnDefinition],Columns,int).mjava,0,0,3,3,6,0.23529411852359772,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#forPaging(ClusteringComparator,Clustering,boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#isForSSTable().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetHostStat#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#selectsClustering(DecoratedKey,Clustering).mjava,0,0,7,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#subSet(V,boolean,V,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#maxIndexInterval(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#NetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,9,4,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#hasFiles().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#asRangeTombstone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#getElementsType().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#handleStartupFSError(Throwable).mjava,0,0,4,1,0,0.0,9,1,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchColumns(String,String,Types).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readBoundValue(ByteBuf,int).mjava,0,0,4,2,2,0.0625,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getHintsFlushPeriodInMS().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#getNextRow(CellGrouper,PeekingIterator[#-extends-LegacyAtom]).mjava,0,0,7,2,0,0.10000000149011612,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#buildQuery().mjava,0,1,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotWithoutFlush(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#add(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#forProgress(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#replaySyncSection(FileDataInput,int,CommitLogDescriptor,String,boolean).mjava,0,0,25,5,4,80.0,513,10,45,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#testAssignment(String,ColumnSpecification).mjava,0,0,7,2,1,0.3888888955116272,8,3,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#compare(Clustering,Clustering).mjava,0,0,4,2,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#ExcludingBounds(T,T).mjava,0,0,3,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(String,TypeCodec[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getLocalDataCenter().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#getPageSize().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.TransactionalProxy#doPrepare().mjava,0,0,7,0,1,0.2222222238779068,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#channel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#allocateBuffer(int,BufferType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#rangeIterator(Slice,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#bytes().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#valuesAsClustering(QueryOptions).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getIndex(IndexMetadata).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListRolesStatement#resultMessage(Set[RoleResource]).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Validator#applyToMarker(RangeTombstoneMarker).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#destroy().mjava,0,1,7,0,1,0.1428571492433548,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setShort(long,short).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AggregateFunctionSelector#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#sync().mjava,0,2,8,0,4,0.7142857313156128,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#SSTableRewriter(LifecycleTransaction,long,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[K,V]_getMap(String,AbstractType[K],AbstractType[V]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeConsistencyLevel(ConsistencyLevel,ByteBuf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.FileAction#FileAction().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.SimpleExpression#toString().mjava,0,0,6,0,2,0.0,15,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\client\RingCache#RingCache(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#ProposeCallback(int,int,boolean,ConsistencyLevel).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Prepender#Prepender(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#onToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#await().mjava,0,0,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,12,3,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readBoolean().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getKeyspace().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#count().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#finishLocalSampling(String,int).mjava,0,0,12,2,3,0.25,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getDirectories().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getRowFilter(SecondaryIndexManager,QueryOptions).mjava,0,0,6,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#deleteAllHintsForEndpoint(String).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#findMostSignificantByte(ByteBuffer).mjava,0,0,5,1,4,0.0,19,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#staticRow().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#execute(QueryState,QueryOptions).mjava,0,0,16,2,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#isCustom().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasSamplingLevel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRemoveCompletion().mjava,0,0,12,0,1,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#allKnownSSTables().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#calc().mjava,0,1,3,0,2,0.1818181872367859,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Slice#Slice(ColumnDefinition,CellPath,CellPath).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers.Builder#build().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(List[AsyncOneResponse],long).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamInitMessage#createMessage(boolean,int).mjava,0,0,8,2,4,0.1071428582072258,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#[T]_sendHints(Iterator[T],Collection[Callback],Function[T,Callback]).mjava,0,0,6,3,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#clusteringKeyRestrictionsAreSatisfiedBy(Clustering).mjava,0,0,5,1,0,0.0,4,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#getFunctionName().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#offline(OperationType,Iterable[SSTableReader]).mjava,0,0,4,2,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#addStreamRequest(String,Collection[Range[Token]],Collection[String],long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#hasDeletion(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#crcCheckChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction#generateArgumentList(Class[#][],List[ColumnIdentifier]).mjava,0,0,7,2,1,0.0833333358168602,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageOut#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#validate(ByteBuffer).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_slice(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,17,4,4,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#withNewStart(LegacyBound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#toNode().mjava,0,2,2,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#sendEncodedHint(ByteBuffer).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateRoleStatement#grantPermissionsToCreator(ClientState).mjava,0,0,8,1,0,0.3333333432674408,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeBuilder#[C,K-extends-C,V-extends-C]_update(Object[],Comparator[C],Iterable[K],UpdateFunction[K,V]).mjava,0,0,8,4,4,0.12903225421905518,15,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#retain().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CQLFilter.IsSatisfiedFilter#applyToPartition(UnfilteredRowIterator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#addAll(RangeTombstoneList).mjava,0,0,7,1,2,0.5757575631141663,12,7,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#disabled().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#fromType(AbstractType,int).mjava,0,0,17,2,2,0.10526315867900848,148,10,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredRows#FilteredRows(UnfilteredRowIterator,Filter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList.Node#height().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession.SSTableStreamingSections#SSTableStreamingSections(Ref[SSTableReader],List[Pair[Long,Long]],long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Transactional.AbstractTransactional#close().mjava,0,9,1,0,0,0.0,6,1,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#unfilteredIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.FiltrationTracker#apply(V).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardReader#ForwardReader(FileDataInput,boolean,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitLogSegmentSize(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#onFailure(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#listFiles().mjava,0,1,6,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#readFields(DataInput).mjava,0,0,5,1,1,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#TableParams(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#getOnDiskFilePointer().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#getFilePaths().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isCompactTable().mjava,0,23,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBool(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Pair#[X,Y]_create(X,Y).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#normal(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncPeriod().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#run().mjava,0,1,17,0,5,0.054054055362939835,9,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeForSuperColumn(CFMetaData,Clustering,ByteBuffer).mjava,0,0,2,3,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectory#DataDirectory(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#mergeWith(Restriction).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getAllSSTables(SSTableSet).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\SplittingSizeTieredCompactionWriter#SplittingSizeTieredCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],long).mjava,0,0,9,5,4,0.03846153989434242,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNumTokens().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getUnreachableMembers().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.Weighted#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogService#maybeWaitForSync(CommitLogSegment.Allocation).mjava,0,0,4,1,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor#HintsDispatchExecutor(File,int,AtomicBoolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#isHeadFilter().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#logRowCountPerLeaf(Logger).mjava,0,0,3,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#requiresRead().mjava,0,2,2,0,0,0.1666666716337204,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#markAlive(InetAddress,EndpointState).mjava,0,0,8,2,2,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#append(Hint).mjava,0,0,18,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber#main(String[]).mjava,0,0,50,1,10,0.06896551698446274,192,8,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isEnd().mjava,0,2,0,0,0,0.0,8,1,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputInitialAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addKeyAliases(List[ColumnIdentifier]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#getBatchlogTimeout().mjava,0,2,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient.SimpleEventHandler#onEvent(Event).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_schema_versions().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceRepairAsync(String,boolean,boolean,boolean,boolean,String...).mjava,0,0,3,6,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateFunction(UDFunction).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPartitionerName().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPermissionsValidity().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexPropDefs#getOptions().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.SpeculatingReadExecutor#getContactedReplicas().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AggregateFcts#all().mjava,0,1,27,0,1,0.13333334028720856,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#rebuildSecondaryIndex(String,String,String...).mjava,0,0,9,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#writeMetadata(Descriptor,Map[MetadataType,MetadataComponent]).mjava,0,0,7,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#closeQuietly(Iterable[#-extends-AutoCloseable]).mjava,0,0,2,1,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#deserialize(DataInputPlus,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#hasBound(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#getToken().mjava,0,59,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.ColumnDataReducer#getReduced().mjava,0,0,19,0,6,0.0,3,6,32,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheSentinel#RowCacheSentinel().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#putIfAbsent(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#MemoryInputStream(Memory,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#makeCellPathComparator(Kind,AbstractType[#]).mjava,0,0,11,2,1,0.0476190485060215,10,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#address().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\MemoryMappedSegment#createBuffer(CommitLog).mjava,0,0,6,1,0,0.21052631735801697,1,0,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#newCleanupTransaction(DecoratedKey,PartitionColumns,int).mjava,0,0,6,3,1,0.10000000149011612,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#setupCompleted().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#Writer(CompressionParams,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyReadCommandSerializer#serializeStaticSlice(DataOutputPlus,boolean,CFMetaData).mjava,0,0,11,3,2,0.2631579041481018,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.InReverseOrderTester#isDone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#addNonSerializedColumn(ColumnSpecification).mjava,0,0,1,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllLeft().mjava,0,4,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\CloudstackSnitch#csEndpointFromLease(File).mjava,0,0,5,1,4,0.03846153989434242,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serializedSize(VersionedValue,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#maybeAddLatency(IAsyncCallback,InetAddress,long).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#minValue().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getPartitionSample(String,String,int,int,int,List[Sampler]).mjava,0,0,8,6,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#listeners(StreamEventHandler,StreamEventHandler...).mjava,0,0,2,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#getStdDev().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalFilesCompleted(Collection[ProgressInfo]).mjava,0,0,3,1,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#maybeReload(CFMetaData).mjava,0,0,2,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\Bound#reverse().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setCounterCacheKeysToSave(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#serializedSize().mjava,0,0,6,0,5,0.1666666716337204,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#unload(ViewDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String,InetAddress).mjava,0,0,6,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#checkTrue(boolean,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(String,SSTableFormat.Type).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#reset(FileMark).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(int,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getLong(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\AsyncOneResponse#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#merge(List[UnfilteredRowIterator],int).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.LatestEvent#forStatusChange(Event.StatusChange.Status,LatestEvent).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#clearSnapshot(String,String...).mjava,0,0,8,2,1,0.0555555559694767,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropView(ViewDefinition).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#getSocket().mjava,0,1,0,0,0,0.0,2,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#buildData(Descriptor,StatsMetadata,IndexSummaryBuilder.ReadableBoundary).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AsciiType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#computeNext().mjava,0,0,16,0,2,0.1666666716337204,16,8,23,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.SliceRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getEstimatedPartitionSize().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#boundIterator(boolean).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#findMinLocalDeletionTime(Iterator[Map.Entry[PartitionPosition,AtomicBTreePartition]]).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager#getStrategies().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#recognizedOptions().mjava,0,1,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.FixedCoalescingStrategy#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#clear(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#tailSet(V,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#isReverseOrder().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#processesSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#saveCache().mjava,0,0,29,0,7,0.05999999865889549,80,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateMutation(CFMetaData,Mutation).mjava,0,0,2,2,3,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#builder().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.LatestEvent#forTopologyChange(Event.TopologyChange.Change,LatestEvent).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTriggerStatement#validate(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#execute(ConsistencyLevel,ClientState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ensureNotAnonymous().mjava,0,7,2,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#AbstractQueryPager(ReadCommand,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#forExternalCalls(SocketAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#percentile(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#rangesAsString().mjava,0,1,12,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#SliceRestriction(CFMetaData,List[ColumnDefinition],TermSlice).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSSLKeystorePath(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#SystemDistributedKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdatesCollector#toMutations().mjava,0,2,8,0,1,0.125,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Pair#equals(Object).mjava,0,0,2,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#exclusiveClose(boolean,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#add(int,Row).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#allOperations().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#get().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#reconcile(Cell,Cell,DeletionTime,Row.Builder,int).mjava,0,0,9,5,1,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getKeyCache().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#isValid(ChannelProxy).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer.CustomFrameBuffer#getTransport().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#serializedSize(PartitionUpdate,int).mjava,0,0,6,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeBytes(byte[],ByteBuf).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#selfAssign().mjava,0,2,6,0,1,0.23529411852359772,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ShortType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getParentColumnFamilyName().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopTransports().mjava,0,3,9,0,0,0.0,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#getParent().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicUpdateInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#openAndGetStore(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getRandomToken().mjava,0,0,5,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#getSerializedValue(ByteBuffer,ByteBuffer,AbstractType).mjava,0,0,5,3,5,0.04545454680919647,5,3,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#withPort(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLiveNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataSerializer#serialize(Map[MetadataType,MetadataComponent],DataOutputPlus,Version).mjava,0,0,13,3,3,0.3529411852359772,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.ViewWriteMetricsWrapped#response(MessageIn[IMutation]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\OutgoingFileMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#isShutdown().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event#deserialize(ByteBuf,int).mjava,0,0,5,2,1,0.0,14,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BasePartitions#hasNext().mjava,0,0,6,0,4,0.0,22,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#getRoleName().mjava,0,50,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getTableSchema(Configuration,String).mjava,0,0,1,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GcStats#execute(NodeProbe).mjava,0,0,4,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#doMergeWith(Restriction).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxMeter#getFifteenMinuteRate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Compact#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#fromMap(Map[String,String]).mjava,0,0,2,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.TokenRangeComparator#compare(Range[Token],Range[Token]).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#localQuorumFor(Keyspace,String).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#getMutations(BatchQueryOptions,boolean,long).mjava,0,0,16,3,6,0.0,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#checkUpdateable().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#BigTableWriter(Descriptor,Long,Long,CFMetaData,MetadataCollector,SerializationHeader,LifecycleTransaction).mjava,0,0,10,7,0,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxHistogram#getCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRowCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#examineGossiper(List[GossipDigest],List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,18,3,5,2.3636362552642822,58,8,6,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#serializedValues(Iterator[Cell]).mjava,0,0,7,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AggregateFcts#makeCountFunction(AbstractType[#]).mjava,0,0,3,1,1,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexSummaryCapacityInMB().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#RangeTombstoneBoundaryMarker(RangeTombstone.Bound,DeletionTime,DeletionTime).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner.BigIntegerToken#getPartitioner().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceCleanup(String,String...).mjava,0,0,3,2,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#containsAlias(ColumnIdentifier).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.GlobalTidy#stopReadMeterPersistence().mjava,0,1,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#sync().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#gossiperStarting().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.InRestrictionWithValues#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceFlush().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectorFactories#doesAggregation().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#rowsInRange().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#deletionTime().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.PopulateVisitor#setPrevSeen(GroupInfo,GroupInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ClientRequestMetrics#release().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#getPassword().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#CacheableObject(T,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#getTableMetadata(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.GroupVisitor#seen(GroupInfo).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#maybeTakeFromPool(int,boolean).mjava,0,0,6,2,0,0.0,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#peek().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#skipTimestamp(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector.GCState#GCState(GarbageCollectorMXBean,boolean,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.ColumnDataReducer#ColumnDataReducer(int,int,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#fromMap(Map[String,String]).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#LazilyInitializedUnfilteredRowIterator(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#writeComplexColumn(ComplexColumnData,boolean,LivenessInfo,SerializationHeader,DataOutputPlus).mjava,0,0,5,5,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#length().mjava,0,0,4,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForCas().mjava,0,1,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getTargetExpression(List[RowFilter.Expression]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexSummarySize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CASClientRequestMetrics#release().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#cacheAllRows().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#handleCommitError(String,Throwable).mjava,0,0,8,2,0,0.11764705926179886,12,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#CustomExpression(CFMetaData,IndexMetadata,ByteBuffer).mjava,0,0,1,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#get(int).mjava,0,0,1,1,2,0.0,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#refill(Stack,MoreContentsHolder,int).mjava,0,0,2,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps#valueSpecOf(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#sizeOfComplexColumn(ComplexColumnData,boolean,LivenessInfo,SerializationHeader).mjava,0,0,5,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#parseArgs(String[]).mjava,0,0,76,1,11,0.021276595070958138,3145728,22,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#extensions(Map[String,ByteBuffer]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\InetAddressType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#CompactionParams(Class[#-extends-AbstractCompactionStrategy],Map[String,String],boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCrcCheckChance(double).mjava,0,0,9,1,0,0.0,1,0,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addType(UserType).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#mutateWithTriggers(Collection[#-extends-IMutation],ConsistencyLevel,boolean).mjava,0,0,9,3,2,0.0,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#toMultiColumnRestriction().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Rebuild#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#createInRelation(List[ColumnIdentifier.Raw],List[#-extends-Term.MultiColumnRaw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\ScalarFunctionSelector#reset().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#execute(QueryState,QueryOptions).mjava,0,0,6,2,3,0.4444444477558136,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DiscarderByKey#DiscarderByKey(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#isDigestQuery().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame#with(ByteBuf).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#renameIdentifier(ColumnIdentifier.Raw,ColumnIdentifier.Raw).mjava,0,0,7,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#isAssigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#isKeyCacheSetup().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#setSkipMetadata().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#stop().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setByte(long,byte).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setCounterCacheSavePeriodInSeconds(int).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#isNameValid(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#getSourceFrame().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#toThriftPreparedResult().mjava,0,1,9,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#name().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterKeyspaceStatement#checkAccess(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager.CleanupGCTransaction#start().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedByte().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#get(int).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addRangeTombstone(Slice).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupStrategy.Full#getScanner(SSTableReader,RateLimiter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#Directories(CFMetaData,DataDirectory[]).mjava,0,0,24,2,10,0.0882352963089943,54,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_getList(int,TypeToken[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#comment(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getSTCSBuckets(Collection[SSTableReader],SizeTieredCompactionStrategyOptions).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthSuccess#getToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#DropKeyspaceStatement(String,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#Chunk(Chunk).mjava,0,0,1,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#isEmpty().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\RepairRunner#isInterestedIn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.NativeRingCache#NativeRingCache(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#noCompression().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeGlobal(CounterId,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#KeyspaceMetadata(String,KeyspaceParams,Tables,Views,Types,Functions).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#encodeVInt(long,int).mjava,0,0,2,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#deserializeEvent(ByteBuf,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#withUpdatedTimestamp(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#Int32Type().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#unwrap().mjava,0,0,6,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#copy(long).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#sliceableUnfilteredIterator(ColumnFilter,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#setCacheCapacities(int,int,int).mjava,0,0,4,3,2,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#applyToMarker(RangeTombstoneMarker).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getExceptionCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getWindowsTimerInterval().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#columns().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#bytesReadForUnconsumedData().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Putter#Putter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_findByIndex(Object[],int).mjava,0,0,7,2,4,0.0714285746216774,18,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#reclaimer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimestampSerializer#toCQLLiteral(ByteBuffer,StringBuilder).mjava,0,0,6,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#process(String,ConsistencyLevel).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#SinglePartitionReadCommand(boolean,int,boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits,DecoratedKey,ClusteringIndexFilter).mjava,0,0,1,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DigestResolver#DigestResolver(Keyspace,ReadCommand,ConsistencyLevel,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#isMultiColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#toString(ClusteringComparator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizes(Collection[StreamSummary]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitAdjustmentTracker#UnitAdjustmentTracker(UnitInfo[Unit]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables.Builder#add(CFMetaData...).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#clearSizeEstimates(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#isContained(File,File).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RequestValidations#[T]_checkNull(T,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#allocate(int,OpOrder.Group).mjava,0,0,11,2,3,0.17391304671764374,18,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#deserialize(DataInput,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#none().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToLiveMember(MessageOut[GossipDigestSyn]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJobDesc#equals(Object).mjava,0,0,11,1,1,0.0,128,7,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addTriggerToSchemaMutation(CFMetaData,TriggerMetadata,long,Mutation).mjava,0,0,4,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getBool(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell#isExpiring().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#validateContext(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#clearSSTableReadMeter(String,String,int).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.IncomingMessageHandler#run().mjava,0,0,10,0,2,0.1428571492433548,3,2,17,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readString(ByteBuf).mjava,0,0,2,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(MessageOut,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getSizeMap(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTrickleFsync().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#resetTidying().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#filterHash(long[]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.Literal#testAssignment(String,ColumnSpecification).mjava,0,0,1,2,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\KeyCacheKey#unsharedHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionIterator#ValidationCompactionIterator(List[ISSTableScanner],ValidationCompactionController,int,CompactionMetrics).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#checkForWriterException().mjava,0,3,1,0,0,0.1111111119389534,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#hibernate(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree#min().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSynSerializer[GossipDigestSyn]#serializedSize(GossipDigestSyn,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#getPartitioner().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#syncInternal().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#close().mjava,0,0,3,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getPositionsForRanges(Collection[Range[Token]]).mjava,0,0,19,1,6,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#postReconciliationProcessing(PartitionIterator).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#count().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftResultsMerger.PartitionMerger#hasNext().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider.RowCacheSerializer#deserialize(DataInputPlus).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\jmx\JMXProgressSupport#progress(String,ProgressEvent).mjava,0,0,12,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering.Serializer#serialize(Clustering,int,List[AbstractType[#]]).mjava,0,0,3,3,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[K,V]_getMap(String,TypeToken[K],TypeToken[V]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#decodeTableParams(UntypedResultSet.Row).mjava,0,0,43,1,3,0.0357142873108387,256,8,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#compare(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,7,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#replayBatchlog().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsertJson#ParsedInsertJson(CFName,Attributes.Raw,Json.Raw,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#StaticParsedComparator(AbstractType[#],String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#get(int,int).mjava,0,3,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getTruncatedPosition(UUID).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#get().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#optionsToAssignments(Map[Option,Object]).mjava,0,0,11,1,0,0.0,9,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#onDown(Host).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getChildCount(Object[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#RebufferingInputStream(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,11,4,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#moving(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Debug#check().mjava,0,1,0,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#create(ColumnFamilyStore,String,long,long,int,SerializationHeader).mjava,0,0,2,6,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#root().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#trackNew(SSTable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#mark(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeUpdateViewMutation(KeyspaceMetadata,ViewDefinition,ViewDefinition,long).mjava,0,0,26,4,3,0.31578946113586426,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_slice(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,18,4,4,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#confirmReplication(InetAddress).mjava,0,0,3,1,0,0.30000001192092896,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#gcgs(Collection[Mutation]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#ClusteringIndexNamesFilter(NavigableSet[Clustering],boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(CFMetaData,int,DecoratedKey,ColumnFilter,ClusteringIndexFilter).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#QueryProcessor().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentViewWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#makeTerminal(Function,ByteBuffer,int).mjava,0,0,8,3,0,0.0,14,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#componentBounds(Bound,QueryOptions).mjava,0,0,6,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#columnsToRead().mjava,0,1,1,0,3,0.699999988079071,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#notifyUp(InetAddress).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#build(boolean,ByteBuffer...).mjava,0,0,9,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#BytesReadTracker(DataInput).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Raw#Raw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#isSuccessful().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#asAlteredTableParams(TableParams).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#process(PartitionIterator,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#NoSpamLogger(Logger,long,TimeUnit).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#typesMatch(List[AbstractType[#]],List[AbstractType[#]]).mjava,0,0,6,2,0,0.0,6,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#type().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBucketOffsets().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#migrateLegacyHints(UUID,UntypedResultSet,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#keyspace().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\SessionFailedMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#getMaxInterval().mjava,0,1,4,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#clearUnsafe().mjava,0,0,13,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#get(int,BufferType).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#indexFor(ClusteringPrefix,List[IndexInfo],ClusteringComparator,boolean,int).mjava,0,0,6,5,4,0.5909090638160706,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#getColumnDefs().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getRateLimiter().mjava,0,7,4,0,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getTotalUncompressedBytes(Iterable[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#getOrAdd(CFMetaData,Mutation).mjava,0,0,4,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateChecksum(CRC32,ByteBuffer).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Upgrader#upgrade(boolean).mjava,0,0,19,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#midpoint(Token,Token).mjava,0,0,15,2,4,0.2631579041481018,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists#Lists().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#release(Ref.State,Throwable).mjava,0,0,5,2,0,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedMarkerBodySize(RangeTombstoneMarker,SerializationHeader,long,int).mjava,0,0,9,4,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionValueIndex#getIndexedValue(ByteBuffer,Clustering,CellPath,ByteBuffer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#protectedResources().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneVerifier.Options#getCmdLineOptions().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#serializedSize(IntervalTree[C,D,I],int).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.MerkleTreesSerializer#serialize(MerkleTrees,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Literal#prepare(String,ColumnSpecification).mjava,0,0,12,2,7,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#StatsCollector(MetadataCollector).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#toString(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AbstractFunctionSelector#newFactory(Function,SelectorFactories).mjava,0,0,30,2,1,0.0555555559694767,12,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Substracter#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#Columns(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toLegacyCell(CFMetaData,Column,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#startNativeTransport().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#isKeyRange().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#prepareKeyspace(ClientState).mjava,0,0,5,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#fromString(String).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#updateTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#CqlRecordWriter(Configuration,Progressable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Serializer#serialize(CFMetaData,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#compressor().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#bound(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#setHeartBeatState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpoint(Token).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BooleanSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSegmentSize().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#getInstance(TypeParser).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces.Builder#add(KeyspaceMetadata...).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#getConfiguration(JobContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\TruncateException#TruncateException(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeInternal(MessageOut,int,long).mjava,0,0,6,3,0,0.2222222238779068,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#getFirstColumn().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removedNonlocal(UUID,long).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#readType(DataInputPlus).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\RegisterMessage#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RoleManagementStatement#checkAccess(ClientState).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#weightedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#forForwardPaging(ClusteringComparator,Clustering,boolean).mjava,0,0,2,3,3,0.0,5,3,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#computeNext().mjava,0,0,8,0,0,0.2666666805744171,5,3,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#addMerkleTrees(int,Collection[Range[Token]]).mjava,0,0,1,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#newCoalescingStrategy(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#open(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.BuffersIterator#computeNext().mjava,0,0,5,0,2,0.095238097012043,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#kindInt(AbstractBounds[#]).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftFilter#filter(UnfilteredPartitionIterator,int).mjava,0,0,12,2,2,0.27272728085517883,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#toString(long,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairResult#RepairResult(RepairJobDesc,List[SyncStat]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#isDeleted(Clustering,Cell).mjava,0,0,3,2,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Response#Response(Type).mjava,0,0,0,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#isBlockingSignal(WaitQueue.Signal).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetCompactionThroughput#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readNameAndValueList(ByteBuf,int).mjava,0,0,9,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FlushBufferTask#run().mjava,0,0,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#validatePartitionKey(DecoratedKey).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getTimeoutsPerHost().mjava,0,0,7,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#findSupportingVersion(CassandraVersion...).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#transformAndFilter(LivenessInfo,Deletion,Function[ColumnData,ColumnData]).mjava,0,0,6,3,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,int,long,int,Object).mjava,0,0,2,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#get(int).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#toString().mjava,0,1,5,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#mergeTombstoneHistogram(StreamingHistogram).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#store(Batch).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#runOnClose(Runnable).mjava,0,0,1,1,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner.BigIntegerToken#BigIntegerToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getAllDataFileLocations().mjava,0,0,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\LatencyMetrics#LatencyMetrics(MetricNameFactory,MetricNameFactory,String).mjava,0,0,10,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.AbstractIterator#AbstractIterator(Holder,Row,ColumnFilter,boolean).mjava,0,0,2,4,0,0.27272728085517883,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#LegacyRangeTombstoneList(LegacyBoundComparator,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#getOutput(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#depth(Object[]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#SetterByKey(ColumnDefinition,Term,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serialize(Hashable,DataOutputPlus,int).mjava,0,0,6,3,0,0.0,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#getStdDev().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#freeze().mjava,0,8,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#cloneWithNewSummarySamplingLevel(ColumnFamilyStore,int).mjava,0,0,19,2,6,0.17142857611179352,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onCreateFunction(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#prepare(String,ColumnDefinition).mjava,0,0,10,2,3,0.0,40,3,4,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#Chunk(ByteBuffer).mjava,0,0,5,1,0,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#forceNewerGenerationUnsafe().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RevokePermissionsStatement#RevokePermissionsStatement(Set[Permission],IResource,RoleName).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#groupSSTablesForAntiCompaction(Collection[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_iterator(Object[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#startStreamingFiles().mjava,0,2,7,0,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#unregisterFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#isWellFormed(Comparator[#],Object[],boolean,Object,Object).mjava,0,0,7,5,3,0.095238097012043,18,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxIntTracker#MinMaxIntTracker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskOptimizationStrategy().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#serializedValueSize(Object,int).mjava,0,0,25,2,5,0.02631578966975212,58,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#owns().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isAutoSnapshot().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropViewStatement#checkAccess(ClientState).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#isMultiCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Native#getType().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#getColumnsInCommons(Restriction).mjava,0,0,7,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier#addDisallowedMethodCall(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Kind#fromId(int).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#getStrategy(TokenMetadata,SimpleStrategy,InetAddress).mjava,0,0,1,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addAggregateToSchemaMutation(UDAggregate,long,Mutation).mjava,0,0,24,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getKeySamples(Range[Token]).mjava,0,0,10,1,2,0.0,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier.VerifyInfo#getCompactionInfo().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Literal#floatingPoint(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelSize(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#bits2words(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#subList(int,int).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getString(ByteBuffer).mjava,0,0,14,1,6,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterators.Log#applyToRow(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#descend().mjava,0,0,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#stop().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableCleanerThread#trigger().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendReply(MessageOut,int,InetAddress).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(int).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getOverlappingSSTables(SSTableSet,Iterable[SSTableReader]).mjava,0,0,18,2,5,0.3243243098258972,4,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#Range(T,T).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(Throwable,DiscreteAction[#]...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#asCQL3Type().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#SSTableLoader(File,Client,OutputHandler,int).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#createWriter(ColumnFamilyStore,long,long,SSTableFormat.Type).mjava,0,0,9,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamWriter#totalSize().mjava,0,1,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#assertAllRecycled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#equals(Object).mjava,0,0,5,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#maybeInitializeLocalState(int).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#encodeCredentialsForSasl(Map[String,String]).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#prepare(String,ColumnDefinition).mjava,0,0,6,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#withFormatType(SSTableFormat.Type).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#tables().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#create(ColumnFamilyStore,int,List[SSTableReader]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Validator#applyToRow(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#flushAndFsyncBlockingly(Iterable[UUID]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#deserializeForNativeProtocol(ByteBuffer,int).mjava,0,0,10,2,5,0.0,4,2,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#handleNotification(Notification,Object).mjava,0,0,41,2,17,0.145454540848732,577,11,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#wrapViewBatchResponseHandler(Mutation,ConsistencyLevel,ConsistencyLevel,List[InetAddress],AtomicLong,WriteType,BatchlogResponseHandler.BatchlogCleanup).mjava,0,0,14,7,8,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LocalDataResponse#build(UnfilteredPartitionIterator,ColumnFilter).mjava,0,0,3,2,0,0.09090909361839294,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#serialize(FileMessageHeader,DataOutputPlus,int).mjava,0,0,14,3,0,0.0476190485060215,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#serialize(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#isSystem().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\TreeResponse#TreeResponse(InetAddress,MerkleTrees).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#markAsShutdown(InetAddress).mjava,0,0,7,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#complete(ChannelProxy,int,long).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyValidatorAsClusteringComparator().mjava,0,8,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions.Builder#add(Function...).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#makeLimits().mjava,0,3,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.SimpleExpression#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#newSocket().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#openBound(RangeTombstone).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes#fieldSpecOf(ColumnSpecification,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#makeTokenString(Collection[Token]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#openDeletionTime(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#dataSize().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.MultiColumnRaw#getText().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTotal().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#deserializeStaticRow(DataInputPlus,SerializationHeader,SerializationHelper).mjava,0,0,8,3,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getColumnFamilies().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#replaceFlushed(Memtable,Collection[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#MmappedRegions(State,CompressionMetadata,long).mjava,0,0,2,3,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doVerb(MessageIn[GossipDigestSyn],int).mjava,0,0,27,2,7,3.545454502105713,96,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getWriteEndpoints(Token,String,Collection[InetAddress]).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.NeverSpeculatingReadExecutor#maybeTryAdditionalReplicas().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DiscarderByKey#execute(DecoratedKey,UpdateParameters).mjava,0,0,6,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#nextColumn(ColumnDefinition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getListenAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor.AlwaysSpeculatingReadExecutor#AlwaysSpeculatingReadExecutor(Keyspace,ColumnFamilyStore,ReadCommand,ConsistencyLevel,List[InetAddress]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int,ClientEncryptionOptions).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#DecoratedKey(Token).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Type#Type(int,Direction,Codec[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#clusteringIndexFilter().mjava,0,29,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Decoder#fail().mjava,0,2,2,0,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#setCounterCacheCapacityInMB(long).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#serializeForMessaging(SerializationHeader,ColumnFilter,DataOutputPlus,boolean).mjava,0,0,7,4,0,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#midpoint(Token,Token).mjava,0,0,7,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getBoolean(String,Boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getVarint(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#maybeAddEntry(DecoratedKey,long,long,long).mjava,0,0,11,4,1,0.0555555559694767,4,2,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#enableAutoCompaction(String,String...).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#getRegion().mjava,0,1,9,0,1,0.25,13,5,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.SpecificOptions#SpecificOptions(int,PagingState,ConsistencyLevel,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#close().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#serializeValues(Map[K,V]).mjava,0,0,12,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#getAllSessionInfo().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeBootstrapTokens(Collection[Token]).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#protectedResources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Value#get(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#fromString(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint#create(Mutation,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#fireStreamEvent(StreamEvent).mjava,0,0,1,1,0,0.25,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#getName().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#deserialize(DataInputPlus).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getBooleanSetting(String,Configuration).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#slice(Dir).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator.Purger#onNewPartition(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#openChannel(File).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#executeBlocking(Callable[#]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#DeletionTime(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PaxosState#PaxosState(DecoratedKey,CFMetaData).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#get(RowCacheKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Bound#isSatisfiedByValue(ByteBuffer,Cell,AbstractType[#],Operator).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#invalidateKeyCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBackgroundCompactionTaskSubmitter().mjava,0,1,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#serializedSize(CompressionInfo,int).mjava,0,0,4,2,2,0.20000000298023224,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithValues#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#filter(UnfilteredRowIterator,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.FileDigestValidator#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.Literal#equals(Object).mjava,0,0,1,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\MultiPartitionPager.PagersIterator#setCounter(DataLimits.Counter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#invalidateCachedRings().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TriggerMetadata#TriggerMetadata(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\LimitedLocalNodeFirstLocalBalancingPolicy#distance(Host).mjava,0,0,1,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyDropFunction(UDFunction).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#none().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamWriter#CompressedStreamWriter(SSTableReader,Collection[Pair[Long,Long]],CompressionInfo,StreamSession).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#selectsKey(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#meanRate().mjava,0,0,3,0,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\LazilyInitializedUnfilteredRowIterator#partitionKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#stopInPartition().mjava,0,0,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#run().mjava,0,0,17,0,4,0.13333334028720856,13,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#deleteAllHints().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#HintsBufferPool(int,FlushCallback).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#isAlive().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidAsBytes().mjava,0,2,14,0,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Appender#execute(DecoratedKey,UpdateParameters).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DigestResponse#digest(CFMetaData,ReadCommand).mjava,0,0,0,2,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#start().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBufferPool#switchCurrentBuffer(HintsBuffer).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#begin(String,Map[String,String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#maybeAddOrUpdateKeyspace(KeyspaceMetadata).mjava,0,0,6,1,2,0.5714285969734192,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReusablePartitionData#ReusablePartitionData(CFMetaData,DecoratedKey,PartitionColumns,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#fetchRows(List[SinglePartitionReadCommand],ConsistencyLevel).mjava,0,0,11,2,3,0.0,96,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AuthenticationStatement#getBoundTerms().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator.CountingDigest#engineDigest().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#validate(ByteBuffer).mjava,0,0,12,1,7,0.0,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata.CompactionMetadataSerializer#serialize(Version,CompactionMetadata,DataOutputPlus).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#bufferSize(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\TimeSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#order(ByteOrder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#clustering(Object...).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#mutateWithTracing(ByteBuffer,String,int,int).mjava,0,0,6,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getNativeTransportMaxConcurrentConnectionsPerIp().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#isEmpty().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#login(Map[String,String]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\PreparedQueryNotFoundException#PreparedQueryNotFoundException(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.GlobalPool#sizeInBytes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#isReversedType().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeCommandIterator#updateConcurrencyFactor().mjava,0,1,6,0,2,0.25,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addAll(Iterator[RowHash]).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.IsNotNullRestriction#IsNotNullRestriction(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#validateMagic(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#stats().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#handleStreamEvent(StreamEvent).mjava,0,0,1,1,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#globalCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#validate().mjava,0,3,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchTrigger#HintsDispatchTrigger(HintsCatalog,HintsWriteExecutor,HintsDispatchExecutor,AtomicBoolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#appendEndpointState(StringBuilder,EndpointState).mjava,0,0,28,2,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ByteSerializer#toString(Byte).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#finalizeLength(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#stopSpinning().mjava,0,1,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#asMap().mjava,0,1,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getFailureDetectorPhilValues().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#getVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isThriftCompatible().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#listIterator(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.SimpleBound#appliesTo(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#hasOption(Option).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getOtcCoalescingStrategy().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#startThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneUpgrader.Options#getCmdLineOptions().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams.Option#toString().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#toJSONString(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#copy(IPartitioner).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#IndexState(Reader,ClusteringComparator,RowIndexEntry,boolean).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.SetterByKey#execute(DecoratedKey,UpdateParameters).mjava,0,0,9,2,3,0.04545454680919647,20,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getRestoreDirectories().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#headSet(V,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#isUnlimited().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryBuilder#refreshReadableBoundary().mjava,0,2,10,0,2,0.30000001192092896,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#DecimalType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool#getOwnershipByDc(NodeProbe,boolean,Map[String,String],Map[InetAddress,Float]).mjava,0,0,11,4,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\RestorableMeter#mark(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#CommitLog(String,CommitLogArchiver).mjava,0,0,5,2,1,0.0714285746216774,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#forceKeyspaceCompaction(boolean,String,String...).mjava,0,0,2,3,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#toArray(Object[],int,int,Object[],int).mjava,0,0,9,5,6,0.0416666679084301,8,4,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#isContainsKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#canSkipValue(CellPath).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTypeStatement#announceMigration(boolean).mjava,0,0,5,1,2,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceCleanup(PrintStream,String,String...).mjava,0,0,2,3,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices#Slices().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#getType().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.Literal#getText().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator#createReader(RowIndexEntry,FileDataInput,boolean,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionsCache#initCache(LoadingCache[Pair[AuthenticatedUser,IResource],Set[Permission]]).mjava,0,0,16,1,2,0.0,8,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#boundsAsClustering(Bound,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#compareAtIndex(long[],long[],int).mjava,0,0,0,3,4,0.1428571492433548,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#newContainsRestriction(CFMetaData,VariableSpecifications,boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#validate().mjava,0,4,36,0,4,0.0,128,7,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#executeLoggedBatch(List[CQLStatement]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getIndexScanPosition(PartitionPosition).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#add(ByteBuffer,ColumnParent,CounterColumn,ConsistencyLevel).mjava,0,0,33,4,10,0.03999999910593033,8,3,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#addRow(Object...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#validate(ByteBuffer).mjava,0,0,5,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#setupOnline(Iterable[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#open(Descriptor,CFMetaData).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\TokenSerializer#deserialize(IPartitioner,DataInput).mjava,0,0,7,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#Custom(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.GlobalPool#recycle(Chunk).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isGossipOnlyMember(InetAddress).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.CoalescingStrategy#debugGap(long).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#createCompressor(ParameterizedClass).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#TimestampType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir.HistogramSnapshot#HistogramSnapshot(EstimatedHistogram).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views.Builder#add(Iterable[ViewDefinition]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PermissionDetails#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#clear().mjava,0,1,6,0,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#inDirectory(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ElementDeletion#affectedColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\SessionInfoCompositeData#[T]_toArrayOfCompositeData(Collection[T],Function[T,CompositeData]).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.MovingAverageCoalescingStrategy#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getKeyEnd(Object[]).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSSLCipherSuites(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalTokens(Multimap[InetAddress,Token]).mjava,0,0,17,1,3,0.02857142873108387,12,4,2,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#holder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Expression#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.ColumnsConditions#addConditions(Collection[ColumnCondition],QueryOptions).mjava,0,0,4,2,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSeverity().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoggingLevels().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Assassinate#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#onlyOne().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutationVerbHandler#forwardToLocalNodes(Mutation,MessagingService.Verb,byte[],InetAddress).mjava,0,0,8,4,4,0.1428571492433548,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#getAndResetStats().mjava,0,0,4,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#withoutPurgeableTombstones(UnfilteredPartitionIterator,ColumnFamilyStore).mjava,0,0,7,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\JVMStabilityInspector.Killer#killCurrentJVM(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#perPartitionCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#originals().mjava,0,40,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLength().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder#create(ClusteringComparator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundaryMarker#toString(CFMetaData).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#deserializeMarkerBody(DataInputPlus,SerializationHeader,RangeTombstone.Bound).mjava,0,0,7,3,0,0.1818181872367859,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\CassandraException#CassandraException(ExceptionCode,String,Throwable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getHintsInProgressFor(InetAddress).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getClusteringColumnsBounds(Bound,QueryOptions).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#serialize(ClusteringPrefix,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,7,4,0,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,5,3,5,0.03846153989434242,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#defaultPartitionSizeHistogram().mjava,0,2,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsService#excise(UUID).mjava,0,0,8,1,3,0.2222222238779068,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ByteBuffer,Iterable[ByteBuffer]).mjava,0,0,20,3,4,0.040816325694322586,252,10,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractClusteringPrefix#AbstractClusteringPrefix(Kind,ByteBuffer[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#updateAllTimestamp(long).mjava,0,0,7,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addDroppedColumnToSchemaMutation(CFMetaData,CFMetaData.DroppedColumn,long,Mutation).mjava,0,0,8,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#waitForModifications().mjava,0,3,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#DataRange(AbstractBounds[PartitionPosition],ClusteringIndexFilter).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#offHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#renameIdentifier(ColumnIdentifier.Raw,ColumnIdentifier.Raw).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#makeClusteringTypes(CFMetaData).mjava,0,0,3,1,2,0.7142857313156128,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#estimateTotalResults(ColumnFamilyStore).mjava,0,0,4,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getTimeout().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxIntTracker#max().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onUpdateColumnFamily(String,String,boolean).mjava,0,0,2,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#syncWriteToBatchlog(Collection[Mutation],BatchlogEndpoints,UUID).mjava,0,0,10,3,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#removeUnreadableSSTables(File).mjava,0,0,4,1,0,0.0,1,0,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#TreeRange(MerkleTree,Token,Token,byte,Hashable).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CallbackInfo#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#size().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#getStatement(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Serializer#serialize(Slice,DataOutputPlus,int,List[AbstractType[#]]).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#functionFromCql(String,String,List[CQL3Type.Raw]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#isRpcReady().mjava,0,2,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#toString(ClusteringComparator).mjava,0,0,11,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#awaitResults().mjava,0,2,11,0,4,0.05263157933950424,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithShortLength(byte[],DataOutput).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.AbstractBean#AbstractBean(ObjectName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#scrub(boolean,boolean,String,String...).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Addition#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildCasResultSet(RowIterator,QueryOptions).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.Builder#addPrimaryKeyLivenessInfo(LivenessInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCaches().mjava,0,1,4,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#getLastColumn().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader#StreamReader(FileMessageHeader,StreamSession).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createWithFixedPoolSize(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#create(UUID,File,List[HintsDescriptor]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#BytesType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\UnavailableException#UnavailableException(ConsistencyLevel,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#BigVersion(String).mjava,0,0,14,1,1,0.0833333358168602,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[K]_merge(Object[],Object[],Comparator[#-super-K],UpdateFunction[K,K]).mjava,0,0,3,4,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator.SubAllocator#releaseAll().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#newInstance(Bound,boolean,Term).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#position(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onCreateAggregate(String,String,List[AbstractType[#]]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#set(long).mjava,0,0,2,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputCompressionChunkLength(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FlushBufferPoolTask#run().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(RandomAccessFile).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\BytesConversionFcts#makeFromBlobFunction(AbstractType[#]).mjava,0,0,6,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#isAfter(Group).mjava,0,0,0,1,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IndexName#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.SimpleExpression#SimpleExpression(ColumnDefinition,Operator,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#fsyncDirectory().mjava,0,1,4,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#maybeComplete().mjava,0,1,7,0,1,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#toString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions#updateState(long).mjava,0,0,3,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy.Target#nextTarget(int).mjava,0,0,0,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#moveElements(int).mjava,0,0,4,1,0,0.2222222238779068,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getSchemaVersions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#rawBuilder(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hasLargeAddressSpace().mjava,0,1,4,0,2,0.07692307978868484,6,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#keyIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#processArguments(String[]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#exec(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#waitingFor(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\Int32Serializer#toString(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector.GCState#keys(GarbageCollectionNotificationInfo).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(ExceptionCode,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#release().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#isReversed(CFMetaData).mjava,0,0,16,1,6,0.06451612710952759,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspacePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer.ThriftCASRequest#expectedToUnfilteredRowIterator().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getTextMap(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#RangeTombstoneBoundMarker(RangeTombstone.Bound,DeletionTime).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#withNowInSeconds(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#error(Object...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#extractLastComponent(ByteBuffer).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\WindowsFailedSnapshotTracker#handleFailedSnapshot(File).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.StatsCollector#update(EncodingStats).mjava,0,0,3,1,2,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#partitionKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream(Set[InetAddress],StreamEventHandler...).mjava,0,0,20,2,4,0.07692307978868484,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#generate().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\EmptyType#EmptyType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogService#maybeWaitForSync(CommitLogSegment.Allocation).mjava,0,0,10,1,2,0.0625,4,3,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#readOne(SinglePartitionReadCommand,ConsistencyLevel,ClientState).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator.Region#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#fromString(String).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyUpdateColumnFamily(CFMetaData,boolean).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#newCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#AbstractBTreePartition(CFMetaData,DecoratedKey).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#ascend().mjava,0,3,8,0,2,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractUnfilteredRowIterator#metadata().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#mergedRows().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\FieldSelector#FieldSelector(UserType,int,Selector).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ColumnToCollectionType#getInstance(Map[ByteBuffer,CollectionType]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableOfflineRelevel#main(String[]).mjava,0,0,28,1,10,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.ResultMetadata#ResultMetadata(List[ColumnSpecification]).mjava,0,0,5,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager#getStage(Stage).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#simpleCondition(Term.Raw,Operator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\triggers\TriggerExecutor#TriggerExecutor().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setTokens(Collection[Token]).mjava,0,0,8,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#seek(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#applyToRow(Row).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#asCell().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#build().mjava,0,17,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getTruncationRecord(UUID).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#highlightToken(String,Token).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#handshakeVersion(DataInputStream).mjava,0,0,13,1,3,0.027027027681469917,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DecoratedKey#getPartitioner().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,3,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#response(MessageIn[ReadResponse]).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#onEmptyPartitionPostPurge(DecoratedKey).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell#isLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint.Serializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators#noRowsIterator(CFMetaData,DecoratedKey,Row,DeletionTime,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getInitialTarget(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection#ColumnSubselection(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#includes(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#validateOptions(Map[String,String]).mjava,0,0,21,1,7,0.0,81,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rack(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#evictFromMembership(InetAddress).mjava,0,0,6,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKey(CFMetaData,ByteBuffer).mjava,0,0,6,2,0,0.05000000074505806,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.SSTableLister#SSTableLister(OnTxnErr).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceFlush(ReplayPosition).mjava,0,0,8,1,2,0.380952388048172,2,1,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#markDead(InetAddress,EndpointState).mjava,0,0,10,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#droppedColumns(Map[ByteBuffer,DroppedColumn]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getPath().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction#WithFunction(FunctionName,List[Selectable]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSyn#GossipDigestSyn(String,String,List[GossipDigest]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#skipMetadata().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getMinimumToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#readColumnsWithType(DataInputPlus,Map[ByteBuffer,AbstractType[#]]).mjava,0,0,4,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#fromTimeInMillis(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getInitialValue().mjava,0,1,3,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber.ScrubInfo#ScrubInfo(RandomAccessReader,SSTableReader).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#resetCollection(String).mjava,0,0,8,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#prepareToCommit().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#higher(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#isSlice().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#ref().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#compress(ByteBuffer,ByteBuffer).mjava,0,0,7,2,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceMetadata#getTableOrViewNullable(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeKeepAlive(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage#RepairMessage(Type,RepairJobDesc).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits#forShortReadRetry(int).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\FunctionResource#exists().mjava,0,0,5,0,0,0.0,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#containsBindMarker().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#flushBufferPool(HintsBufferPool).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#addRangeForEndpoint(Range[Token],InetAddress).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#timer(MetricName,MetricName).mjava,0,9,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker.Work#isStop().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#split(T).mjava,0,0,3,1,2,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#asMap().mjava,0,2,7,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#needFiltering().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#interrupt().mjava,0,0,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#onSuccess(StreamState).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#isIncrementalBackupsEnabled().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#WorkerProcess(TTransport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#isTimedOut(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NativeSSTableLoaderClient#setTableMetadata(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager.NormalPager#fetchPage(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validateForFrozenCollection(IndexTarget).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#isEmpty().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\CompactionMetadata#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfStringToStringListMap(Map[String,List[String]]).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#removeAllMembers(String).mjava,0,0,11,1,1,0.1875,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#listSnapshots().mjava,0,2,8,0,3,0.0,4,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#serialize(StreamingHistogram,DataOutputPlus).mjava,0,0,9,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#clear().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputRpcPort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkLength().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#applyOne(Unfiltered,Transformation).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction.UDFClassLoader#loadClass(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#updateForRow(PeekingIterator[PartitionUpdate.CounterMark],Row,ColumnFamilyStore).mjava,0,0,24,3,3,0.05000000074505806,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#CompressedSequentialWriter(File,String,CompressionParams,MetadataCollector).mjava,0,0,10,4,0,2.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.Raw#Raw(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isSlice().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SimpleSelector#SimpleSelector(String,int,AbstractType[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputPlus#writeUnsignedVInt(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_transformAndFilter(Object[],FiltrationTracker[V]).mjava,0,0,6,2,7,0.0476190485060215,7,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#getScanner(Collection[Range[Token]],RateLimiter).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#deserializeForNativeProtocol(ByteBuffer,int).mjava,0,0,7,2,4,0.0,4,2,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#iterator().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#compile(String,String,String).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBaseRowIterator#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#prepare().mjava,0,0,7,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#SimpleSSTableMultiWriter(SSTableWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\StoppingTransformation#onClose().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#modifyRolePermissions(Set[Permission],IResource,RoleResource,String).mjava,0,0,7,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThriftCellsPerRow(CachingParams).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message.Dispatcher.Flusher#start().mjava,0,1,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#makeRecord(Type,SSTable).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.Set#setTombstonedExisting().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#WrappingUnfilteredRowIterator(UnfilteredRowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getAllEndpointStates().mjava,0,0,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTask#StreamTask(StreamSession,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool#printHistory(String...).mjava,0,0,11,1,2,0.1428571492433548,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getToken(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#simple(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#shutdown().mjava,0,1,4,0,0,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#KeyIterator(Descriptor,CFMetaData).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Version#execute(NodeProbe).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound#copy(AbstractAllocator).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getFloat(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#set(TraceState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\keys\KeysSearcher#filterIfStale(UnfilteredRowIterator,Row,ByteBuffer,OpOrder.Group,boolean,int).mjava,0,0,30,6,4,0.1794871836900711,3,3,22,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexBuilder#SecondaryIndexBuilder(ColumnFamilyStore,Set[Index],ReducingKeyIterator).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#ChecksumValidator(Descriptor).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#reconnect(InetAddress,VersionedValue).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableFormat.Type#validate(String).mjava,0,0,2,1,0,0.10000000149011612,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getMinLocalDeletionTime().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#delete(Descriptor,Set[Component]).mjava,0,0,11,2,0,0.0714285746216774,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\IndexTarget.Raw#fullCollection(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#CompressedInputStream(InputStream,CompressionInfo,ChecksumType,Supplier[Double]).mjava,0,0,4,4,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeValue(byte[],ByteBuf).mjava,0,0,3,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#getTotalNumberOfFiles().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getDatacenter(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setTableAlias(Configuration,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\JMXConnection[AbstractJmxClient]#getMbeanServerConn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Prepared#Prepared(MD5Digest,int,ResultSet.PreparedMetadata,ResultSet.ResultMetadata).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\PrepareMessage.PrepareMessageSerializer#deserialize(DataInputPlus,int).mjava,0,0,11,2,8,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Mx4jTool#getAddress().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#recycleSegment(File).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#conditionColumns().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#nextPageReadCommand(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#applicablePermissions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getApproximateKeyCount(Iterable[SSTableReader]).mjava,0,0,11,1,5,0.06122449040412903,18,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#cells().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#register().mjava,0,1,1,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.ChecksumValidator#ChecksumValidator(Checksum,RandomAccessReader,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#clusteringTypes().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.IdentityCollection#add(Ref[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\BlacklistedDirectories#maybeMarkUnreadable(File).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serialize(EstimatedHistogram,DataOutputPlus).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#release(Iterable[#-extends-Ref[#]]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#makeColumnFilter(CFMetaData,ColumnParent,SliceRange).mjava,0,0,18,3,6,0.09090909361839294,5,3,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getCompressedBuilder(CompressedSequentialWriter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputStreamPlus#DataOutputStreamPlus().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter#afterAppend(DecoratedKey,long,RowIndexEntry).mjava,0,0,5,3,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#create(Functions,FunctionName,List[AbstractType[#]],AbstractType[#],FunctionName,FunctionName,AbstractType[#],ByteBuffer).mjava,0,0,6,8,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getSavedTokens().mjava,0,6,9,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset(FileMark).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#markedForDeleteAt().mjava,0,45,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ConnectionMetrics#release().mjava,0,2,20,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Initializer#initChannel(Channel).mjava,0,0,12,1,1,0.1666666716337204,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#initialize().mjava,0,1,28,0,5,0.07999999821186066,8,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#findHelper(Hashable,Range[Token],Range[Token]).mjava,0,0,7,3,3,0.31578946113586426,24,5,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#getStrategy(TokenMetadata,NetworkTopologyStrategy,IEndpointSnitch,InetAddress).mjava,0,0,12,4,4,0.01923076994717121,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#hashCode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.TransactionalProxy#doPostCleanup(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\Util#Util().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getInetAddress(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setGossipTokens(Collection[Token]).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#describeRing(String,boolean).mjava,0,0,29,2,10,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLine().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#addSavedEndpoint(InetAddress).mjava,0,0,14,1,1,0.04545454680919647,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IndexName#getCfName().mjava,0,2,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#makeCasRequest(QueryState,QueryOptions).mjava,0,0,17,2,6,0.05882352963089943,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#setMaximumValidatorThreads(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics.DifferencingCounter#difference().mjava,0,1,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\QueryPagers#countPaged(CFMetaData,DecoratedKey,ColumnFilter,ClusteringIndexFilter,DataLimits,ConsistencyLevel,ClientState,int,int,boolean).mjava,0,0,7,10,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#executeWithConditions(BatchQueryOptions,QueryState).mjava,0,0,7,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#metadata().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#getSessionId().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ExecuteMessage#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#addTree(MerkleTree).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifyTruncated(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\GCInspector#register().mjava,0,1,3,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService#PendingRangeCalculatorService().mjava,0,0,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#getRestrictions(Collection[ColumnDefinition]).mjava,0,0,2,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#released(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#getLogin().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw#canBeNonFrozen().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncRequest.SyncRequestSerializer#deserialize(DataInputPlus,int).mjava,0,0,8,2,6,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeScalarFunction#isCalledOnNullInput().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse#ReadResponse(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#fromMap(Map[String,String]).mjava,0,0,9,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#hasAcceptableFileLimits().mjava,0,1,3,0,1,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.RemoteDataResponse#RemoteDataResponse(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#storeKeyspaceInNewSchemaTables(Keyspace).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReadRpcTimeout().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir#update(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#fromJSONObject(Object).mjava,0,0,19,1,3,0.0,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedRandomAccessReader#reBufferStandard().mjava,0,0,12,0,3,0.043478261679410934,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.CounterMark#column().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#setReplaced().mjava,0,1,0,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#toString(Integer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#CassandraVersion(String).mjava,0,0,16,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSSLKeystorePassword(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BackgroundActivityMonitor#incrCompactionSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#json(Object).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getClientTransportFactory(Configuration).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#setMode(Mode,String,boolean).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getThreadPoolMetric(Stage,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCoreValidationThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onInitializationComplete().mjava,0,1,8,0,1,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeValueList(List[ByteBuffer],ByteBuf).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#StorageProxy().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionPosition.RowPositionSerializer#deserialize(DataInput,IPartitioner,int).mjava,0,0,7,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection.SimpleSelection#SimpleSelection(CFMetaData,List[ColumnDefinition],boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#start(ListeningExecutorService).mjava,0,0,39,1,4,0.09615384787321091,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPrimaryRangesFor(Collection[Token]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#inOrderInclusionTester().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerConnection#ServerConnection(Channel,int,Connection.Tracker).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#escape(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#BiMultiValMap(BiMultiValMap[K,V]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.CustomConstructor#createDefaultSet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTracetypeRepairTTL().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportMaxThreads().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Prepend#toString(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#offline(OperationType,SSTableReader).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.StatusChange#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader#size().mjava,0,4,0,0,1,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#serializeAsLegacyPartition(UnfilteredRowIterator,DataOutputPlus,int).mjava,0,0,32,3,2,0.05128205195069313,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithColumnSpecifications#hasColumnSpecifications().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#isObsolete(SSTableReader).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeAuthProvider(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#convict(InetAddress,double).mjava,0,0,8,2,1,0.3636363744735718,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTriggerStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#extractValues(ClusteringPrefix).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\EncodedHintMessage.Serializer#deserialize(DataInputPlus,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#getLatestCell().mjava,0,0,1,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#getTotalNumberOfFiles().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type#asCQLLiteral(ByteBuffer,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeInternalWithoutCondition(QueryState,QueryOptions).mjava,0,0,4,2,0,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#migrate().mjava,0,1,10,0,5,0.05263157933950424,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#bufferType(BufferType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getReadMeter().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#hasComplexColumns().mjava,0,0,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#getCompactionAwareWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader]).mjava,0,0,1,4,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService#blockUntilFinished().mjava,0,3,2,0,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateFunctionStatement#changeEvent().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FrozenType#toJSONString(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#compareTo(Object,long,int,Object,long,int).mjava,0,0,9,6,6,0.21739129722118378,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getServerSockets(InetAddress).mjava,0,0,23,1,4,0.016393441706895828,10,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#isClose(boolean).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#isHeadFilter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#hashpw(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getAvailableRanges(String,IPartitioner).mjava,0,0,6,2,4,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\KeyCacheKey#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addSSTables(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\PagingState.RowMark#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#switchMemtable(boolean).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectNoSlices#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serializedSize(Truncation,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#filter(SliceableUnfilteredRowIterator).mjava,0,0,10,1,2,0.05128205195069313,24,5,23,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#columns().mjava,0,10,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#uncompress(ByteBuffer,ByteBuffer).mjava,0,0,7,2,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeBuilder#[C,K-extends-C,V-extends-C]_build(Iterable[K],UpdateFunction[K,V],int).mjava,0,0,6,3,2,0.1538461595773697,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewBuilder#buildKey(DecoratedKey).mjava,0,0,16,1,6,0.0,10,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getRandomToken().mjava,0,0,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor.UncomplainingRunnable#run().mjava,0,0,3,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.AtomIterator#peek().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNativeTransportPort().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#newSince(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_maxLeft(Boundary[T],T,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#isSupportedBy(Index).mjava,0,0,6,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\UnrecognizedEntityException#UnrecognizedEntityException(ColumnIdentifier,Relation).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setIncrementalBackupsEnabled(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction#LifecycleTransaction(Tracker,OperationType,Iterable[SSTableReader]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#compareIdTo(ContextState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#maxIndexInterval(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Lists.PrecisionTime#PrecisionTime(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#MutableDeletionInfo(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#execute(ConsistencyLevel,ClientState).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokensInLocalDC().mjava,0,1,5,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskAccessMode().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\GossipingPropertyFileSnitch#reloadGossiperState().mjava,0,2,3,0,1,0.10000000149011612,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#appendQuerySnippet(Parser,StringBuilder).mjava,0,0,10,2,6,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#addSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#consumingHintsIterator(UUID).mjava,0,0,9,1,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#bytesOnDisk().mjava,0,5,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\TokenAllocation#create(TokenMetadata,StrategyAdapter).mjava,0,0,7,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#maxTimestamp().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AsymmetricOrdering#binarySearchAsymmetric(List[#-extends-T1],T2,Op).mjava,0,0,5,3,5,0.1538461595773697,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#sendInitMessage(Socket,boolean).mjava,0,0,10,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Connection#getTracker().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#BTreeRange(Object[],Comparator[#-super-V]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#logRowSizePerLeaf(Logger).mjava,0,0,3,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,6,3,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CFName#setColumnFamily(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\HeartBeatState#updateHeartBeat().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.PostFlush#PostFlush(boolean,OpOrder.Barrier,ReplayPosition).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#and(OpenBitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.DisabledCoalescingStrategy#DisabledCoalescingStrategy(int,Parker,Logger,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#applyToRow(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FromJsonFct#getInstance(AbstractType[#]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_update(Object[],Comparator[C],Collection[K],UpdateFunction[K,V]).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns.Serializer#serialize(Columns,DataOutputPlus).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#addInitialSSTables(Iterable[SSTableReader]).mjava,0,0,8,1,0,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#getAllStreamSessions().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateIndexStatement#validateTargetsForMultiColumnIndex(List[IndexTarget]).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CounterCells#hasLegacyShards(Cell).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get75thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#addRestriction(Restriction).mjava,0,0,5,1,0,0.0,4,2,5,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#getCounter(TaskInputOutputContext,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.Builder#limiter(RateLimiter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ConstructorVisitor#visitInsn(int).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\SingletonUnfilteredPartitionIterator#SingletonUnfilteredPartitionIterator(UnfilteredRowIterator,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#update(LivenessInfo).mjava,0,0,8,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#newEQRestriction(CFMetaData,VariableSpecifications).mjava,0,0,12,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#upgradeSSTables(PrintStream,String,boolean,String...).mjava,0,0,2,4,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTableTimestamp(String,String).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.ColumnDeletion#ColumnDeletion(ColumnIdentifier.Raw).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy.Target#compareToTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serialize(Truncation,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#getUpdateTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#switchWriter(SSTableWriter).mjava,0,0,11,1,1,0.0416666679084301,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#[T]_get(String,Class[T]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#toString(boolean).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#getAllLocalAddresses().mjava,0,1,6,0,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#write(int,int).mjava,0,0,30,2,5,0.09090909361839294,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLeavingNodes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#state(State).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#sortedBuilder().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#PrimaryKeyRestrictionSet(PrimaryKeyRestrictionSet,Restriction).mjava,0,0,20,2,2,0.0,24,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#exists().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getCompactingAndNonCompactingSSTables().mjava,0,1,14,0,5,0.0,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#run().mjava,0,0,6,0,0,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#addCell(LegacyCell).mjava,0,0,18,1,3,0.11363636702299118,16,10,8,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#updateRegions(ChannelProxy,long).mjava,0,0,5,2,1,0.0,6,3,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.IntervalNode#searchInternal(Interval[C,D],List[D]).mjava,0,0,19,2,2,0.06451612710952759,18,10,25,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#init(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#truncationRecordFromBlob(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits.ThriftCounter#isDone().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Literal#validateAssignableTo(String,ColumnSpecification).mjava,0,0,12,2,2,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.FlushLargestColumnFamily#run().mjava,0,0,36,0,13,0.12820513546466827,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#isDone().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RolesCache#setValidity(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.ElementAccessBound#getCollectionElementValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier.ColumnIdentifierValue#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#UnbufferedDataOutputStreamPlus(WritableByteChannel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\ProposeCallback#response(MessageIn[Boolean]).mjava,0,0,8,1,0,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#CreateAggregateStatement(FunctionName,List[CQL3Type.Raw],String,CQL3Type.Raw,String,Term.Raw,boolean,boolean).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\TimeFcts#all().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#deflate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#partitionKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentTruePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\RetryMessage#RetryMessage(UUID,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSlicePredicate(Configuration,SlicePredicate).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ReporterWrapper#getCounter(Enum[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LifecycleTransaction.State#isEmpty().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.Serializer#thriftFlag(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#apply(UntypedResultSet.Row,long).mjava,0,0,17,2,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.CurrentDeserializer#hasNext().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#stateArguments(AbstractType[#],List[AbstractType[#]]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getHotnessMap(Collection[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\DataResource#table(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getRangesForEndpoint(String,InetAddress).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#hasNewFileName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SpeculativeRetryParam#toString().mjava,0,2,4,0,0,0.09090909361839294,7,1,7,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Counter#applyToPartition(BaseRowIterator[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#format(T,AbstractType[#]).mjava,0,0,3,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#moveOne(boolean).mjava,0,0,9,1,2,0.2222222238779068,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\SerializingCache#deserialize(RefCountedMemory).mjava,0,0,2,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serialize(Unfiltered,SerializationHeader,DataOutputPlus,long,int).mjava,0,0,3,5,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.Addition#prepare(String,ColumnDefinition).mjava,0,0,6,2,1,0.0,35,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isDense().mjava,0,23,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfStringList(List[String]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#writeSyncMarker(ByteBuffer,int,int,int).mjava,0,0,6,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#contains(T).mjava,0,0,4,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#requestRanges(InetAddress,InetAddress,String,Collection[Range[Token]]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer.AlwaysReplayFilter#includes(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#execute(Pager,QueryOptions,int,int).mjava,0,0,9,4,1,0.20000000298023224,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.ThriftLimits#hasEnoughLiveData(CachedPartition,int).mjava,0,0,10,2,1,0.5,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnknownColumnFamilyException#UnknownColumnFamilyException(String,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#toString().mjava,0,0,6,0,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSSLTruststorePath(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\EncodedHintMessage.Serializer#serialize(EncodedHintMessage,DataOutputPlus,int).mjava,0,0,4,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#deletes(LivenessInfo).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData.Builder#addComplexDeletion(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#grow(int,int).mjava,0,1,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.RangeSliceSerializer#serializedSize(ReadCommand,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#compareForCQL(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintResponse.Serializer#serializedSize(HintResponse,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.Serializer#serializedSize(ReadResponse,int).mjava,0,0,14,2,5,0.09090909361839294,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultList#FromResultList(List[Map[String,ByteBuffer]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CQLFilter#CQLFilter(List[Expression]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#putAll(Map[#-extends-K,#-extends-V]).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSyn]#serialize(List[GossipDigest],DataOutputPlus,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteRecursiveOnExit(File).mjava,0,0,5,1,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#attachSocket(InetAddress,int,Socket,boolean,int).mjava,0,0,4,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#register(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintMessage#HintMessage(UUID,Hint).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPathOrParent(CFMetaData,ColumnPath).mjava,0,0,5,2,0,0.0,12,5,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager.ExecuteOnlyExecutor#ExecuteOnlyExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory,RejectedExecutionHandler).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#closeIsInclusive(boolean).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getNextNonExpiredSSTables(Iterable[SSTableReader],int).mjava,0,0,10,2,4,0.1111111119389534,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#obsoleted(SSTableReader).mjava,0,0,4,1,0,0.0,6,3,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamManager#addNotificationListener(NotificationListener,NotificationFilter,Object).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#verifyOne(ColumnFamilyStore,SSTableReader,boolean).mjava,0,0,4,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint.Serializer#serializedSize(Hint,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\SyncComplete.SyncCompleteSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\LocalPartitioner#midpoint(Token,Token).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.LegacyRemoteDataResponse#digest(CFMetaData,ReadCommand).mjava,0,0,3,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter.DiskWriter#run().mjava,0,0,8,0,1,0.043478261679410934,5,3,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#truncate(String,long).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#Rows(ResultSet).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#gossipSnitchInfo().mjava,0,3,9,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearUnsafe().mjava,0,0,3,0,0,0.0,1,0,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\StreamMessage.Type#get(byte).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createWithMaximumPoolSize(String,int,int,TimeUnit).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#isStartInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.ComponentOfSlice#isEQ().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo#LivenessInfo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleOptions#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#log(Logger).mjava,0,0,10,1,5,0.22727273404598236,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaxSSTableBytes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#sizeOfCollectionSize(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#createReader().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#equals(Object).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#deletion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#isInclusive(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CorruptBlockException#CorruptBlockException(String,long,int,Throwable).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString(Collection[SSTableReader]).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ThreadPoolMetrics#ThreadPoolMetrics(ThreadPoolExecutor,String,String).mjava,0,0,17,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#executeInternal(QueryState,QueryOptions).mjava,0,0,13,2,4,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteAsync(String).mjava,0,0,2,1,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropViewStatement#validate(ClientState).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#hasColumnSpecifications().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getBackingTable().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.TreeRangeIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#LongToken(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#newEQRestriction(CFMetaData,VariableSpecifications).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#readWithPaxos(SinglePartitionReadCommand.Group,ConsistencyLevel,ClientState).mjava,0,0,23,3,11,0.03333333507180214,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDHelper#driverType(AbstractType).mjava,0,0,7,1,1,0.05882352963089943,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#init().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\AbstractTextSerializer#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchDroppedColumns(String,String).mjava,0,0,5,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader.BuffersIterator#readBuffer(int).mjava,0,0,7,1,1,0.07692307978868484,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeight(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getGroup().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewBuilder#getCompactionInfo().mjava,0,0,3,0,2,0.5833333134651184,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#getFilename().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#DelayedValue(UserType,List[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getReadRepairAttempted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL#WritetimeOrTTL(ColumnIdentifier,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#ClientWarn().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#getByte(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger.CellReducer#onKeyChange().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#Tables(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Value#Value(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\AnticompactionRequest.AnticompactionRequestSerializer#serializedSize(AnticompactionRequest,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBatchSizeWarnThresholdInKB(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#supersedes(DeletionTime).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\CleanupMessage.CleanupMessageSerializer#serializedSize(CleanupMessage,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#guessFileStore(String).mjava,0,0,3,1,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#getCustomIndexExpressions().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateRemoving(InetAddress,String[]).mjava,0,0,24,2,4,0.09756097197532654,12,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#validateCellPath(CellPath).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#validate().mjava,0,2,4,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Serializer#valuesWithoutSizeSerializedSize(ClusteringPrefix,int,List[AbstractType[#]]).mjava,0,0,8,3,5,0.05263157933950424,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputKeyspaceUserNameAndPassword(Configuration,String,String).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#isReverseOrder().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#sync(RandomAccessFile).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#updatesRegularRows().mjava,0,4,3,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#getTokens(InetAddress).mjava,0,0,7,1,0,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#preparePaxos(Commit,List[InetAddress],int,ConsistencyLevel).mjava,0,0,5,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#complete(int).mjava,0,0,6,1,3,0.06666667014360428,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.MetricRecording#applyToRow(Row).mjava,0,0,7,1,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setKeyCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#isIfNotExists().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftClientState#ThriftClientState(InetSocketAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#deserialize(DataInput).mjava,0,0,11,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\vint\VIntCoding#writeVInt(long,DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#getSelectStatement().mjava,0,3,5,0,2,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#newSession(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getLocalComparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#abort().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#fromRowIterator(CFMetaData,Iterator[Row],Row).mjava,0,0,14,3,4,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#SchemaChange(Event.SchemaChange).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#scrubWithResult().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow#unsharedHeapSizeExcludingData().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry#meter(MetricName,MetricName).mjava,0,14,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DefaultNameFactory#DefaultNameFactory(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\NetStats#execute(NodeProbe).mjava,0,0,69,1,4,0.013698630034923553,72,7,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getSSTablesForSTCS(Collection[SSTableReader],int,int,SizeTieredCompactionStrategyOptions).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\EmptySerializer#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#validatePartitioner(AbstractBounds[#]).mjava,0,0,9,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#isIndexColumnFamilyStore(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#login(AuthenticatedUser).mjava,0,0,6,1,0,0.5,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get95thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedInputStream#decompress(byte[]).mjava,0,0,10,1,0,0.3076923191547394,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#StreamPlan(String,long,int,boolean,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier.ExecuteImplVisitor#visitMethodInsn(int,String,String,String,boolean).mjava,0,0,6,5,1,0.0,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#shouldInclude(SSTableReader).mjava,0,0,5,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#skipComplexColumn(DataInputPlus,ColumnDefinition,SerializationHeader,boolean).mjava,0,0,3,4,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemoryWriter#currentBuffer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#selfRef().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(FileOutputStream).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#replace(RowCacheKey,IRowCacheEntry,IRowCacheEntry).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#partitionKey().mjava,0,31,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#handleStateBootstrap(InetAddress).mjava,0,0,11,1,1,0.6000000238418579,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#get(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#toCounterLegacyCell(CFMetaData,ByteBuffer,CounterColumn).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec#decode(ByteBuf,int).mjava,0,0,22,2,13,0.0,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#stopReadingDisk().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#hostId(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#addView(ViewDefinition).mjava,0,0,11,1,0,0.1666666716337204,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#trivialReduceIsTrivial().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#checkCrc().mjava,0,4,4,0,0,0.1538461595773697,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(File,FileOpType,DiscreteAction[#-extends-IOException]...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PurgeFunction#applyToMarker(RangeTombstoneMarker).mjava,0,0,10,1,4,0.08695652335882187,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction#valuesAsClustering(QueryOptions).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\AnticompactionTask.AnticompactionCallback#response(MessageIn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#staticDef(CFMetaData,ByteBuffer,AbstractType[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.EventNotifier#onUp(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#onMergedRows(Row,Row[]).mjava,0,0,6,2,0,0.27272728085517883,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.RefViewFragment#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#rowsOnLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#BaseRows(BaseRows[#,#-extends-I]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#ColumnIdentifier(ByteBuffer,AbstractType[#]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#Attributes(Term,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.TransactionalProxy#doPrepare().mjava,0,0,6,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#kindFlags(AbstractBounds[#]).mjava,0,0,2,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getIntSetting(String,Configuration).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Refs#release(Iterable[#-extends-Ref[#]],Throwable).mjava,0,0,2,2,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#invert().mjava,0,8,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#HintsWriteExecutor(HintsCatalog).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#getAvailableIndexName(String,String,String).mjava,0,0,4,3,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand#create(CFMetaData,int,DecoratedKey,Slice).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#sharedCopy().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCellName#superColumnSubName().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowIterators#loggingIterator(RowIterator,String).mjava,0,0,13,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getJoiningNodes().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.DelayedValue#collectMarkerSpecification(VariableSpecifications).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#fromJSONObject(Object).mjava,0,0,5,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#dateStringToDays(String).mjava,0,0,12,1,3,0.09375,20,5,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#appendTo(MultiCBuilder,QueryOptions).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#headerLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateAggregateStatement#checkAccess(ClientState).mjava,0,0,10,1,0,0.0,4,2,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#getMemtableReservedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#asCQL3Type().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#addSingleColumnRestriction(SingleColumnRestriction).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata.ValidationMetadataSerializer#serializedSize(Version,ValidationMetadata).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isJoined().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats.Collector#collect(Row,Iterator[Row],DeletionInfo).mjava,0,0,7,3,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#make(File).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addColumnAlias(ColumnIdentifier).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.Flush#reclaim(Memtable).mjava,0,0,5,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType.CollectionPathSerializer#skip(DataInputPlus).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Marker#Marker(int,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#toTimeInMillis(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readShort().mjava,0,1,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.RegisteredSignal#isCancelled().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator.IndexState#setToBlock(int).mjava,0,0,6,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#createReplicationStrategy(KeyspaceMetadata).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#add(RangeTombstone).mjava,0,0,9,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Component#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#enableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#makeRowRange(Token,Token).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#values(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#getConsistency().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#[T]_getFrozenSet(String,AbstractType[T]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\SingleColumnRelation#isMapEntryEquality().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeof(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#apply(UnfilteredPartitionIterator,Transformation[#-super-UnfilteredRowIterator]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#registerFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#memtableFlushPeriod(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#syncWriteToBatchlog(WriteResponseHandler[#],Batch,Collection[InetAddress]).mjava,0,0,7,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Literal#Literal(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CorruptSSTableException#CorruptSSTableException(Exception,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\WrappedRunnable#run().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getByteBuffer(long,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isAutoCompactionDisabled().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#isGlobal().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause#empty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#open(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#makeRandomGossipDigest(List[GossipDigest]).mjava,0,0,11,1,5,0.03703703731298447,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Type#fromPrefix(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,3,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#fromName(String).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#Builder(Comparator[#-super-V],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#toCQLString(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#setCapacity(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#onPartitionClose().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCell#isTombstone().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#waitForFinalSync().mjava,0,0,3,0,1,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AlwaysPresentFilter#serializedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#finished().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SimpleSSTableMultiWriter#finished().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\Batch.Serializer#deserialize(DataInputPlus,int).mjava,0,0,6,2,2,0.5714285969734192,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#INRestriction(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#getOperator(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\TombstoneOverwhelmingException#TombstoneOverwhelmingException(int,String,CFMetaData,DecoratedKey,ClusteringPrefix).mjava,0,0,3,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ParsedStatement#setBoundVariables(VariableSpecifications).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\FSError#FSError(Throwable,File).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#startOrderGroup().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getClusterName().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addTombstone(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#addColumnForOrdering(ColumnDefinition).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views.Builder#build().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MarshalException#MarshalException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#CQLLimits(int,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#doPostCleanup(Throwable).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#setLong(long,long).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#RangeTombstone(Slice,DeletionTime).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#canRetryDriverConnection(Exception).mjava,0,0,10,1,1,0.0,8,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitAntiCompaction(ColumnFamilyStore,Collection[Range[Token]],Refs[SSTableReader],long).mjava,0,0,15,4,4,0.0,6,3,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getArchivingSegmentNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\UUIDSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#sendToHintedEndpoints(Mutation,Iterable[InetAddress],AbstractWriteResponseHandler[IMutation],String,Stage).mjava,0,0,24,5,6,0.190476194024086,72,13,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropKeyspace(String).mjava,0,0,18,1,5,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#add(Transformation).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter#partitionKeyRestrictionsAreSatisfiedBy(DecoratedKey,AbstractType[#]).mjava,0,0,7,2,1,0.0,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#auto(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#Types(Builder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#add(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#[T-extends-Comparable[T]]_lessThan(T).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#maxMarkedAt().mjava,0,1,1,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long,long).mjava,0,0,2,2,5,0.14814814925193787,32,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#getStorageConfigURL().mjava,0,1,8,0,4,0.03448275849223137,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getEstimatedDroppableTombstoneRatio(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator.CountingDigest#engineUpdate(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#getAllIndexColumnFamilyStores().mjava,0,5,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#hotKeyIterator(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#getCasContentionTimeout().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#inputStream(ByteBuffer).mjava,0,0,8,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildPartitionKeyNames(QueryOptions).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#internalOpen(Descriptor,Set[Component],CFMetaData,SegmentedFile,SegmentedFile,IndexSummary,IFilter,long,StatsMetadata,OpenReason,SerializationHeader).mjava,0,0,2,11,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\Tracing#isTracing().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#prepareReceiving(StreamSummary).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#isStartInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#getKeyCacheKeysToSave().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#writeValue(Object,ByteBuf,int).mjava,0,0,31,3,3,0.02380952425301075,60,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getBloomFilterFalsePositiveCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsReader#descriptor().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReceiveTask#getTotalSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.BatchlogEndpoints#BatchlogEndpoints(Collection[InetAddress]).mjava,0,0,4,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,12,3,4,0.7368420958518982,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate#operationCount().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#applyToDeletion(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getColumnFamilyStoreMBeanProxies().mjava,0,2,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\RangeNamesQueryPager#state().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#AbstractCompactionTask(ColumnFamilyStore,LifecycleTransaction).mjava,0,0,4,2,1,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#boundsAsClustering(Bound,QueryOptions).mjava,0,0,21,2,4,0.23999999463558197,12,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#updateProgress(ProgressInfo).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeSSLCipherSuites(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRangeForEndpointWithinDC(String,InetAddress).mjava,0,0,14,2,6,0.0,3,2,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#builder(TableParams).mjava,0,0,15,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams#minCompactionThreshold().mjava,0,8,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice.Bound#inclusiveStartOf(ClusteringPrefix).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.OptionsWithColumnSpecifications#getColumnSpecifications().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyCellName#LegacyCellName(Clustering,ColumnDefinition,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#hasCollectionColumns().mjava,0,1,2,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#BufferedDataOutputStreamPlus(FileOutputStream,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#updateWithByte(MessageDigest,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#getFunctions().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.LZ4Compressor#LZ4Compressor().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyDeletionInfo#deserialize(CFMetaData,DataInputPlus).mjava,0,0,9,2,7,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMinRpcTimeout().mjava,0,1,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#reverse().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addFalsePositive().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#migrateDataDirs().mjava,0,1,13,0,2,0.0,2,1,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyBound#toString().mjava,0,0,12,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadOrderGroup#writeOpOrderGroup().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#getDownEndpointCount().mjava,0,0,3,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader.Builder#build().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder#start().mjava,0,15,1,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#listPermissionsForRole(Set[Permission],IResource,RoleResource).mjava,0,0,11,3,4,0.10000000149011612,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#typeHashCode(List[AbstractType[#]]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#updateVersionAndAnnounce().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnSpecification#ColumnSpecification(String,String,ColumnIdentifier,AbstractType[#]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputPageRowSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#decodeCellName(CFMetaData,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CompositesSearcher#deleteAllEntries(List[IndexEntry],OpOrder.Group,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#[T]_defaultComparator().mjava,0,0,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftSessionManager#setCurrentSocket(SocketAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer.GrowingChannel#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getComponents(CFMetaData,DecoratedKey).mjava,0,0,4,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#readSyncMarker(CommitLogDescriptor,int,RandomAccessReader,boolean).mjava,0,0,14,4,3,0.032258063554763794,10,4,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#areRequestedBoundsInclusive(Bound).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#none().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction.Raw#processesSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#serializedSizeInternal(int).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UUIDType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#extensions(Map[String,ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#addClusteringColumn(String,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#hasLegacyShards(ByteBuffer).mjava,0,0,7,1,2,0.20000000298023224,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringList(List[String],ByteBuf).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readValueList(ByteBuf,int).mjava,0,0,4,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#minIndexInterval(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition#isPrimaryKeyColumn().mjava,0,19,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplitController#SplitController(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\SSTableExpiredBlockers#main(String[]).mjava,0,0,36,1,11,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#deletedSlice().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#store(Batch,boolean).mjava,0,0,8,2,1,0.0476190485060215,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnConditions.Builder#Builder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#forceKeyspaceFlush(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeArchive(CommitLogSegment).mjava,0,0,10,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#isEndInclusive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Ring#execute(NodeProbe).mjava,0,0,31,1,9,0.021276595070958138,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#info(Object...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#buildIndex(Descriptor,IndexSummary).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeScalarFunction#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#enableActivityNotification(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#loadNewSSTables(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#serializedSizeWithShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#getTimestamp(QueryState).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SortedBiMultiValMap#SortedBiMultiValMap(SortedMap[K,V],SortedSetMultimap[V,K]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ReloadTriggers#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#waitForCessation(Iterable[ColumnFamilyStore]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkRecordWriter.ExternalClient#ExternalClient(Configuration).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#mutateWithCatch(Mutation).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#truncateLegacySchemaTables().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setCasContentionTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableIterator.ForwardIndexedReader#ForwardIndexedReader(RowIndexEntry,FileDataInput,boolean,boolean).mjava,0,0,1,4,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#loadTokens().mjava,0,2,7,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#handleLegacyMutation(Mutation).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService.FutureTask#FutureTask(Callable[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#ColumnFamilyStore(Keyspace,String,int,CFMetaData,Directories,boolean,boolean).mjava,0,0,39,7,5,0.0625,44,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\PendingRangeCalculatorService#update().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#includes(PartitionColumns).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Filter#closeIfEmpty(BaseRowIterator[#]).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch.ReplayWriteResponseHandler#ReplayWriteResponseHandler(Collection[InetAddress]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\FrameCompressor.SnappyCompressor#compress(Frame).mjava,0,0,10,1,3,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MaxSSTableSizeWriter#estimatedKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validatePredicate(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeTool#err(Throwable).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#toThrift(KeyspaceMetadata).mjava,0,0,6,1,2,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_floorIndex(Object[],Comparator[#-super-V],V).mjava,0,0,1,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#validateClusterings(PartitionUpdate).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operations#Operations(StatementType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterViewStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.SingletonPartitionIterator#SingletonPartitionIterator(RowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamRequest#StreamRequest(String,Collection[Range[Token]],Collection[String],long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setCompressionParameters(Map[String,String]).mjava,0,0,4,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#serialize(BigInteger).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.SliceRestriction#appendBoundTo(MultiCBuilder,Bound,QueryOptions).mjava,0,0,6,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#doCommit(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#isEmpty().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#containsACollection().mjava,0,1,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#getOutputCommitter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstTokenIndex(ArrayList,Token,boolean).mjava,0,0,3,3,1,0.09090909361839294,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrayBackedBoundedStats[FailureDetector]#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getOffsets().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#BigFormat().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#isCleanedUp().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.TreeIterator#gotoMinOf(IntervalNode).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\IntegerType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#awaitResultsAndRetryOnDigestMismatch().mjava,0,1,15,0,3,0.03999999910593033,1,0,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ShortSerializer#toString(Short).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.CollectionBound#setOrListAppliesTo(AbstractType[#],Iterator[Cell],Iterator[ByteBuffer],Operator,boolean).mjava,0,0,11,5,2,0.1428571492433548,10,4,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#loadConfig().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection.Element#Element(ColumnDefinition,CellPath).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawType#prepare(String,Types).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\ImmutableBTreePartition#canHaveShadowedData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#close().mjava,0,1,4,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getColumnFamilyStores().mjava,0,18,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#readIsStatic(ByteBuffer).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#[G,T]_createTableGauge(String,Gauge[T],Gauge[G]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#customExpressionNotSupported(IndexName).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Interval#equals(Object).mjava,0,0,3,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getRack(InetAddress).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getCFDirectories().mjava,0,4,2,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\FloatSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#cardinality().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getDroppedMessagesLogs().mjava,0,1,7,0,5,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo.Builder#add(RangeTombstoneMarker).mjava,0,0,10,1,4,0.06666667014360428,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#prepare(List[ColumnSpecification]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#deserializeRowBody(DataInputPlus,SerializationHeader,SerializationHelper,int,int,Row.Builder).mjava,0,0,17,6,13,0.1463414579629898,8,3,32,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#get(RowCacheKey).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Deserializer#deserialize(DataInputPlus,int,boolean,int,boolean,CFMetaData,int,ColumnFilter,RowFilter,DataLimits,Optional[IndexMetadata]).mjava,0,0,4,11,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#makeDefinition(CFMetaData,IndexMetadata).mjava,0,0,3,2,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Verifier#getVerifyInfo().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#enableHintedHandoff().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet.PreparedMetadata#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTaskType().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.DataResponse#DataResponse(CFMetaData,ByteBuffer,SerializationHelper.Flag).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#release().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#readLegacyCellBody(CFMetaData,DataInput,ByteBuffer,int,SerializationHelper.Flag,boolean).mjava,0,0,20,6,9,0.10000000149011612,5,3,20,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#Memory(long).mjava,0,0,1,1,0,0.25,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSplitSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#setIsDigestQuery(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#removeUnfinishedLeftovers(Throwable).mjava,0,0,6,1,0,0.1538461595773697,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readLongString(ByteBuf).mjava,0,0,2,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#getTokenValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getNextBackgroundTask(int).mjava,0,0,4,1,2,0.0,5,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#read(List[SinglePartitionReadCommand],org.apache.cassandra.db.ConsistencyLevel,ClientState).mjava,0,0,5,3,0,0.0,1,0,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\ConfigurationException#ConfigurationException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#UDFunction(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],DataType[],AbstractType[#],DataType,boolean,String,String).mjava,0,0,2,9,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#metadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#chunkOffsetBy(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthKeyspace#metadata().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.TransferHintsTask#transfer(UUID).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\NativeAggregateFunction#isAggregate().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getRestorePrecision().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.CommitLogSegmentFileComparator#compare(File,File).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\WhereClause.Builder#add(Relation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspaceNotYetExisting(String).mjava,0,0,3,1,0,0.3333333432674408,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#parseCompressorClass(String).mjava,0,0,3,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition.Serializer#serializedSize(CachedPartition).mjava,0,0,10,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat#getWriterFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.DelayedValue#getFunctions().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getSnapshotDetails().mjava,0,1,9,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.PartitionRangeBuilder#toKeyIncl(Object...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationTask#MigrationTask(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#setStreamId(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#CounterCacheKey(Pair[String,String],ByteBuffer,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#addTo(Ref.IdentityCollection).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#performLocally(Stage,Runnable,IAsyncCallbackWithFailure[#]).mjava,0,0,7,3,0,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#newSaslNegotiator(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropTable(String,String).mjava,0,0,20,2,4,0.11764705926179886,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnIdentifier#toString().mjava,0,44,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#executeWithCondition(QueryState,QueryOptions).mjava,0,0,8,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#addition(UTName,ColumnIdentifier,CQL3Type.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FromJsonFct#FromJsonFct(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#requestExtraSync().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#wrap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.PureJavaOperations#copy(ByteBuffer,int,byte[],int,int).mjava,0,0,7,5,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isEmpty().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#none().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#hasRemaining().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getVersion(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\ValidationRequest#ValidationRequest(RepairJobDesc,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#remainingInPartition().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get99thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\MaxSSTableSizeWriter#switchCompactionLocation(Directories.DataDirectory).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexNamesFilter#requestedRows().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableTxnWriter#doPostCleanup(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\HintedHandOffManager#registerMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BooleanSerializer#serializedSize(Boolean,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.MetricName#getMBeanName().mjava,0,8,2,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompactionParams.Option#toString().mjava,0,20,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#createReader(RateLimiter).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#getCompactionHistory().mjava,0,1,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer.UnfilteredIterator#UnfilteredIterator(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Custom#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#addSetEntry(String,Object).mjava,0,0,9,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#subList(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#hasColumnFamilyAccess(String,String,Permission).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\IndexRestrictions#getRestrictions().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#shouldBeEnabled().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Value#Value(SortedSet[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#add(UnfilteredRowIterator).mjava,0,0,20,1,1,0.15789473056793213,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#buildBound(boolean,boolean).mjava,0,0,11,2,3,0.06666667014360428,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator#iterators().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#wakeManager().mjava,0,3,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(File,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getPrimaryRangesWithinDC(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.Serializer#deserialize(DataInputPlus,int).mjava,0,0,9,2,8,0.0,16,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#close().mjava,0,1,2,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#load(ValidationMetadata).mjava,0,0,9,1,0,0.25,16,4,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\MapSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#messageReceived(StreamMessage).mjava,0,0,6,1,3,0.0,22,1,22,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCommitLogSyncPeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRowCacheSavePeriod().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#compareTo(Range[T]).mjava,0,0,3,1,0,0.5714285969734192,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#advanceLeafNode(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#release().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits#cqlLimits(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#createWriter().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\StreamingHistogram.StreamingHistogramSerializer#serializedSize(StreamingHistogram).mjava,0,0,5,1,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toShort(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator#[In,Out]_get(List[#-extends-Iterator[In]],Comparator[#-super-In],Reducer[In,Out]).mjava,0,0,2,3,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#makeDigestRequests(Iterable[InetAddress]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#equals(Object).mjava,0,0,0,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#validateForRead(String).mjava,0,0,0,1,0,0.0,3,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#createReader(RateLimiter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\CassandraMetricsRegistry.JmxTimer#get98thPercentile().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\DefaultCompactionWriter#DefaultCompactionWriter(ColumnFamilyStore,Directories,LifecycleTransaction,Set[SSTableReader],boolean,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer#getProcessor(CassandraServer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addIndexToSchemaMutation(CFMetaData,IndexMetadata,long,Mutation).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellInLegacyOrderIterator#CellInLegacyOrderIterator(CFMetaData,boolean).mjava,0,0,7,2,2,0.10000000149011612,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#updateTimestamp().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#mutableCopy().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\SimpleClient#SimpleClient(String,int,int,ClientEncryptionOptions).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Cleanup#tidy().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#applyStateLocally(Map[InetAddress,EndpointState]).mjava,0,0,32,1,7,1.125,282,13,43,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(long).mjava,0,0,0,1,3,0.7142857313156128,10,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService.CounterCacheSerializer#serialize(CounterCacheKey,DataOutputPlus,ColumnFamilyStore).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#partialCompactionsAcceptable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getCounterId().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ClusteringIndexSliceFilter#selects(Clustering).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\ReplicationParams#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChannelProxy#ChannelProxy(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache#scheduleSaving(int,int).mjava,0,0,3,2,1,0.0476190485060215,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#[V-extends-Comparable[V]]_of(V).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations.UnsafeOperations#copy(Object,long,byte[],int,int).mjava,0,0,2,5,0,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\QueryState#getClientState().mjava,0,22,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#onCreateFunctionInternal(String,String,List[AbstractType[#]]).mjava,0,0,9,3,0,0.2857142984867096,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\RoleName#getName().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#CreateViewStatement(CFName,CFName,List[RawSelector],WhereClause,List[ColumnIdentifier.Raw],List[ColumnIdentifier.Raw],boolean).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\BytesSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBatchSizeFailThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy.LeveledScanner#metadata().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#getBuffer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#IndexInfo(ClusteringPrefix,ClusteringPrefix,long,long,DeletionTime).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit.CommitSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#waitForSync(int,Timer).mjava,0,0,5,2,1,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\ValidationTask#ValidationTask(RepairJobDesc,InetAddress,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#listEphemeralSnapshots().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#stopNativeTransport().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#replayPosition(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#flagsFromStrings(Set[String]).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#addRanges(String,Collection[Range[Token]]).mjava,0,0,18,2,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableReader#getPosition(PartitionPosition,Operator,boolean,boolean).mjava,0,0,40,4,20,0.1696428507566452,6156,18,7,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CFProperties#setCompactStorage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\FileMessageHeader.FileMessageHeaderSerializer#serializedSize(FileMessageHeader,int).mjava,0,0,13,2,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getAllSessionInfo().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRowCacheKeysToSave(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#addNewKey(Object).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RowCacheKey#RowCacheKey(Pair[String,String],byte[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#tokensAsSet(Collection[Token]).mjava,0,0,6,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.Cloner#applyToRow(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#response(MessageIn[T]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection.QueuedMessage#timestampNanos().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\OutputHandler.SystemOutput#warn(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Refresh#execute(NodeProbe).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits.CQLCounter#counted().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropRoleStatement#checkAccess(ClientState).mjava,0,0,5,1,0,0.2857142984867096,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getKSMetaData(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver#DataResolver(Keyspace,ReadCommand,ConsistencyLevel,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#without(String).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#getWriteChannel(Socket).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getRegisteredCallback(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation.SetValue#isCompatibleWith(RawUpdate).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#setDiscarded().mjava,0,0,2,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#createKey().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ReplicationFinishedVerbHandler#doVerb(MessageIn,int).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#referencesUserType(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment.Allocation#awaitDiskSync(Timer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CachingParams#cacheRows().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getNewSourceRanges(String,Set[Range[Token]]).mjava,0,0,12,2,7,0.04545454680919647,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator.In#In(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MutableDeletionInfo#add(DeletionTime).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#expireMessages().mjava,0,1,7,0,2,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#compaction(CompactionParams).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#init(Range[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Keyspaces#of(KeyspaceMetadata...).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder#awaitNewBarrier().mjava,0,8,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#isUnused().mjava,0,2,3,0,0,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#checkCacheFilter(UnfilteredPartitionIterator,ColumnFamilyStore).mjava,0,0,11,2,3,0.21052631735801697,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ObjectSizes#sizeOfArray(int[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.CallbackDeterminedSerializer#deserialize(DataInputPlus,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneBoundMarker#deletionTime().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isDeadState(EndpointState).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceKeyspace#compile(String,String,String).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#ClientState(InetSocketAddress).mjava,0,0,2,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#build().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoadConnectionFactory#createConnection(InetAddress).mjava,0,0,8,1,1,0.1875,3,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\DefaultCompactionWriter#realAppend(UnfilteredRowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.BadRange#BadRange().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#[T]_submit(FutureTask[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#Literal(List[Term.Raw]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchKeyspacesWithout(Set[String]).mjava,0,0,8,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Client#parseLine(String).mjava,0,0,56,1,17,0.00909090880304575,590,14,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#hasNext().mjava,0,0,4,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter#CQLSSTableWriter(AbstractSSTableSimpleWriter,UpdateStatement,List[ColumnSpecification]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#deleteColumnOrSuperColumn(LegacyLayout.LegacyDeletionInfo,List[LegacyLayout.LegacyCell],CFMetaData,Deletion,int).mjava,0,0,18,5,2,0.1463414579629898,8,6,26,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#writeStringToStringListMap(Map[String,List[String]],ByteBuf).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairMessage.RepairMessageSerializer#serialize(RepairMessage,DataOutputPlus,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#LeveledManifest(ColumnFamilyStore,int,SizeTieredCompactionStrategyOptions).mjava,0,0,3,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#close().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\WrappingUnfilteredRowIterator#metadata().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ExpiringMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getRemovalStatus().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairJob#run().mjava,0,0,41,0,11,0.16883116960525513,12,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#pauseHintsDelivery().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#differenceToFetch(Range[T]).mjava,0,0,9,1,7,0.1071428582072258,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableBackup#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageOut[#],InetAddress,AbstractWriteResponseHandler[#],boolean).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#schedule().mjava,0,0,7,0,2,0.05263157933950424,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeDifference#sizeOnLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClockAndCount#create(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Views#equals(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue#compareTo(VersionedValue).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getMutations(QueryOptions,boolean,long).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath#digest(MessageDigest).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Header#Header(int,EnumSet[Flag],int,Message.Type).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.State#getPosition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getUserDefinedFunctionWarnTimeout().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#skipMarkerBody(DataInputPlus).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateRoleStatement#CreateRoleStatement(RoleName,RoleOptions,boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#CompactionIterator(OperationType,List[ISSTableScanner],CompactionController,int,UUID,CompactionMetrics).mjava,0,0,9,6,3,0.0476190485060215,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionColumns#without(ColumnDefinition).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Merger#merge(DeletionTime).mjava,0,0,25,1,5,0.07500000298023224,384,9,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#separateRows(AbstractBTreePartition,Set[ColumnIdentifier]).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#isSuper(RoleResource).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ShortSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\RetryMessage#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#DoubleType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#resetNode(Object[],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader.MissingPropertiesChecker#check().mjava,0,1,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getTotalBytesCompacted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationStateMap().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\DataType#getProtocolVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigestAckSerializer[GossipDigestAck]#deserialize(DataInputPlus,int).mjava,0,0,5,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopClient().mjava,0,0,6,0,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#aborted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener.MergeListener#MergeListener(DecoratedKey,PartitionColumns,boolean).mjava,0,0,12,3,0,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setViewBuilt(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.SuperColumnCountingLimits.SuperColumnCountingCounter#applyToRow(Row).mjava,0,0,2,1,0,0.1111111119389534,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#setTruncateRpcTimeout(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#run().mjava,0,0,26,0,3,0.4067796468734741,2900,14,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isLegacyFile(File).mjava,0,0,11,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#wasDecommissioned().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#attachTo(BaseRows).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat#checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#getLeafKeyEnd(Object[]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#AbstractType(ComparisonType).mjava,0,0,6,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#modifyRoleMembership(String,String,String).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.CustomExpression#isSatisfiedBy(CFMetaData,DecoratedKey,Row).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions.WithPerStatementVariables#forStatement(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#canAddSSTable(SSTableReader).mjava,0,0,4,1,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.ColumnsCollector#get().mjava,0,1,8,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\View#getTemporalRowSet(AbstractBTreePartition,TemporalRow.Set,boolean).mjava,0,0,6,3,2,0.05263157933950424,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedSize(Row,SerializationHeader,long,int).mjava,0,0,6,4,1,0.25,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#mergeWith(Restriction).mjava,0,0,2,1,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#connectionFactory(StreamConnectionFactory).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#hasConditions().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropTableStatement#changeEvent().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OffHeapBitSet#clear(long).mjava,0,0,2,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\KeyspaceMetrics#release().mjava,0,1,5,0,0,0.1111111119389534,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#addRestriction(Restriction).mjava,0,0,1,1,1,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#isNodeWellFormed(Comparator[#],Object[],Object,Object).mjava,0,0,3,4,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#disableAutoCompaction().mjava,0,0,4,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeDescRange#headSet(V,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTableStatement#validateAlter(CFMetaData,ColumnDefinition,AbstractType[#]).mjava,0,0,18,3,2,0.24242424964904785,18,5,19,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanPartitionSize().mjava,0,2,5,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#tryAppend(UnfilteredRowIterator).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#ensureValidLocation(boolean,NodeCursor[K]).mjava,0,0,4,2,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#compress(ByteBuffer,ByteBuffer).mjava,0,0,16,2,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\ChecksummedDataInput#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#CellGrouper(CFMetaData,SerializationHelper,boolean).mjava,0,0,2,3,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#createBrokenFunction(FunctionName,List[ColumnIdentifier],List[AbstractType[#]],AbstractType[#],boolean,String,String,InvalidRequestException).mjava,0,0,3,8,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\BytesType#fromJSONObject(Object).mjava,0,0,6,1,1,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation#getFunctions().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#setIndexBuilt(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableWriter#setOpenResult(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateColumnFamily(String,String,boolean).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#deserialize(DataInput).mjava,0,0,5,1,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#instance().mjava,0,23,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#read(DataInput,int).mjava,0,0,2,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#processCustomIndexExpressions(List[CustomIndexExpression],VariableSpecifications,SecondaryIndexManager).mjava,0,0,29,3,4,0.0,128,7,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#ListType(AbstractType[T],boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager#performInitialReplay().mjava,0,0,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDescriptor#updateChecksumLong(CRC32,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceAggregateDrop(UDAggregate,boolean).mjava,0,0,9,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#getOrCreateSessionById(InetAddress,int,InetAddress).mjava,0,0,2,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#printSummary(int).mjava,0,0,17,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.FixedValueComparator#FixedValueComparator(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#isLive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#reuse().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\SlabAllocator#SlabAllocator(SubAllocator,SubAllocator,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#loadFromDisk(boolean).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onUpdateAggregate(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#decodeString(ByteBuffer).mjava,0,0,13,1,3,0.07692307978868484,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#filter(List[ByteBuffer],QueryOptions).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.Row#has(String).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer.ThriftCASRequest#readCommand(int).mjava,0,0,17,1,6,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#toString().mjava,0,0,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#copyKeys(int).mjava,0,0,2,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\AbstractRestriction#isOnToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Serializers#Serializers(CFMetaData).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#normalize(List[Slice]).mjava,0,0,21,1,6,0.0,36,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputCompressionChunkLength(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processBatch(BatchStatement,QueryState,BatchQueryOptions).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#replaceFlushed(Memtable,Collection[SSTableReader]).mjava,0,0,4,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#releaseReference().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidToString(byte[]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftExpression#makeDefinition(CFMetaData,ByteBuffer).mjava,0,0,3,2,1,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#validate().mjava,0,1,8,0,2,0.0,20,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flushData().mjava,0,0,13,0,1,0.21212121844291687,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#getCrcCheckChance().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SnapshotDeletingTask#SnapshotDeletingTask(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#markObsolete(List[LogTransaction.Obsoletion],Throwable).mjava,0,0,3,2,0,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#serialize(DataOutput).mjava,0,0,6,1,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#getStaticOperations().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory.MemoryTidy#MemoryTidy(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#addTransferRanges(String,Collection[Range[Token]],Collection[String],boolean,long).mjava,0,0,6,5,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#toJSONString(ByteBuffer,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionRangeReadCommand#isNamesQuery().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getIndexCfs().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath#dataSize().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#removeAll(Collection[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#removeSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement.ParsedInsert#ParsedInsert(CFName,Attributes.Raw,List[ColumnIdentifier.Raw],List[Term.Raw],boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#slice(ColumnDefinition,CellPath,CellPath).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#maybeFsync().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.CellGrouper#addAtom(LegacyAtom).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\SelectionColumnMapping#addMapping(ColumnSpecification,ColumnDefinition).mjava,0,0,2,2,0,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#shadowable(DeletionTime).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\TypeSizes#sizeofWithLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractNetworkTopologySnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,18,3,6,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MD5Digest#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#run().mjava,0,0,24,0,6,0.043478261679410934,3,2,32,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getReceivingFiles().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneScrubber.Options#parseArgs(String[]).mjava,0,0,16,1,8,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#treeIndexOffsetOfChild(Object[],int).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getIntByByte(long).mjava,0,0,8,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\FilteredPartitions#filter(UnfilteredPartitionIterator,int).mjava,0,0,1,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#isSupportedBy(ColumnDefinition,Index).mjava,0,0,8,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operator#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getEndToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\ServerError#ServerError(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getLongByByte(long).mjava,0,0,16,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#setupOnline().mjava,0,3,3,0,1,0.5,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Rows#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SetType#isCompatibleWithFrozen(CollectionType[#]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.InRestrictionWithMarker#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#getTypeAndRemove(Map[ColumnIdentifier,AbstractType],ColumnIdentifier).mjava,0,0,8,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices#makeSliceIterator(SliceableUnfilteredRowIterator).mjava,0,0,11,1,1,0.0,10,4,25,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider.NopCache#putIfAbsent(RowCacheKey,IRowCacheEntry).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#LZ4Compressor().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.Serializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,4,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SchemaAlteringStatement#prepareKeyspace(ClientState).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#toString(boolean).mjava,0,0,12,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#flushDataFrom(List[CommitLogSegment],boolean).mjava,0,0,18,2,5,0.20000000298023224,8,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#getCmdLineOptions().mjava,0,1,19,0,1,0.043478261679410934,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceNode().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFByteCodeVerifier#addDisallowedPackage(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#trueSnapshotsSize().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\AnticompactionRequest#AnticompactionRequest(UUID,Collection[Range[Token]]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#intersects(Bounds[T]).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter.TransactionalProxy#doPreCleanup(Throwable).mjava,0,0,4,1,0,0.09090909361839294,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogService#restartUnsafe().mjava,0,1,5,0,0,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\VariableSpecifications#getSpecifications().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#doPrepare().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#loggingIterator(PartitionIterator,String).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.Visitor#run().mjava,0,0,7,0,0,0.0416666679084301,2,1,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.StatsCollector#finishCompaction(CompactionInfo.Holder).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata#checksumValidator(Descriptor).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#serializerForIntraNode().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\OHCProvider.OHCacheAdapter#containsKey(RowCacheKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String).mjava,0,0,8,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager#isExhausted().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#overrideDataDirectoriesForTest(String).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#MerkleTrees(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMinimumCompactionThreshold(int).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\OperationType#toString().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AllowAllAuthorizer#revokeAllFrom(RoleResource).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CassandraVersion#CassandraVersion(int,int,int,String[],String[]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\KeyspaceMetrics.KeyspaceMetricNameFactory#createMetricName(String).mjava,0,0,10,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#makeArgSpec(String,String,Function,int).mjava,0,0,5,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#perform(Throwable,String,FileOpType,Stream[DiscreteAction[#-extends-IOException]]).mjava,0,0,3,4,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#sstableLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#serialize(UnfilteredRowIterator,ColumnFilter,DataOutputPlus,int,int).mjava,0,0,4,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#toColumnDefinition(CFMetaData,ColumnIdentifier.Raw).mjava,0,0,2,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getInvalidateTask().mjava,0,0,1,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath#create(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLPagingLimits.PagingAwareCounter#PagingAwareCounter(int,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\DoubleSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#newSliceRestriction(CFMetaData,VariableSpecifications,Bound,boolean).mjava,0,0,3,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#key().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\SecurityThreadGroup#isPackageAllowed(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_array(long[],int,int).mjava,0,0,7,3,27,0.3333333432674408,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#differenceHelper(MerkleTree,MerkleTree,List[TreeRange],TreeRange).mjava,0,0,30,4,9,0.0625,256,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#addInternal(int,LegacyBound,LegacyBound,long,int).mjava,0,0,4,5,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getBuilder(Config.DiskAccessMode,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#createClustering(QueryOptions).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#getIndexColumnFamilyStores(ColumnFamilyStore).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#forceRecycleAllSegments(Iterable[UUID]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\StageManager#tracingExecutor().mjava,0,1,3,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#getTablesAndViews(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.Codec.Flag#serialize(EnumSet[Flag]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#compare(Kind,Kind).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\StatsMetadata#mutateLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#addSSTable(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\PrepareMessage.PrepareMessageSerializer#serialize(PrepareMessage,DataOutputPlus,int).mjava,0,0,11,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#maybeMarkLocalToBeCleared(Row).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.DataDirectoryCandidate#DataDirectoryCandidate(DataDirectory).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\Util#initDatabaseDescriptor().mjava,0,9,11,0,2,0.0,2,1,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext#isLocal(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getClientAuthProvider(String,Configuration).mjava,0,0,9,2,3,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#newContainsRestriction(CFMetaData,VariableSpecifications,boolean).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#readValue(ByteBuf).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet#hasSupportingIndex(SecondaryIndexManager).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getAndResetGCStats().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#isAvailable().mjava,0,1,3,0,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#update(String,java.util.function.Function[KeyspaceMetadata,KeyspaceMetadata]).mjava,0,0,4,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#isMoving().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#hashCode().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getUserFunctionTimeoutPolicy().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#partialCompactionsAcceptable().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.SinglePartitionReadLifecycle#SinglePartitionReadLifecycle(SinglePartitionReadCommand,ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#computeExpireTime().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.INRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,5,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#serializedSize(UnfilteredRowIterator,ColumnFilter,int,int).mjava,0,0,18,4,5,0.03999999910593033,32,5,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#closeSession(State).mjava,0,0,8,1,0,0.1538461595773697,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#ConcurrentLinkedHashCache(ConcurrentLinkedHashMap[K,V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RowAndDeletionMergeIterator#updateNextRange().mjava,0,3,5,0,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getScanner(SSTableReader,RateLimiter).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#MmappedSegmentedFile(MmappedSegmentedFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Attributes#getTimeToLive(QueryOptions).mjava,0,0,4,1,2,0.043478261679410934,32,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#getPrepared(MD5Digest).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#getWorkerGroup().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer.OldFormatDeserializer#currentPosition().mjava,0,5,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#makeCellName(Clustering,ColumnDefinition,CellPath).mjava,0,0,6,3,2,0.0,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DateType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.InvalidHash#InvalidHash().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\KeyspaceParams#simpleTransient(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#compareCollectionMembers(ByteBuffer,ByteBuffer,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Functions#typesMatch(AbstractType[#],AbstractType[#]).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\NativeTransportService#stop().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\AbstractIterator#next().mjava,0,0,1,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\Commit#Commit(UUID,PartitionUpdate).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamRequest.StreamRequestSerializer#serializedSize(StreamRequest,int).mjava,0,0,9,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Terminal#bindAndGet(QueryOptions).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#Void().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#initServer(int).mjava,0,0,80,1,9,0.09482758492231369,192,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement.AddOrAlter#AddOrAlter(UTName,boolean,ColumnIdentifier,CQL3Type.Raw).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#appendClause(PartitionPosition,StringBuilder,CFMetaData,boolean,boolean).mjava,0,0,15,5,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter.TransactionalProxy#doCommit(Throwable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver.RepairMergeListener#isReversed(List[UnfilteredRowIterator]).mjava,0,0,1,1,0,0.10000000149011612,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#recognizedOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\AbstractTracingAwareExecutorService#execute(Runnable,TraceState).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#addBootstrapToken(Token,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SyncTask#SyncTask(RepairJobDesc,TreeResponse,TreeResponse).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#validate().mjava,0,0,0,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BTreeRow.CellIterator#computeNext().mjava,0,0,8,0,1,0.0,13,5,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropKeyspaceStatement#validate(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.Extend#moreContents().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Clustering#toString(CFMetaData).mjava,0,0,11,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#append(UnfilteredRowIterator).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getTotalBytes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json#handleCaseSensitivity(Map[String,Object]).mjava,0,0,11,1,1,0.1538461595773697,4,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.Discarder#execute(DecoratedKey,UpdateParameters).mjava,0,0,7,2,2,0.09090909361839294,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SharedCloseableImpl#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#free().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#generateLegacyCfId(String,String).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#hasIfExistCondition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#maybeArchive(String,String).mjava,0,0,6,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#getLimit(QueryOptions).mjava,0,0,8,1,2,0.260869562625885,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#transferFiles(InetAddress,Collection[StreamSession.SSTableStreamingSections]).mjava,0,0,6,2,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Raw#makeReceiver(List[#-extends-ColumnSpecification]).mjava,0,0,11,1,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,7,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService.DroppedMessages#DroppedMessages(Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#deserialize(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow.TemporalCell.Versions#getOldCellIfUpdated().mjava,0,0,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrub(boolean,boolean,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#getDouble(String,double).mjava,0,0,3,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamEvent.SessionPreparedEvent#SessionPreparedEvent(UUID,SessionInfo).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord.Status#setError(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#isSafeForBootstrap(InetAddress).mjava,0,0,7,1,3,0.4545454680919647,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#split(T).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Accumulator#capacity().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Term.Terminal#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\RangeTombstoneMarker.Merger#add(int,RangeTombstoneMarker).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileSegmentInputStream#FileSegmentInputStream(ByteBuffer,String,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.RawBuilder.RawUDT#RawUDT(String,List[String],List[CQL3Type.Raw]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#CassandraRoleManager().mjava,0,0,9,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getOrCreateNextSession(InetAddress,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#bootstrap(Collection[Token]).mjava,0,0,30,1,3,0.07547169923782349,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DataResolver#resolve().mjava,0,0,10,0,5,0.3076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref.GlobalState#GlobalState(Tidy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#initializeThread().mjava,0,0,7,0,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferRanges(InetAddress,InetAddress,String,Collection[Range[Token]],String...).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitViewBuilder(ViewBuilder).mjava,0,0,6,1,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#compareUnsigned(byte[],int,int,ByteBuffer).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#hash(ByteBuffer...).mjava,0,0,10,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#hasSufficientReplicas(Map[String,Set[InetAddress]],Multimap[String,InetAddress]).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isOnToken().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner#partitionOrdering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter.FilterSerializer#serializedSize(ClusteringIndexFilter,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#incrementAndGetGeneration().mjava,0,1,13,0,5,0.1428571492433548,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#signedBytesToNativeLong(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUUIDBytes(long).mjava,0,0,0,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromResultSet#iterator().mjava,0,0,5,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\ClusteringColumnIndex#decodeEntry(DecoratedKey,Row).mjava,0,0,17,2,3,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#write(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isContains().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#makeCasRequest(BatchQueryOptions,QueryState).mjava,0,0,24,2,10,0.02631578966975212,41,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#add(LegacyBound,LegacyBound,long,int).mjava,0,0,6,4,2,0.11764705926179886,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\CounterCacheKey#create(Pair[String,String],ByteBuffer,Clustering,ColumnDefinition,CellPath).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPermissionsUpdateInterval().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Builder#bufferSize(StatsMetadata).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Setter#Setter(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#componentsFor(Descriptor).mjava,0,0,6,1,1,0.043478261679410934,4,2,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\PrepareMessage#PrepareMessage(UUID,List[UUID],Collection[Range[Token]],boolean,long,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\Int32Serializer#serialize(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#waitForGossipToSettle().mjava,0,1,13,0,8,0.0,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawUT#RawUT(UTName).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SnapshotDeletingTask#run().mjava,0,0,3,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#enableScriptedUserDefinedFunctions(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\IntervalTree.Serializer#serialize(IntervalTree[C,D,I],DataOutputPlus,int).mjava,0,0,4,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Transformation#[E-extends-BaseIterator]_add(E,Transformation).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#networkVersion().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataIntegrityMetadata.FileDigestValidator#FileDigestValidator(Descriptor).mjava,0,0,12,1,0,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement.MultiTableColumnsBuilder#addAll(CFMetaData,PartitionColumns).mjava,0,0,4,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder.SinglePartitionSliceBuilder#addSlice(Slice).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#allColumnsInSelectOrder().mjava,0,1,16,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getBytes(long,byte[],int,int).mjava,0,0,1,4,0,0.0,8,3,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories.FileAction#hasPrivilege(File,FileAction).mjava,0,0,12,2,1,0.0,22,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getStreamThroughputMbPerSec().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#hexToBytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintResponse.Serializer#deserialize(DataInputPlus,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#reload().mjava,0,4,15,0,0,0.23529411852359772,16,4,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#compareTo(Candidate[In]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool.SubPool#used().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#createMessage(MessagingService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\CompactionHistory#execute(NodeProbe).mjava,0,0,11,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#collectStats(EncodingStats.Collector).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetStreamThroughput#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcTimeout().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markObsolete(Collection[SSTableReader],OperationType).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#RawStatement(CFName,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#searcherFor(ReadCommand).mjava,0,0,11,1,1,0.0,8,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.EQRestriction#isEQ().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#abortTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeyBound(Bound,QueryOptions).mjava,0,0,3,2,0,0.6000000238418579,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.SliceableIterator#slice(Slice).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogArchiver#construct().mjava,0,1,18,0,8,0.0,2,4,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall#executeInternal(int,ScalarFunction,List[ByteBuffer]).mjava,0,0,7,3,1,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#predicateFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraRoleManager#supportedOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstoneList#LegacyRangeTombstoneList(LegacyBoundComparator,LegacyBound[],LegacyBound[],long[],int[],int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\IfNotExistsCondition#addConditionsTo(CQL3CasRequest,Clustering,QueryOptions).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#getWorkMap(Multimap[Range[Token],InetAddress],String,IFailureDetector).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable#Memtable(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\MapType#nameComparator().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#tryGet(int).mjava,0,0,2,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#reportSeverity(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\LegacyHintsMigrator#deleteLegacyHintsPartition(UUID).mjava,0,0,5,1,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#getAttachment(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool#allocate(int,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#hasDroppedCollectionColumns().mjava,0,1,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateViewStatement#add(CFMetaData,Iterable[ColumnIdentifier],AddColumn).mjava,0,0,7,3,2,0.0,5,3,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics.TableTimer#update(long,TimeUnit).mjava,0,0,1,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\RequestThreadPoolExecutor#inEventLoop(Thread).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedSize(RangeTombstoneMarker,SerializationHeader,long,int).mjava,0,0,5,4,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtableAllocator#offHeap().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#readTypes(String).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#mark(int).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#truncateBlocking(String,String).mjava,0,0,15,2,6,0.19230769574642181,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#disableHintsForDC(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#isStaticCompactTable().mjava,0,20,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getKSChildDirectories(String).mjava,0,0,3,1,3,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\TableMetrics#createTableCounter(String,String).mjava,0,8,9,2,2,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#ensureRoom(int).mjava,0,0,6,1,2,0.0625,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ActiveRepairService#doAntiCompaction(UUID,Collection[Range[Token]]).mjava,0,0,17,2,5,0.032258063554763794,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#iterator(Slice,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator#furtherStartToken(Token,Token,Token).mjava,0,0,4,3,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#flush().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#getValues().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\CompleteMessage#CompleteMessage().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SharedExecutorPool#SharedExecutorPool(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy.RangeIterator#RangeIterator(PartitionRangeReadCommand,Keyspace,ConsistencyLevel).mjava,0,0,9,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#StreamCoordinator(int,boolean,boolean,StreamConnectionFactory).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#isFailureResponse().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event#serialize(ByteBuf,int).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#columns(String...).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#init().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#schema(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#setCompactionType(OperationType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#BatchQueryOptions(QueryOptions,List[Object]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addPrimaryKeyLivenessInfo().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getPos().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\HistogramBuilder#HistogramBuilder().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadResponse.RangeSliceSerializer#serializedSize(ReadResponse,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UpdateParameters#addTombstone(ColumnDefinition,CellPath).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ColumnCondition.Raw#prepare(String,ColumnDefinition).mjava,0,0,26,2,3,0.0,624,8,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getLargeMessageCompletedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#Gossiper().mjava,0,0,3,0,1,8.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplica#create(File,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#getEndpointToRangesMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnfilteredDeserializer#create(CFMetaData,DataInputPlus,SerializationHeader,SerializationHelper,DeletionTime,boolean).mjava,0,0,0,6,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#addMerkleTree(int,byte,Range[Token]).mjava,0,0,1,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(File,boolean,Throwable).mjava,0,0,5,3,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#hasPartitionKeyRestrictions().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FilterFactory#createFilter(int,long,int,boolean,boolean).mjava,0,0,0,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getLoadString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\WritetimeOrTTLSelector#newFactory(ColumnDefinition,int,boolean).mjava,0,0,4,3,0,0.0,1,0,13,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AtomicBTreePartition#updateWastedAllocationTracker(long).mjava,0,0,4,1,4,0.2380952388048172,10,5,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\StreamStateStore#handleStreamEvent(StreamEvent).mjava,0,0,1,1,1,0.0,3,2,8,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#finishOnClose().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\IncomingFileMessage#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#NodeCursor(Object[],NodeCursor[K],Comparator[#-super-K]).mjava,0,0,2,3,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnsAsColumns(CFMetaData,Iterator[LegacyLayout.LegacyCell]).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Barrier#issue().mjava,0,4,1,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serializedSize(ReplayPosition).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\Hint#apply().mjava,0,1,6,0,1,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\ExpiredTraceState#ExpiredTraceState(UUID,Tracing.TraceType).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#checkNotReplaced(Iterable[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\DisableHintsForDC#execute(NodeProbe).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPWorker#startSpinning().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector#defaultCellPerPartitionCountHistogram().mjava,0,2,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor#closeAllWriters().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\BatchMessage#execute(QueryState).mjava,0,0,43,1,12,0.04411764815449715,300,11,52,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRawCachedPartition(DecoratedKey).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performScrub(ColumnFamilyStore,boolean,boolean,boolean).mjava,0,0,3,4,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer.FailureDetectorSourceFilter#shouldInclude(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getRangeAddresses(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#[T]_newTaskFor(Runnable,T).mjava,0,0,2,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#compareUnsigned(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\CassandraAuthorizer#authorize(AuthenticatedUser,IResource).mjava,0,0,6,2,1,0.05000000074505806,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.OutgoingMessageHandler#OutgoingMessageHandler(StreamSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#createFake(String,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getGossipInfo().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#releaseReferences().mjava,0,2,4,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientState#getRawKeyspace().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeInt(int).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairMessageVerbHandler#doVerb(MessageIn[RepairMessage],int).mjava,0,0,54,2,19,0.06060606241226196,104,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getAllStreamSessions().mjava,0,1,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemoryUtil#setAttachment(ByteBuffer,Object).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#resetAndTruncate(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#isEmpty().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getGossipMessageCompletedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.SliceRestriction#getFunctions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getEstimatedResultRows().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#contains(T).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_select(T,Collection[T]).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\CollectionSerializer#readValue(ByteBuffer,int).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#ackCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\Version#equals(Object).mjava,0,0,3,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#close().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#complete().mjava,0,1,8,0,0,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers#without(String).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tracing\TraceState#trace(String,Object[]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getLevelSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#createTempFile(String,String,File).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toDouble(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#logFilePaths().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#replacementQuarantine(InetAddress).mjava,0,0,3,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\Ref#ref().mjava,0,0,2,0,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#DatacenterSyncWriteResponseHandler(Collection[InetAddress],Collection[InetAddress],ConsistencyLevel,Keyspace,Runnable,WriteType).mjava,0,0,7,6,2,0.2142857164144516,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AllSignal#isSet().mjava,0,0,1,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#TypeParser(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#getStreamId().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TypeCast#prepare(String,ColumnSpecification).mjava,0,0,9,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#wildcard(CFMetaData).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#dispatchOffset().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.DispatchHintsTask#dispatch().mjava,0,1,7,0,1,0.0,9,4,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#logSample(long).mjava,0,0,4,1,3,0.1538461595773697,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Config#isClientMode().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#validate().mjava,0,3,11,0,0,0.0,512,9,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SnapshotTask.SnapshotCallback#response(MessageIn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#updateIsGlobalOrLocal().mjava,0,3,4,0,1,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamReader.StreamDeserializer#columns().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.TransactionalProxy#doAbort(Throwable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#disableAutoCompaction(String,String...).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_builder(Comparator[#-super-V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SetKeyspace#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCounterWriteRpcTimeout(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\LengthAvailableInputStream#skip(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.Void#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#maxsize(Range[Token],int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#globalLeafIndex().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SSTableSplitter.SplittingCompactionTask#SplittingCompactionTask(ColumnFamilyStore,LifecycleTransaction,int).mjava,0,0,0,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getScores().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#stopUnsafe(boolean).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#newTaskAttemptContext(Configuration,TaskAttemptID).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\ShortSerializer#serialize(Short).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\IntegerSerializer#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcKeepAlive().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getRMIClientSocketFactory().mjava,0,1,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrayBackedBoundedStats[FailureDetector]#mean().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\ChecksummedSequentialWriter#ChecksummedSequentialWriter(File,int,File).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies#newCoalescingStrategy(String,int,Logger,String).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement#buildCasFailureResultSet(RowIterator,Iterable[ColumnDefinition],boolean,QueryOptions).mjava,0,0,14,4,4,0.17391304671764374,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Component#Component(AbstractType[#],List[AbstractType[#]],Map[ByteBuffer,AbstractType[#]],Map[ByteBuffer,AbstractType[#]],EncodingStats).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenFilter#isOnToken().mjava,0,0,2,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnFilter.Builder#select(ColumnDefinition,CellPath).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#isForThrift().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#intersects(List[ByteBuffer],List[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\WrappedDataOutputStreamPlus#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionResolver#get(String,FunctionName,List[#-extends-AssignmentTestable],String,String,AbstractType[#]).mjava,0,0,26,6,4,0.18867924809455872,3072,11,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ListType#compareCustom(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinition(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TupleType#references(AbstractType[#]).mjava,0,0,1,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Helpers#[T]_filterIn(Iterable[T],Set[T]...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.EmptyCellPath#copy(AbstractAllocator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#describeRingJMX(String).mjava,0,0,5,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#getTotalSizeInProgress(Collection[ProgressInfo]).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType.CollectionPathSerializer#serializedSize(CellPath).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\UserType#toJSONString(ByteBuffer,int).mjava,0,0,16,2,4,0.0,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TermSlice#hasBound(Bound).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\AbstractClusteringIndexFilter.FilterSerializer#deserialize(DataInputPlus,int,CFMetaData).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\LongSerializer#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\UnfilteredPartitionIterators#getOnlyElement(UnfilteredPartitionIterator,SinglePartitionReadCommand).mjava,0,0,10,2,2,0.3529411852359772,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BiMultiValMap#putAll(Map[#-extends-K,#-extends-V]).mjava,0,0,4,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationListener#onDropAggregate(String,String,List[AbstractType[#]]).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#takeWorkPermit(boolean).mjava,0,0,7,1,4,0.0,7,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MurmurHash#hash2_64(ByteBuffer,int,int,long).mjava,0,0,15,4,7,0.0,36,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#newGenericCounter(String,String,long).mjava,0,0,1,3,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DefaultValue#set(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#mutateCounter(CounterMutation,String).mjava,0,0,22,2,7,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#getProtocolVersion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\Stack#Stack(Stack).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#Mutation(String,DecoratedKey,Map[UUID,PartitionUpdate]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#shutdown().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ColumnDefinition.Kind#isPrimaryKeyKind().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand#withMetricsRecording(UnfilteredPartitionIterator,TableMetrics,long).mjava,0,0,29,3,3,0.0,16,4,35,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\ColumnSubselection#slice(ColumnDefinition,CellPath,CellPath).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#getPartitionKeyBoundsForTokenRestrictions(IPartitioner,QueryOptions).mjava,0,0,11,2,7,0.7692307829856873,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#componentCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#position().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeChar(int).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\SetCompactionThreshold#execute(NodeProbe).mjava,0,0,12,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition#hasRows().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Murmur3Partitioner.LongToken#increaseSlightly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\KeyspaceElementName#getKeyspace().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\YamlConfigurationLoader#loadConfig(URL).mjava,0,0,7,1,5,0.03703703731298447,1,0,19,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UserTypes.DelayedValue#bind(QueryOptions).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\DataLimits.CQLLimits#hasEnoughLiveData(CachedPartition,int).mjava,0,0,10,2,1,0.5,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#addTo(Ref.IdentityCollection).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\Memory#checkBounds(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,4,2,0,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#containsKey(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#unregisterIndex(Index).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#RowUpdateBuilder(CFMetaData,long,int,Mutation).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#fetchTables(String,Types).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable#addAndGetIndex(ColumnDefinition,List[ColumnDefinition]).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\management\StreamEventJMXNotifier#onSuccess(StreamState).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.ArrayBackedSlices.InForwardOrderTester#isDone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\PartitionKeyIndex#PartitionKeyIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#tokensFromString(String).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#get(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#one(SinglePartitionReadCommand).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogMaxCompressionBuffersInPool().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RangeStreamer#useStrictSourcesForRanges(String).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\OpOrder.Group#expire().mjava,0,1,2,0,1,0.0714285746216774,7,4,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\TokenRelation#TokenRelation(List[ColumnIdentifier.Raw],Operator,Term.Raw).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\ArrayBackedBoundedStats[FailureDetector]#add(long).mjava,0,0,1,1,0,0.0,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#fireErrorAndComplete(String,int,int,String).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\HadoopCompat#newInstance(Constructor[#],Object...).mjava,0,0,1,2,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#size().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator#SSTableReversedIterator(SSTableReader,FileDataInput,DecoratedKey,RowIndexEntry,ColumnFilter,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SyncUtil#sync(FileOutputStream).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DeleteStatement#addUpdateForKey(PartitionUpdate,Clustering,UpdateParameters).mjava,0,0,28,3,2,0.07894736528396606,5,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#notifyCreateView(ViewDefinition).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_float(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\ViewManager.ForStore#addView(View).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ReadCommand.LegacyPagedRangeCommandSerializer#deserialize(DataInputPlus,int).mjava,0,0,26,2,19,0.2368421107530594,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#buildForRelation(Operator).mjava,0,0,2,1,1,0.529411792755127,11,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selector.Factory#getColumnSpecification(CFMetaData).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#getRanges().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[C,K-extends-C,V-extends-C]_build(Collection[K],UpdateFunction[K,V]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\SigarLibrary#isSwapEnabled().mjava,0,1,3,0,2,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.CircularList#insertAfter(T,T).mjava,0,0,0,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(File).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createCachedThreadpoolWithMaxSize(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\SessionInfo#SessionInfo(InetAddress,int,InetAddress,Collection[StreamSummary],Collection[StreamSummary],StreamSession.State).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegmentManager#shutdown().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyBasePartitionIterator#next().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getFileDataInput(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#speculativeRetry(SpeculativeRetryParam).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement#orderResults(ResultSet).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getRack().mjava,0,1,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#clusteringValue(ColumnDefinition,Resolver).mjava,0,0,13,2,5,0.0,3,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Directories#getBackupsDirectory(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\FailureDetector#FailureDetector().mjava,0,0,2,0,1,0.09090909361839294,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CBuilder.ArrayBackedBuilder#comparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfValueList(List[ByteBuffer]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\AbstractFunction#argTypes().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressedStreamReader#read(ReadableByteChannel).mjava,0,0,21,1,9,0.08888889104127884,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SimpleStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,10,2,5,0.06666667014360428,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Message#connection().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(Iterator[LegacyLayout.LegacyCell],boolean).mjava,0,0,13,2,4,0.10000000149011612,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LivenessInfo.ExpiringLivenessInfo#isExpiring().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Tuples.Literal#getText().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\InstrumentingCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker.MultiColumnRaw#prepare(String,ColumnSpecification).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#isPackage(String).mjava,0,0,3,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WritetimeOrTTL.Raw#Raw(ColumnIdentifier.Raw,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.BTreeRange#indexOf(Object).mjava,0,0,2,1,2,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#JavaUDF(DataType,DataType[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#LegacyLayout().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset(InetAddress).mjava,0,0,3,1,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.Pager#isExhausted().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#DynamicEndpointSnitch(IEndpointSnitch).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#buildSummaryAtLevel(int).mjava,0,0,12,1,3,0.0476190485060215,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#needsCleanup(SSTableReader,Collection[Range[Token]]).mjava,0,0,14,2,5,0.36666667461395264,34,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\BatchStatement#isLogged().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#addColumnToSchemaMutation(CFMetaData,ColumnDefinition,long,Mutation).mjava,0,0,16,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#gcGraceSeconds(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\SEPExecutor#onCompletion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#isRemote().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Hex#[T]_getProtectedConstructor(Class[T],Class[#]...).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\SingleColumnRestriction.ContainsRestriction#copyKeysAndValues(ContainsRestriction,ContainsRestriction).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ResultSet#lastRow().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DoubleType#fromJSONObject(Object).mjava,0,0,7,1,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringComparator#make(Object...).mjava,0,0,7,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#difference(MerkleTrees,MerkleTrees).mjava,0,0,4,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SnitchProperties#SnitchProperties().mjava,0,0,7,0,3,0.08695652335882187,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#setInputNativeSSLTruststorePath(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\StartupMessage#upperCaseKeys(Map[String,String]).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\BatchQueryOptions#withPerStatementVariables(QueryOptions,List[List[ByteBuffer]],List[Object]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairSession#waitForValidation(Pair[RepairJobDesc,InetAddress],ValidationTask).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#isMap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#repairAsync(String,Map[String,String]).mjava,0,0,23,2,1,0.15000000596046448,6,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\ClearSnapshot#execute(NodeProbe).mjava,0,0,15,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\IncludingExcludingBounds#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#addSessionInfo(SessionInfo).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\PartitionerDefinedOrder#fromJSONObject(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#performLocally(Stage,Runnable).mjava,0,0,4,2,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#complexDeletion().mjava,0,18,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CallbackInfo#CallbackInfo(InetAddress,IAsyncCallback,IVersionedSerializer[#],boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#internalClose().mjava,0,1,2,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#getMemtableFor(OpOrder.Group,ReplayPosition).mjava,0,0,4,2,0,0.75,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriter.Session#close().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsWriteExecutor.FlushBufferPoolTask#FlushBufferPoolTask(HintsBufferPool).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#value().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\SimpleDateType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Adder#Adder(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\PasswordAuthenticator#requireAuthentication().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\SimpleCondition#awaitNanos(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\RoleResource#RoleResource().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(String,boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator.HostStreamingData#connectAllStreamSessions().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\EstimatedHistogramReservoir.HistogramSnapshot#getMean().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SimpleDateSerializer#dayToTimeInMillis(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getDroppableTombstoneRatio().mjava,0,0,7,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\CQLSSTableWriter.Builder#createKeyspaceWithTable(CFMetaData).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ClientWarn#getWarnings().mjava,0,1,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FastByteOperations#copy(ByteBuffer,int,byte[],int,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\SetSerializer#getElementCount(Set[T]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeByte(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#without(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\exceptions\FunctionExecutionException#create(Function,Throwable).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\AbstractReadCommandBuilder#withLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\AbstractQueryPager.Pager#onClose().mjava,0,0,5,0,1,0.1428571492433548,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\LongSerializer#toString(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader.Serializer#writeType(AbstractType[#],DataOutputPlus).mjava,0,0,3,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\ViewWriteMetrics#release().mjava,0,0,8,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#makeCreateKeyspaceMutation(String,KeyspaceParams,long).mjava,0,0,7,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#replay(RateLimiter,Set[InetAddress]).mjava,0,0,8,2,1,0.09090909361839294,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.FlushRunnable#getDirectories().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\LegacyBatchlogMigrator#getStoreMutation(Batch,int).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CacheService#CacheService().mjava,0,0,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getMovingNodes().mjava,0,0,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetSSTables#execute(NodeProbe).mjava,0,0,7,1,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredSerializer#serializedRowBodySize(Row,SerializationHeader,long,int).mjava,0,0,26,4,7,0.0,64,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types.Builder#add(Iterable[UserType]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#withNewRight(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQLFragmentParser#[R]_parseAny(CQLParserFunction[R],String,String).mjava,0,0,6,3,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\messages\OutgoingFileMessage#complete().mjava,0,2,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\Int32Type#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseReader#createBuffer(int).mjava,0,0,12,1,3,0.3499999940395355,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator.Region#allocate(int).mjava,0,0,3,1,1,0.3076923191547394,5,3,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#movedNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(long).mjava,0,0,0,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor.MigrationSubscriber#shouldInvalidate(String,String,CQLStatement).mjava,0,0,8,3,5,0.0,10,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#get(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#keyRangeFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction.INRestriction#addRowFilterTo(RowFilter,SecondaryIndexManager,QueryOptions).mjava,0,0,8,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\SecondaryIndexManager#createIndex(IndexMetadata).mjava,0,0,6,1,2,0.10000000149011612,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.TopologyChange#newNode(InetAddress,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogReplayer#logAndCheckIfShouldSkip(File,CommitLogDescriptor).mjava,0,0,4,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\DataOutputStreamPlus#DataOutputStreamPlus(WritableByteChannel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#getMerkleTree(Token).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\UnknownColumnException#stringify(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#writeTTL(int,DataOutputPlus).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getRawEndpointInfo(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#serialize(CompressionInfo,DataOutputPlus,int).mjava,0,0,4,3,1,0.0833333358168602,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#buildUpdate().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#BloomFilterSerializer().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#digest(MessageDigest).mjava,0,0,10,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\CachedBTreePartition#rowsWithNonExpiringCells().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#isEncryptedChannel(InetAddress).mjava,0,0,14,1,1,0.10000000149011612,13,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getTriggers().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getResultSetIndex(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamPlan#transferFiles(InetAddress,Collection[StreamSession.SSTableStreamingSections]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CounterId#isLocalId().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#Selection(CFMetaData,List[ColumnDefinition],SelectionColumnMapping,boolean,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SystemDistributedKeyspace#failParentRepair(UUID,Throwable).mjava,0,0,6,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#supersedes(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\TableAttributes#asNewTableParams().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalTokens(Collection[Token],InetAddress).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Literal#getText().mjava,0,0,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getAllLevelSize().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogReplicaSet#isPrefixMatch(String,String).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger.NoSpamLogStatement#warn(Object...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\FileUtils#handleFSError(FSError).mjava,0,0,8,1,1,0.07999999821186066,30,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#[T]_sendRR(MessageOut,InetAddress).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Json.PreparedMarker#getRawTermForColumn(ColumnDefinition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#ReconnectableSnitchHelper(IEndpointSnitch,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractConditions#isIfExists().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRow#isStatic().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatchExecutor.DispatchHintsTask#run().mjava,0,0,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\GossipDigest#getMaxVersion().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Sets.DelayedValue#DelayedValue(Comparator[ByteBuffer],Set[Term]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getAllSSTables().mjava,0,3,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionEntryIndex#CollectionEntryIndex(ColumnFamilyStore,IndexMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SafeMemory#checkBounds(long,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Ring#printDc(NodeProbe,String,String,LinkedHashMultimap[String,String],SetHostStat,boolean).mjava,0,0,31,6,14,0.01886792480945587,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTable#discoverComponentsFor(Descriptor).mjava,0,0,10,1,3,0.0,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#current().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableRewriter#currentWriter().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#isStopRequested().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#newIsNotRestriction(CFMetaData,VariableSpecifications).mjava,0,0,2,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#updateScores().mjava,0,0,16,0,4,0.2222222238779068,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.Builder#withSSL(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\DynamicList#main(String[]).mjava,0,0,15,1,7,0.03448275849223137,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#incrementDroppedMessages(Verb).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\MemtablePool#getSubPool(long,float).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\SSTableReversedIterator.ReverseIndexedReader#ReverseIndexedReader(RowIndexEntry,FileDataInput,boolean,boolean).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Setter#execute(DecoratedKey,UpdateParameters).mjava,0,0,4,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\GetLoggingLevels#execute(NodeProbe).mjava,0,0,6,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getActiveCompactions().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#doShadowRound().mjava,0,2,6,0,4,0.03333333507180214,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\SyncStat#SyncStat(NodePair,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\ConnectionHandler.MessageHandler#close().mjava,0,5,3,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RebufferingInputStream#readFloat().mjava,0,0,4,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeBuilder#buildFromRange(int,int,boolean,boolean).mjava,0,0,10,4,3,0.09677419066429138,16,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\FloatType#FloatType().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.AndThen#get(Runnable,Runnable).mjava,0,0,0,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType.Builder#Builder(CompositeType,List[ByteBuffer],byte[],boolean).mjava,0,0,1,4,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\DefaultNameFactory#createMetricName(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\CoalescingStrategies.TimeHorizonMovingAverageCoalescingStrategy#ix(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\CleanupMessage.CleanupMessageSerializer#serialize(CleanupMessage,DataOutputPlus,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimestampType#isValueCompatibleWithInternal(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#logExceptionsAfterExecute(Runnable,Throwable).mjava,0,0,4,2,1,0.4285714328289032,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#baseClustering().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\AbstractPaxosCallback#AbstractPaxosCallback(int,ConsistencyLevel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotExists(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawTuple#isCollection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\UpdateStatement#UpdateStatement(StatementType,int,CFMetaData,Operations,StatementRestrictions,Conditions,Attributes).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\EncodingStats#equals(Object).mjava,0,0,2,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#build(ByteBuffer...).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#saveSummary(SegmentedFile.Builder,SegmentedFile.Builder).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getMaximumThreads().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropType(UserType).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDAggregate#equals(Object).mjava,0,0,7,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\UntypedResultSet.FromPager#one().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytesToHex(ByteBuffer).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsDispatcher#dispatch(HintsReader.Page).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\ReconnectableSnitchHelper#reconnect(InetAddress,InetAddress).mjava,0,0,11,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\ComplexColumnData#iterator().mjava,0,9,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\OptionsMessage#execute(QueryState).mjava,0,0,6,1,3,0.0833333358168602,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader.Builder#applyMetadata(CompressionMetadata).mjava,0,0,4,1,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLiveSSTables().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout.LegacyRangeTombstone#clustering().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputNativeConnectionTimeout(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#SchemaKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getInet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ErrorMessage#wrap(Throwable,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicBadnessThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.ViewFragment#ViewFragment(List[SSTableReader],Iterable[Memtable]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowUpdateBuilder#deleteRow(PartitionUpdate,long,int,Object...).mjava,0,0,15,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\OptionCodec#OptionCodec(Class[T]).mjava,0,0,8,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#crcCheckChance(double).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\pager\SinglePartitionPager#SinglePartitionPager(SinglePartitionReadCommand,PagingState,int).mjava,0,0,2,3,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#Hashable(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\TreeCursor#TreeCursor(Comparator[#-super-K],Object[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo.Holder#started().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DataRange#isNamesQuery().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\progress\ProgressEvent#getMessage().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\PropertyDefinitions#addProperty(String,String).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getDatacenters().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#getJoiningNodes().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Relation#isMultiColumn().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedRegions.Region#Region(long,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#tempCacheFiles().mjava,0,0,9,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\RevokeRoleStatement#execute(ClientState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Downsampling#getEffectiveIndexIntervalAfterIndex(int,int,int).mjava,0,0,4,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#collectPartitionLevelDeletion(List[UnfilteredRowIterator],MergeListener).mjava,0,0,7,2,4,0.0,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\Throwables#[E-extends-Exception]_perform(DiscreteAction[#-extends-E]...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\CassandraDaemon#CassandraDaemon(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\MetadataCollector.MinMaxIntTracker#update(int).mjava,0,0,0,1,0,0.0,2,3,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps#keySpecOf(ColumnSpecification).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsBuffer#remaining().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Maps.Value#Value(Map[ByteBuffer,ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#announceTypeDrop(UserType).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\PartitionPosition.RowPositionSerializer#serialize(PartitionPosition,DataOutputPlus,int).mjava,0,0,7,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Operation#Operation(ColumnDefinition,Term).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.NativeRingCache#refreshEndpointMap().mjava,0,1,9,0,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\Drain#execute(NodeProbe).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstoneList#grow(long[],int,int,int).mjava,0,0,3,4,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\StandaloneSSTableUtil#listFiles(Options,CFMetaData,OutputHandler).mjava,0,0,6,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\KeyspaceElementName#setKeyspace(String,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawType#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SystemKeyspace#persistSSTableReadMeter(String,String,int,RestorableMeter).mjava,0,0,4,4,1,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#isEmptyCompactValueColumn(UntypedResultSet.Row).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinitionNameComparator(ColumnDefinition.Kind).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\Schema#dropView(String,String).mjava,0,0,22,2,4,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getTimeouts().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseRows#staticRow().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\CompressionParams#removeEnabled(Map[String,String]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#asNewKeyspaceParams().mjava,0,2,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators#digest(PartitionIterator,MessageDigest).mjava,0,0,3,2,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue.AbstractSignal#awaitUntil(long).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\ReadCallback#getReceivedCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#SSTableSimpleUnsortedWriter(File,CFMetaData,PartitionColumns,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ConcurrentBiMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\SnitchProperties#get(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hasCrossNodeTimeout().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#advanceIntoBranchFromChild(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#baseSlice().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamTransferTask#createMessageForRetry(int).mjava,0,0,3,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaUDF#compose_short(int,int,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getNativeProtocolVersion().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\DateTieredCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,5,2,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Types#builder().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\AbstractRangeTombstoneMarker#isOpen(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\TokenRestriction.EQRestriction#isEQ().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputInitialAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#receiveMessage(DataInputPlus,int).mjava,0,0,10,2,6,0.06666667014360428,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\ViewDefinition#hashCode().mjava,0,0,7,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#triggerDefinitionsToThrift(Triggers).mjava,0,0,4,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Memtable.MemtableUnfilteredPartitionIterator#getMinLocalDeletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serialize(EndpointState,DataOutputPlus,int).mjava,0,0,10,3,3,16.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\NopCacheProvider#create().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlOutputFormat.NullOutputCommitter#setupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getEstimatedTasks().mjava,0,1,9,0,3,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Bounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeSlow(long,int).mjava,0,0,3,2,1,0.0,3,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cache\RefCountedMemory#unreference().mjava,0,12,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsCatalog#maybeLoadStores(Iterable[UUID]).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TypeParser#TypeParser(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#type().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidateHelper(Hashable,Token,Token).mjava,0,0,4,3,1,0.30000001192092896,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.SelectAllSlices#makeSliceIterator(SliceableUnfilteredRowIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#deserializeBounds(DataInput,Version).mjava,0,0,4,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_splits(String,String,String,int).mjava,0,0,7,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#add(SSTableReader).mjava,0,0,10,1,1,0.3478260934352875,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slice#intersects(ClusteringComparator,List[ByteBuffer],List[ByteBuffer]).mjava,0,0,17,3,2,0.46666666865348816,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#hotness(SSTableReader).mjava,0,0,4,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Chunk#recycle().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\JavaBasedUDFunction.EcjCompilationUnit#getContents().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubColumn(LegacyLayout.LegacyCell,ByteBuffer).mjava,0,0,5,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\MultiColumnRelation#MultiColumnRelation(List[ColumnIdentifier.Raw],Operator,Term.MultiColumnRaw,List[#-extends-Term.MultiColumnRaw],Tuples.INRaw).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#customExpressionValueType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#getBloomFilterOffHeapSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath.EmptyCellPath#unsharedHeapSizeExcludingData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\AbstractBTreePartition.AbstractIterator#AbstractIterator(Holder,ColumnFilter,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\concurrent\WaitQueue#cleanUpCancelled().mjava,0,2,5,0,2,0.1111111119389534,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\Validator#prepare(ColumnFamilyStore,MerkleTrees).mjava,0,0,19,2,4,0.0833333358168602,2,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\compress\LZ4Compressor#create(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#handleStreamEvent(StreamEvent).mjava,0,0,37,1,13,0.016949152573943138,35,7,50,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\RepairRunnable#addRangeToNeighbors(List[Pair[Set[InetAddress],#-extends-Collection[Range[Token]]]],Range[Token],Set[InetAddress]).mjava,0,0,7,3,2,0.0,3,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\UnbufferedDataOutputStreamPlus#writeLong(long).mjava,0,0,8,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#instance().mjava,0,141,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\TimeType#getSerializer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Event.SchemaChange#SchemaChange(Change,Target,String,String).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#allocate(int).mjava,0,0,2,1,2,0.0,5,3,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#scrub().mjava,0,3,82,0,12,0.03896103799343109,30744,19,1,7,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#supersedes(Deletion).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIterators.UnfilteredRowMergeIterator#computeNext().mjava,0,0,3,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getValidKeyspace(String).mjava,0,0,3,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.LocalPoolRef#LocalPoolRef(LocalPool,ReferenceQueue[#-super-LocalPool]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamResultFuture#addEventListener(StreamEventHandler).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#cleanupCache().mjava,0,0,21,0,5,0.0,12,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#RestrictionSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnLeader(CounterMutation,String,Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CompositeType#split(ByteBuffer).mjava,0,0,7,1,3,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\AbstractMarker#containsBindMarker().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Builder#add(Slice).mjava,0,0,10,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#executeInternal(CompactionExecutorStatsCollector).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnIndex.Builder#currentPosition().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CreateTableStatement.RawStatement#addDefinition(ColumnIdentifier,CQL3Type.Raw,boolean).mjava,0,0,3,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\FloatSerializer#toString(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\FBUtilities#newMessageDigest(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\messages\RepairOption#getParallelism().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toInt(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.BufferedRandomAccessFileMark#BufferedRandomAccessFileMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getTaskCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server#Server(Builder).mjava,0,0,3,1,1,0.0,4,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SinglePartitionReadCommand.Group#metadata().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\SnapshotDeletingTask#rescheduleFailedTasks().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Indexes#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionHistoryTabularData#from(UntypedResultSet).mjava,0,0,10,1,8,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#baseClusteringBuilder().mjava,0,2,8,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner.BytesToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\IndexMetadata#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogTransaction#doAbort(Throwable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.StatsCollector#applyToDeletion(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions.QueryOptionsWrapper#getSpecificOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Mutation#key().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getShort(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#isNaturalComparator(Comparator[#]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummaryManager#getAverageIndexInterval().mjava,0,0,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getPageSize().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata.Topology#getDatacenterRacks().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\view\TemporalRow#deletionTime(AbstractBTreePartition).mjava,0,0,13,1,4,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionIterators.Logger#applyToPartition(RowIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone#hashCode().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getSmallMessageCompletedTasks().mjava,0,0,7,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#closeSocket(boolean).mjava,0,0,2,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\DropFunctionStatement#findFunction().mjava,0,2,8,0,2,0.0,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\NativeAllocator#NativeAllocator(NativePool).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\CollectionKeyIndex#isStale(Row,ByteBuffer,int).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyRowIterator#EmptyRowIterator(CFMetaData,DecoratedKey,boolean,Row).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\partitions\PartitionUpdate.PartitionUpdateSerializer#deserialize(DataInputPlus,int,SerializationHelper.Flag,ByteBuffer).mjava,0,0,2,4,0,0.0833333358168602,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#getType(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ExcludingBounds#inclusiveLeft().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogRecord#LogRecord(Type,String,long,int,long,String).mjava,0,0,7,6,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Row.Deletion#regular(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Tables#get(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getName().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlConfigHelper#getInputMaxSimultReqPerConnections(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigFormat.BigVersion#isCompatibleForStreaming().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Keyspace#Keyspace(String,boolean).mjava,0,0,7,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\AbstractJmxClient#writeln(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\AuthChallenge#getToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\AbstractBounds#[T-extends-RingPosition[T]]_noneStrictlyWrapsAround(Collection[AbstractBounds[T]]).mjava,0,0,1,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ComparableObjectToken#ComparableObjectToken(C).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\CBUtil#sizeOfValue(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#replaceSSTables(Collection[SSTableReader],Collection[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hints\HintsStore#blacklist(HintsDescriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ClusteringPrefix.Kind#invert().mjava,0,1,0,0,0,0.0,15,1,15,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\CFMetaData.Builder#Builder(String,String,boolean,boolean,boolean,boolean,boolean).mjava,0,0,1,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\AbstractReadExecutor#getReadExecutor(SinglePartitionReadCommand,ConsistencyLevel).mjava,0,0,23,2,7,0.2432432472705841,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\KeyspaceAttributes#getReplicationOptions().mjava,0,1,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\AggregateFunctionSelector#addInput(int,ResultSetBuilder).mjava,0,0,7,2,1,0.10000000149011612,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#digest(MessageDigest).mjava,0,0,2,1,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\paxos\PrepareCallback#replicasMissingMostRecentCommit().mjava,0,1,4,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryProcessor#processPrepared(CQLStatement,QueryState,QueryOptions).mjava,0,0,14,3,1,0.13333334028720856,7,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serializedSize(InetAddress).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\NativeDecoratedKey#NativeDecoratedKey(Token,NativeAllocator,OpOrder.Group,ByteBuffer).mjava,0,0,4,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\ForwardingPrimaryKeyRestrictions#isInclusive(Bound).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_intersect(long[],long[],int,int).mjava,0,0,7,4,27,0.08602150529623032,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\LocalStrategy#recognizedOptions().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\RandomPartitioner.BigIntegerToken#BigIntegerToken(BigInteger).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\nodetool\EnableAutoCompaction#execute(NodeProbe).mjava,0,0,3,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RangeTombstone.Bound.Serializer#deserialize(DataInputPlus,int,List[AbstractType[#]]).mjava,0,0,5,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getTotalCompactionsCompleted().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#fromThrift(String,String,AbstractType[#],AbstractType[#],ColumnDef).mjava,0,0,6,5,3,0.15789473056793213,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\SerializationHelper#isDroppedComplexDeletion(DeletionTime).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\RestrictionSet#getColumnDefs().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getMaxNumberOfEntries().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\ResultMessage.SchemaChange#toThriftResult().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\CollectionType#asCQL3Type().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\NodeCursor#descendToFirstChild(boolean).mjava,0,0,4,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#isEmptyValueMeaningless().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\CallbackInfo#isFailureCallback().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\CassandraIndex#getBuildIndexTask().mjava,0,1,1,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\compress\CompressionInfo.CompressionInfoSerializer#deserialize(DataInputPlus,int).mjava,0,0,3,2,3,0.20000000298023224,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\AbstractType#toJSONString(ByteBuffer,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\Scrubber#withValidation(UnfilteredRowIterator,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\writers\CompactionAwareWriter#doPrepare().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\filter\RowFilter.ThriftExpression#kind().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFunction.Raw#prepare(CFMetaData).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\DeletionTime#localDeletionTime().mjava,0,30,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\TableParams.Builder#readRepairChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#info(long,String,Object...).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\columniterator\AbstractSSTableIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\SequentialWriter#finish().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\locator\TokenMetadata#addMovingEndpoint(Token,InetAddress).mjava,0,0,6,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftServer.ThriftServerThread#run().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\AlterTypeStatement#renames(UTName,Map[ColumnIdentifier,ColumnIdentifier]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selection#getFunctions().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInterruptedException#CompactionInterruptedException(CompactionInfo).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ListPermissionsStatement#ListPermissionsStatement(Set[Permission],IResource,RoleName,boolean).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\ErrorCollector#syntaxError(BaseRecognizer,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\index\internal\composites\ClusteringColumnIndex#isStale(Row,ByteBuffer,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees.TreeRangeIterator#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\SerializationHeader#toComponent().mjava,0,2,2,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#getSchemaKSKey(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAllDataFileLocations().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\View#getCurrentMemtable().mjava,0,8,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getTokenFactory().mjava,0,10,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Server.OptionalSecureInitializer#initChannel(Channel).mjava,0,0,9,1,1,0.260869562625885,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\CellPath#equals(Object).mjava,0,0,6,1,1,0.0,12,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#unregister(IEndpointLifecycleSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Columns#hasSimple().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTrees#partitioner().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\commitlog\CompressedSegment#CompressedSegment(CommitLog).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessageIn#doCallbackOnFailure().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\NoSpamLogger#log(Level,String,long,Object...).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableScanner#getLengthInBytes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\Cells#Cells().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest.NotExistCondition#NotExistCondition(Clustering).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\Descriptor#getTemporaryFiles().mjava,0,1,3,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree#[V]_find(Object[],Comparator[#-super-V],V).mjava,0,0,3,3,2,0.0,5,3,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\UUIDGen#fromUnixTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getDrainProgress().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#handleUnrecognizedOrderingColumn(ColumnIdentifier).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators#unfilteredRow(CFMetaData,DecoratedKey,boolean,Row,DeletionTime).mjava,0,0,4,5,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamCoordinator#getOrCreateSessionById(InetAddress,int,InetAddress).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\FunctionCall.Raw#Raw(FunctionName,List[Term.Raw]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\StatementRestrictions#notNullColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\serializers\InetAddressSerializer#serialize(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\SchemaKeyspace#getSchemaCFS(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\LegacyLayout#makeLegacyCell(Clustering,Cell).mjava,0,0,11,2,3,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\CassandraServer#registerMetrics().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\memory\BufferPool.Debug#recycle(Chunk).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#getVerbHandler(Verb).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#getHostIdForEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\Gossiper#resetEndpointStateMap().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\Constants.Marker#bind(QueryOptions).mjava,0,0,1,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#bootstrapping(Collection[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString(StringBuilder,int).mjava,0,0,18,2,0,0.0,2,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setRolesUpdateInterval(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader.DropPageCache#run().mjava,0,0,3,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\tools\NodeProbe#reloadTriggers().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\gms\EchoMessage.EchoMessageSerializer#serializedSize(EchoMessage,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\messages\CredentialsMessage#execute(QueryState).mjava,0,0,5,1,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\big\BigTableWriter.IndexWriter#append(DecoratedKey,RowIndexEntry,long).mjava,0,0,10,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#register(ILatencySubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\TopKSampler#finishSampling(int).mjava,0,0,2,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#forceAnnounceNewColumnFamily(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader#getCurrentValue().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlBulkOutputFormat#setTableInsertStatement(Configuration,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\MerkleTree#init().mjava,0,1,5,0,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\selection\Selectable.WithFieldSelection.Raw#processesSelection().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\metadata\ValidationMetadata.ValidationMetadataSerializer#serialize(Version,ValidationMetadata,DataOutputPlus).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\batchlog\BatchlogManager.ReplayingBatch#finish(Set[InetAddress]).mjava,0,0,7,1,1,0.05882352963089943,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\net\MessagingService#handleIOException(IOException).mjava,0,0,4,1,0,0.5,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSearchIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\StorageService#stopNativeTransport().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\Range#[T-extends-RingPosition[T]]_normalize(Collection[Range[T]]).mjava,0,0,6,1,1,0.23076923191547394,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\LogFile#isLogFile(File).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\sstable\format\SSTableReader#estimatedKeysForRanges(Collection[Range[Token]]).mjava,0,0,4,1,3,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\RowIndexEntry.Serializer#Serializer(CFMetaData,Version,SerializationHeader).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\SelectStatement.RawStatement#validateDistinctSelection(CFMetaData,Selection,StatementRestrictions).mjava,0,0,8,3,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordWriter.RangeClient#closeInternal().mjava,0,3,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\CQL3Type.Raw.RawCollection#toString().mjava,0,0,0,0,2,0.0,7,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\CounterMutation#getColumnFamilyIds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\BufferCell.Serializer#deserialize(DataInputPlus,LivenessInfo,ColumnDefinition,SerializationHeader,SerializationHelper).mjava,0,0,18,5,12,0.0,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet#subSet(V,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\tokenallocator\ReplicationAwareTokenAllocator.UnitAdjustmentTracker#add(UnitInfo[Unit],double).mjava,0,0,0,2,0,0.0,2,1,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#describeOwnership(List[Token]).mjava,0,0,16,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTree.Builder#reverse().mjava,0,0,0,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#moveToNext().mjava,0,18,1,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\transform\BaseIterator#next().mjava,0,0,1,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#enableAutoCompaction(boolean).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\LoadBroadcaster#startBroadcasting().mjava,0,1,6,0,1,0.1538461595773697,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\LongType#valueLengthIfFixed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\streaming\StreamSession#onError(Throwable).mjava,0,0,5,1,0,0.3333333432674408,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\EmptyIterators.EmptyUnfilteredPartitionIterator#isForThrift().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\restrictions\MultiColumnRestriction#getColumnDefs().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\DecimalType#getSerializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#getShortLength(ByteBuffer,int).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\metrics\HintedHandoffMetrics#incrPastWindow(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\ModificationStatement.Parsed#prepareColumnConditions(CFMetaData,VariableSpecifications).mjava,0,0,13,2,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\Slices.Serializer#serializedSize(Slices,int).mjava,0,0,6,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\QueryOptions#getSerialConsistency().mjava,0,11,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\functions\UDFunction#isCalledOnNullInput().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#compactionId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\cql3\statements\CQL3CasRequest#updatedColumns().mjava,0,1,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\MultiCBuilder#addElementToAll(ByteBuffer).mjava,0,0,6,1,0,0.0,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\repair\NodePair#equals(Object).mjava,0,0,4,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\io\util\BufferedDataOutputStreamPlus#writeLong(long).mjava,0,0,3,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager#shouldPullSchemaFrom(InetAddress).mjava,0,0,5,1,0,0.800000011920929,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\transport\Frame.Decompressor#decode(ChannelHandlerContext,Frame,List[Object]).mjava,0,0,9,3,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\service\MigrationManager.MigrationsSerializer#serializedSize(Collection[Mutation],int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\marshal\ReversedType#getSerializer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\hadoop\cql3\CqlRecordReader.WrappedRow#getDouble(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\utils\btree\BTreeSet.Builder#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\rows\UnfilteredRowIteratorSerializer#serialize(UnfilteredRowIterator,SerializationHeader,ColumnFilter,DataOutputPlus,int,int).mjava,0,0,20,6,4,0.0,512,9,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\Triggers.Builder#add(Iterable[TriggerMetadata]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getOtcCoalescingWindow().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\schema\LegacySchemaMigrator#query(String,Object...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\thrift\ThriftConversion#internalFromThrift(CfDef,boolean,Collection[ColumnDefinition],boolean).mjava,0,0,55,4,12,0.08988764137029648,262144,18,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#afterExecute(Runnable,Throwable).mjava,0,0,10,2,0,0.095238097012043,8,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\ConsistencyLevel#blockFor(Keyspace).mjava,0,0,11,1,2,0.0,23,2,30,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\db\lifecycle\Tracker#notifyAdded(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file3.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#isAnonymous().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
