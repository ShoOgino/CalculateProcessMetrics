C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader.StreamHeaderSerializer#serializedSize(StreamHeader,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getEstimatedColumnCount().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper.BootstrapTokenVerbHandler#doVerb(Message,String).mjava,0,0,10,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#createHardLink(File,File).mjava,0,0,6,2,1,0.1666666716337204,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#parseArgs(String[]).mjava,0,0,29,1,8,0.0,64,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#put(Thread,long).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#isBootstrapped().mjava,0,0,10,0,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#JdbcDecimal().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getKey(Tree).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(Map[Byte,AbstractType]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serializedSize(AbstractBounds).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler(RequestSchedulerOptions).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleStrategy#validateOptions().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#UpdateKeyspace().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#resetAndTruncate(FileMark).mjava,0,0,12,1,3,0.37037035822868347,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\NoScheduler#release().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#JdbcFloat().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serialize(ColumnFamily,DataOutput).mjava,0,0,5,2,0,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#fetchRows(List[ReadCommand],ConsistencyLevel).mjava,0,0,71,2,28,0.07092198729515076,7128,18,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.KeyPosition#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#scheduleSaving(int,int).mjava,0,0,3,2,1,0.0476190485060215,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getString(Collection[ByteBuffer]).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,long,long,long).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#incrementalBackupsEnabled().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#getPrecision(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#isTokenInRanges(Token,Iterable[Range]).mjava,0,0,1,2,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#get(InetAddress,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serialize(Truncation,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastGet(int).mjava,0,0,0,1,3,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token#serializer().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#needsTaskCommit(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#JdbcInteger().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\SocketSessionManagementService#get(SocketAddress).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#getCompletedTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairResponse#doVerb(Message,String).mjava,0,0,12,2,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getHits().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#isDurableWrites().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#isWrapAround(Token,Token).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#getRecentLatencyHistogramMicros().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#formatColumnName(String,String,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#updateHeartBeat().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#deserialize(DataInput,int).mjava,0,0,3,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#get().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#gossiperStarting().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\Interval#encloses(Interval).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#serializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#write(ByteBuffer,List[Mutation]).mjava,0,0,6,2,2,0.1666666716337204,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#subscribe(INotificationConsumer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#isWildcard().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getDatacenter(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#getReduced().mjava,0,0,5,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#segmentsCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#bytesPastMark(FileMark).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getBytesComplete().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#validate(ByteBuffer).mjava,0,0,8,1,1,0.09090909361839294,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#purge(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#MappedFileDataInput(FileInputStream,String,int).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#LexicalUUIDType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#preferredEndpoints(List[InetAddress]).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getWriter(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneOnlyTokenMap().mjava,0,4,5,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#renameIndex(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#serializedSize().mjava,0,1,5,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#awaitTermination().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#hashCode().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#main(String[]).mjava,0,0,71,1,14,0.012820512987673283,504,19,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#fromString(String).mjava,0,0,3,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(Pair[String,String],boolean,String,boolean).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#WrappedCloseableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#getMessage(Integer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRangeSlice(ByteBuffer,AbstractBounds,int,IFilter).mjava,0,0,22,4,10,0.09259258955717087,13,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#getTotalBytes(Iterable[SSTableReader]).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addCounter(QueryPath,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#ExpiringMap(long,Function[Pair[K,V],#]).mjava,0,0,11,2,2,0.0,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#WorkerProcess(TTransport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#getOldLocalNodeIds().mjava,0,1,9,0,5,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumnFamily(String,List[CfDef]).mjava,0,0,4,2,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serialize(EndpointState,DataOutput,int).mjava,0,0,11,3,3,16.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#dropCf(Integer).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getReadCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon#stopServer().mjava,0,1,3,0,0,0.0,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#insertColumn(DecoratedKey[#],ByteBuffer,IColumn).mjava,0,0,10,3,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Filter#getHashCount().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getRandomToken().mjava,0,0,5,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#computeOldShardMerger(ByteBuffer,List[NodeId.NodeIdRecord]).mjava,0,0,41,2,13,0.0833333358168602,26,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#getFileLength().mjava,0,2,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ScrubInfo#ScrubInfo(RandomAccessReader,SSTableReader).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#convict(InetAddress,double).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateCountOperation(SelectStatement).mjava,0,0,8,1,2,0.1666666716337204,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#deserialize(DataInput,int).mjava,0,0,7,2,4,0.05882352963089943,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#processStatementInteractive(String).mjava,0,0,10,1,2,0.0,4,2,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#getSstablesIterated().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#maxCompactionThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer.DeletionInfo#DeletionInfo(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#incrementAndGetGeneration().mjava,0,1,18,0,5,0.13636364042758942,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getMemtableColumnIterator(ColumnFamily,DecoratedKey[#],AbstractType).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#getValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#tailSet(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#nextSetBit(long).mjava,0,0,2,1,3,0.1428571492433548,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#getColumnFamilyIds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#SSTableReader(Descriptor,Set[Component],CFMetaData,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,Filter,long,SSTableMetadata).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#getUpdateTimestamp().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#columnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDiskAccessMode().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#sync().mjava,0,2,8,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#getStreamSources().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#StreamInSession(Pair[InetAddress,Long],Runnable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getComparator(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.NodeIdRecord#NodeIdRecord(NodeId,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#defaultColumnHistogram().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply#getMessage(Integer).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#CustomTNonBlockingServer(Args).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#reduceCacheSize().mjava,0,0,7,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#contains(Range).mjava,0,0,7,1,2,0.25,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,2,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getRangeAddresses(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#moving(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#markCompacted().mjava,0,1,6,0,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#KeysSearcher(SecondaryIndexManager,Set[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_keyspace(String).mjava,0,0,11,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#sendGossip(MessageProducer,Set[InetAddress]).mjava,0,0,10,2,4,4.25,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#MmappedSegmentedFile(String,long,Segment[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#Region(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,CFMetaData,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#deserialize(DataInput,int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#validateSchemaAgreement().mjava,0,6,5,0,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getTotalSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#and(Term).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#removeEndpoint(InetAddress).mjava,0,0,9,1,0,0.1818181872367859,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getColumnCount().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getTimestampedSnapshotName(String).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#getValue().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointStatesSerializationHelper[GossipDigestSynMessage]#serialize(Map[InetAddress,EndpointState],DataOutput,int).mjava,0,0,8,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#putShortLength(ByteBuffer,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#determineBlockFor(String).mjava,0,0,7,1,0,0.0,15,1,15,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#fromString(String).mjava,0,0,3,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#DropKeyspace().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getKey().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#makeMutationMessage(int).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AlterTableStatement#AlterTableStatement(String,OperationType,String,String).mjava,0,0,1,4,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#serializedSize(RowMutation,int).mjava,0,0,7,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#badUse(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#getPendingFiles().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile.PendingFileSerializer#deserialize(DataInput,int).mjava,0,0,13,2,7,0.0555555559694767,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#addToStandardCF(List[#],ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#ToolCommandLine(CommandLine).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reset(FileMark).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#updateCacheSize(long).mjava,0,0,6,1,1,0.0833333358168602,4,3,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceBlockingFlush().mjava,0,5,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getEntryIterator(DecoratedKey).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#clearCallbacksUnsafe().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#markDead().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#close(Iterable[#-extends-Closeable]).mjava,0,0,2,1,1,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#DynamicCompositeType(Map[Byte,AbstractType]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCachedPosition(DecoratedKey,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#QueryFilter(DecoratedKey[#],QueryPath,IFilter).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinitionForIndex(String).mjava,0,0,3,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#pendingRangeChanges(InetAddress).mjava,0,0,4,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#CreationTimeAwareFuture(Future[V]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getReverseComparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#hasRemaining().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowDigestResolver#RowDigestResolver(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#LeveledCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,14,2,3,0.05714285746216774,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#size().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#toString().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.CompactedRowContainer#CompactedRowContainer(DecoratedKey,Future[ColumnFamily]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#readFields(DataInput).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#addColumn(Term,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#clear().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getColumnFamilyStore(Integer).mjava,0,0,1,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compareTimestampBytes(ByteBuffer,ByteBuffer).mjava,0,0,18,2,3,0.0,128,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#stop().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\GCInspector#start().mjava,0,1,3,0,1,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getFormatType(String).mjava,0,0,8,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#serialize(Inner,DataOutput,int).mjava,0,0,7,3,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#getColumnSerializer().mjava,0,12,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#renameIndexes(String).mjava,0,0,3,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Operation#Operation(Term).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getUnleveledSSTables().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessageSerializer[GossipDigestAckMessage]#deserialize(DataInput,int).mjava,0,0,3,2,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#describeColumnFamily(KsDef,CfDef,NodeProbe).mjava,0,0,48,3,8,0.04615384712815285,576,10,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(QueryFilter,int).mjava,0,0,13,2,3,0.09090909361839294,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#includeFinishKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils.FileComparator#compare(File,File).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getMessageType().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#removeOldShards(ColumnFamily,int).mjava,0,0,6,2,3,0.0,5,5,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString(StringBuilder,int).mjava,0,0,18,2,0,0.0,2,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#Memtable(ColumnFamilyStore).mjava,0,0,4,1,2,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#deserialize(DataInput,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentFalsePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printThreadPoolStats(PrintStream).mjava,0,0,18,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#getNextBlock().mjava,0,0,23,0,3,14.666666984558105,108,9,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#convict(InetAddress,double).mjava,0,0,4,2,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#capacity().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#operator().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getEndpointInfo(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#LoaderOptions(File).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset(InetAddress).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeSlice(RangeSliceCommand,ConsistencyLevel).mjava,0,0,41,2,8,0.05263157933950424,12,6,2,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#shouldAddEntry().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,33,2,11,0.0731707289814949,36,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\GetVersion#main(String[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\SocketSessionManagementService#put(SocketAddress,ClientState).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#toString().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#serializedSize(ReadResponse,int).mjava,0,0,9,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getEndToken().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getTotalTimeouts().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#name().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#DeletedColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#isSuccess().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#deserialize(DataInput).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#KeyIterator(Descriptor).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer.RowHeader#RowHeader(BloomFilter,List[IndexHelper.IndexInfo]).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#serialize(RangeSliceCommand,DataOutput,int).mjava,0,0,9,3,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#getColumnFamily().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#onDiskLength().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#createWriter(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractRowResolver#preprocess(Message).mjava,0,0,8,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestVerbHandler#doVerb(Message,String).mjava,0,0,13,2,4,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#decompose(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#difference(MerkleTree,MerkleTree).mjava,0,0,7,2,4,0.0,10,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#entrySet().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumn(Tree,int).mjava,0,0,3,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableBoundedScanner.BoundedKeyScanningIterator#hasNext().mjava,0,0,2,0,0,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#RowIterator(Iterator[Row],InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer.WorkerProcess#run().mjava,0,0,14,0,5,0.09090909361839294,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readChar().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getSortedColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#allocate(int,int,Allocator).mjava,0,0,3,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexedReadBufferSizeInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#AbstractCompactionIterable(CompactionController,OperationType).mjava,0,0,6,2,1,2.799999952316284,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#stringAsType(String,AbstractType).mjava,0,0,3,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#runMayThrow().mjava,0,0,33,0,1,0.0784313753247261,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeAddColumnFamily(Tree).mjava,0,0,11,1,2,0.05000000074505806,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setRowCacheKeysToSave(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\notifications\SSTableListChangedNotification#SSTableListChangedNotification(Iterable[SSTableReader],Iterable[SSTableReader]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#estimatedKeys().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionManagerProxy().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#doSlice(String,ByteBuffer,String,byte[],int).mjava,0,0,41,5,13,0.033898305147886276,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#CompactionController(ColumnFamilyStore,Collection[SSTableReader],int,boolean).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Operation#isUnary().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#equals(Object).mjava,0,0,6,1,1,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serialize(EstimatedHistogram,DataOutput).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#computeNext().mjava,0,0,6,0,1,0.0714285746216774,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#SegmentIterator(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#getKeyAlias().mjava,0,1,0,0,0,2.3333332538604736,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getPath().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printInfo(PrintStream).mjava,0,0,21,1,5,0.21052631735801697,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#isMarkedForDelete().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#predicateFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#requestSelectInterestChange(FrameBuffer).mjava,0,0,2,1,0,0.1428571492433548,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#replace(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,7,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#cancel(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#add(CommitLog.LogRecordAdder).mjava,0,0,2,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#load(ColumnFamilyStore,LeveledManifest).mjava,0,0,12,2,6,0.03125,4,2,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairTaskSerializer#deserialize(DataInput,int).mjava,0,0,11,2,8,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#serialize(Leaf,DataOutput).mjava,0,0,3,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#contains(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#ProgressIndicator(Map[InetAddress,Collection[PendingFile]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumns().mjava,0,2,7,0,0,0.25,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getMaxTimestamp().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.CountDownCallback#CountDownCallback(CountDownLatch,InetAddress).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#stop().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#add(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clone().mjava,0,0,1,0,1,0.1111111119389534,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addColumn(IColumn).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintsInProgress().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncPeriod().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#bufferCursor().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#skipIndex(DataInput).mjava,0,0,3,1,2,16.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#copyIntoBytes(byte[],int,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#decommission().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#deserialize(DataInputStream,int).mjava,0,0,5,2,5,0.0,2,1,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#main(String[]).mjava,0,0,25,1,6,0.0,8,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#serializedSize(RangeSliceCommand,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLength().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getReadOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#submitArtificialRepairSession(TreeRequest,String,String...).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedCF(ColumnFamily,int).mjava,0,0,3,2,0,0.6666666865348816,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readBytes(int).mjava,0,0,11,1,3,0.06666667014360428,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#joinRing().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#apply(org.apache.cassandra.db.migration.avro.CfDef).mjava,0,0,53,1,6,0.06896551698446274,10240,14,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#execute_cql_query(ByteBuffer,Compression).mjava,0,0,16,2,7,0.017543859779834747,21,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSlicePredicate(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#isEOF().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#left(Token,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#next().mjava,0,0,2,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#scrub(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#Schema(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#deserialize(ByteBuffer,int).mjava,0,0,17,2,4,0.14814814925193787,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#getSegment(long).mjava,0,0,2,1,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#resolve().mjava,0,0,13,0,5,0.13333334028720856,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#login(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSubsnitchClassName().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#applyModels().mjava,0,0,13,0,2,0.2777777910232544,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage#StreamRequestMessage(InetAddress,PendingFile,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#BatchCommitLogExecutorService(int).mjava,0,0,2,1,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getToken(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(DecoratedKey,QueryPath,ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,2,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#updateCacheSizes().mjava,0,3,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#GossipDigest(InetAddress,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPhiConvictThreshold().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#SuperColumnSerializer(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(CFMetaData,ISortedColumns.Factory).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#getLocalDeletionTime().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#validateConfiguration().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#finalize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#setHintedHandoffEnabled(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#deserializeIndex(FileDataInput).mjava,0,0,6,1,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeySamples(Range).mjava,0,0,9,1,2,0.0,6,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompleter#getKeyspaceCommands().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop(long).mjava,0,0,0,1,0,1.4444444179534912,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#SSTableNamesIterator(SSTableReader,FileDataInput,DecoratedKey,SortedSet[ByteBuffer]).mjava,0,0,1,4,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#SizeTieredCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#floor(long).mjava,0,0,2,1,2,0.1111111119389534,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getColumnFamilyStore(String).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#CompressedSegmentedFile(String,CompressionMetadata).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#validate(ByteBuffer).mjava,0,0,4,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamilyIds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#includeFinishKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\SocketSessionManagementService#remove(SocketAddress).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#markCompacting(Collection[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getComparator(String,String).mjava,0,0,1,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#getScale(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getSnapshotPath(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getLength().mjava,0,24,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#getSubSplits(String,String,TokenRange,Configuration).mjava,0,0,7,4,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#JdbcAscii().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#hasOption(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#getFilter(long,int).mjava,0,0,7,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#toString(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getTotalLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#getColumns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#equals(Object).mjava,0,0,0,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#init().mjava,0,2,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CallbackInfo#shouldHint().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.MergeTask#call().mjava,0,0,4,0,2,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDelColumnFamily(Tree).mjava,0,0,7,1,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setCompactionThroughputMbPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#getSeeds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#isDone().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#makeColumns(Message).mjava,0,0,10,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getValidatorForValue(CfDef,byte[]).mjava,0,0,7,2,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetAndTruncate(FileMark).mjava,0,0,4,1,1,0.3571428656578064,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token#hashCode().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowDigestResolver#resolve().mjava,0,0,18,0,6,0.1794871836900711,60,8,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#forceNewerGenerationUnsafe().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#fromString(String).mjava,0,0,23,1,3,0.08695652335882187,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#maybeBuildSecondaryIndexes(Collection[SSTableReader],SortedSet[ByteBuffer]).mjava,0,0,10,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#isEmpty().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getBadnessThreshold().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#close().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Throttle#throttle(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#toString().mjava,0,0,11,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromAvro(org.apache.cassandra.db.migration.avro.ColumnDef).mjava,0,0,6,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#sync().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#main(String[]).mjava,0,0,26,1,6,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#DecimalType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\OperationType#OperationType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#get(K).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#disconnect().mjava,0,2,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#intern(ByteBuffer).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#createThriftClient(String,int).mjava,0,0,1,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#initCaches().mjava,0,1,16,0,2,0.05000000074505806,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.RepairJob#completedSynchronization(Differencer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#skipBloomFilter(DataInput).mjava,0,0,3,1,2,16.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#deserialize(FileDataInput).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#validate().mjava,0,1,23,0,4,0.12962962687015533,192,10,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.Invocation#Invocation(FrameBuffer,SelectorThread).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#asAvroOptions().mjava,0,1,9,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#merge(ByteBuffer,ByteBuffer,Allocator).mjava,0,0,53,3,12,0.07608695328235626,196,14,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMemtable().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#isDeadState(EndpointState).mjava,0,0,3,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#removeDeletedAndOldShards(boolean,CompactionController,ColumnFamily).mjava,0,0,5,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#ensureCapacityWords(int).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getRowCacheMBean(String,String).mjava,0,0,1,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#createDefaultInstance().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#beforeAppend(DecoratedKey[#]).mjava,0,0,6,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(List[CreationTimeAwareFuture[#]],long,TimeUnit).mjava,0,0,1,3,0,0.0,1,0,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#computeExpireTime().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#setValidator(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#forceNewSegment().mjava,0,1,5,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#getScanners(Iterable[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#RowRepairResolver(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AlterTableStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#componentsFor(Descriptor,Descriptor.TempState).mjava,0,0,10,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getCompactedRow(SSTableIdentityIterator).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#asByteArray().mjava,0,2,1,0,0,0.4000000059604645,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitBackground(ColumnFamilyStore).mjava,0,0,12,1,2,0.0,4,2,20,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#RangeSliceCommand(String,ColumnParent,SlicePredicate,AbstractBounds,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#serializedSize(EstimatedHistogram).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#newSystemMetadata(String,int,String,AbstractType,AbstractType).mjava,0,0,7,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#getLength().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#minTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#containsValue(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#reBuffer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getColumnName().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,2,1,0,0.15789473056793213,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#handleAccept().mjava,0,1,7,0,3,0.21739129722118378,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#shutdown().mjava,0,0,3,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getNonSystemTables().mjava,0,7,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#dumpInterArrivalTimes().mjava,0,0,5,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CorruptedBlockException#CorruptedBlockException(String,CompressionMetadata.Chunk).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#getTable().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#echoData(DataOutput).mjava,0,0,5,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#factory().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#deserialize(DataInput).mjava,0,0,3,1,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#toAvro().mjava,0,3,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getValueValidator(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#min().mjava,0,2,2,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#gcGraceSeconds(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#markAlive().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#serializedSize().mjava,0,4,1,0,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#reconcile(IColumn,Allocator).mjava,0,0,23,2,0,0.2916666567325592,20,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#files(File,String).mjava,0,0,8,2,3,0.11764705926179886,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#isCommutative().mjava,0,12,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,9,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelCount().mjava,0,1,1,0,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getRangesWithSources(String).mjava,0,0,15,1,5,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getKeyCacheSavePeriodInSeconds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToUnreachableMember(MessageProducer).mjava,0,0,5,1,4,1.600000023841858,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#getOutputCommitter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowDigestResolver#isDataPresent().mjava,0,0,2,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#BytesReadTracker(DataInput).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyCounterSuperColumns(Collection[IColumn],boolean).mjava,0,0,8,2,3,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#hexToBytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#toString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessageSerializer[GossipDigestSynMessage]#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#fromAvro(org.apache.cassandra.db.migration.avro.CfDef).mjava,0,0,47,1,8,0.05747126415371895,4096,12,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IdentityQueryFilter#IdentityQueryFilter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#hasToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastSet(int).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#isDataPresent().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#checkOutputSpecs(JobContext).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getCachedEndpoints(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#SocketThread(ServerSocket,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalNode#getRightIntervals(List[Interval]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#MessagingService().mjava,0,0,17,0,6,0.0555555559694767,8,3,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#AutoSavingCache(ICache[K,V],String,String,ColumnFamilyStore.CacheType).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#getStatement(String).mjava,0,0,3,1,5,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMaxRowSize().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#addMicro(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#isPutCopying().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#renameWithConfirm(String,String).mjava,0,0,1,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#addSystemTable(KSMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CallbackInfo#CallbackInfo(InetAddress,IMessageCallback,Message).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz2(long).mjava,0,0,0,1,2,0.125,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long).mjava,0,0,0,1,3,0.2857142984867096,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#allKeySamples().mjava,0,0,4,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getOptionValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#updateScores().mjava,0,0,10,0,0,0.0,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#setDetail(String,byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String,TypeParser).mjava,0,0,11,2,6,0.07999999821186066,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTNonBlockingServer#requestInvoke(FrameBuffer).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#createAuthenticatedClient(TSocket,Configuration).mjava,0,0,9,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#getColumnFamilyName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getLevelSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#absoluteFromFraction(double,long).mjava,0,0,1,2,0,0.20000000298023224,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#validateFields(CFMetaData).mjava,0,0,0,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#serializedSize(Truncation,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\AbstractStatsDeque#sum().mjava,0,2,0,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getJobJarLocation().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getRack(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#connect(String,int).mjava,0,0,28,2,7,0.020618556067347527,64,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#validateFields(CFMetaData).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#compose(ByteBuffer).mjava,0,0,4,1,3,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#writeRow(DecoratedKey,ColumnFamily).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#run().mjava,0,0,6,0,2,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRangesMM(String).mjava,0,0,3,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#StreamingService().mjava,0,0,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#copyOpts(CFMetaData,CFMetaData).mjava,0,0,16,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRowCacheKeysToSave().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#notifyAdded(SSTableReader).mjava,0,0,1,1,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#waitForSchemaAgreement(InetAddress).mjava,0,0,11,1,2,0.2380952388048172,9,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#subSet(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#Deserializer(SSTableScanner,int).mjava,0,0,13,2,2,0.0,9,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#serializer().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#diff(ByteBuffer,ByteBuffer).mjava,0,0,13,2,6,0.1037735864520073,140,19,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#computeNext().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(String,String,boolean,String,boolean).mjava,0,0,2,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#skipBytes(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getBalancedToken(TokenMetadata,Map[InetAddress,Double]).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#CounterColumnType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#toUTF8Bytes(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#getHashBuckets(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#add(RowMutation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#compareTo(Range).mjava,0,0,3,1,0,0.5714285969734192,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaximumCompactionThreshold().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#collectReducedColumns(IColumnContainer,Iterator[IColumn],int).mjava,0,0,18,3,3,0.07999999821186066,33,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#sync().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#RenameKeyspace(String,String).mjava,0,0,8,2,2,0.0714285746216774,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getBytesRead().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#splitHelper(Hashable,Token,Token,byte,Token).mjava,0,0,10,5,2,0.3888888955116272,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#convertFromDiskFormat(ByteBuffer).mjava,0,0,8,1,3,0.0833333358168602,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat.SplitCallable#call().mjava,0,0,10,0,4,0.125,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#search(IndexClause,AbstractBounds,IFilter).mjava,0,0,6,3,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpoints(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamilies().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getEstimatedTasks().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#observeColumnsInSSTable(CFMetaData,RandomAccessFile,SSTableMetadata.Collector).mjava,0,0,6,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#queue(Thread,String,long).mjava,0,0,5,3,1,0.03999999910593033,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#isCapacitySetManually().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#instance().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#maybeAddEntry(DecoratedKey[#],long).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#metadata(String).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserializeColumns(DataInput,ColumnFamily,int,boolean).mjava,0,0,4,4,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#ReadCommand(String,ByteBuffer,QueryPath,byte).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#isLive().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#formatSubcolumnName(String,String,ByteBuffer).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTempSSTablePath(String,String).mjava,0,1,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#isUserDefined(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#getTimeToLive().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalToken#compareTo(Token[ByteBuffer]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#resourceClear().mjava,0,4,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#HeartBeatState(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addFalsePositive().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#AbstractCompactionTask(ColumnFamilyStore,Collection[SSTableReader]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#get(long,TimeUnit).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#OutboundTcpConnectionPool(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getComparator().mjava,0,13,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#init(String).mjava,0,0,23,1,9,0.04651162773370743,2,1,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#compare(ByteBuffer,ByteBuffer).mjava,0,0,12,2,8,0.38235294818878174,120,8,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getMaxHintWindow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#hash(ByteBuffer...).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#getPrecision(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient.Function#getFunctionNames().mjava,0,3,6,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getVerbHandler(StorageService.Verb).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SkipNullRepresenter#representJavaBeanProperty(Object,Property,Object,Tag).mjava,0,0,0,4,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcTimeout().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogLocation().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#stream().mjava,0,1,15,0,5,0.34375,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\NoScheduler#NoScheduler().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#getData().mjava,0,0,5,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#serialize(V).mjava,0,0,2,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#remove(K).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ReverseSortedCollection#iterator().mjava,0,0,3,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#equals(Object).mjava,0,0,3,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrubDataDirectories(String,String).mjava,0,0,29,2,6,0.11764705926179886,32,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\sink\SinkManager#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#releaseReferences(Iterable[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#add(CommitLog.LogRecordAdder).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scrub().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#[T]_getReadCallback(IResponseResolver[T],IReadCommand,ConsistencyLevel,List[InetAddress]).mjava,0,0,0,4,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#isEnabled().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Hex#bytesToHex(byte...).mjava,0,0,1,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#truncate(String).mjava,0,0,13,1,0,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnsReversed().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_array(long[],int,int).mjava,0,0,7,3,27,0.3333333432674408,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#examineGossiper(List[GossipDigest],List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,13,3,5,3.5,29,7,27,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isCountOperation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingKeyCache#AutoSavingKeyCache(ICache[K,V],String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getColumn(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getKSMetaData(String).mjava,0,0,4,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#KeysIndex().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#equals(Object).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#StaticParsedComparator(AbstractType,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#add(QueryPath,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getCurrentValue().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getMessageBody().mjava,0,24,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#replace(IColumn,IColumn).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#keySet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMinimumCompactionThreshold(int).mjava,0,0,3,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getColumnNames().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#init(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexAccessMode().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getColumnFamilyStores().mjava,0,7,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicBadnessThreshold().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#read(Message).mjava,0,0,3,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getKSMetaData(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#turnOn(Integer,Integer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxName().mjava,0,3,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(float).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#min().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReduceCacheSizesAt().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#search(IndexClause,AbstractBounds,IFilter).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLiveSSTableCount().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#waitForHints(List[CreationTimeAwareFuture[#]]).mjava,0,0,4,1,0,0.1666666716337204,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableDataSize().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcServerType().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#PrecompactedRow(CompactionController,List[SSTableIdentityIterator]).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#cleanupSelectionkey(SelectionKey).mjava,0,0,3,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(List[AbstractType]).mjava,0,0,3,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#getSubColumn(ByteBuffer).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getSuccessor(Token).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupInfo#CleanupInfo(SSTableReader,SSTableScanner).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator#getRegion().mjava,0,1,4,0,1,0.4375,5,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#iterator(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitValidation(ColumnFamilyStore,AntiEntropyService.Validator).mjava,0,0,7,2,1,0.0,2,1,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowDigestResolver#getData().mjava,0,0,4,0,1,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSplitSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#response(Message).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_cluster_name().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#get(long,TimeUnit).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#setKeyType(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType],TypeParser).mjava,0,0,7,2,2,0.0,1,0,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLexicalUUID#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#setCacheCapacities(String,String,int,int).mjava,0,0,4,4,4,0.0,1,0,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getInternal(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#SimpleSliceReader(SSTableReader,FileDataInput,ByteBuffer).mjava,0,0,7,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#NodeCmd(NodeProbe).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DefsTable#getFiles(String,String).mjava,0,0,9,2,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#prepareRowMutations(String,ClientState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#getTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckVerbHandler#doVerb(Message,String).mjava,0,0,25,2,11,1.4736841917037964,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply.FileStatusSerializer#deserialize(DataInput,int).mjava,0,0,4,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateRowCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#IntervalTree(List[Interval]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#nextKeyValue().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationStateMap().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_schema_versions().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getComparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getColumnFamilyType(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputColumnFamily(Configuration,String,String).mjava,0,0,2,3,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#comparator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#newSSTableSegmentThresholdReached(SSTableWriter,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#[T-extends-Comparable]_singleton(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printEndPoints(String,String,String,PrintStream).mjava,0,0,3,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#isReadyToDie(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#byteArrayToInt(byte[]).mjava,0,0,0,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#NodeId(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#handleMajorStateChange(InetAddress,EndpointState).mjava,0,0,16,2,0,0.0833333358168602,12,4,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#getEstimatedColumnCount().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#markDeltaToBeCleared(ByteBuffer).mjava,0,0,6,1,3,0.10000000149011612,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#getHashBuckets(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#rangeSet(Range...).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Chunk#Chunk(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#CompressedRandomAccessReader(String,CompressionMetadata,boolean).mjava,0,0,6,3,0,0.5714285969734192,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#getTotalLatencyMicros().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#isOverflowed().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#mostRecentLiveChangeAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doSort(List[GossipDigest]).mjava,0,0,16,1,7,0.8888888955116272,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#filterSuperColumn(SuperColumn,int).mjava,0,0,15,2,5,0.1599999964237213,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#run().mjava,0,1,5,0,0,0.0833333358168602,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getDirectScanner(Range).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#LazilyCompactedRow(CompactionController,List[#-extends-ICountableColumnIterator]).mjava,0,0,6,2,1,0.15000000596046448,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getTables().mjava,0,11,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#CollationController(ColumnFamilyStore,boolean,QueryFilter,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#ReadResponse(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#response(Message).mjava,0,0,3,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalHints().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Pair#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSeeds().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#LoaderFuture(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#cleanup().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#factory().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getOptions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#DropColumnFamily(String,String).mjava,0,0,8,2,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#toString().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#add(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#includeStartKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#write(DataOutput).mjava,0,0,12,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#SuperColumn(ByteBuffer,ISortedColumns).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getScanner(QueryFilter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#sync().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#getData().mjava,0,20,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#reConnect(InetAddress,VersionedValue).mjava,0,0,10,2,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(SSTableReader,RandomAccessReader,DecoratedKey[#],long,long).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTotalCommitlogSpaceInMB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#onKeyChange().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getClockSeqAndNode().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getEstimatedColumnCountHistogram().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(String,File,String,String,int,boolean).mjava,0,0,7,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#addApplicationState(ApplicationState,VersionedValue).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#rectify(UUID,InetAddress).mjava,0,0,17,2,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getColumnFamily(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getKeyAsBytes(String,Tree).mjava,0,0,6,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isColumnRange().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#intersects(OpenBitSet).mjava,0,0,1,1,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#getScale(Boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeIntern(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#AsyncRepairCallback(RowRepairResolver,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#registerVerbHandlers(StorageService.Verb,IVerbHandler).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#reset().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#removeAllIndexes().mjava,0,1,4,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#acceptImpl().mjava,0,0,13,0,2,0.027027027681469917,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#applyNewStates(InetAddress,EndpointState,EndpointState).mjava,0,0,18,3,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#writeCurrentLocalNodeId(NodeId,NodeId,long).mjava,0,0,13,3,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#JdbcDouble().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol.Factory#Factory(boolean,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#get().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables(String,String).mjava,0,0,3,2,1,5.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol#writeBinary(ByteBuffer).mjava,0,0,13,1,2,0.0,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#maybeAddReplicationFactor(Map[String,String],String,Integer).mjava,0,0,4,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairTaskSerializer#serializedSize(StreamingRepairTask,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#getScale(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#addCmdHelp(StringBuilder,String,String).mjava,0,0,8,3,0,0.1666666716337204,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#create(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,7,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.CacheType#CacheType(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#next().mjava,0,0,3,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#ParallelCompactionIterable(OperationType,List[SSTableScanner],CompactionController,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySuper(SuperColumn).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#addSeed(InetAddress).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserializeColumns(DataInput,ColumnFamily,boolean).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#newSince(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onJoin(InetAddress,EndpointState).mjava,0,0,2,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#register(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\StageManager#getStage(Stage).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Throttle#throttleDelta(long).mjava,0,0,9,1,4,0.18518517911434174,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMinimumCompactionThreshold().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getPendingTasks().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AlterTableStatement#getCfDef(String).mjava,0,0,16,1,5,0.06818182021379471,21,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getPendingTasks().mjava,0,1,9,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#TreeRangeIterator(MerkleTree).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getRecentLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#iterator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#validate(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#getIncomingFiles(InetAddress).mjava,0,0,6,1,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getTotalBytes().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.GreaterThan#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#updateMaxTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#equals(Object).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#addColumn(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#MappedFileDataInput(MappedByteBuffer,String,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#create(ByteBuffer,ByteBuffer,long,int,int,int).mjava,0,0,0,6,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#toAvro().mjava,0,6,10,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeyCache().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#addLeavingEndpoint(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyCounterSubColumns(Collection[IColumn]).mjava,0,0,8,1,2,0.0,4,2,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readShort().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#max().mjava,0,2,3,0,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#contains(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata(BiMap[Token,InetAddress]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#markAlive(InetAddress,EndpointState).mjava,0,0,12,2,0,0.06666667014360428,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#getCompactionInfo().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getBloomFilterFalseRatio().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#TreeMapBackedSortedColumns(SortedMap[ByteBuffer,IColumn]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultInteger#value().mjava,0,17,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumnNames(Iterable[ByteBuffer]).mjava,0,0,4,1,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#getFilter(long,double).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#getFilename().mjava,0,16,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#thriftify(IColumn).mjava,0,0,9,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#rendezvous(TreeRequest,MerkleTree).mjava,0,0,14,2,3,0.1818181872367859,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRangeOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#hashCode().mjava,0,0,2,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#getUnderlyingCfs().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#respond(Validator,InetAddress).mjava,0,0,9,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_partitioner().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeleted(ColumnFamily,int).mjava,0,0,2,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#AbstractType().mjava,0,0,12,0,0,0.0,4,2,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onFinalRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\AbstractColumnIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#destroy().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram.EstimatedHistogramSerializer#deserialize(DataInput).mjava,0,0,3,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.ViewFragment#ViewFragment(List[SSTableReader],Iterable[Memtable]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#getFuture().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#validateLogin().mjava,0,3,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateMinMaxCompactionThresholds(org.apache.cassandra.thrift.CfDef).mjava,0,0,5,1,0,0.0357142873108387,12,6,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#throwIfFatal(Throwable).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#close().mjava,0,1,12,0,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#release().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#read().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#setIndexBuilt(String,String).mjava,0,0,8,2,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getLocalDeletionTime().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#get(InetAddress,long).mjava,0,0,2,2,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(Integer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#ParallelCompactionIterable(OperationType,Iterable[SSTableReader],CompactionController).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeUpdateKeySpace(Tree).mjava,0,0,10,1,4,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getEstimatedColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#getLastMigrationId().mjava,0,2,11,0,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#toArray().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getStrategyOptionsFromTree(Tree).mjava,0,0,15,1,4,0.2777777910232544,6,3,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#getMarkedForDeleteAt().mjava,0,0,1,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getBloomFilterFalsePositives().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#unregisterMBean().mjava,0,2,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#read(DataInput).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#setCapacity(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#HintedHandOffManager().mjava,0,0,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#assureSufficientLiveNodes().mjava,0,0,7,0,2,0.15789473056793213,12,4,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getKeyspace().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMinRowSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(CharSequence).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#applyIndexUpdates(ByteBuffer,ColumnFamily,SortedSet[ByteBuffer],ColumnFamily).mjava,0,0,19,4,7,0.1599999964237213,210,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#replaceCompactedSSTables(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitUninterruptibly().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.RowHash#RowHash(Token,byte[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getGossipInfo().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#skipBytesFully(DataInput,int).mjava,0,0,1,2,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#split(Token).mjava,0,0,1,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getPath().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#decompressChunk(CompressionMetadata.Chunk).mjava,0,0,12,1,0,0.1428571492433548,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#hasExpiredTombstones(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableColumnsCount().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.Invocation#run().mjava,0,0,6,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKey(CFMetaData,ByteBuffer).mjava,0,0,6,2,0,0.05263157933950424,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#schedule().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#getLoadInfo().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#performWrite(IMutation,ConsistencyLevel,String,WritePerformer).mjava,0,0,8,4,4,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\LocalStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#SliceFromReadCommand(String,ByteBuffer,ColumnParent,ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#disableAutoCompaction().mjava,0,0,4,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rack(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#getNeighbors(String,Range).mjava,0,0,12,2,5,0.10526315867900848,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#skipShortLength(DataInput).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#toString().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getColumn_metadata().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row.RowSerializer#serializedSize(Row,int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#localCopy(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#interpret(InetAddress).mjava,0,0,9,1,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#append(AbstractCompactedRow).mjava,0,0,12,1,3,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInitialAddress(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getPosition(DecoratedKey,Operator).mjava,0,0,20,2,9,0.1230769231915474,1242,15,5,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\MeteredFlusher#run().mjava,0,0,28,0,10,0.15000000596046448,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#compare(Token,Token).mjava,0,0,4,2,1,0.0416666679084301,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getDataCenter().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#containsKey(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#getString(ByteBuffer).mjava,0,0,5,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#updateToken(InetAddress,Token).mjava,0,0,11,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#setTimeout(int).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#beginCompaction(CompactionInfo.Holder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#binaryHash(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRowCacheSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#addColumn(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#decompose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isBlank(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getPositionsForRanges(Collection[Range]).mjava,0,0,8,1,3,0.25,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#isCancelled().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#write(DataOutput).mjava,0,0,23,1,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#Int32Type().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#printSliceList(CfDef,List[KeySlice]).mjava,0,0,38,2,10,0.0,17,5,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushLargestMemtablesAt().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithLength(ByteBuffer,DataOutput).mjava,0,0,3,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#getText().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#printProgramUsage().mjava,0,2,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#indexComparator().mjava,0,2,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#factory().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer#writeBloomFilter(DataOutput,BloomFilter).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliOptions.CLIOptions#addOption(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#close().mjava,0,2,2,0,0,0.1818181872367859,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DigestMismatchException#DigestMismatchException(DecoratedKey[#],ByteBuffer,ByteBuffer).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printIsThriftServerRunning(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTables().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#PeriodicCommitLogExecutorService(CommitLog).mjava,0,0,12,1,3,0.0,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#deserialize(DataInput,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\XMLUtils#XMLUtils(String).mjava,0,0,5,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairTaskSerializer#serialize(StreamingRepairTask,DataOutput,int).mjava,0,0,10,3,0,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#replaceCompactedSSTables(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#getParser(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\Interval#intersects(Interval).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#CompressionMetadata(String,long).mjava,0,0,9,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#computeNext().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnList().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.MerkleTreeSerializer#serialize(MerkleTree,DataOutputStream,int).mjava,0,0,5,3,1,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliSessionState#getNodeProbe().mjava,0,2,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator#allocate(int).mjava,0,0,4,1,2,0.2666666805744171,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponseSerializer[ReadResponse]#serialize(ReadResponse,DataOutput,int).mjava,0,0,13,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#AddColumnFamily(CFMetaData).mjava,0,0,15,1,3,0.0476190485060215,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateKeyAlias(CFMetaData,String).mjava,0,0,7,2,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#execute(CompactionExecutorStatsCollector).mjava,0,0,79,1,25,0.1367521435022354,11648,16,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#CustomTHsHaServer(Args,ExecutorService,int).mjava,0,0,1,3,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#getWriter().mjava,0,2,3,0,0,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#getComparator().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CachingMessageProducer#getMessage(Integer).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_construct(String,String).mjava,0,0,9,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#get(Object).mjava,0,0,4,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\PureRandom#main(String[]).mjava,0,0,4,1,3,0.07692307978868484,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,5,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#getHost().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon.ThriftServer#run().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#keyCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getDefaultGcBefore(ColumnFamilyStore).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#isIndexBuilt(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2Snitch#gossiperStarting().mjava,0,0,5,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getTotalCommitlogSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilterSerializer#serializedSize(LegacyBloomFilter).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getPendingAddressRanges(TokenMetadata,Token,InetAddress).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#getPrecision(Boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer,int,int,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#keyCacheSize(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKsDef(KsDef).mjava,0,0,6,1,4,0.2222222238779068,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(Descriptor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getTypeParameters().mjava,0,2,9,0,2,0.03703703731298447,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,5,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Pair#[X,Y]_create(X,Y).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#PendingFile(SSTableReader,Descriptor,String,List[Pair[Long,Long]],OperationType).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#decompose(UUID).mjava,0,0,2,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getWriteResponseHandler(Collection[InetAddress],ConsistencyLevel).mjava,0,0,3,2,0,0.09090909361839294,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#maxTimestamp().mjava,0,2,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#sum().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#createDirectory(File).mjava,0,0,2,1,0,0.0,3,2,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore.CacheType#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\XMLUtils#getNodeValues(String).mjava,0,0,6,1,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#CheaterFutureTask(Callable[V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.SimpleBlockFetcher#getNextBlock().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#stop().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#FreeableMemory(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse#serializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\AbstractStatsDeque#mean().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toDouble(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addTombstone(ByteBuffer,int,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(Collection[IColumn],boolean,boolean).mjava,0,0,2,3,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doValidationCompaction(ColumnFamilyStore,AntiEntropyService.Validator).mjava,0,0,15,2,5,0.11428571492433548,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getAndAppendNextComparator(int,ByteBuffer,StringBuilder).mjava,0,0,9,3,2,0.0,2,1,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RepairCallback#RepairCallback(RowRepairResolver,List[InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#isColumnRange().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#mutate(List[#-extends-IMutation],ConsistencyLevel).mjava,0,0,19,2,5,0.021739130839705467,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#addColumnDef(ColumnDefinition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSelect(String,SelectStatement).mjava,0,0,24,2,2,0.190476194024086,48,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#update(MessageDigest).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#compareId(ByteBuffer,int,ByteBuffer,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#total().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDataFileLocationForTable(String,long).mjava,0,0,4,2,5,0.0357142873108387,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#isEmpty().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputRange(Configuration,String,String).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readFully(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getBootstrapSource(TokenMetadata,Map[InetAddress,Double]).mjava,0,0,15,2,6,0.0555555559694767,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCompactionThroughputMbPerSec().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#isSafeToDelete().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#BloomSpecification(int,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalNode#IntervalNode(List[Interval]).mjava,0,0,10,1,3,0.06666667014360428,5,3,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcTimeUUID#JdbcTimeUUID().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getMaxEndpointStateVersion(EndpointState).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexName().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String).mjava,0,0,3,2,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyTypeParameters(List[AbstractType]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#determineBlockFor(ConsistencyLevel,String).mjava,0,0,6,2,0,0.0,14,1,14,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_indexed_slices(ColumnParent,IndexClause,SlicePredicate,ConsistencyLevel).mjava,0,0,12,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.MergeTask#MergeTask(List[RowContainer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#replaceFlushed(Memtable,SSTableReader).mjava,0,0,8,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getRack(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#read(List[ReadCommand],ConsistencyLevel).mjava,0,0,5,2,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadVerbHandler#getResponse(ReadCommand,Row).mjava,0,0,6,2,0,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CallbackInfo#CallbackInfo(InetAddress,IMessageCallback).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyValidator().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#replace(IColumn,IColumn).mjava,0,0,10,2,1,0.25,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilterFalsePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#getFinish().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#writeMetadata(Descriptor,SSTableMetadata).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#toString().mjava,0,2,28,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#equals(Object).mjava,0,0,6,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#promote(Iterable[SSTableReader],Iterable[SSTableReader]).mjava,0,0,18,2,4,0.11999999731779099,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getReplayPosition().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient.KsDefNamesComparator#compare(KsDef,KsDef).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setInMemoryCompactionLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getRack(InetAddress).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#decompose(Date).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#complainNonzeroArgs(String[],NodeCommand).mjava,0,0,4,2,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#flip(long).mjava,0,0,1,1,3,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#validateSchemaIsSettled(String).mjava,0,0,19,1,3,0.029411764815449715,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#CreateColumnFamilyStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#Migration().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.RepairJob#RepairJob(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getId(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#parseDoubleOrPercent(String).mjava,0,0,5,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\Interval#Interval(Comparable,Comparable,T).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#IntervalTree().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#size().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#preprocess(Message).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutationVerbHandler#forwardToLocalNodes(Message,byte[]).mjava,0,0,9,2,4,0.23529411852359772,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnSerializer().mjava,0,2,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#BootStrapper(InetAddress,Token,TokenMetadata).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#readNextIdentifier().mjava,0,4,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removalCoordinator(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#mbPerSec(long,long).mjava,0,0,0,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMeanColumns().mjava,0,1,3,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isSnapshotInPath(File).mjava,0,0,3,1,1,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getValidator().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getTruePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#clearSnapshot(String).mjava,0,0,5,1,2,0.07692307978868484,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getClass(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomCalculations#maxBucketsPerElement(long).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getNodeId().mjava,0,11,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#removeOldShards(int).mjava,0,0,5,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#searchInternal(IntervalNode,Interval[T],List[T]).mjava,0,0,12,3,0,0.261904776096344,72,7,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,2,7,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#isDone().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#maxTimestamp().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getActiveCompactions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,Charset).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#clear(String,Schema).mjava,0,0,3,2,1,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flush().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#processStatement(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput,boolean,int).mjava,0,0,15,3,11,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#containsAll(Collection[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#create(String,InetAddress,long,Runnable).mjava,0,0,1,4,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_ring(String).mjava,0,0,27,1,10,0.05000000074505806,32,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addCounterColumn(ByteBuffer,long).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#closeSocket().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#hashCode().mjava,0,0,0,0,1,0.625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#DeflateCompressor().mjava,0,0,0,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getRack().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\AbstractStatsDeque#variance().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamSources().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printCfHistograms(String,String,PrintStream).mjava,0,0,13,3,7,0.04545454680919647,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#BufferedSegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,6,3,2,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(CFMetaData,DataInput,DecoratedKey[#],long,long,boolean,SSTableReader,boolean).mjava,0,0,19,8,1,0.018518518656492233,7,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#xor(OpenBitSet).mjava,0,0,4,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateKeyCaches(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#printProgress().mjava,0,1,28,0,11,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Throttle#Throttle(String,ThroughputFunction).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#get(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFully(byte[],int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(DecoratedKey,DecoratedKey).mjava,0,2,7,2,3,0.23076923191547394,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#computeNext().mjava,0,0,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentWriters().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUnsafe(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getMinCompactionThreshold().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#isDataPresent().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#remove(SSTableReader).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleAbstractColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#ColumnSet(ColumnSerializer,DataInput,int,boolean,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#newSSTables(SSTableReader).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#needDeserialize().mjava,0,1,0,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#OldNetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#logExceptionsAfterExecute(Runnable,Throwable).mjava,0,0,15,2,0,0.19354838132858276,9,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserialize(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BigIntegerToken#BigIntegerToken(BigInteger).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.KeyPosition#KeyPosition(DecoratedKey[#],long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#flush().mjava,0,1,4,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingKeyCache#translateKey(K).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#MemoryInputStream(FreeableMemory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#ArrayBackedSortedColumns(AbstractType[#],boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#write(int).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#getKey().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#toString(Map[#,#]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#snapshot(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamilyName().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer#deserialize(DataInput,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,38,2,9,0.13333334028720856,80,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#reset().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleStrategy#SimpleStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getStreamDestinations().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\client\RingCache#RingCache(String,IPartitioner[#],String,int).mjava,0,0,3,4,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getSSTableColumnIterator(SSTableReader,DecoratedKey[#]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#files(String,String,boolean,boolean).mjava,0,0,8,4,2,0.0,4,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#renewLocalId().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#prepare(ColumnFamilyStore).mjava,0,0,14,1,4,0.09375,2,4,20,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readByte().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#getType().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceTableCleanup(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#mark().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#available().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#headSet(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#reset(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#nextHighestPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getExpectedCompactedFileSize(Iterable[SSTableReader]).mjava,0,0,1,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#validate(ByteBuffer).mjava,0,0,11,1,6,0.0,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream(Set[InetAddress]).mjava,0,0,19,1,6,0.03846153989434242,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Truncation#getMessage(Integer).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,ColumnFamilyType,AbstractType,AbstractType,int).mjava,0,0,2,6,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#rowCacheSize(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#LocalReadRunnable(ReadCommand,ReadCallback[Row]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_union(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#scan(String,String,IndexClause,SlicePredicate,ConsistencyLevel).mjava,0,0,27,5,10,0.03846153989434242,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerId().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#getIncomingFiles(String).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MurmurHash#hash64(ByteBuffer,int,int,long).mjava,0,0,15,4,7,0.0,36,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#seekTo(DecoratedKey[#]).mjava,0,0,2,1,1,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#retainAll(Collection[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#finishCompaction(CompactionInfo.Holder).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#ThreadPoolProxyMBeanIterator(MBeanServerConnection).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithShortLength(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#close().mjava,0,0,2,0,0,0.0,2,1,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2MessageSerializer[GossipDigestAck2Message]#deserialize(DataInput,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllLeft().mjava,0,0,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#batchUpdate(ClientState,List[UpdateStatement],ConsistencyLevel).mjava,0,0,10,3,3,0.03846153989434242,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableSwitchCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toByteArray().mjava,0,13,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#BytesToken(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#value().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getAddressRanges(TokenMetadata).mjava,0,0,5,1,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#createFrom(Token).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#releaseReference().mjava,0,7,7,0,0,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAbstractType(String).mjava,0,0,6,1,3,0.11764705926179886,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader#StreamHeader(String,long,PendingFile).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#updateColumnMetaData(CfDef,ByteBuffer,String).mjava,0,0,6,3,2,0.1428571492433548,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\AsyncResult#AsyncResult().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow.Reducer#reduce(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#doStatusCheck().mjava,0,1,31,0,5,0.08888889104127884,104,9,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#getString(ByteBuffer).mjava,0,0,5,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(QueryPath,ByteBuffer,long,int).mjava,0,0,4,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#DataTracker(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#clearAllDelta(ByteBuffer).mjava,0,0,9,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#name().mjava,0,3,1,0,0,0.0,10,1,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#isLive().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getValidator().mjava,0,1,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilterTruePositiveCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\RackInferringSnitch#getDatacenter(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#flushAndSignal(CountDownLatch,ExecutorService,ReplayPosition).mjava,0,0,7,3,1,0.0,2,1,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#estimatedKeys().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#toString().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitNanos(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#setKeyAlias(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#isDone().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequest#TreeRequest(String,InetAddress,Range,CFPair).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readChar().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumn(CFMetaData,ByteBuffer,ByteBuffer).mjava,0,0,6,3,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#indexColumnFamilyName(ColumnDefinition).mjava,0,0,3,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#Attributes(ConsistencyLevel,Long,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getTokenToEndpointMap().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getPath().mjava,0,1,1,0,1,0.09090909361839294,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#mutationForKey(ByteBuffer,String,Long,ClientState).mjava,0,0,10,4,4,0.10000000149011612,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getOwnership().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#getConsistencyLevel().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#localCopy(ColumnFamilyStore).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#SSTableSimpleWriter(File,String,String,AbstractType,AbstractType).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLexicalUUID#getString(ByteBuffer).mjava,0,0,4,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMaxThreads().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliSessionState#setErr(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#getfd(FileDescriptor).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#freeze().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#setHasToken(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#computeNext().mjava,0,0,6,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateKeyCache().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#RenameColumnFamily().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#subMap(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#toString().mjava,0,3,12,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\NoScheduler#queue(Thread,String,long).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#createNewSegment().mjava,0,1,14,0,4,0.25,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateMutation(CFMetaData,Mutation).mjava,0,0,2,2,3,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#getString(AbstractType).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateRange(CFMetaData,ColumnParent,SliceRange).mjava,0,0,8,3,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#determineBlockFor(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#createColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#next().mjava,0,0,3,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getSSTablesPerReadHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#forceCleanup(NodeId.OneShotRenewer).mjava,0,0,7,1,2,0.21052631735801697,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#isLeaving(InetAddress).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthority().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#estimatedRowSize(EstimatedHistogram).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ForwardSortedCollection#iterator().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\EmbeddedCassandraService#start().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#clearUnsafe().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#serializedSize().mjava,0,0,2,0,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#midpoint(Token,Token).mjava,0,0,3,2,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateCfDef(CfDef,CFMetaData).mjava,0,0,35,2,5,0.0824742242693901,432,17,71,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getNextComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Stage#getJmxType().mjava,0,3,0,0,0,0.0,16,1,16,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#updateDigest(MessageDigest).mjava,0,0,1,1,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#reset().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.CountDownCallback#run().mjava,0,0,6,0,0,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getCFMetaData(String).mjava,0,0,38,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getValueValidator(String,String,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#serializer().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#add(Entry[ByteBuffer,IColumn]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#UUIDGen().mjava,0,0,0,0,0,0.3333333432674408,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getKeyCache().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#acceptImpl().mjava,0,0,10,0,2,0.0,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ByteBuffer,Iterable[ByteBuffer]).mjava,0,0,7,3,1,0.0,36,6,8,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#CreateKeyspaceStatement(String,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#updateDigest(MessageDigest).mjava,0,0,10,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeAssumeStatement(Tree).mjava,0,0,31,1,7,0.09302325546741486,32,5,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#fromThrift(KsDef,CFMetaData...).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getColumnFamily().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getBytesAccordingToType(String,AbstractType).mjava,0,0,1,2,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#decompose(BigInteger).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRawCachedRow(DecoratedKey).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#getStartKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setRpcPort(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#size().mjava,0,0,0,0,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#describeOwnership(List[Token]).mjava,0,0,17,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynVerbHandler#doVerb(Message,String).mjava,0,0,29,2,10,2.6666667461395264,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getAbstractType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.InvalidHash#InvalidHash().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#maybeResetDeletionTimes(int).mjava,0,0,2,1,1,0.20000000298023224,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#numColumnSpecifiers(Tree).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#addCounter(QueryPath,long).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#remainingBodyLength().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#getRecordWriter(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyAlias().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#copy().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaximalTasks(int).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString(int).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#readSaved().mjava,0,0,25,0,8,0.0,5,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#disableAutoCompaction().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2Snitch#getDatacenter(InetAddress).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createFlushWriter(long,long,ReplayPosition).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Throttle#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getApproximateKeyCount(Iterable[SSTableReader]).mjava,0,0,6,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#defaultValidator(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#run().mjava,0,0,10,0,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#size().mjava,0,1,2,0,0,2.6666667461395264,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#convict(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#LongType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#fromBytes(byte[],int).mjava,0,0,7,2,2,0.06666667014360428,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getSerializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#rename(Descriptor,Set[Component]).mjava,0,0,9,2,1,0.0714285746216774,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getReleaseVersion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#logOpenException(Descriptor,IOException).mjava,0,0,3,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#allocate(int).mjava,0,0,8,1,1,0.4444444477558136,9,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#ArrivalWindow(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#resolve(ColumnFamily).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#invalidateCaches().mjava,0,5,1,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getValueValidator(String,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#headMap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRowCacheSavePeriodInSeconds().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutationVerbHandler#doVerb(Message,String).mjava,0,0,18,2,4,0.0476190485060215,8,3,16,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Message#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\LocalStrategy#LocalStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#validateOptions().mjava,0,0,3,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#root().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getSampleIndexesForRanges(List[IndexSummary.KeyPosition],Collection[Range]).mjava,0,0,10,2,5,0.20000000298023224,48,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions,InetAddress,int,InetAddress,int).mjava,0,0,4,5,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#replace(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#delete(QueryPath,long).mjava,0,0,10,2,4,0.0,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getDefaultValidator().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReplaceToken().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#registerFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readFloat().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#init().mjava,0,1,1,0,0,0.1111111119389534,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#getFilePointer().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#prepareRowMutations(String,ClientState,Long).mjava,0,0,6,3,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#fromString(String).mjava,0,0,8,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#cfMetaData().mjava,0,34,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateCommutativeForWrite(CFMetaData,ConsistencyLevel).mjava,0,0,1,2,0,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#VersionedValueFactory(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdownNow().mjava,0,0,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand#IndexScanCommand(String,String,IndexClause,SlicePredicate,AbstractBounds).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#buckets().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#cloneMe().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.RepairJob#sendTreeRequests().mjava,0,2,8,0,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#shouldHint(InetAddress).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getRegisteredCallbackAge(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#validateFields(CFMetaData).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getUptime().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet(long[],int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#getSlice(CFMetaData,SelectStatement).mjava,0,0,25,2,8,0.043478261679410934,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getKeySpace(String,List[KsDef]).mjava,0,0,4,2,2,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getColumnFamilyName().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#updateTimestamp().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(String,long,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\sink\SinkManager#add(IMessageSink).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#Gossiper().mjava,0,0,3,0,1,8.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBuckets(boolean).mjava,0,0,5,1,1,0.0,6,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#randomlyReadRepair().mjava,0,0,6,0,3,0.09090909361839294,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#delete(AbstractColumnContainer).mjava,0,0,3,1,2,0.10000000149011612,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(long,long).mjava,0,1,2,2,4,0.2142857164144516,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#startGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#tryMlockall().mjava,0,1,12,0,1,0.11538461595773697,8,3,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getTableInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#createSSTableAndLengthPairs(Collection[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#removeDeletedInCache(DecoratedKey).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getReplayPosition().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#reset().mjava,0,1,1,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#reset().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#putColumn(SuperColumn,Allocator).mjava,0,0,3,2,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#getApplicationState(ApplicationState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#registerMBean().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#ReversedType(AbstractType[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#serialize(DataOutput).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getFileDataInput(DecoratedKey,int).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#isSetTimestamp().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\KeyIterator#getTotalBytes().mjava,0,1,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getUpdateInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getColumnFamily().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#turnOff(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#SSTableSimpleUnsortedWriter(File,String,String,AbstractType,AbstractType,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateTtl(Column).mjava,0,0,2,1,0,0.1428571492433548,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#initiateStreaming().mjava,0,1,10,0,3,0.20000000298023224,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#DeserializedColumnIterator(Row).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply.FileStatusSerializer#serialize(StreamReply,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#addTruePositive().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#toThrift().mjava,0,2,49,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#resolveSuperset(Iterable[ColumnFamily]).mjava,0,0,10,1,3,0.11999999731779099,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#serializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#batchOpen(Set[Map.Entry[Descriptor,Set[Component]]],Set[DecoratedKey],DataTracker,CFMetaData,IPartitioner).mjava,0,0,11,5,4,0.0,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RepairCallback#response(Message).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#IndexWriter(Descriptor,IPartitioner[#],long).mjava,0,0,5,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#StreamOutSession(String,Pair[InetAddress,Long],Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#gossiperStarting().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#bigForString(String,int).mjava,0,0,6,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#addEntry(DecoratedKey[#],long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#resetAndTruncate().mjava,0,2,2,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBuiltIndexes().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#RowIterator().mjava,0,0,8,0,4,0.07692307978868484,1,0,17,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\HeaderSerializer[Header]#serializedSize(Header,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#idFromFilename(String).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#getPath().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#defreezeBloomFilter(FileDataInput,long,boolean).mjava,0,0,7,3,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(ByteBuffer,Column).mjava,0,0,4,2,1,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#[K,V]_create(int,String,String).mjava,0,0,6,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#getByteBuffer().mjava,0,4,4,0,0,0.2142857164144516,9,1,9,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#decompose(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Table,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Context#remove(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#countPendingHints().mjava,0,0,4,0,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLine().mjava,0,0,0,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#put(K,V,long).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#applyModels().mjava,0,0,19,0,4,0.043478261679410934,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommandSerializer[SliceFromReadCommand]#deserialize(DataInput,int).mjava,0,0,9,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addAll(Iterator[RowHash]).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidate(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#validateReplicationFactor(String).mjava,0,0,1,1,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getRecentBloomFilterFalsePositives().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#copyIntoBytes(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(ColumnPath).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#AddKeyspace().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#hashCode().mjava,0,0,26,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#forceBlockingFlush(String).mjava,0,0,3,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOut#transferRanges(InetAddress,Table,Collection[Range],Runnable,OperationType).mjava,0,0,3,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getInternalReply(byte[],int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#export(String,String[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#logDistribution().mjava,0,2,4,0,0,0.0,3,2,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceReply#read(byte[],int).mjava,0,0,4,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#diff(IColumn).mjava,0,0,16,1,3,0.1111111119389534,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#run().mjava,0,0,2,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#toString(byte[]).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#discardCompletedSegments(Integer,ReplayPosition).mjava,0,0,3,2,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#DebuggableThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue[Runnable],ThreadFactory).mjava,0,0,2,6,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#isPredicateEmpty(SlicePredicate).mjava,0,0,6,1,0,0.0,6,4,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\StringToken#compareTo(Token[String]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#hasReplayPosition().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(File,String).mjava,0,0,10,2,8,0.27272728085517883,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#headerSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#reverseIterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue#compareTo(VersionedValue).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getReplicationFactor(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\ResponseVerbHandler#doVerb(Message,String).mjava,0,0,17,2,3,0.0,6,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getHintsInProgress().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#resetBuffer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#resetAndTruncate(int).mjava,0,0,4,1,0,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#set_keyspace(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getColumnIndexSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#setVersion(InetAddress,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#diff(IColumn).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet(BitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessageDeliveryTask#MessageDeliveryTask(Message,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedSuper(ColumnFamily,int).mjava,0,0,19,2,5,0.3076923191547394,7,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#getKeyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Pair#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getReplicationStrategy().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getCommandPendingTasks().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#hintedHandoffEnabled().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#uncompress(byte[],int,int,byte[],int).mjava,0,0,5,5,1,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#RowContainer(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#[T-extends-SpecificRecord]_deserialize(Schema,ByteBuffer,T).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#finished(PendingFile,SSTableReader).mjava,0,0,13,2,1,0.09090909361839294,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#copy().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#instance().mjava,0,54,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#poll().mjava,0,1,3,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getTokenToEndpointMap().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#maxBytesForLevel(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#deserialize(FreeableMemory).mjava,0,0,2,1,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#addLatency(InetAddress,double).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon.CleaningThreadPool#afterExecute(Runnable,Throwable).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#updateDigest(MessageDigest).mjava,0,0,10,1,1,0.0625,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexKeyFor(ByteBuffer,ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#awaitTermination().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#truncate(String,long).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#create(InetAddress,Runnable).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getColumnFamily().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateColumnName(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#AbstractBounds(Token,Token,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\MeteredFlusher#countFlushingBytes().mjava,0,2,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf.LeafSerializer#deserialize(DataInput).mjava,0,0,2,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#unmarkCompacting(Collection[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#decompose(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#clearTableDefinition(KSMetaData,UUID).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#flip(long,long).mjava,0,0,1,2,4,0.5625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#isMarkedForDelete().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#midpoint(Token,Token).mjava,0,0,7,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#elementIdx().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getLocations().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#convertFromDiskFormat(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnCoordinator(CounterMutation,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getRandomToken().mjava,0,0,1,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient.Function#getValidator().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#sendToHintedEndpoints(RowMutation,Collection[InetAddress],IWriteResponseHandler,String,ConsistencyLevel).mjava,0,0,22,5,5,0.13513512909412384,3,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeGetWithConditions(Tree).mjava,0,0,34,1,18,0.13846154510974884,18,5,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getPath().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getVersion().mjava,0,21,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#runMayThrow().mjava,0,0,8,0,1,0.1666666716337204,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#isFrozen().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#serializedSize(EndpointState,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#retainAll(AbstractColumnContainer).mjava,0,0,23,1,6,0.02857142873108387,12,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getColumnNames().mjava,0,0,0,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#tryFcntl(int,int,int).mjava,0,0,4,3,1,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#get(K).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#getHintsSlice(int).mjava,0,0,9,1,7,0.1818181872367859,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#getBytesRead().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#fromString(String).mjava,0,0,4,1,1,0.07692307978868484,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService.SocketThread#run().mjava,0,0,3,0,1,0.05263157933950424,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_batch_mutate(Map[ByteBuffer,Map[String,List[Mutation]]],ConsistencyLevel).mjava,0,0,25,2,10,0.057692307978868484,64,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\AsyncResult#result(Message).mjava,0,0,7,1,0,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getLiveNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serialize(BloomFilter,DataOutput).mjava,0,0,5,2,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#maxTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getRowCacheSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceFlush().mjava,0,8,6,0,1,0.1818181872367859,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#open(String,CompressionMetadata,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#get().mjava,0,0,4,0,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#maxTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultInteger#isModified().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#length().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#equals(Object).mjava,0,0,1,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serializedSize(Hashable,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(String,String).mjava,0,14,2,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTaskType().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#RepairSession(Range,String,String...).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#internalOpen(Descriptor,Set[Component],CFMetaData,IPartitioner,SegmentedFile,SegmentedFile,IndexSummary,Filter,long,SSTableMetadata).mjava,0,0,0,10,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getComparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#hasNext().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#equals(Object).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#commitTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#awaitTermination(long,TimeUnit).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUTF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getCfDef(KsDef,String).mjava,0,0,1,2,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getRequests().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#getSubComparator().mjava,0,3,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleStrategy#getReplicationFactor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#keyRangeFromString(String).mjava,0,0,2,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#lookupSSTable(ColumnFamilyStore,Descriptor).mjava,0,0,5,2,1,0.3636363744735718,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessage#getGossipDigestList().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getKeySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createCompactionWriter(long,String,Collection[SSTableReader]).mjava,0,0,6,3,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#compose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow.Reducer#getReduced().mjava,0,0,10,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getKeyCacheCapacity().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_column_family(CfDef).mjava,0,0,15,1,2,0.03999999910593033,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#addColumnsToCF(List[#],ByteBuffer,ColumnFamily).mjava,0,0,15,3,3,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#deactivate().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#buildIntervalTree(List[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#isSetConsistencyLevel().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#receiveMessage(DataInputStream,int).mjava,0,0,12,2,8,0.22727273404598236,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#enumeratekeys(String,PrintStream).mjava,0,0,8,2,4,0.06666667014360428,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#respondError(Truncation,Message).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#handleWrite(SelectionKey).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#skipBytesFully(DataInput,long).mjava,0,0,2,2,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#sortSampledKeys(List[DecoratedKey],Range).mjava,0,0,9,2,2,0.1304347813129425,3,2,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DropIndexStatement#generateMutation(String).mjava,0,0,5,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Operation#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#add(SSTableReader).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#write(RandomAccessReader,long,long).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#passiveAnnounce(UUID).mjava,0,0,3,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#wrapCallback(Runnable,UUID,boolean).mjava,0,0,3,3,0,0.1428571492433548,4,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getUUID(ByteBuffer).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getLiveSize().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#contains(Token,Token,Token).mjava,0,0,5,3,0,0.7692307829856873,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#toString().mjava,0,2,18,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getColumnFamily().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row.RowSerializer#serialize(Row,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.RepairJob#addTree(TreeRequest,MerkleTree).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#multigetSliceInternal(String,List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,9,5,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator#iterators().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#normalize(Collection[#-extends-AbstractBounds]).mjava,0,0,5,1,1,0.23076923191547394,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#updateDigest(MessageDigest).mjava,0,0,9,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactedRow#AbstractCompactedRow(DecoratedKey[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStorageConfigURL().mjava,0,1,5,0,3,0.05263157933950424,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractRowResolver#getMaxLiveColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#WeightedQueue(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#getScale(Float).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#headerLength(ByteBuffer).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#SSTableMetadata(EstimatedHistogram,EstimatedHistogram,ReplayPosition).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#add(AbstractCompactedRow).mjava,0,0,8,1,0,0.2142857164144516,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#serializedSize(CounterMutation,int).mjava,0,0,6,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\AbstractColumnIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesPastMark(FileMark).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#fromThrift(org.apache.cassandra.thrift.CfDef).mjava,0,0,45,1,3,0.0,8192,13,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#addAll(Collection[#-extends-Entry[ByteBuffer,IColumn]]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\XMLUtils#getNodeValue(String).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addTombstone(QueryPath,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#Migration(UUID,UUID).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#RepairSession(String,Range,String,String[]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#isKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#isJoined().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#makeFilename(File,String,String).mjava,0,0,6,3,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#removeHeader(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter.CompressedFileWriterMark#CompressedFileWriterMark(long,long,int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#remove(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#key().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#DatacenterReadCallback(IResponseResolver,ConsistencyLevel,IReadCommand,List[InetAddress]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceReply#getReply(Message).mjava,0,0,14,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getColumnFamily().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#newCacheProvider(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#isCommutative().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#serialize(DataOutput).mjava,0,0,6,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#hashToBigInteger(ByteBuffer).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#setupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnIterator[ColumnSortedMap]#deserializeNext().mjava,0,1,1,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingRowCache#AutoSavingRowCache(ICache[K,V],String,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(long,long).mjava,0,0,2,2,5,0.20000000298023224,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#diff(ColumnFamily,ColumnFamily).mjava,0,1,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#fromString(String).mjava,0,0,3,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#unwrap().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\HeapAllocator#HeapAllocator().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getReply(InetAddress,byte[],int).mjava,0,0,0,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#partitioner().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#write(Message,String,DataOutputStream).mjava,0,0,13,3,3,0.875,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#search(IndexClause,AbstractBounds,IFilter).mjava,0,0,67,3,21,0.20800000429153442,101382,21,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#writeJSON(PrintStream,Object).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#skipBytes(int).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeAddKeySpace(Tree).mjava,0,0,9,1,3,0.0476190485060215,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanColumns().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#getColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#initCf(Integer,String).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deliverHints(InetAddress).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper.BootstrapTokenCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#quote(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDropIndex(Tree).mjava,0,0,21,1,6,0.0357142873108387,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#getMarkedForDeleteAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#wakeupSelector().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#scrubOne(ColumnFamilyStore,SSTableReader).mjava,0,0,84,2,24,0.06329113990068436,15384,19,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#getHeartBeatVersion().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getWriteConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#afterAppend(DecoratedKey[#],long).mjava,0,0,8,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#getFilename().mjava,0,13,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#RepairSession(TreeRequest,String,String...).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#getMarkedForDeleteAt().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#getLocalAddress().mjava,0,5,3,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#differenceHelper(MerkleTree,MerkleTree,List[TreeRange],TreeRange).mjava,0,0,14,4,9,0.07894736528396606,128,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSavedCachesLocation().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#getTimeToLive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getKeyType(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#compareIdTo(ContextState).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#isPresent(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#getOutgoingFiles(InetAddress).mjava,0,0,6,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcRecvBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#newSuperColumn(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#isDelta().mjava,0,19,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#getDetail(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#initialCompressedBufferLength(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#getComparator(AbstractType,boolean).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#addReadCommandFromColumnFamily(String,ByteBuffer,ColumnFamily,List[ReadCommand]).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,Row).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getRecentTotalTimouts().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactionLock().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#removeDetail(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#CliClient(CliSessionState,Cassandra.Client).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#close(boolean).mjava,0,0,9,1,0,0.4285714328289032,4,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRangeIterator#computeNext().mjava,0,0,13,0,4,0.1538461595773697,7,4,18,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getColumnComparator(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,9,3,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#create(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#createCollector().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCacheProvider#create(int,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getProgress().mjava,0,0,1,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getComparatorFor(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#bytesCompare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnIterator[ColumnSortedMap]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBloomFilterFalseRatio().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(int,String,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyRange(Configuration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#OutputBuffer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#split(Token).mjava,0,0,4,1,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#filterSuperColumn(SuperColumn,int).mjava,0,0,6,2,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setStreamThroughputOutboundMegabitsPerSec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isDeleted().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#filenameFor(Component).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOut#transferRanges(StreamOutSession,Iterable[ColumnFamilyStore],Collection[Range],OperationType).mjava,0,0,10,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#setIndexName(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#main(String[]).mjava,0,0,24,1,9,0.10227272659540176,288,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getColumnFamilyStoreMBeanProxies().mjava,0,1,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeConsistencyLevelStatement(Tree).mjava,0,0,9,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#equals(Object).mjava,0,0,3,1,1,0.0,80,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getBytesRead().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#createColumnFamilyStore(Table,String,IPartitioner,CFMetaData).mjava,0,0,13,4,5,0.03999999910593033,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#DeletedColumn(ByteBuffer,int,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getSortedColumns().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getStringMap(Map[CharSequence,CharSequence]).mjava,0,0,6,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy.LocalReadRunnable#runMayThrow().mjava,0,0,10,0,2,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#handleRead(SelectionKey).mjava,0,0,6,1,1,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_slice(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,8,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component.Type#fromRepresentation(String).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#getValue().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStates().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand#read(Message).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#getStart().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#unregister(IEndpointStateChangeSubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromThrift(ColumnDef).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#sendMessages(String,Map[String,Multimap[Message,InetAddress]],IWriteResponseHandler).mjava,0,0,25,3,8,0.27272728085517883,2,3,25,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#containsKey(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#set(long).mjava,0,0,1,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getDroppedMessages().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#ColumnFamily(CFMetaData,ISortedColumns).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#renewMemtable().mjava,0,1,3,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#hasNext().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getShortName(AbstractType).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getNamesIterator(DecoratedKey,ColumnFamily,NamesQueryFilter).mjava,0,0,7,3,3,0.03703703731298447,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeAllSSTables().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serialize(InetAddress,DataOutput).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#ThreadSafeSortedColumns(SortedMap[ByteBuffer,IColumn]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol.Factory#Factory(boolean,boolean,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getCfsProxy(String,String).mjava,0,0,3,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#signal().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTopLevelColumns(QueryFilter,int,boolean).mjava,0,0,5,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(TypeParser).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#key().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#close().mjava,0,0,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DestructivePQIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#finalizeMetadata().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#hasNext().mjava,0,3,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtableThreadSafe().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validatePredicate(CFMetaData,ColumnParent,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#unmarkSSTables().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#midpoint(BigInteger,BigInteger,int).mjava,0,0,11,3,5,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsBytes(String,CfDef).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#DynamicParsedComparator(String).mjava,0,0,5,1,2,0.11999999731779099,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#DatacenterWriteResponseHandler(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#addColumn(IColumn,Allocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#setEndPoint(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#getEndpointState(String).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CorruptedBlockException#CorruptedBlockException(String,long,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#serializedSize(ReadCommand,int).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#getTimeToLive().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CleanupInfo#getCompactionInfo().mjava,0,0,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#initializeNodeUnsafe(InetAddress,int).mjava,0,0,3,2,2,11.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnFinish().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#shutdown().mjava,0,0,4,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncationSerializer[Truncation]#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse(String).mjava,0,0,12,1,4,0.09090909361839294,32,5,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isInvalid().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#register(AbstractReplicationStrategy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.OneToOne#OneToOne(List[#-extends-CloseableIterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#initHelper(Token,Token,byte,byte).mjava,0,0,7,4,3,0.10000000149011612,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer.DeletionInfo#DeletionInfo().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#computeNext().mjava,0,0,7,0,2,0.10000000149011612,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#open(File,int,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#comparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#seekInternal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequest#equals(Object).mjava,0,0,4,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#remove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#removeIndexedColumn(ByteBuffer).mjava,0,0,9,1,1,0.1538461595773697,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performScrub(ColumnFamilyStore).mjava,0,0,22,1,2,0.0731707289814949,8,3,25,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getLeavingEndpoints().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.Reducer#reduce(Pair[Row,InetAddress]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#readFully(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#validate(ByteBuffer).mjava,0,0,4,1,1,0.125,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionGenerator#getNextVersion().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token#Token(T).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer#serializedSize(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#getString(ByteBuffer).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#getBucketOffsets().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#applyImplicitDefaults(org.apache.cassandra.thrift.CfDef).mjava,0,0,17,1,0,0.0,1024,10,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#slicePredicateFromSelect(SelectStatement,CFMetaData).mjava,0,0,10,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#chunkLength().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#getCompletedTasks().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getCommand().mjava,0,1,4,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#removeAll(Collection[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#truncate().mjava,0,1,13,0,2,1.1428571939468384,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#serve().mjava,0,0,15,0,6,0.08196721225976944,18,5,6,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#isThriftServerRunning().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#getHost().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#estimateRowsFromIndex(RandomAccessReader).mjava,0,0,10,1,3,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyString(String,String).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#applyStateLocally(Map[InetAddress,EndpointState]).mjava,0,0,29,1,7,1.1785714626312256,150,12,39,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#delete(int,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#decodeKey(IPartitioner,Descriptor,ByteBuffer).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#setHeartBeatState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#updateToken(Token).mjava,0,0,9,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointStatesSerializationHelper[GossipDigestSynMessage]#deserialize(DataInput,int).mjava,0,0,5,2,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#getPrecision(BigDecimal).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#applyModels().mjava,0,0,15,0,2,0.1538461595773697,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#cleanup().mjava,0,0,6,0,1,0.31578946113586426,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDelete(Tree).mjava,0,0,36,1,12,0.016949152573943138,160,8,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getRecentTimeoutsPerHost().mjava,0,0,7,0,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#SliceFromReadCommand(String,ByteBuffer,QueryPath,ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,0,7,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank(String,int).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\CollatingOrderPreservingPartitioner#describeOwnership(List[Token]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#andNotCount(OpenBitSet,OpenBitSet).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getClock().mjava,0,12,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#getFilePointer().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#validateOptions().mjava,0,0,3,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequest#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getRandomToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\ICompressor.WrappedArray#WrappedArray(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#clear(InetAddress).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#compareTo(SSTableIdentityIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#createReader(SSTableReader,FileDataInput,ByteBuffer,ByteBuffer,boolean).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#get(long,TimeUnit).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#begin().mjava,0,1,15,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#serializedSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#Ec2MultiRegionSnitch().mjava,0,0,5,0,0,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSeedProvider#SimpleSeedProvider(Map[String,String]).mjava,0,0,6,1,1,0.06666667014360428,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#submitRepairSession(Range,String,String...).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#close(org.apache.hadoop.mapred.Reporter).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#setColumnsLimit(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#chunkOffsetBy(int).mjava,0,0,4,1,1,0.23529411852359772,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#applyCounterMutationOnLeader(CounterMutation,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#generate().mjava,0,3,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#AntiEntropyService().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#emptyBuckets().mjava,0,0,2,0,1,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\AsyncResult#get(long,TimeUnit).mjava,0,0,7,2,2,0.0,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#markDeltaToBeCleared().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#getMaxLiveColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserializeFromSSTableNoColumns(ColumnFamily,DataInput).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService#request(String,InetAddress,Range,String,String).mjava,0,0,4,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#report(InetAddress).mjava,0,0,6,1,2,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getSortedColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader#main(String[]).mjava,0,0,17,1,4,0.05128205195069313,4,4,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#append(DecoratedKey[#],ColumnFamily).mjava,0,0,14,2,3,0.3636363744735718,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onAlive(InetAddress,EndpointState).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#defaultRowHistogram().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#makeNewKeyspaceDefinition(KSMetaData).mjava,0,0,10,1,2,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#findSuitableEndpoint(String,ByteBuffer,String).mjava,0,0,14,3,3,0.0476190485060215,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(int).mjava,0,0,0,1,3,0.5714285969734192,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitUserDefined(ColumnFamilyStore,Collection[Descriptor],int).mjava,0,0,20,3,6,0.08064515888690948,16,4,38,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getEndpointSnitchInfoProxy().mjava,0,4,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeBootstrapToken(Token).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#getBitSet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#toString(BigInteger).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#getColumnFamilyName().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#requestSelectInterestChange(FrameBuffer).mjava,0,0,0,1,0,1.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.Differencer#Differencer(String,TreeResponse,TreeResponse).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.IndexedBlockFetcher#IndexedBlockFetcher().mjava,0,0,3,0,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#login(AuthenticationRequest).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyspaceNotYetExisting(String).mjava,0,0,2,1,0,0.4285714328289032,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getResponseCompletedTasks().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row#serializer().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#LocalPartitioner(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#JsonColumn(T,CFMetaData,boolean).mjava,0,0,23,3,2,0.02380952425301075,5,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#getSubColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#serializer().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#SSTableNamesIterator(SSTableReader,DecoratedKey,SortedSet[ByteBuffer]).mjava,0,0,10,3,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#stopRPCServer().mjava,0,1,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#close().mjava,0,1,2,0,0,0.0714285746216774,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getRack(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#skipLevels(int,Iterable[SSTableReader]).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#writeWithShortLength(ByteBuffer,DataOutput).mjava,0,0,4,2,1,0.0714285746216774,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#trySkipCache(int,long,int).mjava,0,0,4,3,0,0.1428571492433548,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElement(NodeId,long,long,boolean).mjava,0,0,6,4,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#applyModels().mjava,0,0,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#getHashBuckets(ByteBuffer,int,int).mjava,0,0,7,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#validateConfiguration(Configuration).mjava,0,0,3,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#register().mjava,0,1,2,0,1,0.09090909361839294,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#get().mjava,0,0,11,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getEstimatedRowSize().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#getReleaseVersionString().mjava,0,3,5,0,2,0.0,2,1,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#truncate(String,String).mjava,0,0,1,2,0,0.0,1,0,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#rowCacheKeysToSave(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#validateMemtableThroughput(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serializedSize(GossipDigest,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeRow(SSTableIdentityIterator,DecoratedKey,PrintStream).mjava,0,0,29,3,5,0.0,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#serve().mjava,0,0,7,0,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#getData().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#switchMemtable().mjava,0,1,3,0,3,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getWorkMap(Multimap[Range,InetAddress]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Context#Context().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionStrategyInstance(ColumnFamilyStore).mjava,0,0,2,1,1,0.0357142873108387,1,0,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#serializer(AbstractType).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#hashCode().mjava,0,0,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#assureSufficientLiveNodes().mjava,0,0,3,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#atomicSetMax(AtomicInteger,int).mjava,0,0,2,2,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceCleanup(NodeId.OneShotRenewer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getScores().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#clear().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#addAll(AbstractColumnContainer,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#schedule().mjava,0,0,7,0,2,0.05263157933950424,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#isIndexBuilt(String,String).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#scheduleLocalHint(RowMutation,InetAddress,IWriteResponseHandler,ConsistencyLevel).mjava,0,0,17,4,4,0.09677419066429138,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#TypeParser(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#toString(BigDecimal).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#unregisterMBean().mjava,0,3,5,0,2,0.06666667014360428,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#collateColumns(ColumnFamily,List[#-extends-CloseableIterator[IColumn]],AbstractType,int).mjava,0,0,23,4,6,0.25,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#forwardToSource().mjava,0,1,4,0,0,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\HeapAllocator#allocate(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#writeSortedContents(ReplayPosition).mjava,0,0,19,1,5,0.34375,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#decorate(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#saveCache().mjava,0,0,21,0,5,0.032258063554763794,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#IntegerType().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient.CfDefNamesComparator#compare(CfDef,CfDef).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getEstimatedColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#setCapacity(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#decompose(Long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#toString(StringBuilder,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#announce(IColumn).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUnsignedByte().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getNextAvailableDataLocation().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serializedSize(HeartBeatState,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#addAll(ISortedColumns,Allocator).mjava,0,0,2,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\HeaderSerializer[Header]#serialize(Header,DataOutput,int).mjava,0,0,12,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#startNext().mjava,0,1,9,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#getMaxDataAge(Collection[SSTableReader]).mjava,0,0,0,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#validateFields(CFMetaData).mjava,0,0,4,1,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IdentityQueryFilter#filterSuperColumn(SuperColumn,int).mjava,0,0,0,2,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#getScale(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getBootstrapToken(TokenMetadata,Map[InetAddress,Double]).mjava,0,0,9,2,1,0.0,3,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf,String,org.apache.hadoop.util.Progressable).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#writeHeader(CompressionParameters).mjava,0,0,15,1,0,0.23076923191547394,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeList(Tree).mjava,0,0,36,1,14,0.09259258955717087,20,8,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#setBaseCfStore(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#SerializingCache(int,ISerializer[V],String,String).mjava,0,0,8,4,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#isPutCopying().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#resolve(DecoratedKey,ColumnFamily).mjava,0,0,17,2,1,0.2631579041481018,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#get().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Operation#Operation(Term,OperationType,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevelSize(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\SocketSessionManagementService#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#JdbcBoolean().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSSTableColumnIterator(SSTableReader).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceTableCompaction(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#importJson(String,String,String,String).mjava,0,0,6,4,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLexicalUUID#JdbcLexicalUUID().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#getIndexName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.mapred.JobConf).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#key().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#export(String,PrintStream,Collection[String],String[]).mjava,0,0,20,4,7,0.03333333507180214,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#getHelper(Hashable,Token,Token,byte,Token).mjava,0,0,5,5,1,0.4000000059604645,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsByteArray(String,CfDef).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#isInitialized().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\PureRandom#nextInt(int).mjava,0,0,5,1,1,0.0,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CachingMessageProducer#CachingMessageProducer(MessageProducer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicResetInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#markCompacting(Collection[SSTableReader],int,int).mjava,0,0,11,3,4,0.1666666716337204,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#invalidateHelper(Hashable,Token,Token).mjava,0,0,4,3,1,0.30000001192092896,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\MarshalException#MarshalException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#setKeyspace(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#maybeInitializeLocalState(int).mjava,0,0,5,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addColumn(QueryPath,ByteBuffer,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#getColumns().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#DynamicEndpointSnitch(IEndpointSnitch).mjava,0,0,6,1,2,0.095238097012043,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#bind().mjava,0,1,3,0,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#write(DataOutput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getDirectScanner().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(DataInput).mjava,0,0,4,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#writeKey(PrintStream,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#getPrecision(BigInteger).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#serializationFlags().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#toString(boolean).mjava,0,0,7,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#streamFile(PendingFile).mjava,0,0,7,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#isSignaled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#and(OpenBitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getRowCacheSavePeriodInSeconds().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilterSerializer#serializedSize(BloomFilter).mjava,0,0,1,1,0,0.6000000238418579,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidAsBytes().mjava,0,2,14,0,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#newIndexMetadata(CFMetaData,ColumnDefinition,AbstractType).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#get(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\GuidGenerator#guidToString(byte[]).mjava,0,0,5,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#LeveledCompactionTask(ColumnFamilyStore,Collection[SSTableReader],int,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#clearUnsafe().mjava,0,0,5,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#setCapacity(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getConnection(InetAddress,Message).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#initialCompressedBufferLength(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteWithConfirm(File).mjava,0,0,7,1,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#inc(byte).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#deleteColumnOrSuperColumn(String,Deletion).mjava,0,0,4,2,0,0.0,3,2,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#verifyNoHintsInProgress().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeFromMoving(InetAddress).mjava,0,0,7,1,0,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#toString(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexOptions().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#validateOptions().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#serializedSize(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#stringForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.1818181872367859,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#RangeSliceResponseResolver(String,List[InetAddress]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(List[GossipDigest]).mjava,0,0,2,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader.SimpleBlockFetcher#SimpleBlockFetcher().mjava,0,0,11,0,3,1.2222222089767456,17,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#parseNextComparator(int,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#write(ByteBuffer,DataOutput).mjava,0,0,10,2,0,0.0,2,2,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#decompose(Boolean).mjava,0,0,2,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#getFilter(long,int).mjava,0,0,9,2,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#activate().mjava,0,1,12,0,1,0.0416666679084301,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#getCfNamesByKeySpace(KsDef).mjava,0,0,3,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#getScale(BigInteger).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#decompose(T).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#keyValidator(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#getEndpointToRangesMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#failedNode(InetAddress).mjava,0,0,5,1,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner.KeyScanningIterator#next().mjava,0,0,7,0,3,0.0,4,2,17,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(int).mjava,0,0,0,1,1,0.5555555820465088,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(String,ByteBuffer,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#markCompacted(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#initSocket().mjava,0,3,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getKeySamples().mjava,0,3,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getRowCacheKeysToSave().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftify(ColumnOrSuperColumn).mjava,0,0,4,1,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#getMaxVersion().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#components(CFMetaData).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#init().mjava,0,2,5,0,2,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#CompactionIterable(OperationType,Iterable[SSTableReader],CompactionController).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#columnCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#LegacyBloomFilter(int,BitSet).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#free().mjava,0,1,0,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableBoundedScanner#next().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,byte[],int,int).mjava,0,0,7,5,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#SliceByNamesReadCommand(String,ByteBuffer,ColumnParent,Collection[ByteBuffer]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyType#create(String).mjava,0,0,1,1,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#waitingFor(ReadResponse).mjava,0,0,0,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.TooDeep#TooDeep().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setOutputColumnFamily(Configuration,String,String).mjava,0,0,2,3,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#reset(FileMark).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#serializationFlags().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#replace(IColumn,IColumn).mjava,0,0,6,2,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#createHardLinkWithExec(File,File).mjava,0,0,13,2,4,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printUsage().mjava,0,2,40,0,3,0.1190476194024086,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#SimpleFuture(Runnable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#seek(long).mjava,0,0,5,1,0,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getOperationMode().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getLocation().mjava,0,1,10,0,3,0.0,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#Term().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markReferenced(DecoratedKey).mjava,0,0,6,1,2,0.07692307978868484,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#setIndexRemoved(String,String).mjava,0,0,6,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultDouble#isModified().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#digest(ColumnFamily).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component.Type#Type(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#response(Message).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#toString().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#validateChunkLength().mjava,0,1,0,0,2,0.05263157933950424,16,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#getOutgoingFiles(String).mjava,0,0,7,1,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#getCompactions().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#toByteArray(long).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#addSSTable(SSTableReader).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeSafe().mjava,0,2,2,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getMinimumToken().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#open(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#delete(Descriptor,Set[Component]).mjava,0,0,10,2,0,0.1538461595773697,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#Builder().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#describeSchemaVersions().mjava,0,3,42,0,12,0.095238097012043,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequestVerbHandler#deserialize(DataInput,int).mjava,0,0,10,2,4,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#close().mjava,0,0,2,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#getPrecision(Long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\RelationType[Relation]#forString(String).mjava,0,0,5,1,0,0.0,32,5,10,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#extractKeyAliasFromColumns(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#delta().mjava,0,4,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#toAvro().mjava,0,7,20,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#getDatacenters().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#CLibrary().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#bootstrapping(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#expandingWordNum(long).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#getString(ByteBuffer).mjava,0,0,6,1,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#columnMetadata(Map[ByteBuffer,ColumnDefinition]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#flushIndexes().mjava,0,2,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row.RowSerializer#deserialize(DataInput,int,boolean,ISortedColumns.Factory).mjava,0,0,5,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2MessageSerializer[GossipDigestAck2Message]#serializedSize(GossipDigestAck2Message,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#removeColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#getCurrentKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\StageManager#shutdownNow().mjava,0,0,3,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#[T]_newTaskFor(Runnable,T).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#SSTableScanner(SSTableReader,boolean).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#timestamp().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#setCurrentFile(PendingFile).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputColumnFamily(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover().mjava,0,1,12,0,3,0.11999999731779099,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getRemovalStatus().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#updateEstimatedCompactionsByTasks(List[AbstractCompactionTask]).mjava,0,0,6,1,2,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\OldNetworkTopologyStrategy#getReplicationFactor().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#getStreamDestinations().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getIndexScanPosition(DecoratedKey).mjava,0,0,9,1,2,0.13333334028720856,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#compareTo(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getCF(Integer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#length().mjava,0,2,1,0,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#deserialize(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#hasKeySpace().mjava,0,13,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#setDurableWrites(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,6,2,1,0.3333333432674408,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.Reducer#getReduced().mjava,0,0,12,0,1,0.095238097012043,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#bufferToString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#TCustomServerSocket(InetSocketAddress,boolean,Integer,Integer).mjava,0,0,3,4,0,0.1875,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner.KeyScanningIterator#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalNode#getLeftIntervals(List[Interval]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#processInterestChanges().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#unregisterFailureDetectionEventListener(IFailureDetectionEventListener).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#ColumnFamilyRecordWriter(Configuration).mjava,0,0,10,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ThreadPoolProxyMBeanIterator[NodeProbe]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol.Factory#getProtocol(TTransport).mjava,0,0,1,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isMultithreadedCompaction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPath(CFMetaData,ColumnPath).mjava,0,0,4,2,0,0.0,20,6,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#serializedSize(WriteResponse,int).mjava,0,0,4,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#newRow(ByteBuffer).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendReply(Message,String,InetAddress).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#addColumn(IColumn,Allocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#shouldReplicateOnWrite().mjava,0,0,3,0,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#getIndexPositions().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInitialAddress(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_add_keyspace(KsDef).mjava,0,0,26,1,3,0.05128205195069313,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#getArray(ByteBuffer).mjava,0,0,10,1,3,0.0714285746216774,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutationSerializer[CounterMutation]#serialize(CounterMutation,DataOutput,int).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary.KeyPosition#compareTo(KeyPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#getVersion().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#open().mjava,0,0,7,0,0,0.0,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile.PendingFileSerializer#serializedSize(PendingFile,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#max().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#Writer(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnData(CFMetaData,Column,boolean).mjava,0,0,18,3,2,0.03333333507180214,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#hashCode().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractNetworkTopologySnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,18,3,6,0.0,64,6,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#diff(IColumn).mjava,0,0,7,1,1,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspaceUserName(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage.StreamRequestMessageSerializer#deserialize(DataInput,int).mjava,0,0,17,2,10,0.0,2,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#convict(InetAddress,double).mjava,0,0,5,2,0,0.125,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int,Charset).mjava,0,0,5,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#RenameKeyspace().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#resolve().mjava,0,1,29,0,8,0.08571428805589676,36,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setKeyCacheSavePeriodInSeconds(int).mjava,0,0,5,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#renewMemtable(Memtable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#TCustomSocket(Socket).mjava,0,0,7,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#getColumnRelations().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#resolveAgainst(int,IColumn,Allocator).mjava,0,0,4,3,2,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.RowContainer#RowContainer(NotifyingSSTableIdentityIterator).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#reconcile(IColumn,Allocator).mjava,0,0,9,2,1,0.5714285969734192,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#indexRow(DecoratedKey[#],ColumnFamilyStore,SortedSet[ByteBuffer]).mjava,0,0,9,3,1,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_range_slices(ColumnParent,SlicePredicate,KeyRange,ConsistencyLevel).mjava,0,0,21,4,8,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#isCancelled().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceReply#RangeSliceReply(List[Row]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#SecondaryIndexBuilder(ColumnFamilyStore,SortedSet[ByteBuffer],ReducingKeyIterator).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getCharSequenceMap(Map[String,String]).mjava,0,0,4,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(SequentialWriter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnParent(CFMetaData,ColumnParent).mjava,0,0,2,2,0,0.0,6,3,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getReduceCacheCapacityTo().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setRowCacheSavePeriodInSeconds(int).mjava,0,0,5,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#startThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#equals(Object).mjava,0,0,0,1,2,0.1111111119389534,72,7,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getEstimatedRowSizeHistogram().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#add(ByteBuffer,ColumnParent,CounterColumn,ConsistencyLevel).mjava,0,0,15,4,3,0.0416666679084301,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#cleanupAndExit().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#close().mjava,0,2,2,0,1,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon.ThriftServer#ThriftServer(InetAddress,int).mjava,0,0,49,2,13,0.11688311398029327,2,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeResponseVerbHandler#doVerb(Message,String).mjava,0,0,5,2,4,0.0714285746216774,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getStrategyClass().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getEstimatedRowSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnFamily().mjava,0,8,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AllowAllAuthority#authorize(AuthenticatedUser,List[Object]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#readChunkOffsets(DataInput).mjava,0,0,3,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#removeToken(Token).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Truncation#Truncation(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#OutputBuffer(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#Component(Type).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#SelectStatement(SelectExpression,boolean,String,ConsistencyLevel,WhereClause,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token#equals(Object).mjava,0,0,1,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializedSize(ColumnFamily).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.Reducer#trivialReduceIsTrivial().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliSessionState#CliSessionState().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String,InetAddress).mjava,0,0,6,2,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateSlicePredicate(CFMetaData,ByteBuffer,SlicePredicate).mjava,0,0,3,3,0,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#setTableDefinition(KSMetaData,UUID).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#validateNextComparator(int,ByteBuffer).mjava,0,0,7,2,3,0.03703703731298447,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#unwrap().mjava,0,0,8,0,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#remove(OpenBitSet).mjava,0,0,1,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getBloomFilterFalsePositives().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessage#GossipDigestAckMessage(List[GossipDigest],Map[InetAddress,EndpointState]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumnFamily(ColumnFamily,boolean,boolean).mjava,0,0,14,3,3,0.0,12,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#write(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue.Entry#Entry(Thread).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#unescapeSQLString(String).mjava,0,0,6,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#column(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#last().mjava,0,0,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#addSSTables(Collection[SSTableReader]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#getConsistencyLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(InetAddress,EndpointState).mjava,0,0,15,2,6,0.23333333432674408,10,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#updateDigest(MessageDigest).mjava,0,0,11,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#trimTrailingZeros().mjava,0,0,0,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#schedule(long).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshot(String).mjava,0,0,2,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getRecentBloomFilterFalseRatio().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#WriteResponse(String,ByteBuffer,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#close(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#wrap(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#addNewSSTablesSize(Iterable[SSTableReader]).mjava,0,0,9,1,1,0.0,2,1,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable.HashableSerializer#serialize(Hashable,DataOutput,int).mjava,0,0,6,3,0,0.0,4,2,9,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#isDone().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#setUsername(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#updateMaxTimestamp(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#highestSelectivityPredicate(IndexClause).mjava,0,0,4,1,4,0.05263157933950424,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilterSerializer#deserialize(DataInputStream).mjava,0,0,2,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#hasUnreclaimedSpace().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#Inner(Token,Hashable,Hashable).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommandSerializer[SliceByNamesReadCommand]#deserialize(DataInput,int).mjava,0,0,8,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#newMessageDigest(String).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getToken(ByteBuffer).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#addLocalApplicationState(ApplicationState,VersionedValue).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getKeyValueParameters().mjava,0,1,15,0,3,0.032258063554763794,36,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#cleanupIfNecessary().mjava,0,5,7,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getBackgroundTasks(int).mjava,0,0,15,1,2,0.0,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSynMessage]#serialize(List[GossipDigest],DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getMaxCompactionThreshold().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\client\RingCache#getRange(ByteBuffer).mjava,0,0,3,1,1,0.1428571492433548,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(Message,InetAddress,IMessageCallback,long).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readShortLength(DataInput).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#isKeyRange().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#close().mjava,0,1,4,0,0,0.07692307978868484,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessage#getGossipDigests().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#reset().mjava,0,2,3,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#compactionStrategyClass(Class[#-extends-AbstractCompactionStrategy]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#compare(ByteBuffer,ByteBuffer).mjava,0,0,8,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#Bounds(Token,Token,IPartitioner).mjava,0,0,3,3,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#FloatType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator#close().mjava,0,0,1,0,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#getScale(BigDecimal).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getTableDefinition(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#clear().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#purgeIncompatibleHints().mjava,0,1,17,0,6,0.0555555559694767,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#startThreads().mjava,0,1,1,0,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isExpiring().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHint(ByteBuffer,ByteBuffer,long).mjava,0,0,2,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#validateMagic(int).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#getColumnNames(SelectStatement,CFMetaData).mjava,0,0,6,2,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#isCompactionInteresting(Set[SSTableReader]).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createReplicationStrategy(String,String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,2,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,ByteBuffer,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\HeaderSerializer[Header]#deserialize(DataInput,int).mjava,0,0,7,2,7,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#setNumWords(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithBadness(InetAddress,List[InetAddress]).mjava,0,0,6,2,2,0.0,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#unregisterMbean().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getSortedColumns().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceTableFlush(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#serializedSize().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#getPrecision(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#stringifyFileSize(double).mjava,0,0,5,1,6,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#writeElement(NodeId,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#getFilePointer().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#AsciiType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatStateSerializer[HeartBeatState]#serialize(HeartBeatState,DataOutput,int).mjava,0,0,4,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DestructivePQIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#create(InetAddress,InetAddress,String,String,Collection[Range],Runnable).mjava,0,0,7,6,5,0.1111111119389534,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicUpdateInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentSSTablesPerReadHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#getKeySpaceDef(String,List[KsDef]).mjava,0,0,3,2,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#setHeader(String,byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#replaceFlushed(Memtable,SSTableReader).mjava,0,0,6,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getReverseSortedColumns().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#get(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#decompose(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#run().mjava,0,0,30,0,7,0.14516128599643707,24,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#removeOldShards(ByteBuffer,int).mjava,0,0,31,2,11,0.03921568766236305,60,9,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#satisfies(ColumnFamily,IndexClause,IndexExpression).mjava,0,0,6,3,2,0.25,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#isAlive(InetAddress).mjava,0,0,5,1,1,0.375,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getCurrentGenerationNumber(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readDouble().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_version().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printCompactionStats(PrintStream).mjava,0,0,17,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#ExternalClient(SSTableLoader.OutputHandler).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#reconcile(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getId().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deliverHintsToEndpoint(InetAddress).mjava,0,0,51,1,16,0.1184210553765297,80,7,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#close().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#midpoint(Token,Token).mjava,0,0,9,2,6,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#resourceToFile(String).mjava,0,0,3,1,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#stream(StreamHeader,InetAddress).mjava,0,0,2,2,0,4.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\XMLUtils#getRequestedNodeList(String).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getName().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#SegmentedFile(String,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableBoundedScanner#SSTableBoundedScanner(SSTableReader,boolean,Range).mjava,0,0,6,3,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#create(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readInt().mjava,0,1,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#setConsistencyLevel(ConsistencyLevel).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#resolve(ColumnFamily,Allocator).mjava,0,0,1,2,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#getLocalMigrations(UUID,UUID).mjava,0,0,11,2,5,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getComparator().mjava,0,2,6,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSnitch#compareEndpoints(InetAddress,InetAddress,InetAddress).mjava,0,0,0,3,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#InstrumentingCache(ICache[K,V],String,String).mjava,0,0,4,3,2,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#getGeneration().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMeanRowSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#toString(Iterable[SSTableReader]).mjava,0,0,8,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.GreaterThanOrEqualTo#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#mean().mjava,0,2,5,0,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#stop().mjava,0,1,2,0,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#score().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#get(long).mjava,0,0,0,1,3,0.2857142984867096,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#validateName(CFMetaData).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getWriteCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#getPrompt(CliClient).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#concatWithIndexes().mjava,0,6,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#compareTo(Candidate[In]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#TruncateResponseHandler(int).mjava,0,0,1,1,0,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#getColumnsLimit().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#IndexSummary(long).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getCompressedBuilder().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#AbstractCompactionStrategy(ColumnFamilyStore,Map[String,String]).mjava,0,0,3,2,1,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#getRawCallable().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#getCompactionInfo().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseRemoving(InetAddress,Token,Token,int).mjava,0,0,18,4,2,0.17391304671764374,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#load(double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#sync().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\PureRandom#PureRandom().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\LocalStrategy#validateOptions().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#await().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#makeNode(InetAddress).mjava,0,0,8,1,2,0.09090909361839294,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#describeOwnership(List[Token]).mjava,0,0,18,1,4,0.14814814925193787,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexSearchersForQuery(IndexClause).mjava,0,0,16,1,4,0.09090909361839294,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#isKeyExistenceExpensive(Set[#-extends-SSTable]).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstToken(ArrayList[Token],Token).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#parseCompressorClass(String).mjava,0,0,2,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getSSTables().mjava,0,14,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#skip(long).mjava,0,0,0,1,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#makeNewKeyspaceDefinition(KSMetaData).mjava,0,0,12,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaxSSTableSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#create(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#read().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#toString(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#unregisterMBean().mjava,0,0,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getString(ByteBuffer).mjava,0,0,12,1,6,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitIndexBuild(SecondaryIndexBuilder).mjava,0,0,9,1,1,0.13793103396892548,2,1,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#serializationFlags().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#comment(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomCalculations.BloomSpecification#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#write(byte[],int,int).mjava,0,0,2,3,0,0.875,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\security\SSLFactory#getServerSocket(EncryptionOptions,InetAddress,int).mjava,0,0,6,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#deserialize(TDeserializer,TBase,DataInput).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flushData().mjava,0,0,8,0,1,0.5833333134651184,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#asTemporary(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLiveDiskSpaceUsed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DefsTable#loadFromStorage(UUID).mjava,0,0,18,1,10,0.095238097012043,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#SSTable(Descriptor,Set[Component],CFMetaData,IPartitioner).mjava,0,0,2,4,1,0.1538461595773697,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySuperCounter(CounterSuperColumn).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#getName().mjava,0,15,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(Message,InetAddress).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\ArrayUtil#grow(long[],int).mjava,0,0,2,2,1,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#setupTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#receive(Message,String).mjava,0,0,10,2,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#addToTotalBytesCompacted(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#DoubleType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getBit(int).mjava,0,0,0,1,2,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#open(String,String,boolean,CompressionParameters).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#getSessionId().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#completed(Differencer).mjava,0,0,14,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#optsWithRF(Integer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionIterable#ValidationCompactionIterable(ColumnFamilyStore,Collection[SSTableReader],Range).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlankAndComma().mjava,0,3,3,0,2,0.0,6,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#convertOldStrategyName(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#create(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#TrivialOneToOne(List[#-extends-CloseableIterator[In]],Reducer[In,Out]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#clear().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDescribe(Tree).mjava,0,0,18,1,6,0.05882352963089943,56,9,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#serialize().mjava,0,2,27,0,5,0.10256410390138626,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#bytes().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#indexLockFor(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#sendAll(GossipDigest,Map[InetAddress,EndpointState],int).mjava,0,0,4,3,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#createTimeUUIDBytes(long).mjava,0,0,1,1,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowIteratorFactory#getIterator(Iterable[Memtable],Collection[SSTableReader],DecoratedKey,DecoratedKey,QueryFilter,AbstractType,ColumnFamilyStore).mjava,0,0,24,7,7,0.1428571492433548,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#RowMutation(String,ByteBuffer,Map[Integer,ColumnFamily]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#xorCount(OpenBitSet,OpenBitSet).mjava,0,0,4,2,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#computeOldShardMerger().mjava,0,2,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#tailMap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\CompactEndpointSerializationHelper#serializedSize(InetAddress).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#LocalByPartionerType(IPartitioner[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read().mjava,0,0,2,0,0,0.10000000149011612,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon#stop(String[]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#differenceToFetch(Range).mjava,0,0,9,1,7,0.1111111119389534,2,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#forceMajorCompaction().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#Range(Token,Token).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#CounterColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializeForSSTable(ColumnFamily,DataOutput).mjava,0,0,6,2,2,0.0,1,0,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#size().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AsciiType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_count(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,11,4,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#reBuffer().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifySimple(Column).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#enforceCommentNotNull(CharSequence).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#connect().mjava,0,1,17,0,2,0.02631578966975212,10,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#threadLocalRandom().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Message#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getColumnNames().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#evaluateFileStatements(BufferedReader).mjava,0,0,9,1,3,0.25925925374031067,33,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitCacheWrite(AutoSavingCache.Writer).mjava,0,0,8,1,1,0.0,2,1,16,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#hotKeySet(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(Integer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_remove(ByteBuffer,ColumnPath,long,ConsistencyLevel,boolean).mjava,0,0,15,5,2,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#createConnection(String,Integer,boolean).mjava,0,0,1,3,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Truncation#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#getTokenFactory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Context#put(Object,Object).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#createInstance(ColumnFamilyStore,ColumnDefinition).mjava,0,0,10,2,2,0.0,12,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#UUIDType().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#setDigestQuery(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.LocalNodeIdHistory#renewCurrent(long).mjava,0,0,5,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\CreationTimeAwareFuture#cancel(boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#scheduleRepairs(ColumnFamily,String,DecoratedKey[#],List[ColumnFamily],List[InetAddress]).mjava,0,0,12,5,4,0.09090909361839294,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessageSerializer[GossipDigestAckMessage]#serialize(GossipDigestAckMessage,DataOutput,int).mjava,0,0,3,3,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSliceFilter(DecoratedKey[#],QueryPath,ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#seekToChunkStart().mjava,0,1,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSync().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\IndexScanVerbHandler#doVerb(Message,String).mjava,0,0,13,2,5,0.0,2,1,12,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printGossipInfo(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getCompactedRow(List[SSTableIdentityIterator]).mjava,0,0,14,1,2,0.10526315867900848,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#addStreamedSSTable(SSTableReader).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer#serialize(IIterableColumns,DataOutput).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#complete().mjava,0,1,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#estimatedKeysForRanges(Collection[Range]).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onRemove(InetAddress).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#getSubColumns().mjava,0,15,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(Range).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#getOldLocalNodeIds().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performCleanup(ColumnFamilyStore,NodeId.OneShotRenewer).mjava,0,0,22,2,2,0.04878048598766327,8,3,25,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#NamesQueryFilter(SortedSet[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#addIndexedColumn(ColumnDefinition).mjava,0,0,14,1,2,0.25,12,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#BytesToken(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#UpdateColumnFamily().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#get(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serializedSize(TruncateResponse,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#mergeOldShards(String,Row).mjava,0,0,8,2,3,0.06666667014360428,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\CLibrary#errno(RuntimeException).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getDefaultIndexName(String,AbstractType,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#ReadResponse(Row).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(ByteBuffer,byte[]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getTotalLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#getComparator().mjava,0,4,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#stream(StreamHeader,DataInputStream).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.Differencer#run().mjava,0,0,18,0,1,0.25,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#remove(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getKeySpace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#copyOptions(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,8,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#close().mjava,0,2,2,0,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getMaxHintWindow().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\AsyncResult#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsBytes(String,CfDef).mjava,0,0,5,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#close().mjava,0,0,2,0,0,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#setPendingRanges(String,Multimap[Range,InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#size().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#StorageProxy().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\TypesMap#getTypeForComparator(String).mjava,0,0,3,1,0,0.20000000298023224,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\PerColumnSecondaryIndex#getNameForSystemTable(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(ICompressor).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\GCInspector#logGCResults().mjava,0,0,30,0,11,0.020408162847161293,640,10,42,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getWriteOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type.UTF8Validator#validate(ByteBuffer).mjava,0,0,3,1,2,0.20000000298023224,75,19,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#isCounterCF(CfDef).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#unreference().mjava,0,3,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitTruncate(ColumnFamilyStore,long).mjava,0,0,7,2,2,0.0,2,1,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getFrom().mjava,0,46,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,1,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushWriters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#complete().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyDouble(String,Double).mjava,0,0,3,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximity(InetAddress,List[InetAddress]).mjava,0,0,4,2,0,0.09090909361839294,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getNumWords().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#isMarkedForDelete().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#finishStartup().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#create(Map[String,String]).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#shutdown().mjava,0,0,2,0,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareUnsigned(ByteBuffer,ByteBuffer).mjava,0,0,24,2,1,0.05882352963089943,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#resetVersion(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getFactory().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getInstance(TypeParser).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply#StreamReply(String,long,Status).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#stop().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#notifyFailureDetector(Map[InetAddress,EndpointState]).mjava,0,0,4,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#getColumnFamily().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#toString().mjava,0,12,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#datacenter(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentRangeLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#EchoedRow(CompactionController,SSTableIdentityIterator).mjava,0,0,2,2,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#validate(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#isInsertReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#fromString(String).mjava,0,0,20,1,9,0.027027027681469917,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\StringToken#StringToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#getAge(K).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.NodeIdRecord#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairFuture#RepairFuture(RepairSession).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService.CheaterFutureTask#set(V).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcKeepAlive().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getNextComparator(int,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getCFColumnMetaFromTree(CfDef,Tree).mjava,0,0,29,2,6,0.12765957415103912,35,8,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPartitioner().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_classForName(String,String).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\AsyncResult#getFrom().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getPartitioner(Configuration).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#Term(String,TermType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutationVerbHandler#doVerb(Message,String).mjava,0,0,18,2,7,0.1538461595773697,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleStrategy#calculateNaturalEndpoints(Token,TokenMetadata).mjava,0,0,9,2,4,0.07692307978868484,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#extractKeyspaceName(File).mjava,0,0,5,1,0,0.2857142984867096,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#rpcaddress(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#ParallelCompactionIterable(OperationType,Iterable[SSTableReader],CompactionController,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeUseKeySpace(Tree).mjava,0,0,27,1,4,1.7083333730697632,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#addRangeForEndpoint(Range,InetAddress).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#acquireReference().mjava,0,2,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\notifications\SSTableAddedNotification#SSTableAddedNotification(SSTableReader).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#handleNotification(INotification,Object).mjava,0,0,2,2,2,0.0,4,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Segment#Segment(long,MappedByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getNextComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,3,3,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getCompactionThreshold(PrintStream,String,String).mjava,0,0,4,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getReverseSortedColumns().mjava,0,0,0,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#insertLocal(RowMutation,IWriteResponseHandler).mjava,0,0,7,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#toString(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#getExtraFilter(IndexClause).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getReplicateOnWrite().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#incrementallyBackup(SSTableReader).mjava,0,0,8,1,3,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#fromString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#ringIterator(ArrayList[Token],Token,boolean).mjava,0,0,15,3,2,0.10000000149011612,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getColumnFamily(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAllDataFileLocations().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytesToHex(ByteBuffer).mjava,0,0,4,1,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsBytes(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#serialize().mjava,0,1,13,0,2,0.20000000298023224,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#fromInt(int).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestSchedulerOptions().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\LocalStrategy#getReplicationFactor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#validateKeyspace().mjava,0,2,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver.RowIterator#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#moveToNext().mjava,0,21,1,0,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMemtablesPendingFlush().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getNumRecords().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#getFactory().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCandidatesFor(int).mjava,0,0,14,1,3,0.3181818127632141,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#SSTableSliceIterator(SSTableReader,DecoratedKey,ByteBuffer,ByteBuffer,boolean).mjava,0,0,9,5,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#FastByteArrayInputStream(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#lchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#open(File).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#getIndexName().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getVersion(InetAddress).mjava,0,0,2,1,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#SSTableLoader(File,Client,OutputHandler).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#updateNormalToken(Token,InetAddress).mjava,0,0,15,2,1,0.0416666679084301,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#seekInternal(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateTable(String).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#serializeComparator(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#reduce(RowContainer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#openDataReader(boolean).mjava,0,0,4,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#addColumn(IColumn,Allocator).mjava,0,0,5,2,3,0.21052631735801697,3,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#findMostSignificantByte(ByteBuffer).mjava,0,0,5,1,4,0.0,19,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,0,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#unmarkCompacting(Collection[SSTableReader]).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DefinitionsUpdateVerbHandler#doVerb(Message,String).mjava,0,0,31,2,3,0.1190476194024086,5,3,26,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addRowSize(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#getTopLevelColumns().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getKeyCacheSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#submitWrite(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalRangeLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput.MappedFileDataInputMark#MappedFileDataInputMark(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#setupVersion().mjava,0,1,22,0,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey[#]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadVerbHandler#doVerb(Message,String).mjava,0,0,22,2,7,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#isOpen().mjava,0,2,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getColumnComparator(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#get().mjava,0,1,4,0,2,0.0625,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(QueryFilter,ISortedColumns.Factory).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(CFMetaData,ISortedColumns.Factory,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#BatchCommitLogExecutorService().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(String,Charset).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliOptions.CLIOptions#addOption(String,String,String,String).mjava,0,5,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingKeyCache#getConfiguredCacheSize(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#copyTo(ContextState).mjava,0,0,7,1,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSerializationHelper[GossipDigestSynMessage]#deserialize(DataInput,int).mjava,0,0,4,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#read(DataInput).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#replaceFlushed(Memtable,SSTableReader).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#isCounter().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#gossiperStarting().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcPort().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getTaskCount().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#getTotalBytes().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#asThriftOptions().mjava,0,2,5,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#rename(CFMetaData,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#isConnected().mjava,0,24,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#getPrecision(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse.WriteResponseSerializer#serialize(WriteResponse,DataOutput,int).mjava,0,0,6,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getRangeBatchSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onFinalAccept(Runnable).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#ColumnFamilySplit(String,String,String[]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#extractKeysFromColumns(CFMetaData).mjava,0,0,15,1,4,0.2222222238779068,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#ConvertToColumnIterator(QueryFilter,AbstractType,Predicate[IColumnIterator],Iterator[Map.Entry[DecoratedKey,ColumnFamily]]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilterSerializer#serialize(LegacyBloomFilter,DataOutput).mjava,0,0,0,2,0,1.3333333730697632,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointDowntime(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#deserialize(DataInput).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#shutdownNow().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#UpdateKeyspace(KSMetaData).mjava,0,0,12,1,0,0.0833333358168602,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#isAnyHostDown().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#remove(K).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#hasNodeId(ByteBuffer,NodeId).mjava,0,0,5,2,0,0.10000000149011612,3,2,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#unregisterMBeans().mjava,0,1,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#convertFromDiskFormat(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getOperations().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeGet(Tree).mjava,0,0,57,1,19,0.12871287763118744,1728,13,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#SliceByNamesReadCommand(String,ByteBuffer,QueryPath,Collection[ByteBuffer]).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\security\SSLFactory#getSocket(EncryptionOptions).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#hibernate(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner.InnerSerializer#deserialize(DataInput,int).mjava,0,0,6,2,5,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#convertValueByFunction(Tree,CfDef,ByteBuffer,boolean).mjava,0,0,17,4,5,0.02380952425301075,18,5,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SchemaCheckVerbHandler#doVerb(Message,String).mjava,0,0,9,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onJoin(InetAddress,EndpointState).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#size().mjava,0,0,0,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Mx4jTool#getAddress().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentReaders().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#replace(IColumn,IColumn).mjava,0,0,5,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(Integer,ISortedColumns.Factory).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doCleanupCompaction(ColumnFamilyStore,Collection[SSTableReader],NodeId.OneShotRenewer).mjava,0,0,59,3,24,0.021052632480859756,256,16,1,7,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializeWithIndexes(ColumnFamily,ColumnIndexer.RowHeader,DataOutput).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#setMaxHintsInProgress(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#size().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.Segment#compareTo(Segment).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#PrecompactedRow(DecoratedKey[#],CompactionController,ColumnFamily).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUUID#compose(ByteBuffer).mjava,0,0,4,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#getCount().mjava,0,10,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#hasNext().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#addFiles(Collection[PendingFile]).mjava,0,0,4,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getAllSSTables().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Hex#hexToBytes(String).mjava,0,0,4,1,3,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#getSSTableColumnIterator(SSTableReader,DecoratedKey[#]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getThreadPoolMBeanProxies().mjava,0,1,0,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\MarshalException#MarshalException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceResponseResolver#getMessages().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_column_family(CfDef).mjava,0,0,17,1,5,0.02500000037252903,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#getStatements().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getMovingEndpoints().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#isWrapAround().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse#TruncateResponse(String,String,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon#main(String[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_get(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,18,3,8,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#put(K,V).mjava,0,0,3,2,2,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateKeyspace#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#advertiseTokenRemoved(InetAddress,Token).mjava,0,0,10,2,1,0.125,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#getKeys().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getValueValidator(String,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#mark().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableScheduledThreadPoolExecutor#DebuggableScheduledThreadPoolExecutor(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#getKeyspace().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ConfigurationException#ConfigurationException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#[T]_getInstance(AbstractType[T]).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readByte().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#DecoratedKey(T,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#initCleaner().mjava,0,1,3,0,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#getReplayPosition(Iterable[#-extends-SSTableReader]).mjava,0,0,5,1,2,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#close().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#reconcile(IColumn).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#rescheduleFailedTasks().mjava,0,2,2,0,0,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#getLocalDeletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#invalidateRowCaches(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printRemovalStatus(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyInt(String,Integer).mjava,0,0,3,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Deserializer#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#isMultiKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#maybeDiscardSegment(CommitLogSegment,Iterator[CommitLogSegment]).mjava,0,0,10,2,0,0.1538461595773697,2,2,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isIndex().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#listen(InetAddress).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#fromString(String).mjava,0,0,23,1,3,0.0833333358168602,18,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#toString().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(Iterable[Future[#]]).mjava,0,0,1,1,0,0.0,1,0,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#validateContext(ByteBuffer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.CmdLineOptions#addOption(String,String,String,String).mjava,0,4,2,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.SimpleFuture#isCancelled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#ExpiringColumn(ByteBuffer,ByteBuffer,long,int,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#compare(ByteBuffer,ByteBuffer).mjava,0,0,12,2,9,0.054054055362939835,52,9,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#toString(boolean).mjava,0,0,18,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#isRPCServerRunning().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#sortByProximityWithScore(InetAddress,List[InetAddress]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateConsistencyLevel(String,ConsistencyLevel).mjava,0,0,4,2,1,0.0,6,2,6,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator#[In,Out]_get(List[#-extends-CloseableIterator[In]],Comparator[In],Reducer[In,Out]).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#writeAttrRaw(StringBuilder,boolean,String,String).mjava,0,0,4,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#migration(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#andKeyEquals(Term).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#isEmpty().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\ReplicationFinishedVerbHandler#doVerb(Message,String).mjava,0,0,10,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\GuidGenerator#guid().mjava,0,0,9,0,3,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#getScale(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getCompletedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#apply(DecoratedKey,ColumnFamily).mjava,0,0,11,2,4,0.05263157933950424,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getHelp().mjava,0,3,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessage#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getSliceIterator(DecoratedKey,ColumnFamily,SliceQueryFilter,AbstractType).mjava,0,0,13,4,5,0.029411764815449715,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toInt(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor.TempState#isMatch(Descriptor).mjava,0,0,0,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#OutboundTcpConnection(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DropIndexStatement#DropIndexStatement(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getRecentLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getHintedHandoffThrottleDelay().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractRowResolver#injectPreProcessed(ReadResponse).mjava,0,0,2,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#allocate(int,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getConnectionPool(InetAddress).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#read(SSTableReader,FileDataInput).mjava,0,0,13,2,4,0.11538461595773697,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#reference().mjava,0,1,2,0,1,0.0,5,3,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#mutateCounter(CounterMutation,String).mjava,0,0,23,2,6,0.10000000149011612,2,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#output(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ExternalClient#validateColumnFamily(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#computeNext().mjava,0,0,9,0,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getView().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#open(String,boolean).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSlicedReadBufferSizeInKB().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#turnOffIfNotWritten(Integer,Integer).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#isDigestQuery().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicResetInterval(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#forceUserDefinedCompaction(String,String).mjava,0,0,13,2,6,0.0,16,4,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#getString(ByteBuffer).mjava,0,0,6,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\IncomingStreamReader#read().mjava,0,1,11,0,2,0.0,3,2,19,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#Writer(String,String,int).mjava,0,0,7,3,2,0.043478261679410934,8,3,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#getFrom().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#parseNextComparator(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#union(OpenBitSet).mjava,0,0,4,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaxSizeFile(Iterable[SSTableReader]).mjava,0,0,2,1,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getHintedHandoffEnabled().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#setMaximumCompactionThreshold(int).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#all().mjava,0,7,5,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setPartitioner(Configuration,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf(byte[],byte[]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentBloomFilterFalsePositives().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\KeyspaceNotDefinedException#KeyspaceNotDefinedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPredecessor(Token).mjava,0,0,7,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getToken(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#afterExecute(Runnable,Throwable).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#setKeySpace(String).mjava,0,0,1,1,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#iterator().mjava,0,0,5,0,1,0.0555555559694767,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove(ByteBuffer,ColumnPath,long,ConsistencyLevel).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#PropertyFileSnitch().mjava,0,0,5,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#clearUnsafe().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#maybeCreateWriter(ColumnFamilyStore,String,int,SSTableWriter,Collection[SSTableReader]).mjava,0,0,2,5,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#collectReducedColumns(IColumnContainer,Iterator[IColumn],int).mjava,0,0,4,3,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram(long[],long[]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile.SegmentIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#toString().mjava,0,0,41,0,2,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#updateRowCache(DecoratedKey,ColumnFamily).mjava,0,0,4,2,1,0.0,2,2,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#hash(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#[T-extends-SpecificRecord]_serialize(T).mjava,0,0,5,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalRangeLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer#serialize(IColumn,DataOutput).mjava,0,0,16,2,0,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#TimeUUIDType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#compare(ByteBuffer,ByteBuffer).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getColumnDefByName(CfDef,ByteBuffer).mjava,0,0,3,2,1,0.0,2,1,6,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readLine().mjava,0,0,10,0,4,1.0666667222976685,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#getColumnsString(Collection[IColumn]).mjava,0,0,4,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#skipBlank().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#importSorted(String,ColumnFamily,String,IPartitioner[#]).mjava,0,0,31,4,12,0.06756756454706192,200,12,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#applyModels().mjava,0,0,7,0,0,0.15789473056793213,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateVerbHandler#doVerb(Message,String).mjava,0,0,18,2,6,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#cacheRow(DecoratedKey).mjava,0,0,5,1,1,0.1818181872367859,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#TokenMetadata().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getColumnDefs().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#row().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommandSerializer[RangeSliceCommand]#deserialize(DataInput,int).mjava,0,0,9,2,9,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#serializer().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#FastByteArrayOutputStream().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyCacheSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printRing(PrintStream).mjava,0,0,30,1,17,0.05454545468091965,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#Hashable(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getLeavingNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeTruncate(String).mjava,0,0,8,1,1,0.1428571492433548,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#preferredEndpoints(List[InetAddress]).mjava,0,0,4,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\GuidGenerator#convertToStandardFormat(String).mjava,0,0,16,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#equals(Object).mjava,0,0,30,1,1,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#setTimeToLive(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#Term(String,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2MessageSerializer[GossipDigestAck2Message]#serialize(GossipDigestAck2Message,DataOutput,int).mjava,0,0,1,3,0,4.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#close().mjava,0,0,0,0,0,1.6666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz(long).mjava,0,0,0,1,3,0.7142857313156128,10,7,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyName().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#forwardsCompatibleOptions(KsDef).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedByte().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getDynamicUpdateInterval().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#intersectionWith(Range).mjava,0,0,18,1,2,0.37037035822868347,48,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#renewLocalId(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getColumnFamily(QueryFilter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#snapshotWithoutFlush(String).mjava,0,0,17,1,5,0.054054055362939835,6,3,25,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#createReplicationStrategy(String,Class[#-extends-AbstractReplicationStrategy],TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,3,5,3,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#isIdentityFilter(SliceQueryFilter).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#listEndpointsPendingHints().mjava,0,0,3,0,2,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#RangeClient(List[InetAddress]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#removeColumn(ByteBuffer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#clear(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#newSSTables(Collection[SSTableReader],Iterable[SSTableReader]).mjava,0,0,8,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#JdbcInt32().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeCount(Tree).mjava,0,0,20,1,9,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#merge(List[SSTableIdentityIterator]).mjava,0,0,5,1,2,0.03999999910593033,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#handleSnapshots(NodeCommand,String,String[],NodeProbe).mjava,0,0,11,4,1,0.0,30,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isKeyInRemainingSSTables(DecoratedKey,Set[#-extends-SSTable]).mjava,0,0,5,2,1,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnsLimit().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\sink\SinkManager#processClientMessage(Message,String,InetAddress).mjava,0,0,2,3,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequestVerbHandler#makeVerb(TreeRequest,int).mjava,0,0,3,2,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeShowVersion().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getIndexTypeFromString(String).mjava,0,0,2,1,1,0.043478261679410934,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getComment().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getCurrentlyBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#printUsage(Options).mjava,0,0,11,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#[T]_createArray(int,Schema).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport.JsonColumn#getName().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(File[]).mjava,0,0,1,1,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#replacedEndpoint(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#Attributes().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#bytesForBig(BigInteger,int,boolean).mjava,0,0,4,3,2,0.23076923191547394,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#equals(Object).mjava,0,0,4,1,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#MerkleTree(IPartitioner,Range,byte,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DefsTable#dumpToStorage(UUID).mjava,0,0,16,1,5,0.1818181872367859,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#makeMigrationMessage(Collection[IColumn],int).mjava,0,0,9,2,3,0.4285714328289032,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2VerbHandler#doVerb(Message,String).mjava,0,0,10,2,5,0.3125,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_update_keyspace(KsDef).mjava,0,0,17,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#Message(Header,byte[],int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#init().mjava,0,1,6,0,1,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOut#createPendingFiles(Iterable[SSTableReader],Collection[Range],OperationType).mjava,0,0,7,3,3,0.0625,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#addAll(ISortedColumns,Allocator).mjava,0,0,23,2,5,0.025641025975346565,40,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowIteratorFactory.ConvertToColumnIterator#computeNext().mjava,0,0,7,0,2,0.0,3,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#complete(String).mjava,0,0,4,1,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\FreeableMemory#getValidByte(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#loadTokens().mjava,0,0,17,0,7,0.0,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#makeGossipDigestSynMessage(List[GossipDigest],int).mjava,0,0,5,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#authenticate(Map[#-extends-CharSequence,#-extends-CharSequence]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#serializedSize().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#nextSetBit(int).mjava,0,0,2,1,3,0.1428571492433548,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getSerializedBuffer(int).mjava,0,0,4,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#createCompressor(Class[#-extends-ICompressor],Map[String,String]).mjava,0,0,5,2,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#waitForActiveFlushes().mjava,0,1,6,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#getPhiConvictThreshold().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortedTokens().mjava,0,12,4,0,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadMap().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removingNonlocal(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedConfigurableStage(Stage,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#Unwrapper(CloseableIterator[CompactedRowContainer],CompactionController).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMeanRowSize().mjava,0,1,3,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#create().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#size().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#waitUntilListening().mjava,0,1,2,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#showColumnFamily(StringBuilder,CfDef).mjava,0,0,68,2,7,0.0,216,9,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#export(SSTableReader,PrintStream,String[]).mjava,0,0,14,3,5,0.043478261679410934,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#updateKsDefAttributes(Tree,KsDef).mjava,0,0,24,2,7,0.13636364042758942,39,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#subtractContained(Range).mjava,0,0,4,1,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#write(RowMutation).mjava,0,0,17,1,4,0.09375,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#createReplicationStrategy(KSMetaData).mjava,0,0,5,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyKeySlices(List[Row],ColumnParent,SlicePredicate).mjava,0,0,3,3,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#getFinishKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#rowMutation().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#passiveAnnounce().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse#makeTruncateResponseMessage(Message,TruncateResponse).mjava,0,0,7,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#importUnsorted(JsonParser,ColumnFamily,String,IPartitioner[#]).mjava,0,0,22,4,7,0.05263157933950424,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#compactionStrategyOptions(Map[String,String]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readInt().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getColumnName(String,Tree).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#hasAccess(AuthenticatedUser,Set[Permission],Permission,List[Object]).mjava,0,0,3,4,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#compose(ByteBuffer).mjava,0,0,3,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#isEmpty().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#ntz3(long).mjava,0,0,0,1,2,0.4000000059604645,32,5,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeColumn(IColumn,AbstractType,CFMetaData).mjava,0,0,22,3,4,0.0,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getTypeByFunction(String).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#getString(ByteBuffer).mjava,0,0,8,1,1,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#disconnect().mjava,0,2,3,0,0,0.0,3,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Leaf#Leaf(byte[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,Set[Component],CFMetaData,IPartitioner).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeCLIStatement(String).mjava,0,0,39,1,1,0.009615384973585606,92,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\MarshalException#MarshalException(String,Throwable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSerializer[GossipDigest]#serialize(GossipDigest,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#getHeartBeatState().mjava,0,28,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient.Function#Function(AbstractType).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputSplitSize(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#toString().mjava,0,1,10,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceRemoveCompletion().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getKeySpace(Tree,List[KsDef]).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BigIntegerToken#compareTo(Token[BigInteger]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameColumnFamily#RenameColumnFamily(String,String,String).mjava,0,0,13,3,2,0.0555555559694767,16,4,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#addFilesToStream(List[PendingFile]).mjava,0,0,5,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXConfigurableThreadPoolExecutor#JMXConfigurableThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#JdbcBytes().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SlabAllocator.Region#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable.Reducer#reduce(IColumnIterator).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#add(double).mjava,0,0,3,1,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Attributes#setTimestamp(Long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsByteArray(String,CfDef).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceTableRepair(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getActiveStreamsOutbound().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.NodeIdRecord#equals(Object).mjava,0,0,3,1,1,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#bits2words(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#gcBefore().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType.StaticParsedComparator#getComparatorSerializedSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#getTaskType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#advance().mjava,0,0,3,0,1,0.0,3,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ConfigurationException#ConfigurationException(String,Exception).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper.BootstrapTokenCallback#response(Message).mjava,0,0,5,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getColumns(AbstractType[#]).mjava,0,0,13,1,5,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#value().mjava,0,14,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getWorkMap(Multimap[Range,InetAddress],IFailureDetector).mjava,0,0,7,2,1,0.4000000059604645,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#forceFilterFailures().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#requestInvoke(FrameBuffer,SelectorThread).mjava,0,0,2,2,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getBroadcastAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\SimpleSnitch#getRack(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#computeShardMerger(ColumnFamily).mjava,0,0,10,1,4,0.04545454680919647,7,9,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#convertFromDiskFormat(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexBuilder#build().mjava,0,0,4,0,1,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setRangeBatchSize(Configuration,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\AbstractStatsDeque#stdev().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#writeElementAtOffset(ByteBuffer,int,NodeId,long,long).mjava,0,0,7,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#equals(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMemtablesPendingFlush().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableBoundedScanner#hasNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnIterator[ColumnSortedMap]#next().mjava,0,0,3,0,1,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceReply#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#rowHash(AbstractCompactedRow).mjava,0,0,3,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#addToSuperCF(Map[#,#],ColumnFamily).mjava,0,0,7,2,3,0.5,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#rowsRead().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadRepairVerbHandler#doVerb(Message,String).mjava,0,0,5,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#write(DataOutput).mjava,0,0,4,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Hex#wrapCharArray(char[]).mjava,0,0,1,1,1,0.0625,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#put(DecoratedKey,ColumnFamily).mjava,0,0,1,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile.Builder#complete(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getMemtableColumnIterator(Memtable,AbstractType).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#deserialize(DataInput,int).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#newThread(Runnable).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#buildIndexAsync().mjava,0,1,6,0,3,0.0714285746216774,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#intersect(OpenBitSet).mjava,0,0,2,1,4,0.1538461595773697,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#waitForStreaming().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getBuiltIndexes().mjava,0,1,7,0,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getWriteEndpoints(String,ByteBuffer).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#hashCode().mjava,0,0,0,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeResponseVerbHandler#makeVerb(InetAddress,Validator).mjava,0,0,4,2,2,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#compress(byte[],int,int,ICompressor.WrappedArray,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage#StreamRequestMessage(InetAddress,Collection[Range],String,Iterable[ColumnFamilyStore],long,OperationType).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#getByteBuffer(AbstractType[#]).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#all().mjava,0,1,3,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#counterWriteTask(IMutation,Collection[InetAddress],IWriteResponseHandler,String,ConsistencyLevel).mjava,0,0,10,5,1,0.21739129722118378,2,1,12,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#fromString(String).mjava,0,0,4,1,0,0.0833333358168602,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointStateSerializer[EndpointState]#deserialize(DataInput,int).mjava,0,0,6,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAck2Message#GossipDigestAck2Message(Map[InetAddress,EndpointState]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#logDroppedMessages().mjava,0,0,9,0,4,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#getString(ByteBuffer).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getTableMetaData(String).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#response(Message).mjava,0,0,5,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#pagingFinished(ColumnFamily,ByteBuffer).mjava,0,0,3,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessageSerializer[GossipDigestSynMessage]#serialize(GossipDigestSynMessage,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat#checkOutputSpecs(Configuration).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#AbstractSSTableSimpleWriter(File,CFMetaData).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeResponse#TreeResponse(InetAddress,MerkleTree).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnectionPool#getConnection(Message).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#ClientState().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#getSavedToken().mjava,0,0,10,0,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeConnect(Tree).mjava,0,0,17,1,4,0.21052631735801697,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#internOrCopy(ByteBuffer,Allocator).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#apply().mjava,0,24,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#nextCFId().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#partitioner(IPartitioner).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#getKeyString(CFMetaData).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#and(Relation).mjava,0,0,13,1,0,0.0,9,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getAdjustedCacheSize(long).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getExceptionCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUUID#JdbcUUID().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#determineBlockFor(ConsistencyLevel,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#removeColumnDef(ByteBuffer).mjava,0,0,5,1,1,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#setBootstrapped(boolean).mjava,0,0,6,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultInteger#set(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessage#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#deserialize(DataInput).mjava,0,0,6,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalToken#LocalToken(AbstractType,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand.IndexScanCommandSerializer#deserialize(DataInput).mjava,0,0,6,1,6,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#isFromTheFuture().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#isSetTimestamp().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#rowCacheSavePeriod(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#close().mjava,0,2,1,0,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onRemove(InetAddress).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInitialToken().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#run().mjava,0,0,5,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_intersect(long[],long[],int,int).mjava,0,0,7,4,27,0.08602150529623032,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#appendEndpointState(StringBuilder,EndpointState).mjava,0,0,8,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#next().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable#iterator().mjava,0,0,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#serialize(TSerializer,TBase,DataOutput).mjava,0,0,3,3,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterWriteResponseHandler#assureSufficientLiveNodes().mjava,0,0,4,0,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#maxTimestamp().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#reload().mjava,0,1,10,0,2,0.25,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#getKeyspace().mjava,0,21,0,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#removeDeletedAndOldShards(DecoratedKey[#],CompactionController,ColumnFamily).mjava,0,0,8,3,2,0.25,10,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getResponsePendingTasks().mjava,0,1,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#getLocalDeletionTime().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getVersion(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#retry().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#serializedSize().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#updateCfDefAttributes(Tree,CfDef).mjava,0,0,54,2,6,0.011363636702299118,77,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2Snitch#awsApiCall(String).mjava,0,0,7,1,4,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#SecondaryIndexManager(ColumnFamilyStore).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getClockSeqAndNode(InetAddress).mjava,0,0,1,1,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#AuthenticatedUser(String,Set[String]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractType#parseDefaultParameters(AbstractType,TypeParser).mjava,0,0,5,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#predicateToString(SlicePredicate).mjava,0,0,2,1,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#values().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#response(Message).mjava,0,0,7,1,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalDiskSpaceUsed().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#serializedSize(SSTableMetadata).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#isRelevant(IColumn,IColumnContainer,int).mjava,0,0,6,3,1,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#MemoryOutputStream(Memory).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairResponse#reply(InetAddress,UUID).mjava,0,0,8,2,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#compareUnsigned(byte[],byte[],int,int,int,int).mjava,0,0,1,6,1,0.0625,24,5,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSlicePredicate(CFMetaData,SlicePredicate).mjava,0,0,2,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#estimateKeys().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#filterColumnFamily(ColumnFamily,QueryFilter,int).mjava,0,0,26,3,5,0.34375,6,6,19,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#unionCount(OpenBitSet,OpenBitSet).mjava,0,0,4,2,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#reconcile(IColumn,Allocator).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#compareEndpointStartup(InetAddress,InetAddress).mjava,0,0,6,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeIncr(Tree,long).mjava,0,0,27,2,12,0.10000000149011612,32,5,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#reverseIterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#getLiveSize().mjava,0,5,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#[T-extends-SpecificRecord]_serializeWithSchema(T).mjava,0,0,8,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#mark().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#getMutations(String,ClientState).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#getBaseCFStore().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#getScale(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isAutoBootstrap().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#threadLocalMD5Digest().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#addMovingEndpoint(Token,InetAddress).mjava,0,0,5,2,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#clone(ByteBuffer).mjava,0,0,13,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#internal_insert(ByteBuffer,ColumnParent,Column,ConsistencyLevel).mjava,0,0,16,4,2,0.04545454680919647,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#estimateRowsFromData(Descriptor,RandomAccessReader).mjava,0,0,8,2,4,0.06666667014360428,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommand#isDigestQuery().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#decompose(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createAllDirectories().mjava,0,2,7,0,0,0.0,8,3,19,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#includeStartKey().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompleter#CliCompleter().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator#MergeIterator(List[#-extends-CloseableIterator[In]],Reducer[In,Out]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AuthenticatedUser#AuthenticatedUser(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#serialize(SSTableMetadata,DataOutput).mjava,0,0,8,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile.Builder#complete(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\MarshalException#MarshalException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getTable().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#fromString(String).mjava,0,0,4,1,1,0.0714285746216774,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#applyModels().mjava,0,0,19,0,4,0.09090909361839294,2,1,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isIdentifierChar(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#remove(Object).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnFamily(String,String,boolean).mjava,0,0,5,3,1,0.0,3,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeShowClusterName().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getResetInterval().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ReverseSortedCollection#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#remove(K).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#size().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RepairCallback#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#isShutdown().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#isReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSchemaIsSettled().mjava,0,1,7,0,2,0.06666667014360428,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getCommitLogSyncBatchWindow().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#markSSTablesForCompaction(int,int).mjava,0,0,3,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand.IndexScanCommandSerializer#serialize(IndexScanCommand,DataOutput).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#close().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getHeader(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getCurrentGenerationNumber().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\GCInspector#GCInspector().mjava,0,0,5,0,3,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#serialize(IColumn,DataOutput).mjava,0,0,11,2,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getExpireTimeForEndpoint(InetAddress).mjava,0,0,3,1,1,9.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#afterAppend(DecoratedKey[#],long).mjava,0,0,4,2,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnIterator[ColumnSortedMap]#hasNext().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#connect().mjava,0,3,11,0,4,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#getSubColumn(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#err(Exception,String).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getRecentBloomFilterTruePositiveCount().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\NamedThreadFactory#NamedThreadFactory(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getKeyCacheSavePeriodInSeconds().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#run().mjava,0,0,5,0,3,0.05882352963089943,5,3,12,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#getIndexOperator(String).mjava,0,0,5,1,0,0.0,32,5,15,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#closeIfFinished().mjava,0,1,34,0,4,0.0810810774564743,17,5,29,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#SSTableSimpleWriter(File,CFMetaData).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toLong(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#updateColumn(DecoratedKey[#],ByteBuffer,IColumn).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#estimatedColumnCount(EstimatedHistogram).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#close().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#summarize(ByteBuffer).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getJobTrackerAddress().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#length().mjava,0,22,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#deserialize(DataInput,int).mjava,0,0,3,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#equals(Object).mjava,0,0,6,1,1,0.0,4,2,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#SSTableScanner(SSTableReader,QueryFilter).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SegmentedFile#getBuilder(Config.DiskAccessMode).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getDataFileLocation(long).mjava,0,0,8,1,1,0.15000000596046448,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#lastKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#hasColumnFamilySchemaAccess(Permission).mjava,0,0,8,1,1,0.10000000149011612,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexedColumns().mjava,0,8,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#makeWriteResponseMessage(Message,WriteResponse).mjava,0,0,6,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(ICompressor,Integer,Map[String,String]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#CommitLogSegment().mjava,0,0,4,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryOutputStream#position().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ResourceWatcher#watch(String,Runnable,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#isEmpty().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getIncomingFiles(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer#writeIndex(RowHeader,DataOutput).mjava,0,0,4,2,0,5.5,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#start().mjava,0,2,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeys().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnIterator[ColumnSortedMap]#ColumnIterator(ColumnSerializer,DataInput,int,boolean,int).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#makeRowMutationMessage(StorageService.Verb,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(Message,InetAddress,IMessageCallback).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\Context#get(Object).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#BooleanType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\SnappyCompressor#create(Map[String,String]).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\CompressedSegmentedFile#cleanup().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getMarkedForDeleteAt().mjava,0,19,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#names(Collection[SSTableReader]).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#equals(Object).mjava,0,0,2,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#toFloat(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\client\RingCache#getEndpoint(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#prepareRowMutations(String,ClientState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#renameWithConfirm(File,File).mjava,0,0,10,2,0,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#isSuper().mjava,0,16,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#isClean().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#getComparatorFor(String,String,ByteBuffer).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getRemainingPart().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\OutputBuffer#write(DataInput,int).mjava,0,0,3,2,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#update(MessageDigest).mjava,0,0,11,1,2,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#updateDigest(MessageDigest,ByteBuffer).mjava,0,0,5,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getMovingNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#completeTree().mjava,0,1,4,0,0,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastGet(long).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#replicateOnWrite(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getRecentTruePositiveCount().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Mx4jTool#getPort().mjava,0,1,3,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#possibleCommitLogFile(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#compareTo(GossipDigest).mjava,0,0,0,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#execute(CompactionManager.CompactionExecutorStatsCollector).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#reverseInternalIterator().mjava,0,2,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#await().mjava,0,2,1,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getEstimatedRowSizeHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getMinRowSize().mjava,0,1,5,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache.Writer#getCompactionInfo().mjava,0,0,2,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationExecutor#ValidationExecutor().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#getTimestamp().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#reset().mjava,0,2,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamIn#requestRanges(InetAddress,String,Collection[ColumnFamilyStore],Collection[Range],Runnable,OperationType).mjava,0,0,11,6,3,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#isEOF().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#addColumn(IColumn,Allocator).mjava,0,0,5,2,3,0.05882352963089943,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader.BufferedRandomAccessFileMark#BufferedRandomAccessFileMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSliceRange(CFMetaData,SliceRange).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getBytes(ByteBuffer,int).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Truncation#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#getEndpoint().mjava,0,10,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printNetworkStats(InetAddress,PrintStream).mjava,0,0,36,2,6,0.0,16,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onJoin(InetAddress,EndpointState).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#close().mjava,0,2,1,0,0,0.0,1,0,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#multiget_slice(List[ByteBuffer],ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,6,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#rename(KSMetaData,String,boolean).mjava,0,0,9,3,1,0.20000000298023224,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#SelectExpression(Term,Term,int,boolean,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand.IndexScanCommandSerializer#serializedSize(IndexScanCommand).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnNames().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#getPosition().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingService#getStatus().mjava,0,0,19,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#getStrategyOptions().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getCachedPosition(Pair[Descriptor,DecoratedKey],boolean).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#isPutCopying().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#getSimpleStates().mjava,0,0,10,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDelKeySpace(Tree).mjava,0,0,7,1,2,0.10000000149011612,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serialize(Token,DataOutput).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnOrSuperColumn(CFMetaData,ColumnOrSuperColumn).mjava,0,0,17,2,2,0.0,2592,13,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#addProperty(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#forProgress(long,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\WeightedQueue#getOperations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#fromFilename(String).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onJoin(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleWriter#getColumnFamily().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#setPhiConvictThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#getKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_snitch().mjava,0,0,7,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getBits().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#load(Collection[KSMetaData],UUID).mjava,0,0,7,2,0,0.0,4,2,14,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#binarySearch(ByteBuffer).mjava,0,0,4,1,4,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#awaitUntil(Date).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#scheduleMutationHint(Message,InetAddress).mjava,0,0,5,2,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\NetworkTopologyStrategy#NetworkTopologyStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,9,4,3,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThroughput(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#compactionFileLocation(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#isMarkedForDelete().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#[T-extends-SpecificRecord]_deserializeWithSchema(ByteBuffer,T).mjava,0,0,8,2,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#serializer().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#SliceQueryFilter(ByteBuffer,ByteBuffer,boolean,int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#compileQuery(String).mjava,0,0,3,1,5,0.25,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#deserialize(DataInput,int,boolean).mjava,0,0,9,3,6,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2Snitch#Ec2Snitch().mjava,0,0,3,0,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#reBuffer().mjava,0,3,4,0,2,0.190476194024086,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#loadSchemas().mjava,0,3,17,0,5,0.1702127605676651,13,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedColumnsOnly(ColumnFamily,int).mjava,0,0,3,2,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#getColumnFamilyWithColumns().mjava,0,1,7,0,1,0.05882352963089943,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler.ANTLRNoCaseStringStream#ANTLRNoCaseStringStream(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLifetimeReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolOptions#addOption(Pair[String,String],boolean,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#retry(PendingFile).mjava,0,0,9,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row.RowSerializer#deserialize(DataInput,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(CFMetaData,DataInput,DecoratedKey[#],long,long,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#toThrift().mjava,0,1,11,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#toString(ByteBuffer).mjava,0,0,21,1,2,0.0,5,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#table().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#toString().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getConsistencyLevel().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#isEOS().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#toString().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#mark(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#firstKey().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#decompose(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bufferCursor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#compare(ByteBuffer,ByteBuffer).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#serialize(AbstractBounds,DataOutput).mjava,0,0,7,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#run().mjava,0,2,4,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#hasColumnFamilyAccess(String,Permission).mjava,0,0,8,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateKey(ByteBuffer).mjava,0,0,3,1,0,0.09090909361839294,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\OrderPreservingPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#waitForDeletions().mjava,0,0,2,0,1,0.0,1,0,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#reverseIterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readLong().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onRestart(InetAddress,EndpointState).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#getMemtableColumnIterator(ColumnFamily,DecoratedKey[#],AbstractType).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#apply().mjava,0,0,13,0,4,0.06666667014360428,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#LogRecordAdder(RowMutation).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#sumOfDeviations().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompletedTasks().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#getKeyspace().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#RangeSliceCommand(String,String,ByteBuffer,SlicePredicate,AbstractBounds,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#removeToken(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#take().mjava,0,1,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactions().mjava,0,0,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compare(byte[],ByteBuffer).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#localIds().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#get_count(ByteBuffer,ColumnParent,SlicePredicate,ConsistencyLevel).mjava,0,0,26,4,9,0.03773584961891174,40,6,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#maybeAddLatency(IMessageCallback,InetAddress,double).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\BatchStatement#BatchStatement(List[AbstractModification],Attributes).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnStart().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\HeartBeatState#getGeneration().mjava,0,16,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalNode#findMinMedianMax(List[Interval]).mjava,0,0,10,1,1,0.0,2,1,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcMinThreads().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getCompactionCandidates().mjava,0,1,9,0,3,1.3333333730697632,7,4,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#setCompactionThreshold(String,String,int,int).mjava,0,0,3,4,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MurmurHash#hash32(ByteBuffer,int,int,int).mjava,0,0,7,4,8,0.022727273404598236,18,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#isLocalTask().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#clearSnapshot(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#getConsistencyLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#getScale(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#describeOwnership(List[Token]).mjava,0,0,21,1,10,0.5652173757553101,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getRecentlyDroppedMessages().mjava,0,0,8,0,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markCurrentSSTablesReferenced().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#localCopy(ColumnFamilyStore).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#openSSTables().mjava,0,1,18,0,4,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeShowSchema(Tree).mjava,0,0,14,1,4,0.0,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#updateLiveRatio().mjava,0,1,19,0,5,0.06521739065647125,8,3,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliUtils#escapeSQLString(String).mjava,0,0,2,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAllDataFileLocationsForTable(String).mjava,0,0,0,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#reconcile(IColumn,Allocator).mjava,0,0,13,2,0,0.3333333432674408,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Hex#getProtectedConstructor(Class,Class...).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#resetAndTruncate().mjava,0,1,1,0,0,1.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#reloadConfiguration().mjava,0,1,18,0,8,0.0,3,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#name().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequestVerbHandler#doVerb(Message,String).mjava,0,0,8,2,6,0.05882352963089943,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#parseChunkLength(String).mjava,0,0,1,1,0,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOut#flushSSTables(Iterable[ColumnFamilyStore]).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#shutdown().mjava,0,0,4,0,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#preservesOrder().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getRecentHitRate().mjava,0,0,6,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.Client#stop().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#multiRangeSlice(CFMetaData,SelectStatement).mjava,0,0,44,2,10,0.050847455859184265,27,6,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getDroppedMessages().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getFactory().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateIndexClauses(CFMetaData,IndexClause).mjava,0,0,17,2,4,0.0,4,2,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int,double).mjava,0,0,1,2,3,0.1818181872367859,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#hasKeyspaceSchemaAccess(Permission).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#StreamingRepairTask(UUID,InetAddress,InetAddress,InetAddress,String,String,Collection[Range],Runnable).mjava,0,0,0,8,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isMultiKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#CounterUpdateColumn(ByteBuffer,ByteBuffer,long).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader.StreamHeaderSerializer#serialize(StreamHeader,DataOutput,int).mjava,0,0,8,3,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#renameSSTables(String).mjava,0,0,6,1,2,0.1111111119389534,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getLiveMembers().mjava,0,5,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMember(InetAddress).mjava,0,0,6,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#RandomAccessReader(File,int,boolean).mjava,0,0,4,3,0,0.25,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#ensureCapacity(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Unwrapper#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#truncateBlocking(String,String).mjava,0,0,11,2,5,0.2631579041481018,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#WhereClause(Relation).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#fromThrift(List[ColumnDef]).mjava,0,0,3,1,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#waitingFor(Message).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalTree#search(Interval[T]).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler#getColumnFamily(Tree,List[CfDef]).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySuperColumns(Collection[IColumn],boolean).mjava,0,0,8,2,3,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider#SerializingCacheProvider().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCache#capacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#getString(ByteBuffer).mjava,0,0,6,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#truncate(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\DeflateCompressor#compress(byte[],int,int,ICompressor.WrappedArray,int).mjava,0,0,8,5,3,0.043478261679410934,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#DatacenterSyncWriteResponseHandler(Collection[InetAddress],ConsistencyLevel,String).mjava,0,0,5,3,1,0.10000000149011612,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#makeGossipDigestAck2Message(GossipDigestAck2Message,int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#setTracker(DataTracker).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#throwSyntaxError(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#loadNewSSTables(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter#ColumnFamilyRecordWriter(TaskAttemptContext).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#columnNameAsByteArray(String,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#hash(Range).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#parse().mjava,0,2,7,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#length().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#tryGetManifest(ColumnFamilyStore).mjava,0,0,4,1,1,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getVerb().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getIndexInterval().mjava,0,11,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#buffer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRecentBloomFilterFalseRatio().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(String,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer#getCompactedRow(List[RowContainer]).mjava,0,0,4,1,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#diff(IColumn).mjava,0,0,2,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer.RowHeader#serializedSize().mjava,0,1,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getNextComparator(int,ByteBuffer,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#create(CFMetaData).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isColumnsReversed().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\RandomPartitioner#getRandomToken().mjava,0,0,5,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\SerializingCacheProvider#create(int,String,String).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#satisfies(int,IndexOperator).mjava,0,0,0,2,0,0.0,13,1,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#getPrecision(Float).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#isLegalName(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile.Builder#addPotentialBoundary(long).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deliverHints(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#getScale(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback.AsyncRepairRunner#runMayThrow().mjava,0,0,6,0,3,0.0,2,1,11,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.TrivialOneToOne#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#ExpiringColumn(ByteBuffer,ByteBuffer,long,int).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\PerRowSecondaryIndex#getNameForSystemTable(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getKeyspaces().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPendingRanges(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#NodeProbe(String,int,String,String).mjava,0,0,3,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.RepairJob#submitDifferencers().mjava,0,1,10,0,3,0.125,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#optionalKSandCFs(NodeCommand,ToolCommandLine,String[],NodeProbe).mjava,0,0,21,4,2,0.06666667014360428,54,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getRawInputSlicePredicate(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage#toString().mjava,0,1,13,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getLifetimeWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFully(byte[],int,int).mjava,0,0,1,3,1,0.05882352963089943,12,4,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getEstimatedColumnCountHistogram().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serialize(ReplayPosition,DataOutput).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#decompose(BigDecimal).mjava,0,0,7,1,5,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#invalidateCachedRow(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#getVerb().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#subinflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomNonblockingServerSocket#TCustomNonblockingServerSocket(InetSocketAddress,boolean,Integer,Integer).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getEndpoint(Token).mjava,0,0,5,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifySubColumns(Collection[IColumn]).mjava,0,0,11,1,2,0.0,8,3,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingRowCache#translateKey(K).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token.TokenSerializer#serializedSize(Token).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStreamThroughputOutboundMegabitsPerSec().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#getEntity().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#cacheEndpoint(Token,ArrayList[InetAddress]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#removeDeletedStandard(ColumnFamily,int).mjava,0,0,9,2,3,0.23076923191547394,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#createRecordReader(InputSplit,TaskAttemptContext).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeightedQueue(String).mjava,0,0,4,1,2,0.23076923191547394,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(StringBuilder,boolean,String,Boolean).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getComparator(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#stopGossiping().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#connect().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#isPowerOfTwo(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliCompiler.ANTLRNoCaseStringStream#LA(int).mjava,0,0,1,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#getFullColumnFamily().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#collectAllData().mjava,0,1,19,0,6,0.0731707289814949,8,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#init().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#TreeMapBackedSortedColumns(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat.SplitCallable#SplitCallable(TokenRange,Configuration).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#JdbcUTF8().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#CounterUpdateColumn(ByteBuffer,long,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getEncryptionOptions().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.OneShotRenewer#maybeRenew(CounterColumn).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#create(String,InetAddress,Runnable).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#getTotalLatencyHistogramMicros().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#ReducingKeyIterator(Collection[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMinSSTableSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#cancel(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#newSSTableSegmentThresholdReached(SSTableWriter,long).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#cloneMeShallow().mjava,0,2,3,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#resetUnsafe().mjava,0,0,3,0,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#toString(UUID).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getEstimatedRemainingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile.Builder#createSegments(String).mjava,0,0,6,1,6,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#setup().mjava,0,2,53,0,2,0.14457830786705017,12,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#getOpCount().mjava,0,7,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#state().mjava,0,42,4,0,2,0.0,3,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#equals(Object).mjava,0,0,2,1,1,0.0,8,3,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessage#getEndpointStateMap().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#storeTableInstance(Table).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getAuthenticator().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#KSMetaData(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],boolean,CFMetaData...).mjava,0,0,2,5,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#processWithSyncBatch().mjava,0,0,25,0,3,0.1666666716337204,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#releaseVersion().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#getDestinations().mjava,0,2,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#readWithLength(DataInput).mjava,0,0,2,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#setKeyAlias(String).mjava,0,0,3,1,0,0.25,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#UpdateStatement(String,String,Map[Term,Operation],List[Term],Attributes).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader#stream().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.SSTableMetadataSerializer#deserialize(Descriptor).mjava,0,0,10,1,5,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#remainingHeaderLength().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#getPrecision(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#isColumn().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeShowKeySpaces().mjava,0,1,4,0,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getGcGraceSeconds().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#onInitialRejection(Runnable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#readSimpleColumns(FileDataInput,SortedSet[ByteBuffer],List[ByteBuffer]).mjava,0,0,7,3,3,0.0,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#SSTableIdentityIterator(SSTableReader,RandomAccessReader,DecoratedKey[#],long,long,boolean).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#bytesRemaining().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspace(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getThriftMaxMessageLength().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Token#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\StageManager#multiThreadedStage(Stage,int).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#reduceCacheSizes().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultInteger#DefaultInteger(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#convertValueByFunction(Tree,CfDef,ByteBuffer).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomServerSocket#listen().mjava,0,0,2,0,0,0.07692307978868484,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#unsubscribe(INotificationConsumer).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable#CompactionIterable(OperationType,List[SSTableScanner],CompactionController).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#SSTableWriter(String,long,CFMetaData,IPartitioner[#],SSTableMetadata.Collector).mjava,0,0,11,5,0,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#expand(int).mjava,0,0,1,1,1,10.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#flipAndGet(int).mjava,0,0,0,1,3,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#put(Pair[ByteBuffer,Mutation]).mjava,0,0,1,1,0,0.0,5,3,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#writeRow(DecoratedKey,ColumnFamily).mjava,0,0,3,2,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#writeConnected(Message,String).mjava,0,0,6,2,0,0.0,4,2,10,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#maybeResolveForRepair().mjava,0,0,6,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DestructivePQIterator#DestructivePQIterator(PriorityQueue[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliOptions#printUsage().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serialize(VersionedValue,DataOutput,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#apply().mjava,0,0,29,0,6,0.1666666716337204,12,4,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.CompactedRowContainer#CompactedRowContainer(LazilyCompactedRow).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#decompose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\BloomFilterTracker#getFalsePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#cloneAfterAllSettled().mjava,0,0,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#getSessionId().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#Bounds(Token,Token).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\Interval#Interval(Comparable,Comparable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#getBootstrapTokenFrom(InetAddress).mjava,0,0,7,1,5,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToLiveMember(MessageProducer).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#startBroadcasting().mjava,0,0,6,0,1,0.1538461595773697,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#repairedNodes().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.CFPair#CFPair(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#getTimeToLive().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#loadHelp().mjava,0,1,5,0,4,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#writeAtMost(byte[],int,int).mjava,0,0,11,3,1,0.07692307978868484,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.LocalNodeIdHistory#LocalNodeIdHistory().mjava,0,0,7,0,1,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#EndpointState(HeartBeatState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#mutationForKey(String,ByteBuffer,CFMetaData,Long,ClientState).mjava,0,0,23,5,7,0.023255813866853714,3,4,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#readRowSize(DataInput,Descriptor).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#append(DecoratedKey[#],ByteBuffer).mjava,0,0,7,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#getColumnFamily().mjava,0,0,6,0,1,0.23076923191547394,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentRangeLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#applyMigrationOnStage(Migration).mjava,0,0,13,1,3,0.02857142873108387,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#isSetConsistencyLevel().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#getData().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#getScale(Date).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#shutdownBlocking().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#getHashBuckets(ByteBuffer,int,long).mjava,0,0,7,3,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#CassandraServer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#describeSchemaVersions().mjava,0,2,4,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper#bootstrap().mjava,0,0,25,0,6,1.8235293626785278,8,3,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTempSSTablePath(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#decompose(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\SeedProviderDef#SeedProviderDef(LinkedHashMap).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInteger#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setEndpointSnitch(IEndpointSnitch).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getStoragePort().mjava,0,6,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#hash(byte[],byte[]).mjava,0,2,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#incrementDroppedMessages(StorageService.Verb).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\OperationType#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TCustomSocket#getSocket().mjava,0,0,1,0,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#removeTableInstance(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#hasExpiredTombstones(int).mjava,0,0,3,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#applyMigrationOnStage(Migration).mjava,0,0,5,1,1,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#Validator(TreeRequest).mjava,0,0,2,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#release().mjava,0,4,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#setTable(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#notifySSTablesChanged(Iterable[SSTableReader],Iterable[SSTableReader]).mjava,0,0,1,2,1,0.0,1,0,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Pair#equals(Object).mjava,0,0,2,1,1,0.1666666716337204,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\WriteResponse#serializer().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getFilesDestinedFor(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#clearEndpointCache().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readBoolean().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSliceRange(CFMetaData,ByteBuffer,ByteBuffer,boolean).mjava,0,0,4,4,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getDefaultCallbackTimeout().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getAdjustedTimestamp(UUID).mjava,0,0,3,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTThreadPoolServer#CustomTThreadPoolServer(TThreadPoolServer.Args,ExecutorService).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#getSlice(List[ReadCommand],ConsistencyLevel).mjava,0,0,6,2,5,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReply.FileStatusSerializer#serializedSize(StreamReply,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#add(long).mjava,0,0,2,1,1,0.25,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#main(String[]).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#add(QueryPath,ByteBuffer,long,int).mjava,0,0,5,4,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#addColumnCount(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getReadRepairChance().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#cloneMeShallow(ISortedColumns.Factory,boolean).mjava,0,0,3,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#serializedSizeForSSTable().mjava,0,2,1,0,1,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#makeNewKeyspaceDefinition(KSMetaData).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getEstimatedColumnCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#cardinality().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#waitingFor(Message).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#next().mjava,0,3,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#deoverlap(List[AbstractBounds]).mjava,0,0,18,1,7,0.17142857611179352,20,6,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#midpoint(Token,Token).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#AbstractModification(String,String,ConsistencyLevel,Long,int).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#bucketsFor(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_serialize(T,IVersionedSerializer[T],int).mjava,0,0,8,3,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeSet(Tree).mjava,0,0,39,1,13,0.1230769231915474,240,7,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#currentSegment().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(String,String).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#validateSchemaAgreement().mjava,0,7,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessageSerializer[GossipDigestSynMessage]#serializedSize(GossipDigestSynMessage,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#getLevel(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#setTrackedBy(DataTracker).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#AbstractModification(String,String,Attributes).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#baseFilename().mjava,0,2,11,0,1,0.0,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#pushMigrations(InetAddress,Collection[IColumn]).mjava,0,0,4,2,1,0.0,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(Stage).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\IncomingStreamReader#IncomingStreamReader(StreamHeader,Socket).mjava,0,0,7,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRequestScheduler().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#FailureDetector().mjava,0,0,3,0,1,0.0833333358168602,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#markSSTablesForCompaction().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter.BufferedFileWriterMark#BufferedFileWriterMark(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#getCurrentLocalNodeId().mjava,0,1,12,0,4,0.04545454680919647,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#firstTokenIndex(ArrayList,Token,boolean).mjava,0,0,3,3,1,0.09090909361839294,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#getKey().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCommutativeType#compose(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#describeOwnership(List[Token]).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getSize().mjava,0,2,1,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#evictFromMembership(InetAddress).mjava,0,0,7,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#versionValidate(String).mjava,0,0,4,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Allocator#clone(ByteBuffer).mjava,0,0,6,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#remove_counter(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\SliceQueryFilter#isReversed().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#RoundRobinScheduler(RequestSchedulerOptions).mjava,0,0,3,1,2,0.05263157933950424,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#deleteColumn(DecoratedKey[#],ByteBuffer,IColumn).mjava,0,0,8,3,2,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(StringBuilder,boolean,String,Number).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#create(NodeId,long,long,boolean).mjava,0,0,7,4,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#SSTableWriter(String,long).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#getSegment(long).mjava,0,0,3,1,2,0.1764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader#StreamHeader(String,long,PendingFile,Collection[PendingFile]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#internalIP(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#apply(RowMutation,boolean).mjava,0,0,39,2,5,0.1607142835855484,160,8,2,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isDropped().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspace(String).mjava,0,0,4,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#decorateKey(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFloat().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Bounds#contains(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LazilyCompactedRow#iterator().mjava,0,2,5,0,1,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestAckMessageSerializer[GossipDigestAckMessage]#serializedSize(GossipDigestAckMessage,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#thriftifyColumns(Collection[IColumn],boolean).mjava,0,0,18,2,3,0.1111111119389534,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceFromReadCommand#getRow(Table).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#getKeyCache().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#syncInternal().mjava,0,4,3,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#putAll(Map[#-extends-ByteBuffer,#-extends-IColumn]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingRowCache#getConfiguredCacheSize(CFMetaData).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getMemtableColumnIterator(ColumnFamily,DecoratedKey[#],AbstractType).mjava,0,0,2,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage.StreamRequestMessageSerializer#serialize(StreamRequestMessage,DataOutput,int).mjava,0,0,16,3,0,0.0,2,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#doInsert(ConsistencyLevel,List[#-extends-IMutation]).mjava,0,0,8,2,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#sendMutation(InetAddress,RowMutation).mjava,0,0,6,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UTF8Type#UTF8Type().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getSubColumnName(String,Tree).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AllowAllAuthority#validateConfiguration().mjava,0,0,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\IntegerType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableSliceIterator#SSTableSliceIterator(SSTableReader,FileDataInput,DecoratedKey,ByteBuffer,ByteBuffer,boolean).mjava,0,0,1,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#duplicate().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#startRPCServer().mjava,0,1,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#addNano(long).mjava,0,0,1,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#consume().mjava,0,0,10,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcTimeUUID#getString(ByteBuffer).mjava,0,0,5,1,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropColumnFamily#DropColumnFamily().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBoolean#toString(Boolean).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#CompositeType(List[AbstractType]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#id().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#getMinimalKey(DecoratedKey[#]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractRowResolver#getMessages().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcFloat#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#tryComponentFromFilename(File,String).mjava,0,0,5,2,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#prepareRowMutations(String,ClientState,Long).mjava,0,0,16,3,4,0.03846153989434242,16,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#skipBytes(int).mjava,0,0,2,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ScrubInfo#getCompactionInfo().mjava,0,0,3,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#close().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#shutdown().mjava,0,0,7,0,0,0.06666667014360428,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#LeveledManifest(ColumnFamilyStore,int).mjava,0,0,2,2,1,0.0833333358168602,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readUnsignedShort().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#PendingFile(Descriptor,PendingFile).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#ArrayBackedSortedColumns(Collection[IColumn],AbstractType[#],boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#signalAll().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#receiveTiming(InetAddress,Double).mjava,0,0,5,2,2,0.0,6,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#showColumnMeta(StringBuilder,CfDef,ColumnDef).mjava,0,0,25,3,2,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#checksum(CompressionMetadata.Chunk).mjava,0,0,5,1,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getCFMetaData(String,String).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#deleteFromIndexes(DecoratedKey[#],List[IColumn]).mjava,0,0,9,2,3,0.13636364042758942,10,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractByteOrderedPartitioner#bigForBytes(ByteBuffer,int).mjava,0,0,4,2,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalPartitioner#getMinimumToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(int).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#newPartitioner(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#toString().mjava,0,0,14,0,2,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastSet(long).mjava,0,0,0,1,3,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliSessionState#setOut(PrintStream).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Relation#Relation(Term,String,Term).mjava,0,0,4,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Row#Row(DecoratedKey[#],ColumnFamily).mjava,0,0,0,2,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#acquireReferences(Iterable[SSTableReader]).mjava,0,0,2,1,1,0.0,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysSearcher#expressionString(IndexExpression).mjava,0,0,7,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getMergeShardsChance().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\EndpointState#isAlive().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#unregister(AbstractReplicationStrategy).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#delete(List[String]).mjava,0,0,6,1,2,0.0,4,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#fixCFMaxId().mjava,0,3,5,0,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#validateMinMaxCompactionThresholds(org.apache.cassandra.db.migration.avro.CfDef).mjava,0,0,0,1,0,0.03703703731298447,12,6,16,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#nextId().mjava,0,2,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#getFilter(long,double).mjava,0,0,3,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyStart().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequest#hashCode().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#enforceSubccDefault(ColumnFamilyType,AbstractType).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#LoadBroadcaster().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#hasNodeId(NodeId).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#intersectionOneWrapping(Range,Range).mjava,0,0,6,2,1,0.125,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue#VersionedValue(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#computeNext().mjava,0,0,6,0,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markCurrentViewReferenced().mjava,0,2,2,0,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getUnreachableMembers().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getToken(InetAddress).mjava,0,0,7,1,0,0.07692307978868484,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#validateColumnFields().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#markCompacted(Collection[SSTableReader]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#select().mjava,0,1,17,0,2,0.1304347813129425,17,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AlterTableStatement#AlterTableStatement(String,OperationType,String).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getParentColumnfamily().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexForColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#updateIsDelta().mjava,0,3,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSet[ColumnSortedMap]#[T]_toArray(T[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.Differencer#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LongType#compare(ByteBuffer,ByteBuffer).mjava,0,0,8,2,1,0.0,8,3,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\PrecompactedRow#PrecompactedRow(DecoratedKey[#],ColumnFamily).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\SerDeUtils#createDataInputStream(ByteBuffer).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#reset().mjava,0,0,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#mostRecentLiveChangeAt().mjava,0,1,4,0,1,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#OpenBitSet(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getBits(int,int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getBootstrapTokens().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableSimpleUnsortedWriter#close().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeResponseVerbHandler#deserialize(DataInputStream,int).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionIterable.Reducer#getReduced().mjava,0,0,8,0,2,0.1034482792019844,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#CounterMutation(RowMutation,ConsistencyLevel).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\StatusLogger#log().mjava,0,2,35,0,6,0.06818182021379471,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId.OneShotRenewer#OneShotRenewer().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#getFilePointer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#makeType1UUIDFromHost(InetAddress).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#overlapping(SSTableReader,Iterable[SSTableReader]).mjava,0,0,3,2,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#getPrecision(Integer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#getString(AbstractType).mjava,0,0,15,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\ReducingKeyIterator#close().mjava,0,1,2,0,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableLoader.LoaderFuture#setPendings(InetAddress,Collection[PendingFile]).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#getCompactionSummary().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DecoratedKey#isEmpty().mjava,0,3,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#serializedSize(VersionedValue,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,6,2,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#dumpTimings(String).mjava,0,0,3,1,3,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#toString().mjava,0,0,4,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#createTime(long).mjava,0,0,0,1,1,0.125,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#flush().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#AbstractWriteResponseHandler(Collection[InetAddress],ConsistencyLevel).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#updateCapacity(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#leaving(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#SuperColumn(ByteBuffer,AbstractType).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#KSMetaData(String,Class[#-extends-AbstractReplicationStrategy],Map[String,String],CFMetaData...).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#isMoving(InetAddress).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#waitingFor(ReadResponse).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#takeSnapshot(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getRack(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MmappedSegmentedFile#isCleanerAvailable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getSSTableColumnIterator(SSTableReader,FileDataInput,DecoratedKey[#]).mjava,0,0,2,3,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#mark().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#validateMemtableOperations(double).mjava,0,0,0,1,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ResourceWatcher.WatchedResource#WatchedResource(String,Runnable).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#reset().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon#startServer().mjava,0,0,1,0,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getRow(QueryFilter).mjava,0,0,4,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getStateForVersionBiggerThan(InetAddress,int).mjava,0,0,14,2,5,2.3333332538604736,16,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getValueValidator(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#isColumnNeeded(IColumn).mjava,0,0,22,1,0,0.0625,64,6,13,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getTableDefinitions().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\ByteOrderedPartitioner#getToken(ByteBuffer).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#getSubComparator(String,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.CompactionExecutor#CompactionExecutor(int,int,String,BlockingQueue[Runnable]).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#validateFields(CFMetaData).mjava,0,0,3,1,0,0.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\ArrayUtil#grow(long[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUUID#getString(ByteBuffer).mjava,0,0,4,1,0,0.0,4,2,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHintsForEndpoint(InetAddress).mjava,0,0,17,1,5,0.03703703731298447,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\SimpleCondition#await(long,TimeUnit).mjava,0,0,5,2,1,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#getReverseSortedColumns().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readDouble().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#writeAttr(StringBuilder,boolean,String,String).mjava,0,0,2,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendOneWay(Message,String,InetAddress).mjava,0,0,10,3,2,0.25,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#clear(int,int).mjava,0,0,2,2,5,0.20000000298023224,16,4,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\XMLUtils#getAttributeValue(Node,String).mjava,0,0,3,2,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\client\RingCache#refreshEndpointMap().mjava,0,1,11,0,7,0.1944444477558136,1,0,27,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#emptyFilter().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy.DroppableRunnable#DroppableRunnable(StorageService.Verb).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#appendFromStream(DecoratedKey[#],CFMetaData,long,DataInput).mjava,0,0,38,4,10,0.1428571492433548,24,6,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader.StreamHeaderSerializer#deserialize(DataInput,int).mjava,0,0,8,2,5,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#compareTo(Token[byte[]]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#renameTable(CFMetaData,String).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#hintFor(RowMutation,ByteBuffer).mjava,0,0,24,2,4,0.4375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getThriftFramedTransportSize().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#switchMemtable(Memtable).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#replayPosition(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#connectAttempt().mjava,0,1,6,0,2,0.0,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#or(OpenBitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#printPendingRanges().mjava,0,1,9,0,1,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType#getComparator(ByteBuffer).mjava,0,0,5,1,2,0.0,2,1,13,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#execute(Runnable).mjava,0,0,1,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#partialCompactionsAcceptable().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#compareSubArrays(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,4,5,2,0.05263157933950424,18,5,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Mx4jTool#maybeLoad().mjava,0,1,22,0,7,0.0,1,0,22,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#getNaturalEndpoints(Token).mjava,0,0,8,1,3,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteRecursive(File).mjava,0,0,4,1,1,0.1111111119389534,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#columnValueAsBytes(ByteBuffer,String,String).mjava,0,0,8,3,3,0.05000000074505806,2,1,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#getVersion().mjava,0,35,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateKeyspaceStatement#validate().mjava,0,1,15,0,0,0.1818181872367859,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionParameters#CompressionParameters(String,Integer,Map[String,String]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#AdaptiveLatencyTracker(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#getSchedulingValue().mjava,0,1,1,0,0,0.0,3,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#getProtectedField(Class,String).mjava,0,0,2,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#keySamples(Range).mjava,0,0,4,1,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#ignoreObsoleteMutations(ColumnFamily,SortedSet[ByteBuffer],ColumnFamily).mjava,0,0,21,3,6,0.3103448152542114,20,6,2,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRestrictedRanges(AbstractBounds).mjava,0,0,19,1,6,0.1111111119389534,60,7,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyNotDefinedException#ColumnFamilyNotDefinedException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#getColumnFamilyStore().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Message#Message(InetAddress,StorageService.Verb,byte[],int).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeHelp(Tree).mjava,0,0,8,1,1,0.0,3,2,11,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#addCallback(IMessageCallback,String,Message,InetAddress,long).mjava,0,0,4,5,1,0.125,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#add(double).mjava,0,0,2,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultDouble#DefaultDouble(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#setIndexType(IndexType,Map[String,String]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnSerializer.CorruptColumnException#CorruptColumnException(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#register(ILatencySubscriber).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#create(ByteBuffer,ByteBuffer,long,long,boolean).mjava,0,0,4,5,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraDaemon.ThriftServer#stopServer().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#createSecondaryIndexSearcher(Set[ByteBuffer]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\BatchCommitLogExecutorService#[T]_newTaskFor(Callable[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#closeAndOpenReader().mjava,0,6,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#getString(AbstractType).mjava,0,0,14,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#load(boolean,Set[DecoratedKey]).mjava,0,0,40,2,12,0.0517241396009922,292,10,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#readRepairChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkLength().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readBoolean().mjava,0,0,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#write(byte[],int,int).mjava,0,0,1,3,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setBroadcastAddress(InetAddress).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#isPresent(ByteBuffer).mjava,0,0,2,1,0,0.0,2,1,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.ProgressIndicator#start().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#ThreadSafeSortedColumns(AbstractType[#]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getEstimatedColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#forceTableRepairPrimaryRange(String,String...).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,Set[Component],Set[DecoratedKey],DataTracker,CFMetaData,IPartitioner).mjava,0,0,25,6,3,0.05714285746216774,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onAlive(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getKeyComparatorForCF(String).mjava,0,0,4,1,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#isKnownEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#messageLength(Header,String,byte[]).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#runMayThrow().mjava,0,0,7,0,0,0.095238097012043,4,2,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities.WrappedCloseableIterator#computeNext().mjava,0,0,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\AllowAllAuthenticator#defaultUser().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#keyRangeToString(KeyRange).mjava,0,0,2,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#encodedUTF8Length(String).mjava,0,0,2,1,3,0.0,5,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getOutputKeyspacePassword(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#indexFor(ByteBuffer,List[IndexInfo],AbstractType,boolean).mjava,0,0,4,4,2,1.8571428060531616,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUTF().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#getMaxTimestamp().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol#TBinaryProtocol(TTransport).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DoubleType#decompose(Double).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#Column(ByteBuffer,ByteBuffer).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\HintedHandOffManager#deleteHintsForEndpoint(String).mjava,0,0,4,1,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(MessageProducer,InetAddress,IAsyncCallback).mjava,0,0,3,3,0,0.10000000149011612,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#createFrom(Token).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#isEmpty().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isWildcard().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BytesReadTracker#readUnsignedShort().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\CollatingOrderPreservingPartitioner#getToken(ByteBuffer).mjava,0,0,5,1,1,0.0,2,1,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#put(ByteBuffer,IColumn).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CQLStatement#CQLStatement(StatementType,Object).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#maxTimestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#removeColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#ColumnFamilyStore(Table,String,IPartitioner,int,CFMetaData).mjava,0,0,23,5,7,0.095238097012043,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#UpdateStatement(String,String,List[Term],List[Term],List[Term],Attributes).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#CommitLog().mjava,0,0,5,0,1,0.08695652335882187,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#toString().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#deleteAsync(String).mjava,0,0,2,1,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol#TBinaryProtocol(TTransport,boolean,boolean).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#andNot(OpenBitSet).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#renameCf(Integer,String).mjava,0,0,5,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getAliasParameters().mjava,0,1,19,0,4,0.02631578966975212,68,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#serializer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionIterable#getScanners(Iterable[SSTableReader]).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#hashCode().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\DataOutputBuffer#DataOutputBuffer().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableImport#setKeyCountToImport(Integer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#getContext().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printReleaseVersion(PrintStream).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#bytes(double).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FileUtils#closeQuietly(Closeable).mjava,0,0,2,1,0,0.0,2,1,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#sendRR(Message,InetAddress).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getRowCacheProvider().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#unthriftifyCounter(CounterColumn).mjava,0,0,1,1,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#validateCurrentFile(String).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#validate(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#AbstractReplicationStrategy(String,TokenMetadata,IEndpointSnitch,Map[String,String]).mjava,0,0,1,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getCompactionStrategy().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#loadBloomFilter().mjava,0,1,8,0,1,0.0,4,2,4,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#getColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\IntervalNode#getIntersectingIntervals(List[Interval]).mjava,0,0,3,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readFully(byte[]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onRemove(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd.ToolCommandLine#getCommandArguments().mjava,0,1,5,0,2,0.1111111119389534,4,2,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#ColumnDefinition(ByteBuffer,AbstractType,IndexType,Map[String,String],String).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#compare(ByteBuffer,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#SSTableMetadata().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\Int32Type#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#markDead(InetAddress,EndpointState).mjava,0,0,10,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#toString().mjava,0,0,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#SelectorThread(String).mjava,0,0,3,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#filenameFor(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#lastIndexOf(ByteBuffer,byte,int).mjava,0,0,5,3,0,0.0,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#isLocalId().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#close().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#setInputSlicePredicate(Configuration,SlicePredicate).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#diff(ColumnFamily).mjava,0,0,16,1,4,0.1071428582072258,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AsyncRepairCallback#response(Message).mjava,0,0,5,1,0,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeResponseVerbHandler#serialize(Validator,DataOutputStream,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#create(String,InetAddress,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#mergeShardsChance(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage.StreamRequestMessageSerializer#serializedSize(StreamRequestMessage,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcUTF8#isSigned().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#computeNext().mjava,0,0,4,0,1,0.0,5,3,11,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#chunkFor(long).mjava,0,0,1,1,3,0.20000000298023224,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DestructivePQIterator#next().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#rowCacheProvider(IRowCacheProvider).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getFilter(SlicePredicate,AbstractType).mjava,0,0,1,2,2,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#manages(String).mjava,0,0,2,1,0,0.0,2,1,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#Table(String).mjava,0,0,13,1,3,0.054054055362939835,8,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#closeInternal().mjava,0,2,1,0,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SliceByNamesReadCommand#getRow(Table).mjava,0,0,4,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SimpleSliceReader#getColumnFamily().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#bytesOnDisk().mjava,0,3,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#total(ByteBuffer).mjava,0,0,4,1,2,0.1111111119389534,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getIdentityFilter(DecoratedKey[#],QueryPath).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getKeyType().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DecimalType#compare(ByteBuffer,ByteBuffer).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamInSession#getSources().mjava,0,2,3,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#mean().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getPendingTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getEndpointSnitch().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#addColumnOrSuperColumn(String,ColumnOrSuperColumn).mjava,0,0,4,2,0,0.0416666679084301,8,3,15,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#deserialize(DataInput,boolean,int).mjava,0,0,8,3,7,1.625,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#isCaseSensitive().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#makeDefinitionMutation(KSMetaData,KSMetaData,UUID).mjava,0,0,15,3,3,0.190476194024086,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getReadConsistencyLevel(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#atomicSetMax(AtomicLong,long).mjava,0,0,2,2,1,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\AbstractCommitLogExecutorService#isTerminated().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#sortTokens().mjava,0,3,2,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#doNotifications(InetAddress,ApplicationState,VersionedValue).mjava,0,0,1,3,0,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateColumnFamilyStatement#getPropertyBoolean(String,Boolean).mjava,0,0,3,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#drain().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata#SSTableMetadata(EstimatedHistogram,EstimatedHistogram,ReplayPosition,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\AbstractModification#getTimestamp(ClientState).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#deserialize(DataInput).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#serialize(RowMutation,DataOutput,int).mjava,0,0,12,3,1,3.6666667461395264,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterReadCallback#assureSufficientLiveNodes().mjava,0,0,14,0,2,0.0,8,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#length().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#getCmdLineOptions().mjava,0,1,5,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#iterator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#getRawAbstractType(Class[#-extends-AbstractType]).mjava,0,0,4,1,1,0.0,1,0,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CounterColumnType#getString(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#enqueue(Message,String).mjava,0,0,2,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.Validator#Validator(TreeRequest,MerkleTree).mjava,0,0,0,2,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.StopRecursion.BadRange#BadRange().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#cleanupJob(JobContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#readCurrentIndexedColumns(DecoratedKey[#],ColumnFamilyStore,SortedSet[ByteBuffer]).mjava,0,0,3,3,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#phi(long).mjava,0,0,2,1,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#minCompactionThreshold(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastClear(int).mjava,0,0,0,1,3,1.1666666269302368,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#WhereClause().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getTimeoutsPerHost().mjava,0,0,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isKeyExistenceExpensive(Set[#-extends-SSTable]).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#columnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata#compressor().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#ReadCallback(IResponseResolver[T],ConsistencyLevel,IReadCommand,List[InetAddress]).mjava,0,0,9,4,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#uncompressedLength().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flushInternal().mjava,0,3,3,0,0,0.3333333432674408,4,3,13,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordWriter.RangeClient#run().mjava,0,0,19,0,5,0.08064515888690948,26,7,45,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#timestampMicros().mjava,0,5,1,0,0,0.6666666865348816,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\sink\SinkManager#processServerMessage(Message,String).mjava,0,0,2,2,0,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#BoundedStatsDeque(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#CompactionTask(ColumnFamilyStore,Collection[SSTableReader],int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionTask#getSSTables().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Memtable#contents().mjava,0,0,10,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#JMXEnabledThreadPoolExecutor(int,long,TimeUnit,BlockingQueue[Runnable],NamedThreadFactory,String).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(ColumnParent).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#intersectionBothWrapping(Range,Range).mjava,0,0,4,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RowRepairResolver#getMaxLiveColumns().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\IndexScanCommand#getMessage(Integer).mjava,0,0,5,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#maxsize(long).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#string(ByteBuffer,int,int).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#JdbcDate().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ForwardSortedCollection#size().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\IncomingStreamReader#streamIn(DataInput,PendingFile,PendingFile).mjava,0,0,23,3,12,0.06666667014360428,4,3,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#addSavedEndpoint(InetAddress).mjava,0,0,9,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#compareTo(NodeId).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\KSMetaData#fromAvro(org.apache.cassandra.db.migration.avro.KsDef).mjava,0,0,19,1,7,0.20000000298023224,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_andnot(long[],long[],int,int).mjava,0,0,7,4,27,0.13978494703769684,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\IndexedSliceReader#IndexedSliceReader(SSTableReader,FileDataInput,ByteBuffer,ByteBuffer,boolean).mjava,0,0,5,5,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getListenAddress().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#size().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#levelOf(SSTableReader).mjava,0,0,1,1,0,0.0,3,2,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getRpcPort(Configuration).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#getFiles().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigestSynMessage#GossipDigestSynMessage(String,List[GossipDigest]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\BufferedSegmentedFile#getSegment(long).mjava,0,0,2,1,1,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRemove(InetAddress).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcBytes#getType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DeletedColumn#reconcile(IColumn,Allocator).mjava,0,0,1,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#UpdateColumnFamily(org.apache.cassandra.db.migration.avro.CfDef).mjava,0,0,21,1,3,0.10000000149011612,6,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\FailureDetector#getAllEndpointStates().mjava,0,0,7,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\DebuggableThreadPoolExecutor#createWithPoolSize(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader.Operator.Equals#apply(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#arrayCopy(ByteBuffer,int,ByteBuffer,int,int).mjava,0,0,11,5,0,0.05882352963089943,2,3,8,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#readBytes(int).mjava,0,0,2,1,1,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#deserialize(DataInput,boolean,ISortedColumns.Factory).mjava,0,0,6,3,2,0.09090909361839294,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getHeapMemoryUsage().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilySerializer#serializeCFInfo(ColumnFamily,DataOutput).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\security\SSLFactory#createSSLContext(EncryptionOptions).mjava,0,0,17,1,7,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#ReplayPosition(long,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\RenameKeyspace#renameKsStorageFiles(String,String).mjava,0,0,6,2,2,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractEndpointSnitch#getSortedListByProximity(InetAddress,Collection[InetAddress]).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#hashHelper(Hashable,Range,Range).mjava,0,0,15,3,5,0.3461538553237915,36,6,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ExpiringColumn#localCopy(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#readColumnFamily(List[ReadCommand],ConsistencyLevel).mjava,0,0,5,2,2,0.03030303120613098,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile.PendingFileSerializer#serialize(PendingFile,DataOutput,int).mjava,0,0,11,3,0,0.0,8,3,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnNames(CFMetaData,ColumnParent,Iterable[ByteBuffer]).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_splits(String,String,String,int).mjava,0,0,10,4,3,0.10000000149011612,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\concurrent\JMXEnabledThreadPoolExecutor#getTotalBlockedTasks().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getColumnRelations().mjava,0,5,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#cloneMe().mjava,0,0,3,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#unloadCf(ColumnFamilyStore).mjava,0,0,2,1,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#loadNewSSTables().mjava,0,1,28,0,8,0.1428571492433548,128,7,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getComparator().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#serializationFlags().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\auth\Resources#toString(List[Object]).mjava,0,0,6,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#describeKeySpace(String,KsDef).mjava,0,0,22,2,4,0.11363636702299118,6,3,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#compressionParameters().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairRequest#doVerb(Message,String).mjava,0,0,12,2,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#setColumnsReversed(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ReadCallback#response(ReadResponse).mjava,0,0,7,1,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext#create(long,Allocator).mjava,0,0,8,2,1,0.1428571492433548,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#PendingFile(SSTableReader,Descriptor,String,List[Pair[Long,Long]],OperationType,long).mjava,0,0,0,6,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#bytesRemaining().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressionMetadata.Writer#finalizeHeader(long,int).mjava,0,0,5,2,1,0.375,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getJoiningNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getAndSet(long).mjava,0,0,0,1,4,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionTask#partialCompactionsAcceptable().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#removeAllSSTables().mjava,0,1,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#createCompactionSrategy(String).mjava,0,0,2,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#close().mjava,0,4,3,0,0,0.1111111119389534,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentCompactors().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon#initLog4j().mjava,0,1,12,0,4,0.16129031777381897,5,3,22,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getRowCacheCapacity().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer#serialize(IIterableColumns).mjava,0,0,21,1,7,0.17142857611179352,32,5,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask#makeReplyingCallback(InetAddress,UUID).mjava,0,0,2,2,0,0.10526315867900848,2,1,9,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\WriteResponseHandler#WriteResponseHandler(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#write(UUID,DataOutput).mjava,0,0,4,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RepairCallback#getMaxLiveColumns().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexSearcher#SecondaryIndexSearcher(SecondaryIndexManager,Set[ByteBuffer]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLogSegment#dirtyString().mjava,0,1,7,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\TBinaryProtocol.Factory#Factory().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateColumnPathOrParent(CFMetaData,ColumnPath).mjava,0,0,4,2,0,0.0,36,6,5,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getPrimaryRangeFor(Token).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getLiveColumnCount().mjava,0,2,1,0,1,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#open(String,Schema).mjava,0,0,5,2,1,0.2222222238779068,3,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker.View#View(Memtable,Set[Memtable],List[SSTableReader],Set[SSTableReader],IntervalTree[SSTableReader]).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayInputStream#read(byte[],int,int).mjava,0,0,1,3,1,0.10526315867900848,16,4,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#addTombstone(QueryPath,int,long).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcTimeUUID#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getBloomFilter().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\PeriodicCommitLogExecutorService#[T]_submit(Callable[T]).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds.AbstractBoundsSerializer#deserialize(DataInput).mjava,0,0,10,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter#closeAndOpenReader(long).mjava,0,0,12,1,5,0.2083333283662796,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\AutoSavingCache#getCachePath().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\AbstractSSTableSimpleWriter#addExpiringColumn(ByteBuffer,ByteBuffer,long,int,long).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#BloomFilter(int,OpenBitSet).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getTotalMemtableSpaceInMB().mjava,0,3,0,0,0,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#getBroadcastAddress().mjava,0,91,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#keyAlias(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getPendingMessages().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#reduceNameFilter(QueryFilter,ColumnFamily,long).mjava,0,0,7,3,3,0.0,6,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getUserDefinedTask(Collection[SSTableReader],int).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\ColumnDefinition#getIndexType().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#removedNonlocal(Token,long).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#resetBuffer().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TimeUUIDType#compareTimestampBytes(ByteBuffer,ByteBuffer).mjava,0,0,18,2,3,0.0,128,7,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\EchoedRow#update(MessageDigest).mjava,0,0,0,1,0,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#xor(byte[],byte[]).mjava,0,0,1,2,2,0.0625,8,3,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager.ValidationCompactionIterable#getScanners(Iterable[SSTableReader],Range).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\AbstractStatsDeque#sumOfDeviations().mjava,0,2,1,0,3,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeCmd#printColumnFamilyStats(PrintStream).mjava,0,0,82,1,19,0.030927835032343864,48,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CollationController#collectTimeOrderedData().mjava,0,1,36,0,12,2.6666667461395264,36,6,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getEstimatedColumnCount().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#setMultiKey(boolean).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper.IndexInfo#IndexInfo(ByteBuffer,ByteBuffer,long,long).mjava,0,0,0,4,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#add(ColumnFamily).mjava,0,0,2,1,1,0.1666666716337204,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultDouble#set(double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#clear().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#toByteArray(int).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#shutdown().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DynamicCompositeType.DynamicParsedComparator#getComparatorSerializedSize().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#toString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\columniterator\SSTableNamesIterator#readIndexedColumns(CFMetaData,FileDataInput,SortedSet[ByteBuffer],List[ByteBuffer],List[IndexHelper.IndexInfo]).mjava,0,0,16,5,6,16.5,12,4,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#intersects(Range).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BigIntegerToken#BigIntegerToken(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyOutputFormat.NullOutputCommitter#abortTask(TaskAttemptContext).mjava,0,0,0,1,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getServerSocket(InetAddress).mjava,0,0,17,1,3,0.03333333507180214,2,3,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#removeEndpoint(InetAddress).mjava,0,0,11,1,0,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#Header(InetAddress,StorageService.Verb,Map[String,byte[]]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#makeOffsets(int).mjava,0,0,1,1,2,0.0,3,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#entrySet().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomCalculations#computeBloomSpec(int).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterColumn#timestampOfLastDelete().mjava,0,9,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeDescribeCluster().mjava,0,1,14,0,2,0.0,2,1,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#removeRegisteredCallback(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#normaliseType(String,String).mjava,0,0,3,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getColumnCount().mjava,0,11,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#cloneMeShallow().mjava,0,8,3,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#compose(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\TruncateResponseHandler#isLatencyForSnitch().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#stdev().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\EndpointSnitchInfo#getDatacenter(String).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#snapshotExists(String).mjava,0,0,2,1,2,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\Term#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#maybeSwitchMemtable(Memtable,boolean).mjava,0,0,25,2,4,0.35849055647850037,64,6,4,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#getString(AbstractType).mjava,0,0,12,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateDeletion(CFMetaData,Deletion).mjava,0,0,8,2,1,0.043478261679410934,48,6,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#validateNextComparator(int,ByteBuffer).mjava,0,0,2,2,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#submitMaximal(ColumnFamilyStore,int).mjava,0,0,19,2,2,0.06818182021379471,8,3,27,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getRpcSendBufferSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#getWriteEndpoints(Token,String,Collection[InetAddress]).mjava,0,0,7,3,2,0.0,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamIn#getContextMapping(PendingFile).mjava,0,0,4,1,4,11.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree#invalids().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#SequentialWriter(File,int,boolean).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer#joinSelector().mjava,0,2,2,0,0,0.09090909361839294,1,0,6,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\Header#Header(InetAddress,StorageService.Verb).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\WhereClause#getKeys().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#add(SSTableReader,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#metadata().mjava,0,20,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#bucketsFor(long,int).mjava,0,0,1,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#AbstractColumnContainer(ISortedColumns).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDecimal#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledManifest#create(ColumnFamilyStore,int).mjava,0,0,4,2,1,0.10000000149011612,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#iterator().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.TreeRequestVerbHandler#serialize(TreeRequest,DataOutput,int).mjava,0,0,6,3,0,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#addHash(RowHash).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#keySet().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getUnreachableNodes().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractCassandraDaemon.CleaningThreadPool#CleaningThreadPool(ThreadLocal[ClientState],int,int).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#isCompactionDisabled().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#subdeflate(org.apache.cassandra.db.migration.avro.Migration).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\NamesQueryFilter#NamesQueryFilter(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\PendingFile#toString().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#advance().mjava,0,0,2,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation.RowMutationSerializer#deserialize(DataInput,int).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#[T]_getBuckets(Collection[Pair[T,Long]],long).mjava,0,0,13,2,8,0.1538461595773697,4,2,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\OutboundTcpConnection#getCompletedMesssages().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Component#fromFilename(File,String).mjava,0,0,7,2,6,0.0714285746216774,48,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MappedFileDataInput#markSupported().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#addDefaultIndexNames(org.apache.cassandra.thrift.CfDef).mjava,0,0,3,1,1,0.0,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getMaxRowSize().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalWriteLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#consistency().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RepairCallback#get().mjava,0,1,5,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SystemTable#checkHealth().mjava,0,1,37,0,10,0.07500000298023224,12,4,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#getKeyFinish().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#makeRandomGossipDigest(List[GossipDigest]).mjava,0,0,12,1,5,0.03703703731298447,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#toString(Date).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionInfo#CompactionInfo(int,String,String,OperationType,long,long).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner.KeyScanningIterator#hasNext().mjava,0,0,2,0,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#createEndpointSnitch(String).mjava,0,0,1,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BoundedStatsDeque#add(double).mjava,0,0,3,1,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#wrap(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\AbstractJdbcUUID#needsQuotes().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#FastByteArrayOutputStream(int).mjava,0,0,0,1,0,0.0,2,1,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#getAndSet(int).mjava,0,0,0,1,4,0.25,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader.RowIterator#maybeInit().mjava,0,1,20,0,3,0.13636364042758942,128,8,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DropIndexStatement#getUpdatedCFDef(CfDef).mjava,0,0,1,1,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#doScrub(ColumnFamilyStore,Collection[SSTableReader]).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamily#cloneMe().mjava,0,1,3,0,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionController#shouldPurge(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#addExpireTimeForEndpoint(InetAddress,long).mjava,0,0,3,2,0,0.0,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ExpiringMap.CacheableObject#CacheableObject(T,long).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#ConcurrentLinkedHashCache(ConcurrentLinkedHashMap[K,V]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getNamesFilter(DecoratedKey[#],QueryPath,ByteBuffer).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#AddColumnFamily().mjava,0,0,0,0,0,Infinity,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\NodeId#getLocalId().mjava,0,5,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#removeOldSSTablesSize(Iterable[SSTableReader]).mjava,0,0,8,1,0,0.0,2,1,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\TypeParser#stringifyAliasesParameters(Map[Byte,AbstractType]).mjava,0,0,20,1,4,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectStatement#isKeyRange().mjava,0,6,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\ReversedType#fromString(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getConcurrentReplicators().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns#addColumn(IColumn,Allocator).mjava,0,0,14,2,2,0.20000000298023224,8,4,4,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#cacheKey(DecoratedKey,Long).mjava,0,0,2,2,1,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamingRepairTask.StreamingRepairRequest#send(StreamingRepairTask).mjava,0,0,6,1,4,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamIn#requestRanges(InetAddress,String,Collection[Range],Runnable,OperationType).mjava,0,0,3,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueFactory#normal(Token).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliSessionState#inFileMode().mjava,0,3,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#getRecentBloomFilterFalsePositiveCount().mjava,0,2,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\EstimatedHistogram#EstimatedHistogram().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Inner#rchild(Hashable).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\BloomFilter#buckets().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#getIndexedSlices(CFMetaData,SelectStatement).mjava,0,0,23,2,8,0.05882352963089943,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition#compareTo(ReplayPosition).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#debug(String).mjava,0,0,1,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\DropKeyspace#DropKeyspace(String).mjava,0,0,5,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedSequentialWriter#CompressedSequentialWriter(File,String,boolean,CompressionParameters).mjava,0,0,3,4,0,1.5,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\compress\CompressedRandomAccessReader#open(String,CompressionMetadata).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#requestAll(GossipDigest,List[GossipDigest],int).mjava,0,0,5,3,0,6.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\FileStreamTask#FileStreamTask(StreamHeader,InetAddress,EncryptionOptions).mjava,0,0,6,3,1,2.3333332538604736,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\DefaultDouble#value().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#minTimestamp().mjava,0,0,4,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#doGetCounter(ByteBuffer,ColumnPath).mjava,0,0,5,2,3,0.05263157933950424,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#getPrecision(Date).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#getSplits(JobContext).mjava,0,0,36,1,9,0.07575757801532745,4,3,1,5,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#executeUpdateColumnFamily(Tree).mjava,0,0,12,1,3,0.043478261679410934,4,2,2,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliOptions#processArgs(CliSessionState,String[]).mjava,0,0,38,2,2,0.09574468433856964,16384,14,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\ReplayPosition.ReplayPositionSerializer#serializedSize(ReplayPosition).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#initDefaultRowCacheProvider().mjava,0,1,0,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#removeIndex(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AntiEntropyService.RepairSession.Differencer#performStreamingRepair().mjava,0,1,5,0,2,0.0833333358168602,2,1,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RangeSliceCommand#getMessage(Integer).mjava,0,0,5,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\IncomingStreamReader#retry().mjava,0,1,3,0,0,8.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionTask#isCompactionInteresting(Set[SSTableReader]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumn#timestamp().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\VersionedValue.VersionedValueSerializer#deserialize(DataInput,int).mjava,0,0,2,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\DataTracker#spaceReclaimed(long).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#decompose(UUID).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#getUsername().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadCommandSerializer[ReadCommand]#serialize(ReadCommand,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTable#getTableName().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\CompactionManager#performMaximal(ColumnFamilyStore).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterUpdateColumn#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,5,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\ColumnSortedMap#ColumnSortedMap(Comparator[ByteBuffer],ColumnSerializer,DataInput,int,boolean,int).mjava,0,0,0,6,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOutSession#onChange(InetAddress,ApplicationState,VersionedValue).mjava,0,0,0,3,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#printBanner().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#waitOnFutures(List[IAsyncResult],long).mjava,0,0,1,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getInMemoryCompactionLimit().mjava,0,5,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#get(ByteBuffer,ColumnPath,ConsistencyLevel).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\IntervalTree\Interval#contains(Comparable).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastFlip(long).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getKeyCacheMBean(String,String).mjava,0,0,1,2,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryFilter#getNamesFilter(DecoratedKey[#],QueryPath,SortedSet[ByteBuffer]).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\Range#Range(Token,Token,IPartitioner).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\UUIDType#compare(ByteBuffer,ByteBuffer).mjava,0,0,10,2,6,0.3142857253551483,72,7,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#scheduleCacheSaving(int,int,int).mjava,0,0,2,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#describe_keyspaces().mjava,0,0,6,0,2,0.0,1,0,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AbstractReplicationStrategy#invalidateCachedTokenEndpointValues().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#start(int).mjava,0,0,14,1,2,25.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\AdaptiveLatencyTracker[DynamicEndpointSnitch]#size().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#BytesType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliMain#updateCompletor(Set[String]).mjava,0,0,7,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\UpdateColumnFamily#applyModels().mjava,0,0,10,0,2,0.0555555559694767,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#move(String).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcCounterColumn#JdbcCounterColumn().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getMaximalTasks(int).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableMetadata.Collector#Collector().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getToken().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#applyUnsafe().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyInputFormat#getRangeMap(Configuration).mjava,0,0,11,1,4,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\TokenMetadata#addBootstrapToken(Token,InetAddress).mjava,0,0,11,2,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\GossipDigest#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#getCommandCompletedTasks().mjava,0,0,6,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#reload().mjava,0,1,20,0,0,0.10526315867900848,32,5,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#DateType().mjava,0,0,0,0,0,1.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\BitUtil#pop_xor(long[],long[],int,int).mjava,0,0,7,4,27,0.12903225421905518,16,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\Ec2MultiRegionSnitch#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\MemoryInputStream#getPosition().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\WrappedRunnable#run().mjava,0,0,1,0,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\FBUtilities#[T]_closeableIterator(Iterator[T]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\AbstractCompactionStrategy#shutdown().mjava,0,1,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#open(Descriptor,CFMetaData).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\SequentialWriter#flushData().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BootStrapper.BootstrapTokenCallback#getToken(long).mjava,0,0,1,1,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LexicalUUIDType#getString(ByteBuffer).mjava,0,0,2,1,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.NotifyingSSTableIdentityIterator#NotifyingSSTableIdentityIterator(SSTableIdentityIterator,Condition).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\LocalByPartionerType#validate(ByteBuffer).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BooleanType#compare(ByteBuffer,ByteBuffer).mjava,0,0,4,2,0,0.0,4,2,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#toString().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\IncomingTcpConnection#IncomingTcpConnection(Socket).mjava,0,0,1,1,0,0.20000000298023224,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilySplit#getStartToken().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexSummary#incrementRowid().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamOut#transferSSTables(StreamOutSession,Iterable[SSTableReader],Collection[Range],OperationType).mjava,0,0,3,4,1,0.4000000059604645,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentReadLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\scheduler\RoundRobinScheduler#getWeight(String).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\filter\QueryPath#QueryPath(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#doGossipToSeed(MessageProducer).mjava,0,0,10,1,3,0.6428571343421936,5,4,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\DeleteStatement#DeleteStatement(List[Term],String,String,List[Term],Attributes).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\RangeSliceVerbHandler#doVerb(Message,String).mjava,0,0,14,2,4,4.0,4,2,14,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#stopThriftServer().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog.LogRecordAdder#call().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastClear(long).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\context\CounterContext.ContextState#ContextState(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\ParallelCompactionIterable.Reducer.DeserializedColumnIterator#hasNext().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#CFMetaData(String,String,ColumnFamilyType,AbstractType,AbstractType).mjava,0,0,1,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#recover(File[]).mjava,0,0,85,1,24,4.05555534362793,65552,17,1,6,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getClusterName().mjava,0,7,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\MigrationManager#applyMigrations(UUID,UUID).mjava,0,0,11,2,4,0.11627907305955887,1,0,1,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\ArrivalWindow[FailureDetector]#variance().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#close().mjava,0,1,0,0,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\PropertyFileSnitch#getDatacenter(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#alwaysMatchingBloomFilter().mjava,0,1,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\keys\KeysIndex#forceBlockingFlush().mjava,0,0,1,0,0,0.0,1,0,7,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getTotalWriteLatencyHistogramMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#getContext().mjava,0,2,4,0,1,0.0,1,0,3,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\SuperColumnSerializer[SuperColumn]#getComparator().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndex#buildIndexBlocking().mjava,0,0,17,0,3,0.029411764815449715,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\QueryProcessor#process(String,ClientState).mjava,0,0,192,2,48,0.044619422405958176,304,22,1,4,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#iterator().mjava,0,12,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\DatacenterSyncWriteResponseHandler#assureSufficientLiveNodes().mjava,0,0,11,0,2,0.1111111119389534,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#serializeColumns(Iterator[IColumn],PrintStream,AbstractType,CFMetaData).mjava,0,0,6,4,0,0.0,3,2,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\SSTableExport#export(String,PrintStream,String[]).mjava,0,0,12,3,6,0.05882352963089943,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\CompositeType#getAndAppendNextComparator(int,ByteBuffer,StringBuilder).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CustomTHsHaServer.SelectorThread#run().mjava,0,0,2,0,0,0.0,2,1,7,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Column#localCopy(ColumnFamilyStore,Allocator).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#AddKeyspace(KSMetaData).mjava,0,0,9,1,0,0.0,8,3,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamReplyVerbHandler#doVerb(Message,String).mjava,0,0,15,2,4,0.0,30,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#addColumn(IColumn,Allocator).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\CounterMutation#makeReplicationMutation().mjava,0,0,16,0,5,0.043478261679410934,8,3,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ColumnFamilyRecordReader#initialize(InputSplit,TaskAttemptContext).mjava,0,0,19,2,5,0.0882352963089943,4,2,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#getColumnDefinition(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\hadoop\ConfigHelper#getInputColumnFamily(Configuration).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddKeyspace#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#isSnapshotBeforeCompaction().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#showKeyspace(StringBuilder,KsDef).mjava,0,0,24,2,2,0.0,2,1,1,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LegacyBloomFilter#clear().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\CFMetaData#compressionParameters(CompressionParameters).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\BytesToken#hashCode().mjava,0,0,1,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper.GossipTask#run().mjava,0,0,24,0,3,2.625,10,4,22,3,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getDataTracker().mjava,0,4,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableReader#createLinks(String).mjava,0,0,3,1,2,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getPreheatKeyCache().mjava,0,1,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractWriteResponseHandler#addFutureForHint(CreationTimeAwareFuture[#]).mjava,0,0,2,1,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\AbstractDataInput#readLong().mjava,0,1,2,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#inputStream(ByteBuffer).mjava,0,0,8,1,1,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\ByteBufferUtil#read(DataInput,int).mjava,0,0,3,2,1,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#load(CFMetaData).mjava,0,0,3,1,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\FloatType#decompose(Float).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onDead(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\LeveledCompactionStrategy#getBackgroundTasks(int).mjava,0,0,11,1,3,0.0,4,2,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\Migration#announce().mjava,0,0,3,0,0,0.1666666716337204,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.Candidate#Candidate(CloseableIterator[In],Comparator[In]).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\AbstractCompositeType#getWithShortLength(ByteBuffer).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\UpdateStatement#getConsistencyLevel().mjava,0,3,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDouble#getJdbcType().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\locator\DynamicEndpointSnitch#registerMBean().mjava,0,1,2,0,1,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcInt32#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TreeMapBackedSortedColumns#getReverseSortedColumns().mjava,0,1,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\TruncateResponse.TruncateResponseSerializer#serialize(TruncateResponse,DataOutput,int).mjava,0,0,3,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\Pair#Pair(T1,T2).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\CreateIndexStatement#CreateIndexStatement(String,String,Term).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ArrayBackedSortedColumns.ColumnNamesSet#first().mjava,0,0,4,0,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\RandomAccessReader#read(byte[],int,int).mjava,0,0,8,3,1,0.0,16,4,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#intersectionCount(OpenBitSet,OpenBitSet).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.TreeRange#TreeRange(MerkleTree,Token,Token,byte,Hashable).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\UUIDGen#getTimeUUIDBytes(long).mjava,0,0,2,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getTotalMemtableLiveSize().mjava,0,2,3,0,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#setBits(long[]).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\IndexHelper#defreezeBloomFilter(FileDataInput,boolean).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\BytesType#validate(ByteBuffer).mjava,0,0,0,1,0,0.5,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\Descriptor#Descriptor(File,String,String,int,boolean).mjava,0,0,0,5,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#getEndpointStateForEndpoint(InetAddress).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\ClientState#logout().mjava,0,1,3,0,0,0.0,2,1,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\InstrumentingCache#getCapacity().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ThreadSafeSortedColumns#addAll(ISortedColumns,Allocator).mjava,0,0,2,2,0,0.0,1,0,2,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\UnserializableColumnFamilyException#UnserializableColumnFamilyException(String,int).mjava,0,0,0,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#flipAndGet(long).mjava,0,0,0,1,3,0.2857142984867096,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\net\MessagingService#constructStreamHeader(StreamHeader,boolean,int).mjava,0,0,10,3,4,0.8148148059844971,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\AbstractRowResolver#AbstractRowResolver(ByteBuffer,String).mjava,0,0,2,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamRequestMessage#getMessage(Integer).mjava,0,0,4,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\ThriftValidation#validateKeyRange(KeyRange).mjava,0,0,6,1,3,0.0,64,7,3,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\LatencyTracker#getRecentLatencyMicros().mjava,0,6,2,0,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\thrift\CassandraServer#system_drop_column_family(String).mjava,0,0,13,1,2,0.0,1,0,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#isKeyExistenceExpensive(Set[#-extends-SSTable]).mjava,0,0,3,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\obs\OpenBitSet#fastFlip(int).mjava,0,0,0,1,3,0.3333333432674408,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\LocalToken#toString().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#setDynamicBadnessThreshold(Double).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableScanner.KeyScanningIterator#remove().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ReadResponse#digest().mjava,0,6,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#invalidateCachedRow(DecoratedKey).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnIndexer#serialize(RowHeader,DataOutput).mjava,0,0,1,2,0,0.0,1,0,5,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\index\SecondaryIndexManager#getIndexesBackedByCfs().mjava,0,1,4,0,2,0.0,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\ColumnFamilyStore#getFlushPath(long,String).mjava,0,0,2,2,1,0.0,2,1,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\NodeProbe#getLoadString().mjava,0,1,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MergeIterator.ManyToOne#ManyToOne(List[#-extends-CloseableIterator[In]],Comparator[In],Reducer[In,Out]).mjava,0,0,5,3,1,0.07692307978868484,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcLong#JdbcLong().mjava,0,0,0,0,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\StorageProxy#getRecentReadLatencyMicros().mjava,0,0,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableDeletingTask#SSTableDeletingTask(SSTableReader).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\commitlog\CommitLog#discardCompletedSegmentsInternal(ReplayPosition,Integer).mjava,0,0,9,2,2,0.47058823704719543,6,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\RowMutation#getMessage(Integer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\util\FastByteArrayOutputStream#writeTo(OutputStream).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\utils\MerkleTree.Hashable#addHash(byte[]).mjava,0,0,1,1,0,0.0,2,1,3,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cli\CliClient#subColumnNameAsBytes(String,String).mjava,0,0,2,2,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\TermType[Term]#forInt(int).mjava,0,0,0,1,0,0.09090909361839294,16,4,8,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getColumn(ByteBuffer).mjava,0,0,1,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\service\LoadBroadcaster#onRestart(InetAddress,EndpointState).mjava,0,0,0,2,0,0.0,1,0,0,-1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\dht\AbstractBounds#hashCode().mjava,0,0,2,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\AbstractColumnContainer#getComparator().mjava,0,12,1,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableIdentityIterator#next().mjava,0,3,4,0,1,0.0,2,1,10,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\BulkLoader.LoaderOptions#errorMsg(String,CmdLineOptions).mjava,0,0,3,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\tools\ColumnFamilyStoreMBeanIterator[NodeProbe]#ColumnFamilyStoreMBeanIterator(MBeanServerConnection).mjava,0,0,2,1,1,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\migration\AddColumnFamily#applyModels().mjava,0,0,9,0,1,0.1764705926179886,2,1,1,1,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\streaming\StreamHeader#serializer().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\SelectExpression#SelectExpression(Term,int,boolean).mjava,0,0,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\marshal\DateType#fromString(String).mjava,0,0,13,1,2,0.08571428805589676,8,3,2,2,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcDate#isCurrency().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\Schema#setVersion(UUID).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\gms\Gossiper#makeGossipDigestAckMessage(GossipDigestAckMessage,int).mjava,0,0,4,2,2,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getSerializedCachePath(String,String,ColumnFamilyStore.CacheType).mjava,0,0,0,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\compaction\SizeTieredCompactionStrategy#getMaxSSTableSize().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\db\Table#getSnapshotPath(String,String,String).mjava,0,2,1,3,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\io\sstable\SSTableWriter.IndexWriter#toString().mjava,0,0,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cache\ConcurrentLinkedHashCache#put(K,V).mjava,0,0,1,2,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\config\DatabaseDescriptor#getFlushQueueSize().mjava,0,2,0,0,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
C:\Users\ShoOgino\work\cassandra\file1.0\src\java\org\apache\cassandra\cql\jdbc\JdbcAscii#toString(String).mjava,0,0,0,1,0,0.0,1,0,1,0,1,1,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0,0
